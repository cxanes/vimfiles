!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.7	//
EGLAPI	EGL/eglplatform.h	49;"	d
EGLAPIENTRY	EGL/eglplatform.h	52;"	d
EGLAPIENTRYP	EGL/eglplatform.h	53;"	d
EGLBoolean	EGL/egl.h	/^typedef unsigned int EGLBoolean;$/;"	t
EGLClientBuffer	EGL/egl.h	/^typedef void *EGLClientBuffer;$/;"	t
EGLConfig	EGL/egl.h	/^typedef void *EGLConfig;$/;"	t
EGLContext	EGL/egl.h	/^typedef void *EGLContext;$/;"	t
EGLDisplay	EGL/egl.h	/^typedef void *EGLDisplay;$/;"	t
EGLImageKHR	EGL/eglext.h	/^typedef void *EGLImageKHR;$/;"	t
EGLNativeDisplayType	EGL/eglplatform.h	/^typedef Display *EGLNativeDisplayType;$/;"	t
EGLNativeDisplayType	EGL/eglplatform.h	/^typedef HDC     EGLNativeDisplayType;$/;"	t
EGLNativeDisplayType	EGL/eglplatform.h	/^typedef int EGLNativeDisplayType;$/;"	t
EGLNativeDisplayType	EGL/eglplatform.h	/^typedef khronos_int64_t EGLNativeDisplayType;$/;"	t
EGLNativePixmapType	EGL/eglplatform.h	/^typedef HBITMAP EGLNativePixmapType;$/;"	t
EGLNativePixmapType	EGL/eglplatform.h	/^typedef Pixmap   EGLNativePixmapType;$/;"	t
EGLNativePixmapType	EGL/eglplatform.h	/^typedef void *EGLNativePixmapType;$/;"	t
EGLNativeWindowType	EGL/eglplatform.h	/^typedef HWND    EGLNativeWindowType;$/;"	t
EGLNativeWindowType	EGL/eglplatform.h	/^typedef Window   EGLNativeWindowType;$/;"	t
EGLNativeWindowType	EGL/eglplatform.h	/^typedef void *EGLNativeWindowType;$/;"	t
EGLSurface	EGL/egl.h	/^typedef void *EGLSurface;$/;"	t
EGL_ALPHA_FORMAT	EGL/egl.h	234;"	d
EGL_ALPHA_FORMAT_NONPRE	EGL/egl.h	237;"	d
EGL_ALPHA_FORMAT_PRE	EGL/egl.h	238;"	d
EGL_ALPHA_MASK_SIZE	EGL/egl.h	125;"	d
EGL_ALPHA_SIZE	EGL/egl.h	96;"	d
EGL_BACK_BUFFER	EGL/egl.h	184;"	d
EGL_BAD_ACCESS	EGL/egl.h	78;"	d
EGL_BAD_ALLOC	EGL/egl.h	79;"	d
EGL_BAD_ATTRIBUTE	EGL/egl.h	80;"	d
EGL_BAD_CONFIG	EGL/egl.h	81;"	d
EGL_BAD_CONTEXT	EGL/egl.h	82;"	d
EGL_BAD_CURRENT_SURFACE	EGL/egl.h	83;"	d
EGL_BAD_DISPLAY	EGL/egl.h	84;"	d
EGL_BAD_MATCH	EGL/egl.h	85;"	d
EGL_BAD_NATIVE_PIXMAP	EGL/egl.h	86;"	d
EGL_BAD_NATIVE_WINDOW	EGL/egl.h	87;"	d
EGL_BAD_PARAMETER	EGL/egl.h	88;"	d
EGL_BAD_SURFACE	EGL/egl.h	89;"	d
EGL_BIND_TO_TEXTURE_RGB	EGL/egl.h	120;"	d
EGL_BIND_TO_TEXTURE_RGBA	EGL/egl.h	121;"	d
EGL_BITMAP_ORIGIN_KHR	EGL/eglext.h	61;"	d
EGL_BITMAP_PITCH_KHR	EGL/eglext.h	60;"	d
EGL_BITMAP_PIXEL_ALPHA_OFFSET_KHR	EGL/eglext.h	65;"	d
EGL_BITMAP_PIXEL_BLUE_OFFSET_KHR	EGL/eglext.h	64;"	d
EGL_BITMAP_PIXEL_GREEN_OFFSET_KHR	EGL/eglext.h	63;"	d
EGL_BITMAP_PIXEL_LUMINANCE_OFFSET_KHR	EGL/eglext.h	66;"	d
EGL_BITMAP_PIXEL_RED_OFFSET_KHR	EGL/eglext.h	62;"	d
EGL_BITMAP_POINTER_KHR	EGL/eglext.h	59;"	d
EGL_BLUE_SIZE	EGL/egl.h	97;"	d
EGL_BUFFER_DESTROYED	EGL/egl.h	205;"	d
EGL_BUFFER_PRESERVED	EGL/egl.h	204;"	d
EGL_BUFFER_SIZE	EGL/egl.h	95;"	d
EGL_CLIENT_APIS	EGL/egl.h	164;"	d
EGL_COLORSPACE	EGL/egl.h	233;"	d
EGL_COLORSPACE_LINEAR	EGL/egl.h	236;"	d
EGL_COLORSPACE_sRGB	EGL/egl.h	235;"	d
EGL_COLOR_BUFFER_TYPE	EGL/egl.h	126;"	d
EGL_CONFIG_CAVEAT	EGL/egl.h	102;"	d
EGL_CONFIG_ID	EGL/egl.h	103;"	d
EGL_CONFORMANT	EGL/egl.h	129;"	d
EGL_CONFORMANT_KHR	EGL/eglext.h	41;"	d
EGL_CONTEXT_CLIENT_TYPE	EGL/egl.h	211;"	d
EGL_CONTEXT_CLIENT_VERSION	EGL/egl.h	214;"	d
EGL_CONTEXT_LOST	EGL/egl.h	90;"	d
EGL_CORE_NATIVE_ENGINE	EGL/egl.h	230;"	d
EGL_DEFAULT_DISPLAY	EGL/egl.h	67;"	d
EGL_DEPTH_SIZE	EGL/egl.h	100;"	d
EGL_DISPLAY_SCALING	EGL/egl.h	198;"	d
EGL_DONT_CARE	EGL/egl.h	73;"	d
EGL_DRAW	EGL/egl.h	226;"	d
EGL_EGLEXT_VERSION	EGL/eglext.h	37;"	d
EGL_EXTENSIONS	EGL/egl.h	163;"	d
EGL_FALSE	EGL/egl.h	63;"	d
EGL_FORMAT_RGBA_8888_EXACT_KHR	EGL/eglext.h	55;"	d
EGL_FORMAT_RGBA_8888_KHR	EGL/eglext.h	56;"	d
EGL_FORMAT_RGB_565_EXACT_KHR	EGL/eglext.h	53;"	d
EGL_FORMAT_RGB_565_KHR	EGL/eglext.h	54;"	d
EGL_GL_RENDERBUFFER_KHR	EGL/eglext.h	119;"	d
EGL_GL_TEXTURE_2D_KHR	EGL/eglext.h	97;"	d
EGL_GL_TEXTURE_3D_KHR	EGL/eglext.h	113;"	d
EGL_GL_TEXTURE_CUBE_MAP_NEGATIVE_X_KHR	EGL/eglext.h	104;"	d
EGL_GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_KHR	EGL/eglext.h	106;"	d
EGL_GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_KHR	EGL/eglext.h	108;"	d
EGL_GL_TEXTURE_CUBE_MAP_POSITIVE_X_KHR	EGL/eglext.h	103;"	d
EGL_GL_TEXTURE_CUBE_MAP_POSITIVE_Y_KHR	EGL/eglext.h	105;"	d
EGL_GL_TEXTURE_CUBE_MAP_POSITIVE_Z_KHR	EGL/eglext.h	107;"	d
EGL_GL_TEXTURE_LEVEL_KHR	EGL/eglext.h	98;"	d
EGL_GL_TEXTURE_ZOFFSET_KHR	EGL/eglext.h	114;"	d
EGL_GREEN_SIZE	EGL/egl.h	98;"	d
EGL_HEIGHT	EGL/egl.h	167;"	d
EGL_HORIZONTAL_RESOLUTION	EGL/egl.h	177;"	d
EGL_IMAGE_PRESERVED_KHR	EGL/eglext.h	125;"	d
EGL_KHR_config_attribs	EGL/eglext.h	40;"	d
EGL_KHR_gl_renderbuffer_image	EGL/eglext.h	118;"	d
EGL_KHR_gl_texture_2D_image	EGL/eglext.h	96;"	d
EGL_KHR_gl_texture_3D_image	EGL/eglext.h	112;"	d
EGL_KHR_gl_texture_cubemap_image	EGL/eglext.h	102;"	d
EGL_KHR_image	EGL/eglext.h	78;"	d
EGL_KHR_image_base	EGL/eglext.h	123;"	d
EGL_KHR_image_pixmap	EGL/eglext.h	129;"	d
EGL_KHR_lock_surface	EGL/eglext.h	47;"	d
EGL_KHR_vg_parent_image	EGL/eglext.h	91;"	d
EGL_LARGEST_PBUFFER	EGL/egl.h	169;"	d
EGL_LEVEL	EGL/egl.h	104;"	d
EGL_LOCK_SURFACE_BIT_KHR	EGL/eglext.h	50;"	d
EGL_LOCK_USAGE_HINT_KHR	EGL/eglext.h	58;"	d
EGL_LOWER_LEFT_KHR	EGL/eglext.h	67;"	d
EGL_LUMINANCE_BUFFER	EGL/egl.h	138;"	d
EGL_LUMINANCE_SIZE	EGL/egl.h	124;"	d
EGL_MAP_PRESERVE_PIXELS_KHR	EGL/eglext.h	57;"	d
EGL_MATCH_FORMAT_KHR	EGL/eglext.h	52;"	d
EGL_MATCH_NATIVE_PIXMAP	EGL/egl.h	128;"	d
EGL_MAX_PBUFFER_HEIGHT	EGL/egl.h	105;"	d
EGL_MAX_PBUFFER_PIXELS	EGL/egl.h	106;"	d
EGL_MAX_PBUFFER_WIDTH	EGL/egl.h	107;"	d
EGL_MAX_SWAP_INTERVAL	EGL/egl.h	123;"	d
EGL_MIN_SWAP_INTERVAL	EGL/egl.h	122;"	d
EGL_MIPMAP_LEVEL	EGL/egl.h	173;"	d
EGL_MIPMAP_TEXTURE	EGL/egl.h	172;"	d
EGL_MULTISAMPLE_RESOLVE	EGL/egl.h	181;"	d
EGL_MULTISAMPLE_RESOLVE_BOX	EGL/egl.h	218;"	d
EGL_MULTISAMPLE_RESOLVE_BOX_BIT	EGL/egl.h	152;"	d
EGL_MULTISAMPLE_RESOLVE_DEFAULT	EGL/egl.h	217;"	d
EGL_NATIVE_PIXMAP_KHR	EGL/eglext.h	79;"	d
EGL_NATIVE_RENDERABLE	EGL/egl.h	108;"	d
EGL_NATIVE_VISUAL_ID	EGL/egl.h	109;"	d
EGL_NATIVE_VISUAL_TYPE	EGL/egl.h	110;"	d
EGL_NONE	EGL/egl.h	119;"	d
EGL_NON_CONFORMANT_CONFIG	EGL/egl.h	135;"	d
EGL_NOT_INITIALIZED	EGL/egl.h	77;"	d
EGL_NO_CONTEXT	EGL/egl.h	68;"	d
EGL_NO_DISPLAY	EGL/egl.h	69;"	d
EGL_NO_IMAGE_KHR	EGL/eglext.h	81;"	d
EGL_NO_SURFACE	EGL/egl.h	70;"	d
EGL_NO_TEXTURE	EGL/egl.h	141;"	d
EGL_OPENGL_API	EGL/egl.h	223;"	d
EGL_OPENGL_BIT	EGL/egl.h	158;"	d
EGL_OPENGL_ES2_BIT	EGL/egl.h	157;"	d
EGL_OPENGL_ES_API	EGL/egl.h	221;"	d
EGL_OPENGL_ES_BIT	EGL/egl.h	155;"	d
EGL_OPENVG_API	EGL/egl.h	222;"	d
EGL_OPENVG_BIT	EGL/egl.h	156;"	d
EGL_OPENVG_IMAGE	EGL/egl.h	208;"	d
EGL_OPTIMAL_FORMAT_BIT_KHR	EGL/eglext.h	51;"	d
EGL_PBUFFER_BIT	EGL/egl.h	147;"	d
EGL_PIXEL_ASPECT_RATIO	EGL/egl.h	179;"	d
EGL_PIXMAP_BIT	EGL/egl.h	148;"	d
EGL_PRESERVED_RESOURCES	EGL/egl.h	111;"	d
EGL_READ	EGL/egl.h	227;"	d
EGL_READ_SURFACE_BIT_KHR	EGL/eglext.h	48;"	d
EGL_RED_SIZE	EGL/egl.h	99;"	d
EGL_RENDERABLE_TYPE	EGL/egl.h	127;"	d
EGL_RENDER_BUFFER	EGL/egl.h	174;"	d
EGL_RGB_BUFFER	EGL/egl.h	137;"	d
EGL_SAMPLES	EGL/egl.h	112;"	d
EGL_SAMPLE_BUFFERS	EGL/egl.h	113;"	d
EGL_SINGLE_BUFFER	EGL/egl.h	185;"	d
EGL_SLOW_CONFIG	EGL/egl.h	134;"	d
EGL_STENCIL_SIZE	EGL/egl.h	101;"	d
EGL_SUCCESS	EGL/egl.h	76;"	d
EGL_SURFACE_TYPE	EGL/egl.h	114;"	d
EGL_SWAP_BEHAVIOR	EGL/egl.h	180;"	d
EGL_SWAP_BEHAVIOR_PRESERVED_BIT	EGL/egl.h	153;"	d
EGL_TEXTURE_2D	EGL/egl.h	144;"	d
EGL_TEXTURE_FORMAT	EGL/egl.h	170;"	d
EGL_TEXTURE_RGB	EGL/egl.h	142;"	d
EGL_TEXTURE_RGBA	EGL/egl.h	143;"	d
EGL_TEXTURE_TARGET	EGL/egl.h	171;"	d
EGL_TRANSPARENT_BLUE_VALUE	EGL/egl.h	116;"	d
EGL_TRANSPARENT_GREEN_VALUE	EGL/egl.h	117;"	d
EGL_TRANSPARENT_RED_VALUE	EGL/egl.h	118;"	d
EGL_TRANSPARENT_RGB	EGL/egl.h	136;"	d
EGL_TRANSPARENT_TYPE	EGL/egl.h	115;"	d
EGL_TRUE	EGL/egl.h	64;"	d
EGL_UNKNOWN	EGL/egl.h	201;"	d
EGL_UPPER_LEFT_KHR	EGL/eglext.h	68;"	d
EGL_VENDOR	EGL/egl.h	161;"	d
EGL_VERSION	EGL/egl.h	162;"	d
EGL_VERSION_1_0	EGL/egl.h	52;"	d
EGL_VERSION_1_1	EGL/egl.h	53;"	d
EGL_VERSION_1_2	EGL/egl.h	54;"	d
EGL_VERSION_1_3	EGL/egl.h	55;"	d
EGL_VERSION_1_4	EGL/egl.h	56;"	d
EGL_VERTICAL_RESOLUTION	EGL/egl.h	178;"	d
EGL_VG_ALPHA_FORMAT	EGL/egl.h	176;"	d
EGL_VG_ALPHA_FORMAT_NONPRE	EGL/egl.h	192;"	d
EGL_VG_ALPHA_FORMAT_PRE	EGL/egl.h	193;"	d
EGL_VG_ALPHA_FORMAT_PRE_BIT	EGL/egl.h	151;"	d
EGL_VG_ALPHA_FORMAT_PRE_BIT_KHR	EGL/eglext.h	43;"	d
EGL_VG_COLORSPACE	EGL/egl.h	175;"	d
EGL_VG_COLORSPACE_LINEAR	EGL/egl.h	189;"	d
EGL_VG_COLORSPACE_LINEAR_BIT	EGL/egl.h	150;"	d
EGL_VG_COLORSPACE_LINEAR_BIT_KHR	EGL/eglext.h	42;"	d
EGL_VG_COLORSPACE_sRGB	EGL/egl.h	188;"	d
EGL_VG_PARENT_IMAGE_KHR	EGL/eglext.h	92;"	d
EGL_WIDTH	EGL/egl.h	168;"	d
EGL_WINDOW_BIT	EGL/egl.h	149;"	d
EGL_WRITE_SURFACE_BIT_KHR	EGL/eglext.h	49;"	d
EGLenum	EGL/egl.h	/^typedef unsigned int EGLenum;$/;"	t
EGLint	EGL/eglplatform.h	/^typedef khronos_int32_t EGLint;$/;"	t
EGLint	EGL/eglplatform.h	/^typedef khronos_int64_t EGLint;$/;"	t
GL_3DC_XY_AMD	GLES/glext.h	209;"	d
GL_3DC_X_AMD	GLES/glext.h	208;"	d
GL_ACTIVE_TEXTURE	GLES/gl.h	478;"	d
GL_ADD	GLES/gl.h	413;"	d
GL_ADD_SIGNED	GLES/gl.h	524;"	d
GL_ALIASED_LINE_WIDTH_RANGE	GLES/gl.h	199;"	d
GL_ALIASED_POINT_SIZE_RANGE	GLES/gl.h	198;"	d
GL_ALPHA	GLES/gl.h	359;"	d
GL_ALPHA_BITS	GLES/gl.h	246;"	d
GL_ALPHA_SCALE	GLES/gl.h	536;"	d
GL_ALPHA_TEST	GLES/gl.h	131;"	d
GL_ALPHA_TEST_FUNC	GLES/gl.h	223;"	d
GL_ALPHA_TEST_REF	GLES/gl.h	224;"	d
GL_ALWAYS	GLES/gl.h	69;"	d
GL_AMBIENT	GLES/gl.h	299;"	d
GL_AMBIENT_AND_DIFFUSE	GLES/gl.h	342;"	d
GL_AMD_compressed_3DC_texture	GLES/glext.h	588;"	d
GL_AMD_compressed_ATC_texture	GLES/glext.h	593;"	d
GL_AND	GLES/gl.h	320;"	d
GL_AND_INVERTED	GLES/gl.h	323;"	d
GL_AND_REVERSE	GLES/gl.h	321;"	d
GL_API	GLES/glplatform.h	22;"	d
GL_APIENTRY	GLES/glplatform.h	25;"	d
GL_APIENTRYP	GLES/glext.h	14;"	d
GL_ARRAY_BUFFER	GLES/gl.h	502;"	d
GL_ARRAY_BUFFER_BINDING	GLES/gl.h	505;"	d
GL_ATC_RGBA_EXPLICIT_ALPHA_AMD	GLES/glext.h	215;"	d
GL_ATC_RGBA_INTERPOLATED_ALPHA_AMD	GLES/glext.h	216;"	d
GL_ATC_RGB_AMD	GLES/glext.h	214;"	d
GL_BACK	GLES/gl.h	113;"	d
GL_BGRA	GLES/glext.h	231;"	d
GL_BLEND	GLES/gl.h	132;"	d
GL_BLEND_DST	GLES/gl.h	225;"	d
GL_BLEND_DST_ALPHA_OES	GLES/glext.h	32;"	d
GL_BLEND_DST_RGB_OES	GLES/glext.h	30;"	d
GL_BLEND_EQUATION_ALPHA_OES	GLES/glext.h	25;"	d
GL_BLEND_EQUATION_OES	GLES/glext.h	38;"	d
GL_BLEND_EQUATION_RGB_OES	GLES/glext.h	24;"	d
GL_BLEND_SRC	GLES/gl.h	226;"	d
GL_BLEND_SRC_ALPHA_OES	GLES/glext.h	33;"	d
GL_BLEND_SRC_RGB_OES	GLES/glext.h	31;"	d
GL_BLUE_BITS	GLES/gl.h	245;"	d
GL_BUFFER_ACCESS_OES	GLES/glext.h	114;"	d
GL_BUFFER_MAPPED_OES	GLES/glext.h	115;"	d
GL_BUFFER_MAP_POINTER_OES	GLES/glext.h	116;"	d
GL_BUFFER_SIZE	GLES/gl.h	515;"	d
GL_BUFFER_USAGE	GLES/gl.h	516;"	d
GL_BYTE	GLES/gl.h	311;"	d
GL_CCW	GLES/gl.h	184;"	d
GL_CLAMP_TO_EDGE	GLES/gl.h	483;"	d
GL_CLEAR	GLES/gl.h	319;"	d
GL_CLIENT_ACTIVE_TEXTURE	GLES/gl.h	479;"	d
GL_CLIP_PLANE0	GLES/gl.h	93;"	d
GL_CLIP_PLANE1	GLES/gl.h	94;"	d
GL_CLIP_PLANE2	GLES/gl.h	95;"	d
GL_CLIP_PLANE3	GLES/gl.h	96;"	d
GL_CLIP_PLANE4	GLES/gl.h	97;"	d
GL_CLIP_PLANE5	GLES/gl.h	98;"	d
GL_COLOR_ARRAY	GLES/gl.h	154;"	d
GL_COLOR_ARRAY_BUFFER_BINDING	GLES/gl.h	509;"	d
GL_COLOR_ARRAY_POINTER	GLES/gl.h	266;"	d
GL_COLOR_ARRAY_SIZE	GLES/gl.h	258;"	d
GL_COLOR_ARRAY_STRIDE	GLES/gl.h	260;"	d
GL_COLOR_ARRAY_TYPE	GLES/gl.h	259;"	d
GL_COLOR_ATTACHMENT0_OES	GLES/glext.h	96;"	d
GL_COLOR_BUFFER_BIT	GLES/gl.h	46;"	d
GL_COLOR_CLEAR_VALUE	GLES/gl.h	230;"	d
GL_COLOR_LOGIC_OP	GLES/gl.h	133;"	d
GL_COLOR_MATERIAL	GLES/gl.h	148;"	d
GL_COLOR_WRITEMASK	GLES/gl.h	231;"	d
GL_COMBINE	GLES/gl.h	520;"	d
GL_COMBINE_ALPHA	GLES/gl.h	522;"	d
GL_COMBINE_RGB	GLES/gl.h	521;"	d
GL_COMPRESSED_TEXTURE_FORMATS	GLES/gl.h	280;"	d
GL_CONSTANT	GLES/gl.h	526;"	d
GL_CONSTANT_ATTENUATION	GLES/gl.h	306;"	d
GL_COORD_REPLACE_OES	GLES/gl.h	584;"	d
GL_COPY	GLES/gl.h	322;"	d
GL_COPY_INVERTED	GLES/gl.h	331;"	d
GL_CULL_FACE	GLES/gl.h	130;"	d
GL_CULL_FACE_MODE	GLES/gl.h	200;"	d
GL_CURRENT_COLOR	GLES/gl.h	187;"	d
GL_CURRENT_NORMAL	GLES/gl.h	188;"	d
GL_CURRENT_PALETTE_MATRIX_OES	GLES/glext.h	133;"	d
GL_CURRENT_TEXTURE_COORDS	GLES/gl.h	189;"	d
GL_CW	GLES/gl.h	183;"	d
GL_DECAL	GLES/gl.h	411;"	d
GL_DECR	GLES/gl.h	394;"	d
GL_DECR_WRAP_OES	GLES/glext.h	177;"	d
GL_DEPTH24_STENCIL8_OES	GLES/glext.h	150;"	d
GL_DEPTH_ATTACHMENT_OES	GLES/glext.h	97;"	d
GL_DEPTH_BITS	GLES/gl.h	247;"	d
GL_DEPTH_BUFFER_BIT	GLES/gl.h	44;"	d
GL_DEPTH_CLEAR_VALUE	GLES/gl.h	205;"	d
GL_DEPTH_COMPONENT16_OES	GLES/glext.h	82;"	d
GL_DEPTH_COMPONENT24_OES	GLES/glext.h	51;"	d
GL_DEPTH_COMPONENT32_OES	GLES/glext.h	56;"	d
GL_DEPTH_FUNC	GLES/gl.h	206;"	d
GL_DEPTH_RANGE	GLES/gl.h	203;"	d
GL_DEPTH_STENCIL_OES	GLES/glext.h	148;"	d
GL_DEPTH_TEST	GLES/gl.h	136;"	d
GL_DEPTH_WRITEMASK	GLES/gl.h	204;"	d
GL_DIFFUSE	GLES/gl.h	300;"	d
GL_DITHER	GLES/gl.h	134;"	d
GL_DONT_CARE	GLES/gl.h	283;"	d
GL_DOT3_RGB	GLES/gl.h	545;"	d
GL_DOT3_RGBA	GLES/gl.h	546;"	d
GL_DST_ALPHA	GLES/gl.h	78;"	d
GL_DST_COLOR	GLES/gl.h	84;"	d
GL_DYNAMIC_DRAW	GLES/gl.h	513;"	d
GL_ELEMENT_ARRAY_BUFFER	GLES/gl.h	503;"	d
GL_ELEMENT_ARRAY_BUFFER_BINDING	GLES/gl.h	506;"	d
GL_EMISSION	GLES/gl.h	340;"	d
GL_EQUAL	GLES/gl.h	64;"	d
GL_EQUIV	GLES/gl.h	328;"	d
GL_ETC1_RGB8_OES	GLES/glext.h	46;"	d
GL_EXP	GLES/gl.h	172;"	d
GL_EXP2	GLES/gl.h	173;"	d
GL_EXTENSIONS	GLES/gl.h	401;"	d
GL_EXT_texture_filter_anisotropic	GLES/glext.h	602;"	d
GL_EXT_texture_format_BGRA8888	GLES/glext.h	607;"	d
GL_FALSE	GLES/gl.h	49;"	d
GL_FASTEST	GLES/gl.h	284;"	d
GL_FIXED	GLES/gl.h	316;"	d
GL_FIXED_OES	GLES/glext.h	71;"	d
GL_FLAT	GLES/gl.h	376;"	d
GL_FLOAT	GLES/gl.h	315;"	d
GL_FOG	GLES/gl.h	127;"	d
GL_FOG_COLOR	GLES/gl.h	180;"	d
GL_FOG_DENSITY	GLES/gl.h	176;"	d
GL_FOG_END	GLES/gl.h	178;"	d
GL_FOG_HINT	GLES/gl.h	291;"	d
GL_FOG_MODE	GLES/gl.h	179;"	d
GL_FOG_START	GLES/gl.h	177;"	d
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_OES	GLES/glext.h	93;"	d
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_OES	GLES/glext.h	92;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_OES	GLES/glext.h	95;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_OES	GLES/glext.h	94;"	d
GL_FRAMEBUFFER_BINDING_OES	GLES/glext.h	105;"	d
GL_FRAMEBUFFER_COMPLETE_OES	GLES/glext.h	99;"	d
GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_OES	GLES/glext.h	100;"	d
GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_OES	GLES/glext.h	102;"	d
GL_FRAMEBUFFER_INCOMPLETE_FORMATS_OES	GLES/glext.h	103;"	d
GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_OES	GLES/glext.h	101;"	d
GL_FRAMEBUFFER_OES	GLES/glext.h	77;"	d
GL_FRAMEBUFFER_UNSUPPORTED_OES	GLES/glext.h	104;"	d
GL_FRONT	GLES/gl.h	112;"	d
GL_FRONT_AND_BACK	GLES/gl.h	114;"	d
GL_FRONT_FACE	GLES/gl.h	201;"	d
GL_FUNC_ADD_OES	GLES/glext.h	39;"	d
GL_FUNC_REVERSE_SUBTRACT_OES	GLES/glext.h	41;"	d
GL_FUNC_SUBTRACT_OES	GLES/glext.h	40;"	d
GL_GENERATE_MIPMAP	GLES/gl.h	440;"	d
GL_GENERATE_MIPMAP_HINT	GLES/gl.h	292;"	d
GL_GEQUAL	GLES/gl.h	68;"	d
GL_GREATER	GLES/gl.h	66;"	d
GL_GREEN_BITS	GLES/gl.h	244;"	d
GL_IMPLEMENTATION_COLOR_READ_FORMAT_OES	GLES/gl.h	555;"	d
GL_IMPLEMENTATION_COLOR_READ_TYPE_OES	GLES/gl.h	554;"	d
GL_INCR	GLES/gl.h	393;"	d
GL_INCR_WRAP_OES	GLES/glext.h	176;"	d
GL_INTERPOLATE	GLES/gl.h	525;"	d
GL_INVALID_ENUM	GLES/gl.h	163;"	d
GL_INVALID_FRAMEBUFFER_OPERATION_OES	GLES/glext.h	108;"	d
GL_INVALID_OPERATION	GLES/gl.h	165;"	d
GL_INVALID_VALUE	GLES/gl.h	164;"	d
GL_INVERT	GLES/gl.h	329;"	d
GL_KEEP	GLES/gl.h	391;"	d
GL_LEQUAL	GLES/gl.h	65;"	d
GL_LESS	GLES/gl.h	63;"	d
GL_LIGHT0	GLES/gl.h	492;"	d
GL_LIGHT1	GLES/gl.h	493;"	d
GL_LIGHT2	GLES/gl.h	494;"	d
GL_LIGHT3	GLES/gl.h	495;"	d
GL_LIGHT4	GLES/gl.h	496;"	d
GL_LIGHT5	GLES/gl.h	497;"	d
GL_LIGHT6	GLES/gl.h	498;"	d
GL_LIGHT7	GLES/gl.h	499;"	d
GL_LIGHTING	GLES/gl.h	128;"	d
GL_LIGHT_MODEL_AMBIENT	GLES/gl.h	295;"	d
GL_LIGHT_MODEL_TWO_SIDE	GLES/gl.h	296;"	d
GL_LINEAR	GLES/gl.h	425;"	d
GL_LINEAR_ATTENUATION	GLES/gl.h	307;"	d
GL_LINEAR_MIPMAP_LINEAR	GLES/gl.h	433;"	d
GL_LINEAR_MIPMAP_NEAREST	GLES/gl.h	431;"	d
GL_LINES	GLES/gl.h	54;"	d
GL_LINE_LOOP	GLES/gl.h	55;"	d
GL_LINE_SMOOTH	GLES/gl.h	146;"	d
GL_LINE_SMOOTH_HINT	GLES/gl.h	290;"	d
GL_LINE_STRIP	GLES/gl.h	56;"	d
GL_LINE_WIDTH	GLES/gl.h	196;"	d
GL_LOGIC_OP_MODE	GLES/gl.h	227;"	d
GL_LUMINANCE	GLES/gl.h	362;"	d
GL_LUMINANCE_ALPHA	GLES/gl.h	363;"	d
GL_MATRIX_INDEX_ARRAY_BUFFER_BINDING_OES	GLES/glext.h	138;"	d
GL_MATRIX_INDEX_ARRAY_OES	GLES/glext.h	131;"	d
GL_MATRIX_INDEX_ARRAY_POINTER_OES	GLES/glext.h	137;"	d
GL_MATRIX_INDEX_ARRAY_SIZE_OES	GLES/glext.h	134;"	d
GL_MATRIX_INDEX_ARRAY_STRIDE_OES	GLES/glext.h	136;"	d
GL_MATRIX_INDEX_ARRAY_TYPE_OES	GLES/glext.h	135;"	d
GL_MATRIX_MODE	GLES/gl.h	215;"	d
GL_MATRIX_PALETTE_OES	GLES/glext.h	130;"	d
GL_MAX_CLIP_PLANES	GLES/gl.h	235;"	d
GL_MAX_CUBE_MAP_TEXTURE_SIZE_OES	GLES/glext.h	192;"	d
GL_MAX_LIGHTS	GLES/gl.h	234;"	d
GL_MAX_MODELVIEW_STACK_DEPTH	GLES/gl.h	237;"	d
GL_MAX_PALETTE_MATRICES_OES	GLES/glext.h	129;"	d
GL_MAX_PROJECTION_STACK_DEPTH	GLES/gl.h	238;"	d
GL_MAX_RENDERBUFFER_SIZE_OES	GLES/glext.h	107;"	d
GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT	GLES/glext.h	226;"	d
GL_MAX_TEXTURE_SIZE	GLES/gl.h	236;"	d
GL_MAX_TEXTURE_STACK_DEPTH	GLES/gl.h	239;"	d
GL_MAX_TEXTURE_UNITS	GLES/gl.h	241;"	d
GL_MAX_VERTEX_UNITS_OES	GLES/glext.h	128;"	d
GL_MAX_VIEWPORT_DIMS	GLES/gl.h	240;"	d
GL_MIRRORED_REPEAT_OES	GLES/glext.h	199;"	d
GL_MODELVIEW	GLES/gl.h	348;"	d
GL_MODELVIEW_MATRIX	GLES/gl.h	220;"	d
GL_MODELVIEW_MATRIX_FLOAT_AS_INT_BITS_OES	GLES/glext.h	121;"	d
GL_MODELVIEW_STACK_DEPTH	GLES/gl.h	217;"	d
GL_MODULATE	GLES/gl.h	410;"	d
GL_MULTISAMPLE	GLES/gl.h	156;"	d
GL_NAND	GLES/gl.h	333;"	d
GL_NEAREST	GLES/gl.h	424;"	d
GL_NEAREST_MIPMAP_LINEAR	GLES/gl.h	432;"	d
GL_NEAREST_MIPMAP_NEAREST	GLES/gl.h	430;"	d
GL_NEVER	GLES/gl.h	62;"	d
GL_NICEST	GLES/gl.h	285;"	d
GL_NONE_OES	GLES/glext.h	76;"	d
GL_NOOP	GLES/gl.h	324;"	d
GL_NOR	GLES/gl.h	327;"	d
GL_NORMALIZE	GLES/gl.h	149;"	d
GL_NORMAL_ARRAY	GLES/gl.h	153;"	d
GL_NORMAL_ARRAY_BUFFER_BINDING	GLES/gl.h	508;"	d
GL_NORMAL_ARRAY_POINTER	GLES/gl.h	265;"	d
GL_NORMAL_ARRAY_STRIDE	GLES/gl.h	257;"	d
GL_NORMAL_ARRAY_TYPE	GLES/gl.h	256;"	d
GL_NORMAL_MAP_OES	GLES/glext.h	182;"	d
GL_NOTEQUAL	GLES/gl.h	67;"	d
GL_NO_ERROR	GLES/gl.h	162;"	d
GL_NUM_COMPRESSED_TEXTURE_FORMATS	GLES/gl.h	279;"	d
GL_OES_EGL_image	GLES/glext.h	310;"	d
GL_OES_blend_equation_separate	GLES/glext.h	240;"	d
GL_OES_blend_func_separate	GLES/glext.h	249;"	d
GL_OES_blend_subtract	GLES/glext.h	258;"	d
GL_OES_byte_coordinates	GLES/glext.h	267;"	d
GL_OES_compressed_ETC1_RGB8_texture	GLES/glext.h	272;"	d
GL_OES_compressed_paletted_texture	GLES/gl.h	748;"	d
GL_OES_depth24	GLES/glext.h	277;"	d
GL_OES_depth32	GLES/glext.h	282;"	d
GL_OES_draw_texture	GLES/glext.h	287;"	d
GL_OES_element_index_uint	GLES/glext.h	321;"	d
GL_OES_extended_matrix_palette	GLES/glext.h	326;"	d
GL_OES_fbo_render_mipmap	GLES/glext.h	331;"	d
GL_OES_fixed_point	GLES/glext.h	336;"	d
GL_OES_framebuffer_object	GLES/glext.h	421;"	d
GL_OES_mapbuffer	GLES/glext.h	458;"	d
GL_OES_matrix_get	GLES/glext.h	471;"	d
GL_OES_matrix_palette	GLES/glext.h	476;"	d
GL_OES_packed_depth_stencil	GLES/glext.h	491;"	d
GL_OES_point_size_array	GLES/gl.h	753;"	d
GL_OES_point_sprite	GLES/gl.h	759;"	d
GL_OES_query_matrix	GLES/glext.h	496;"	d
GL_OES_read_format	GLES/gl.h	743;"	d
GL_OES_rgb8_rgba8	GLES/glext.h	505;"	d
GL_OES_single_precision	GLES/glext.h	510;"	d
GL_OES_stencil1	GLES/glext.h	529;"	d
GL_OES_stencil4	GLES/glext.h	534;"	d
GL_OES_stencil8	GLES/glext.h	539;"	d
GL_OES_stencil_wrap	GLES/glext.h	544;"	d
GL_OES_texture_cube_map	GLES/glext.h	549;"	d
GL_OES_texture_env_crossbar	GLES/glext.h	574;"	d
GL_OES_texture_mirrored_repeat	GLES/glext.h	579;"	d
GL_ONE	GLES/gl.h	73;"	d
GL_ONE_MINUS_DST_ALPHA	GLES/gl.h	79;"	d
GL_ONE_MINUS_DST_COLOR	GLES/gl.h	85;"	d
GL_ONE_MINUS_SRC_ALPHA	GLES/gl.h	77;"	d
GL_ONE_MINUS_SRC_COLOR	GLES/gl.h	75;"	d
GL_OPERAND0_ALPHA	GLES/gl.h	532;"	d
GL_OPERAND0_RGB	GLES/gl.h	529;"	d
GL_OPERAND1_ALPHA	GLES/gl.h	533;"	d
GL_OPERAND1_RGB	GLES/gl.h	530;"	d
GL_OPERAND2_ALPHA	GLES/gl.h	534;"	d
GL_OPERAND2_RGB	GLES/gl.h	531;"	d
GL_OR	GLES/gl.h	326;"	d
GL_OR_INVERTED	GLES/gl.h	332;"	d
GL_OR_REVERSE	GLES/gl.h	330;"	d
GL_OUT_OF_MEMORY	GLES/gl.h	168;"	d
GL_PACK_ALIGNMENT	GLES/gl.h	233;"	d
GL_PACK_ALIGNMENT	GLES/gl.h	367;"	d
GL_PALETTE4_R5_G6_B5_OES	GLES/gl.h	562;"	d
GL_PALETTE4_RGB5_A1_OES	GLES/gl.h	564;"	d
GL_PALETTE4_RGB8_OES	GLES/gl.h	560;"	d
GL_PALETTE4_RGBA4_OES	GLES/gl.h	563;"	d
GL_PALETTE4_RGBA8_OES	GLES/gl.h	561;"	d
GL_PALETTE8_R5_G6_B5_OES	GLES/gl.h	567;"	d
GL_PALETTE8_RGB5_A1_OES	GLES/gl.h	569;"	d
GL_PALETTE8_RGB8_OES	GLES/gl.h	565;"	d
GL_PALETTE8_RGBA4_OES	GLES/gl.h	568;"	d
GL_PALETTE8_RGBA8_OES	GLES/gl.h	566;"	d
GL_PERSPECTIVE_CORRECTION_HINT	GLES/gl.h	288;"	d
GL_POINTS	GLES/gl.h	53;"	d
GL_POINT_DISTANCE_ATTENUATION	GLES/gl.h	194;"	d
GL_POINT_FADE_THRESHOLD_SIZE	GLES/gl.h	193;"	d
GL_POINT_SIZE	GLES/gl.h	190;"	d
GL_POINT_SIZE_ARRAY_BUFFER_BINDING_OES	GLES/gl.h	578;"	d
GL_POINT_SIZE_ARRAY_OES	GLES/gl.h	574;"	d
GL_POINT_SIZE_ARRAY_POINTER_OES	GLES/gl.h	577;"	d
GL_POINT_SIZE_ARRAY_STRIDE_OES	GLES/gl.h	576;"	d
GL_POINT_SIZE_ARRAY_TYPE_OES	GLES/gl.h	575;"	d
GL_POINT_SIZE_MAX	GLES/gl.h	192;"	d
GL_POINT_SIZE_MIN	GLES/gl.h	191;"	d
GL_POINT_SMOOTH	GLES/gl.h	145;"	d
GL_POINT_SMOOTH_HINT	GLES/gl.h	289;"	d
GL_POINT_SPRITE_OES	GLES/gl.h	583;"	d
GL_POLYGON_OFFSET_FACTOR	GLES/gl.h	251;"	d
GL_POLYGON_OFFSET_FILL	GLES/gl.h	151;"	d
GL_POLYGON_OFFSET_FILL	GLES/gl.h	250;"	d
GL_POLYGON_OFFSET_UNITS	GLES/gl.h	249;"	d
GL_POSITION	GLES/gl.h	302;"	d
GL_PREVIOUS	GLES/gl.h	528;"	d
GL_PRIMARY_COLOR	GLES/gl.h	527;"	d
GL_PROJECTION	GLES/gl.h	349;"	d
GL_PROJECTION_MATRIX	GLES/gl.h	221;"	d
GL_PROJECTION_MATRIX_FLOAT_AS_INT_BITS_OES	GLES/glext.h	122;"	d
GL_PROJECTION_STACK_DEPTH	GLES/gl.h	218;"	d
GL_QUADRATIC_ATTENUATION	GLES/gl.h	308;"	d
GL_RED_BITS	GLES/gl.h	243;"	d
GL_REFLECTION_MAP_OES	GLES/glext.h	183;"	d
GL_RENDERBUFFER_ALPHA_SIZE_OES	GLES/glext.h	89;"	d
GL_RENDERBUFFER_BINDING_OES	GLES/glext.h	106;"	d
GL_RENDERBUFFER_BLUE_SIZE_OES	GLES/glext.h	88;"	d
GL_RENDERBUFFER_DEPTH_SIZE_OES	GLES/glext.h	90;"	d
GL_RENDERBUFFER_GREEN_SIZE_OES	GLES/glext.h	87;"	d
GL_RENDERBUFFER_HEIGHT_OES	GLES/glext.h	84;"	d
GL_RENDERBUFFER_INTERNAL_FORMAT_OES	GLES/glext.h	85;"	d
GL_RENDERBUFFER_OES	GLES/glext.h	78;"	d
GL_RENDERBUFFER_RED_SIZE_OES	GLES/glext.h	86;"	d
GL_RENDERBUFFER_STENCIL_SIZE_OES	GLES/glext.h	91;"	d
GL_RENDERBUFFER_WIDTH_OES	GLES/glext.h	83;"	d
GL_RENDERER	GLES/gl.h	399;"	d
GL_REPEAT	GLES/gl.h	482;"	d
GL_REPLACE	GLES/gl.h	392;"	d
GL_RESCALE_NORMAL	GLES/gl.h	150;"	d
GL_RGB	GLES/gl.h	360;"	d
GL_RGB565_OES	GLES/glext.h	81;"	d
GL_RGB5_A1_OES	GLES/glext.h	80;"	d
GL_RGB8_OES	GLES/glext.h	155;"	d
GL_RGBA	GLES/gl.h	361;"	d
GL_RGBA4_OES	GLES/glext.h	79;"	d
GL_RGBA8_OES	GLES/glext.h	156;"	d
GL_RGB_SCALE	GLES/gl.h	523;"	d
GL_SAMPLES	GLES/gl.h	269;"	d
GL_SAMPLE_ALPHA_TO_COVERAGE	GLES/gl.h	157;"	d
GL_SAMPLE_ALPHA_TO_ONE	GLES/gl.h	158;"	d
GL_SAMPLE_BUFFERS	GLES/gl.h	268;"	d
GL_SAMPLE_COVERAGE	GLES/gl.h	159;"	d
GL_SAMPLE_COVERAGE_INVERT	GLES/gl.h	271;"	d
GL_SAMPLE_COVERAGE_VALUE	GLES/gl.h	270;"	d
GL_SCISSOR_BOX	GLES/gl.h	228;"	d
GL_SCISSOR_TEST	GLES/gl.h	147;"	d
GL_SCISSOR_TEST	GLES/gl.h	229;"	d
GL_SET	GLES/gl.h	334;"	d
GL_SHADE_MODEL	GLES/gl.h	202;"	d
GL_SHININESS	GLES/gl.h	341;"	d
GL_SHORT	GLES/gl.h	313;"	d
GL_SMOOTH	GLES/gl.h	377;"	d
GL_SMOOTH_LINE_WIDTH_RANGE	GLES/gl.h	197;"	d
GL_SMOOTH_POINT_SIZE_RANGE	GLES/gl.h	195;"	d
GL_SPECULAR	GLES/gl.h	301;"	d
GL_SPOT_CUTOFF	GLES/gl.h	305;"	d
GL_SPOT_DIRECTION	GLES/gl.h	303;"	d
GL_SPOT_EXPONENT	GLES/gl.h	304;"	d
GL_SRC0_ALPHA	GLES/gl.h	541;"	d
GL_SRC0_RGB	GLES/gl.h	538;"	d
GL_SRC1_ALPHA	GLES/gl.h	542;"	d
GL_SRC1_RGB	GLES/gl.h	539;"	d
GL_SRC2_ALPHA	GLES/gl.h	543;"	d
GL_SRC2_RGB	GLES/gl.h	540;"	d
GL_SRC_ALPHA	GLES/gl.h	76;"	d
GL_SRC_ALPHA_SATURATE	GLES/gl.h	86;"	d
GL_SRC_COLOR	GLES/gl.h	74;"	d
GL_STACK_OVERFLOW	GLES/gl.h	166;"	d
GL_STACK_UNDERFLOW	GLES/gl.h	167;"	d
GL_STATIC_DRAW	GLES/gl.h	512;"	d
GL_STENCIL_ATTACHMENT_OES	GLES/glext.h	98;"	d
GL_STENCIL_BITS	GLES/gl.h	248;"	d
GL_STENCIL_BUFFER_BIT	GLES/gl.h	45;"	d
GL_STENCIL_CLEAR_VALUE	GLES/gl.h	207;"	d
GL_STENCIL_FAIL	GLES/gl.h	210;"	d
GL_STENCIL_FUNC	GLES/gl.h	208;"	d
GL_STENCIL_INDEX1_OES	GLES/glext.h	161;"	d
GL_STENCIL_INDEX4_OES	GLES/glext.h	166;"	d
GL_STENCIL_INDEX8_OES	GLES/glext.h	171;"	d
GL_STENCIL_PASS_DEPTH_FAIL	GLES/gl.h	211;"	d
GL_STENCIL_PASS_DEPTH_PASS	GLES/gl.h	212;"	d
GL_STENCIL_REF	GLES/gl.h	213;"	d
GL_STENCIL_TEST	GLES/gl.h	135;"	d
GL_STENCIL_VALUE_MASK	GLES/gl.h	209;"	d
GL_STENCIL_WRITEMASK	GLES/gl.h	214;"	d
GL_SUBPIXEL_BITS	GLES/gl.h	242;"	d
GL_SUBTRACT	GLES/gl.h	519;"	d
GL_TEXTURE	GLES/gl.h	350;"	d
GL_TEXTURE0	GLES/gl.h	446;"	d
GL_TEXTURE1	GLES/gl.h	447;"	d
GL_TEXTURE10	GLES/gl.h	456;"	d
GL_TEXTURE11	GLES/gl.h	457;"	d
GL_TEXTURE12	GLES/gl.h	458;"	d
GL_TEXTURE13	GLES/gl.h	459;"	d
GL_TEXTURE14	GLES/gl.h	460;"	d
GL_TEXTURE15	GLES/gl.h	461;"	d
GL_TEXTURE16	GLES/gl.h	462;"	d
GL_TEXTURE17	GLES/gl.h	463;"	d
GL_TEXTURE18	GLES/gl.h	464;"	d
GL_TEXTURE19	GLES/gl.h	465;"	d
GL_TEXTURE2	GLES/gl.h	448;"	d
GL_TEXTURE20	GLES/gl.h	466;"	d
GL_TEXTURE21	GLES/gl.h	467;"	d
GL_TEXTURE22	GLES/gl.h	468;"	d
GL_TEXTURE23	GLES/gl.h	469;"	d
GL_TEXTURE24	GLES/gl.h	470;"	d
GL_TEXTURE25	GLES/gl.h	471;"	d
GL_TEXTURE26	GLES/gl.h	472;"	d
GL_TEXTURE27	GLES/gl.h	473;"	d
GL_TEXTURE28	GLES/gl.h	474;"	d
GL_TEXTURE29	GLES/gl.h	475;"	d
GL_TEXTURE3	GLES/gl.h	449;"	d
GL_TEXTURE30	GLES/gl.h	476;"	d
GL_TEXTURE31	GLES/gl.h	477;"	d
GL_TEXTURE4	GLES/gl.h	450;"	d
GL_TEXTURE5	GLES/gl.h	451;"	d
GL_TEXTURE6	GLES/gl.h	452;"	d
GL_TEXTURE7	GLES/gl.h	453;"	d
GL_TEXTURE8	GLES/gl.h	454;"	d
GL_TEXTURE9	GLES/gl.h	455;"	d
GL_TEXTURE_2D	GLES/gl.h	129;"	d
GL_TEXTURE_BINDING_2D	GLES/gl.h	252;"	d
GL_TEXTURE_BINDING_CUBE_MAP_OES	GLES/glext.h	185;"	d
GL_TEXTURE_COORD_ARRAY	GLES/gl.h	155;"	d
GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING	GLES/gl.h	510;"	d
GL_TEXTURE_COORD_ARRAY_POINTER	GLES/gl.h	267;"	d
GL_TEXTURE_COORD_ARRAY_SIZE	GLES/gl.h	261;"	d
GL_TEXTURE_COORD_ARRAY_STRIDE	GLES/gl.h	263;"	d
GL_TEXTURE_COORD_ARRAY_TYPE	GLES/gl.h	262;"	d
GL_TEXTURE_CROP_RECT_OES	GLES/glext.h	61;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_X_OES	GLES/glext.h	187;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_OES	GLES/glext.h	189;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_OES	GLES/glext.h	191;"	d
GL_TEXTURE_CUBE_MAP_OES	GLES/glext.h	184;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_X_OES	GLES/glext.h	186;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Y_OES	GLES/glext.h	188;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Z_OES	GLES/glext.h	190;"	d
GL_TEXTURE_ENV	GLES/gl.h	421;"	d
GL_TEXTURE_ENV_COLOR	GLES/gl.h	418;"	d
GL_TEXTURE_ENV_MODE	GLES/gl.h	417;"	d
GL_TEXTURE_GEN_MODE_OES	GLES/glext.h	193;"	d
GL_TEXTURE_GEN_STR_OES	GLES/glext.h	194;"	d
GL_TEXTURE_MAG_FILTER	GLES/gl.h	436;"	d
GL_TEXTURE_MATRIX	GLES/gl.h	222;"	d
GL_TEXTURE_MATRIX_FLOAT_AS_INT_BITS_OES	GLES/glext.h	123;"	d
GL_TEXTURE_MAX_ANISOTROPY_EXT	GLES/glext.h	225;"	d
GL_TEXTURE_MIN_FILTER	GLES/gl.h	437;"	d
GL_TEXTURE_STACK_DEPTH	GLES/gl.h	219;"	d
GL_TEXTURE_WRAP_S	GLES/gl.h	438;"	d
GL_TEXTURE_WRAP_T	GLES/gl.h	439;"	d
GL_TRIANGLES	GLES/gl.h	57;"	d
GL_TRIANGLE_FAN	GLES/gl.h	59;"	d
GL_TRIANGLE_STRIP	GLES/gl.h	58;"	d
GL_TRUE	GLES/gl.h	50;"	d
GL_UNPACK_ALIGNMENT	GLES/gl.h	232;"	d
GL_UNPACK_ALIGNMENT	GLES/gl.h	366;"	d
GL_UNSIGNED_BYTE	GLES/gl.h	312;"	d
GL_UNSIGNED_INT_24_8_OES	GLES/glext.h	149;"	d
GL_UNSIGNED_SHORT	GLES/gl.h	314;"	d
GL_UNSIGNED_SHORT_4_4_4_4	GLES/gl.h	371;"	d
GL_UNSIGNED_SHORT_5_5_5_1	GLES/gl.h	372;"	d
GL_UNSIGNED_SHORT_5_6_5	GLES/gl.h	373;"	d
GL_VENDOR	GLES/gl.h	398;"	d
GL_VERSION	GLES/gl.h	400;"	d
GL_VERSION_ES_CL_1_0	GLES/gl.h	39;"	d
GL_VERSION_ES_CL_1_1	GLES/gl.h	41;"	d
GL_VERSION_ES_CM_1_0	GLES/gl.h	38;"	d
GL_VERSION_ES_CM_1_1	GLES/gl.h	40;"	d
GL_VERTEX_ARRAY	GLES/gl.h	152;"	d
GL_VERTEX_ARRAY_BUFFER_BINDING	GLES/gl.h	507;"	d
GL_VERTEX_ARRAY_POINTER	GLES/gl.h	264;"	d
GL_VERTEX_ARRAY_SIZE	GLES/gl.h	253;"	d
GL_VERTEX_ARRAY_STRIDE	GLES/gl.h	255;"	d
GL_VERTEX_ARRAY_TYPE	GLES/gl.h	254;"	d
GL_VIEWPORT	GLES/gl.h	216;"	d
GL_WEIGHT_ARRAY_BUFFER_BINDING_OES	GLES/glext.h	143;"	d
GL_WEIGHT_ARRAY_OES	GLES/glext.h	132;"	d
GL_WEIGHT_ARRAY_POINTER_OES	GLES/glext.h	142;"	d
GL_WEIGHT_ARRAY_SIZE_OES	GLES/glext.h	139;"	d
GL_WEIGHT_ARRAY_STRIDE_OES	GLES/glext.h	141;"	d
GL_WEIGHT_ARRAY_TYPE_OES	GLES/glext.h	140;"	d
GL_WRITE_ONLY_OES	GLES/glext.h	113;"	d
GL_XOR	GLES/gl.h	325;"	d
GL_ZERO	GLES/gl.h	72;"	d
GLbitfield	GLES/gl.h	/^typedef unsigned int     GLbitfield;$/;"	t
GLboolean	GLES/gl.h	/^typedef unsigned char    GLboolean;$/;"	t
GLbyte	GLES/gl.h	/^typedef khronos_int8_t   GLbyte;$/;"	t
GLclampf	GLES/gl.h	/^typedef khronos_float_t  GLclampf;$/;"	t
GLclampx	GLES/gl.h	/^typedef khronos_int32_t  GLclampx;$/;"	t
GLeglImageOES	GLES/glext.h	/^typedef void* GLeglImageOES;$/;"	t
GLenum	GLES/gl.h	/^typedef unsigned int     GLenum;$/;"	t
GLfixed	GLES/gl.h	/^typedef khronos_int32_t  GLfixed;$/;"	t
GLfloat	GLES/gl.h	/^typedef khronos_float_t  GLfloat;$/;"	t
GLint	GLES/gl.h	/^typedef int              GLint;$/;"	t
GLintptr	GLES/gl.h	/^typedef khronos_intptr_t GLintptr;$/;"	t
GLshort	GLES/gl.h	/^typedef short            GLshort;$/;"	t
GLsizei	GLES/gl.h	/^typedef int              GLsizei;$/;"	t
GLsizeiptr	GLES/gl.h	/^typedef khronos_ssize_t  GLsizeiptr;$/;"	t
GLubyte	GLES/gl.h	/^typedef khronos_uint8_t  GLubyte;$/;"	t
GLuint	GLES/gl.h	/^typedef unsigned int     GLuint;$/;"	t
GLushort	GLES/gl.h	/^typedef unsigned short   GLushort;$/;"	t
GLvoid	GLES/gl.h	/^typedef void             GLvoid;$/;"	t
KHRONOS_APIATTRIBUTES	KHR/khrplatform.h	136;"	d
KHRONOS_APIATTRIBUTES	KHR/khrplatform.h	138;"	d
KHRONOS_APICALL	KHR/khrplatform.h	103;"	d
KHRONOS_APICALL	KHR/khrplatform.h	105;"	d
KHRONOS_APICALL	KHR/khrplatform.h	109;"	d
KHRONOS_APICALL	KHR/khrplatform.h	111;"	d
KHRONOS_APICALL	KHR/khrplatform.h	114;"	d
KHRONOS_APIENTRY	KHR/khrplatform.h	125;"	d
KHRONOS_APIENTRY	KHR/khrplatform.h	127;"	d
KHRONOS_BOOLEAN_ENUM_FORCE_SIZE	KHR/khrplatform.h	/^    KHRONOS_BOOLEAN_ENUM_FORCE_SIZE = KHRONOS_MAX_ENUM$/;"	e	enum:__anon1
KHRONOS_FALSE	KHR/khrplatform.h	/^    KHRONOS_FALSE = 0,$/;"	e	enum:__anon1
KHRONOS_MAX_ENUM	KHR/khrplatform.h	287;"	d
KHRONOS_SUPPORT_FLOAT	KHR/khrplatform.h	153;"	d
KHRONOS_SUPPORT_FLOAT	KHR/khrplatform.h	167;"	d
KHRONOS_SUPPORT_FLOAT	KHR/khrplatform.h	180;"	d
KHRONOS_SUPPORT_FLOAT	KHR/khrplatform.h	192;"	d
KHRONOS_SUPPORT_FLOAT	KHR/khrplatform.h	209;"	d
KHRONOS_SUPPORT_FLOAT	KHR/khrplatform.h	221;"	d
KHRONOS_SUPPORT_FLOAT	KHR/khrplatform.h	232;"	d
KHRONOS_SUPPORT_FLOAT	KHR/khrplatform.h	245;"	d
KHRONOS_SUPPORT_INT64	KHR/khrplatform.h	152;"	d
KHRONOS_SUPPORT_INT64	KHR/khrplatform.h	166;"	d
KHRONOS_SUPPORT_INT64	KHR/khrplatform.h	179;"	d
KHRONOS_SUPPORT_INT64	KHR/khrplatform.h	191;"	d
KHRONOS_SUPPORT_INT64	KHR/khrplatform.h	208;"	d
KHRONOS_SUPPORT_INT64	KHR/khrplatform.h	220;"	d
KHRONOS_SUPPORT_INT64	KHR/khrplatform.h	231;"	d
KHRONOS_SUPPORT_INT64	KHR/khrplatform.h	244;"	d
KHRONOS_TRUE	KHR/khrplatform.h	/^    KHRONOS_TRUE  = 1,$/;"	e	enum:__anon1
NativeDisplayType	EGL/eglplatform.h	/^typedef EGLNativeDisplayType NativeDisplayType;$/;"	t
NativePixmapType	EGL/eglplatform.h	/^typedef EGLNativePixmapType  NativePixmapType;$/;"	t
NativeWindowType	EGL/eglplatform.h	/^typedef EGLNativeWindowType  NativeWindowType;$/;"	t
PFNEGLCREATEIMAGEKHRPROC	EGL/eglext.h	/^typedef EGLImageKHR (EGLAPIENTRYP PFNEGLCREATEIMAGEKHRPROC) (EGLDisplay dpy, EGLContext ctx, EGLenum target, EGLClientBuffer buffer, const EGLint *attrib_list);$/;"	t
PFNEGLDESTROYIMAGEKHRPROC	EGL/eglext.h	/^typedef EGLBoolean (EGLAPIENTRYP PFNEGLDESTROYIMAGEKHRPROC) (EGLDisplay dpy, EGLImageKHR image);$/;"	t
PFNEGLLOCKSURFACEKHRPROC	EGL/eglext.h	/^typedef EGLBoolean (EGLAPIENTRYP PFNEGLLOCKSURFACEKHRPROC) (EGLDisplay display, EGLSurface surface, const EGLint *attrib_list);$/;"	t
PFNEGLUNLOCKSURFACEKHRPROC	EGL/eglext.h	/^typedef EGLBoolean (EGLAPIENTRYP PFNEGLUNLOCKSURFACEKHRPROC) (EGLDisplay display, EGLSurface surface);$/;"	t
PFNGLALPHAFUNCXOESPROC	GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLALPHAFUNCXOESPROC) (GLenum func, GLclampx ref);$/;"	t
PFNGLBINDFRAMEBUFFEROESPROC	GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLBINDFRAMEBUFFEROESPROC) (GLenum target, GLuint framebuffer);$/;"	t
PFNGLBINDRENDERBUFFEROESPROC	GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLBINDRENDERBUFFEROESPROC) (GLenum target, GLuint renderbuffer);$/;"	t
PFNGLBLENDEQUATIONOESPROC	GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLBLENDEQUATIONOESPROC) (GLenum mode);$/;"	t
PFNGLBLENDEQUATIONSEPARATEOESPROC	GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLBLENDEQUATIONSEPARATEOESPROC) (GLenum modeRGB, GLenum modeAlpha);$/;"	t
PFNGLBLENDFUNCSEPARATEOESPROC	GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLBLENDFUNCSEPARATEOESPROC) (GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);$/;"	t
PFNGLCHECKFRAMEBUFFERSTATUSOESPROC	GLES/glext.h	/^typedef GLenum (GL_APIENTRYP PFNGLCHECKFRAMEBUFFERSTATUSOESPROC) (GLenum target);$/;"	t
PFNGLCLEARCOLORXOESPROC	GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLCLEARCOLORXOESPROC) (GLclampx red, GLclampx green, GLclampx blue, GLclampx alpha);$/;"	t
PFNGLCLEARDEPTHFOESPROC	GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLCLEARDEPTHFOESPROC) (GLclampf depth);$/;"	t
PFNGLCLEARDEPTHXOESPROC	GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLCLEARDEPTHXOESPROC) (GLclampx depth);$/;"	t
PFNGLCLIPPLANEFOESPROC	GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLCLIPPLANEFOESPROC) (GLenum plane, const GLfloat *equation);$/;"	t
PFNGLCLIPPLANEXOESPROC	GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLCLIPPLANEXOESPROC) (GLenum plane, const GLfixed *equation);$/;"	t
PFNGLCOLOR4XOESPROC	GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLCOLOR4XOESPROC) (GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);$/;"	t
PFNGLCURRENTPALETTEMATRIXOESPROC	GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLCURRENTPALETTEMATRIXOESPROC) (GLuint matrixpaletteindex);$/;"	t
PFNGLDELETEFRAMEBUFFERSOESPROC	GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLDELETEFRAMEBUFFERSOESPROC) (GLsizei n, const GLuint* framebuffers);$/;"	t
PFNGLDELETERENDERBUFFERSOESPROC	GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLDELETERENDERBUFFERSOESPROC) (GLsizei n, const GLuint* renderbuffers);$/;"	t
PFNGLDEPTHRANGEFOESPROC	GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLDEPTHRANGEFOESPROC) (GLclampf zNear, GLclampf zFar);$/;"	t
PFNGLDEPTHRANGEXOESPROC	GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLDEPTHRANGEXOESPROC) (GLclampx zNear, GLclampx zFar);$/;"	t
PFNGLDRAWTEXFOESPROC	GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLDRAWTEXFOESPROC) (GLfloat x, GLfloat y, GLfloat z, GLfloat width, GLfloat height);$/;"	t
PFNGLDRAWTEXFVOESPROC	GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLDRAWTEXFVOESPROC) (const GLfloat *coords);$/;"	t
PFNGLDRAWTEXIOESPROC	GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLDRAWTEXIOESPROC) (GLint x, GLint y, GLint z, GLint width, GLint height);$/;"	t
PFNGLDRAWTEXIVOESPROC	GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLDRAWTEXIVOESPROC) (const GLint *coords);$/;"	t
PFNGLDRAWTEXSOESPROC	GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLDRAWTEXSOESPROC) (GLshort x, GLshort y, GLshort z, GLshort width, GLshort height);$/;"	t
PFNGLDRAWTEXSVOESPROC	GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLDRAWTEXSVOESPROC) (const GLshort *coords);$/;"	t
PFNGLDRAWTEXXOESPROC	GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLDRAWTEXXOESPROC) (GLfixed x, GLfixed y, GLfixed z, GLfixed width, GLfixed height);$/;"	t
PFNGLDRAWTEXXVOESPROC	GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLDRAWTEXXVOESPROC) (const GLfixed *coords);$/;"	t
PFNGLEGLIMAGETARGETRENDERBUFFERSTORAGEOESPROC	GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLEGLIMAGETARGETRENDERBUFFERSTORAGEOESPROC) (GLenum target, GLeglImageOES image);$/;"	t
PFNGLEGLIMAGETARGETTEXTURE2DOESPROC	GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLEGLIMAGETARGETTEXTURE2DOESPROC) (GLenum target, GLeglImageOES image);$/;"	t
PFNGLFOGXOESPROC	GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLFOGXOESPROC) (GLenum pname, GLfixed param);$/;"	t
PFNGLFOGXVOESPROC	GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLFOGXVOESPROC) (GLenum pname, const GLfixed *params);$/;"	t
PFNGLFRAMEBUFFERRENDERBUFFEROESPROC	GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLFRAMEBUFFERRENDERBUFFEROESPROC) (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);$/;"	t
PFNGLFRAMEBUFFERTEXTURE2DOESPROC	GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLFRAMEBUFFERTEXTURE2DOESPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);$/;"	t
PFNGLFRUSTUMFOESPROC	GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLFRUSTUMFOESPROC) (GLfloat left, GLfloat right, GLfloat bottom, GLfloat top, GLfloat zNear, GLfloat zFar);$/;"	t
PFNGLFRUSTUMXOESPROC	GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLFRUSTUMXOESPROC) (GLfixed left, GLfixed right, GLfixed bottom, GLfixed top, GLfixed zNear, GLfixed zFar);$/;"	t
PFNGLGENERATEMIPMAPOESPROC	GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLGENERATEMIPMAPOESPROC) (GLenum target);$/;"	t
PFNGLGENFRAMEBUFFERSOESPROC	GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLGENFRAMEBUFFERSOESPROC) (GLsizei n, GLuint* framebuffers);$/;"	t
PFNGLGENRENDERBUFFERSOESPROC	GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLGENRENDERBUFFERSOESPROC) (GLsizei n, GLuint* renderbuffers);$/;"	t
PFNGLGETBUFFERPOINTERVOESPROC	GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLGETBUFFERPOINTERVOESPROC) (GLenum target, GLenum pname, void** params);$/;"	t
PFNGLGETCLIPPLANEFOESPROC	GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLGETCLIPPLANEFOESPROC) (GLenum pname, GLfloat eqn[4]);$/;"	t
PFNGLGETCLIPPLANEXOESPROC	GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLGETCLIPPLANEXOESPROC) (GLenum pname, GLfixed eqn[4]);$/;"	t
PFNGLGETFIXEDVOESPROC	GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLGETFIXEDVOESPROC) (GLenum pname, GLfixed *params);$/;"	t
PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVOESPROC	GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVOESPROC) (GLenum target, GLenum attachment, GLenum pname, GLint* params);$/;"	t
PFNGLGETLIGHTXVOESPROC	GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLGETLIGHTXVOESPROC) (GLenum light, GLenum pname, GLfixed *params);$/;"	t
PFNGLGETMATERIALXVOESPROC	GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLGETMATERIALXVOESPROC) (GLenum face, GLenum pname, GLfixed *params);$/;"	t
PFNGLGETRENDERBUFFERPARAMETERIVOESPROC	GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLGETRENDERBUFFERPARAMETERIVOESPROC) (GLenum target, GLenum pname, GLint* params);$/;"	t
PFNGLGETTEXENVXVOESPROC	GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLGETTEXENVXVOESPROC) (GLenum env, GLenum pname, GLfixed *params);$/;"	t
PFNGLGETTEXGENFVOESPROC	GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLGETTEXGENFVOESPROC) (GLenum coord, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETTEXGENIVOESPROC	GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLGETTEXGENIVOESPROC) (GLenum coord, GLenum pname, GLint *params);$/;"	t
PFNGLGETTEXGENXVOESPROC	GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLGETTEXGENXVOESPROC) (GLenum coord, GLenum pname, GLfixed *params);$/;"	t
PFNGLGETTEXPARAMETERXVOESPROC	GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLGETTEXPARAMETERXVOESPROC) (GLenum target, GLenum pname, GLfixed *params);$/;"	t
PFNGLISFRAMEBUFFEROESPROC	GLES/glext.h	/^typedef GLboolean (GL_APIENTRYP PFNGLISFRAMEBUFFEROESPROC) (GLuint framebuffer);$/;"	t
PFNGLISRENDERBUFFEROESPROC	GLES/glext.h	/^typedef GLboolean (GL_APIENTRYP PFNGLISRENDERBUFFEROESPROC) (GLuint renderbuffer);$/;"	t
PFNGLLIGHTMODELXOESPROC	GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLLIGHTMODELXOESPROC) (GLenum pname, GLfixed param);$/;"	t
PFNGLLIGHTMODELXVOESPROC	GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLLIGHTMODELXVOESPROC) (GLenum pname, const GLfixed *params);$/;"	t
PFNGLLIGHTXOESPROC	GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLLIGHTXOESPROC) (GLenum light, GLenum pname, GLfixed param);$/;"	t
PFNGLLIGHTXVOESPROC	GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLLIGHTXVOESPROC) (GLenum light, GLenum pname, const GLfixed *params);$/;"	t
PFNGLLINEWIDTHXOESPROC	GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLLINEWIDTHXOESPROC) (GLfixed width);$/;"	t
PFNGLLOADMATRIXXOESPROC	GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLLOADMATRIXXOESPROC) (const GLfixed *m);$/;"	t
PFNGLLOADPALETTEFROMMODELVIEWMATRIXOESPROC	GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLLOADPALETTEFROMMODELVIEWMATRIXOESPROC) (void);$/;"	t
PFNGLMAPBUFFEROESPROC	GLES/glext.h	/^typedef void* (GL_APIENTRYP PFNGLMAPBUFFEROESPROC) (GLenum target, GLenum access);$/;"	t
PFNGLMATERIALXOESPROC	GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLMATERIALXOESPROC) (GLenum face, GLenum pname, GLfixed param);$/;"	t
PFNGLMATERIALXVOESPROC	GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLMATERIALXVOESPROC) (GLenum face, GLenum pname, const GLfixed *params);$/;"	t
PFNGLMATRIXINDEXPOINTEROESPROC	GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLMATRIXINDEXPOINTEROESPROC) (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	t
PFNGLMULTITEXCOORD4XOESPROC	GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLMULTITEXCOORD4XOESPROC) (GLenum target, GLfixed s, GLfixed t, GLfixed r, GLfixed q);$/;"	t
PFNGLMULTMATRIXXOESPROC	GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLMULTMATRIXXOESPROC) (const GLfixed *m);$/;"	t
PFNGLNORMAL3XOESPROC	GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLNORMAL3XOESPROC) (GLfixed nx, GLfixed ny, GLfixed nz);$/;"	t
PFNGLORTHOFOESPROC	GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLORTHOFOESPROC) (GLfloat left, GLfloat right, GLfloat bottom, GLfloat top, GLfloat zNear, GLfloat zFar);$/;"	t
PFNGLORTHOXOESPROC	GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLORTHOXOESPROC) (GLfixed left, GLfixed right, GLfixed bottom, GLfixed top, GLfixed zNear, GLfixed zFar);$/;"	t
PFNGLPOINTPARAMETERXOESPROC	GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLPOINTPARAMETERXOESPROC) (GLenum pname, GLfixed param);$/;"	t
PFNGLPOINTPARAMETERXVOESPROC	GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLPOINTPARAMETERXVOESPROC) (GLenum pname, const GLfixed *params);$/;"	t
PFNGLPOINTSIZEXOESPROC	GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLPOINTSIZEXOESPROC) (GLfixed size);$/;"	t
PFNGLPOLYGONOFFSETXOESPROC	GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLPOLYGONOFFSETXOESPROC) (GLfixed factor, GLfixed units);$/;"	t
PFNGLQUERYMATRIXXOESPROC	GLES/glext.h	/^typedef GLbitfield (GL_APIENTRYP PFNGLQUERYMATRIXXOESPROC) (GLfixed mantissa[16], GLint exponent[16]);$/;"	t
PFNGLRENDERBUFFERSTORAGEOESPROC	GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLRENDERBUFFERSTORAGEOESPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
PFNGLROTATEXOESPROC	GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLROTATEXOESPROC) (GLfixed angle, GLfixed x, GLfixed y, GLfixed z);$/;"	t
PFNGLSAMPLECOVERAGEXOESPROC	GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLSAMPLECOVERAGEXOESPROC) (GLclampx value, GLboolean invert);$/;"	t
PFNGLSCALEXOESPROC	GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLSCALEXOESPROC) (GLfixed x, GLfixed y, GLfixed z);$/;"	t
PFNGLTEXENVXOESPROC	GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLTEXENVXOESPROC) (GLenum target, GLenum pname, GLfixed param);$/;"	t
PFNGLTEXENVXVOESPROC	GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLTEXENVXVOESPROC) (GLenum target, GLenum pname, const GLfixed *params);$/;"	t
PFNGLTEXGENFOESPROC	GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLTEXGENFOESPROC) (GLenum coord, GLenum pname, GLfloat param);$/;"	t
PFNGLTEXGENFVOESPROC	GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLTEXGENFVOESPROC) (GLenum coord, GLenum pname, const GLfloat *params);$/;"	t
PFNGLTEXGENIOESPROC	GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLTEXGENIOESPROC) (GLenum coord, GLenum pname, GLint param);$/;"	t
PFNGLTEXGENIVOESPROC	GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLTEXGENIVOESPROC) (GLenum coord, GLenum pname, const GLint *params);$/;"	t
PFNGLTEXGENXOESPROC	GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLTEXGENXOESPROC) (GLenum coord, GLenum pname, GLfixed param);$/;"	t
PFNGLTEXGENXVOESPROC	GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLTEXGENXVOESPROC) (GLenum coord, GLenum pname, const GLfixed *params);$/;"	t
PFNGLTEXPARAMETERXOESPROC	GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLTEXPARAMETERXOESPROC) (GLenum target, GLenum pname, GLfixed param);$/;"	t
PFNGLTEXPARAMETERXVOESPROC	GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLTEXPARAMETERXVOESPROC) (GLenum target, GLenum pname, const GLfixed *params);$/;"	t
PFNGLTRANSLATEXOESPROC	GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLTRANSLATEXOESPROC) (GLfixed x, GLfixed y, GLfixed z);$/;"	t
PFNGLUNMAPBUFFEROESPROC	GLES/glext.h	/^typedef GLboolean (GL_APIENTRYP PFNGLUNMAPBUFFEROESPROC) (GLenum target);$/;"	t
PFNGLWEIGHTPOINTEROESPROC	GLES/glext.h	/^typedef void (GL_APIENTRYP PFNGLWEIGHTPOINTEROESPROC) (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	t
WIN32_LEAN_AND_MEAN	EGL/eglplatform.h	64;"	d
__eglMustCastToProperFunctionPointerType	EGL/egl.h	/^typedef void (*__eglMustCastToProperFunctionPointerType)(void);$/;"	t
__egl_h_	EGL/egl.h	30;"	d
__eglext_h_	EGL/eglext.h	2;"	d
__eglplatform_h_	EGL/eglplatform.h	2;"	d
__gl_h_	GLES/gl.h	2;"	d
__glext_h_	GLES/glext.h	2;"	d
__glplatform_h_	GLES/glplatform.h	2;"	d
__khrplatform_h_	KHR/khrplatform.h	2;"	d
__legacy_egl_h_	GLES/egl.h	8;"	d
eglBindAPI	EGL/egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglBindAPI(EGLenum api);$/;"	p	signature:(EGLenum api)
eglBindTexImage	EGL/egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglBindTexImage(EGLDisplay dpy, EGLSurface surface, EGLint buffer);$/;"	p	signature:(EGLDisplay dpy, EGLSurface surface, EGLint buffer)
eglChooseConfig	EGL/egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglChooseConfig(EGLDisplay dpy, const EGLint *attrib_list,$/;"	p	signature:(EGLDisplay dpy, const EGLint *attrib_list, EGLConfig *configs, EGLint config_size, EGLint *num_config)
eglCopyBuffers	EGL/egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglCopyBuffers(EGLDisplay dpy, EGLSurface surface,$/;"	p	signature:(EGLDisplay dpy, EGLSurface surface, EGLNativePixmapType target)
eglCreateContext	EGL/egl.h	/^EGLAPI EGLContext EGLAPIENTRY eglCreateContext(EGLDisplay dpy, EGLConfig config,$/;"	p	signature:(EGLDisplay dpy, EGLConfig config, EGLContext share_context, const EGLint *attrib_list)
eglCreateImageKHR	EGL/eglext.h	/^EGLAPI EGLImageKHR EGLAPIENTRY eglCreateImageKHR (EGLDisplay dpy, EGLContext ctx, EGLenum target, EGLClientBuffer buffer, const EGLint *attrib_list);$/;"	p	signature:(EGLDisplay dpy, EGLContext ctx, EGLenum target, EGLClientBuffer buffer, const EGLint *attrib_list)
eglCreatePbufferFromClientBuffer	EGL/egl.h	/^EGLAPI EGLSurface EGLAPIENTRY eglCreatePbufferFromClientBuffer($/;"	p	signature:( EGLDisplay dpy, EGLenum buftype, EGLClientBuffer buffer, EGLConfig config, const EGLint *attrib_list)
eglCreatePbufferSurface	EGL/egl.h	/^EGLAPI EGLSurface EGLAPIENTRY eglCreatePbufferSurface(EGLDisplay dpy, EGLConfig config,$/;"	p	signature:(EGLDisplay dpy, EGLConfig config, const EGLint *attrib_list)
eglCreatePixmapSurface	EGL/egl.h	/^EGLAPI EGLSurface EGLAPIENTRY eglCreatePixmapSurface(EGLDisplay dpy, EGLConfig config,$/;"	p	signature:(EGLDisplay dpy, EGLConfig config, EGLNativePixmapType pixmap, const EGLint *attrib_list)
eglCreateWindowSurface	EGL/egl.h	/^EGLAPI EGLSurface EGLAPIENTRY eglCreateWindowSurface(EGLDisplay dpy, EGLConfig config,$/;"	p	signature:(EGLDisplay dpy, EGLConfig config, EGLNativeWindowType win, const EGLint *attrib_list)
eglDestroyContext	EGL/egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglDestroyContext(EGLDisplay dpy, EGLContext ctx);$/;"	p	signature:(EGLDisplay dpy, EGLContext ctx)
eglDestroyImageKHR	EGL/eglext.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglDestroyImageKHR (EGLDisplay dpy, EGLImageKHR image);$/;"	p	signature:(EGLDisplay dpy, EGLImageKHR image)
eglDestroySurface	EGL/egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglDestroySurface(EGLDisplay dpy, EGLSurface surface);$/;"	p	signature:(EGLDisplay dpy, EGLSurface surface)
eglGetConfigAttrib	EGL/egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglGetConfigAttrib(EGLDisplay dpy, EGLConfig config,$/;"	p	signature:(EGLDisplay dpy, EGLConfig config, EGLint attribute, EGLint *value)
eglGetConfigs	EGL/egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglGetConfigs(EGLDisplay dpy, EGLConfig *configs,$/;"	p	signature:(EGLDisplay dpy, EGLConfig *configs, EGLint config_size, EGLint *num_config)
eglGetCurrentContext	EGL/egl.h	/^EGLAPI EGLContext EGLAPIENTRY eglGetCurrentContext(void);$/;"	p	signature:(void)
eglGetCurrentDisplay	EGL/egl.h	/^EGLAPI EGLDisplay EGLAPIENTRY eglGetCurrentDisplay(void);$/;"	p	signature:(void)
eglGetCurrentSurface	EGL/egl.h	/^EGLAPI EGLSurface EGLAPIENTRY eglGetCurrentSurface(EGLint readdraw);$/;"	p	signature:(EGLint readdraw)
eglGetDisplay	EGL/egl.h	/^EGLAPI EGLDisplay EGLAPIENTRY eglGetDisplay(EGLNativeDisplayType display_id);$/;"	p	signature:(EGLNativeDisplayType display_id)
eglGetError	EGL/egl.h	/^EGLAPI EGLint EGLAPIENTRY eglGetError(void);$/;"	p	signature:(void)
eglGetProcAddress	EGL/egl.h	/^       eglGetProcAddress(const char *procname);$/;"	p	signature:(const char *procname)
eglInitialize	EGL/egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglInitialize(EGLDisplay dpy, EGLint *major, EGLint *minor);$/;"	p	signature:(EGLDisplay dpy, EGLint *major, EGLint *minor)
eglLockSurfaceKHR	EGL/eglext.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglLockSurfaceKHR (EGLDisplay display, EGLSurface surface, const EGLint *attrib_list);$/;"	p	signature:(EGLDisplay display, EGLSurface surface, const EGLint *attrib_list)
eglMakeCurrent	EGL/egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglMakeCurrent(EGLDisplay dpy, EGLSurface draw,$/;"	p	signature:(EGLDisplay dpy, EGLSurface draw, EGLSurface read, EGLContext ctx)
eglQueryAPI	EGL/egl.h	/^EGLAPI EGLenum EGLAPIENTRY eglQueryAPI(void);$/;"	p	signature:(void)
eglQueryContext	EGL/egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglQueryContext(EGLDisplay dpy, EGLContext ctx,$/;"	p	signature:(EGLDisplay dpy, EGLContext ctx, EGLint attribute, EGLint *value)
eglQueryString	EGL/egl.h	/^EGLAPI const char * EGLAPIENTRY eglQueryString(EGLDisplay dpy, EGLint name);$/;"	p	signature:(EGLDisplay dpy, EGLint name)
eglQuerySurface	EGL/egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglQuerySurface(EGLDisplay dpy, EGLSurface surface,$/;"	p	signature:(EGLDisplay dpy, EGLSurface surface, EGLint attribute, EGLint *value)
eglReleaseTexImage	EGL/egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglReleaseTexImage(EGLDisplay dpy, EGLSurface surface, EGLint buffer);$/;"	p	signature:(EGLDisplay dpy, EGLSurface surface, EGLint buffer)
eglReleaseThread	EGL/egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglReleaseThread(void);$/;"	p	signature:(void)
eglSurfaceAttrib	EGL/egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglSurfaceAttrib(EGLDisplay dpy, EGLSurface surface,$/;"	p	signature:(EGLDisplay dpy, EGLSurface surface, EGLint attribute, EGLint value)
eglSwapBuffers	EGL/egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglSwapBuffers(EGLDisplay dpy, EGLSurface surface);$/;"	p	signature:(EGLDisplay dpy, EGLSurface surface)
eglSwapInterval	EGL/egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglSwapInterval(EGLDisplay dpy, EGLint interval);$/;"	p	signature:(EGLDisplay dpy, EGLint interval)
eglTerminate	EGL/egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglTerminate(EGLDisplay dpy);$/;"	p	signature:(EGLDisplay dpy)
eglUnlockSurfaceKHR	EGL/eglext.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglUnlockSurfaceKHR (EGLDisplay display, EGLSurface surface);$/;"	p	signature:(EGLDisplay display, EGLSurface surface)
eglWaitClient	EGL/egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglWaitClient(void);$/;"	p	signature:(void)
eglWaitGL	EGL/egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglWaitGL(void);$/;"	p	signature:(void)
eglWaitNative	EGL/egl.h	/^EGLAPI EGLBoolean EGLAPIENTRY eglWaitNative(EGLint engine);$/;"	p	signature:(EGLint engine)
glActiveTexture	GLES/gl.h	/^GL_API void GL_APIENTRY glActiveTexture (GLenum texture);$/;"	p	signature:(GLenum texture)
glAlphaFunc	GLES/gl.h	/^GL_API void GL_APIENTRY glAlphaFunc (GLenum func, GLclampf ref);$/;"	p	signature:(GLenum func, GLclampf ref)
glAlphaFuncx	GLES/gl.h	/^GL_API void GL_APIENTRY glAlphaFuncx (GLenum func, GLclampx ref);$/;"	p	signature:(GLenum func, GLclampx ref)
glAlphaFuncxOES	GLES/glext.h	/^GL_API void GL_APIENTRY glAlphaFuncxOES (GLenum func, GLclampx ref);$/;"	p	signature:(GLenum func, GLclampx ref)
glBindBuffer	GLES/gl.h	/^GL_API void GL_APIENTRY glBindBuffer (GLenum target, GLuint buffer);$/;"	p	signature:(GLenum target, GLuint buffer)
glBindFramebufferOES	GLES/glext.h	/^GL_API void GL_APIENTRY glBindFramebufferOES (GLenum target, GLuint framebuffer);$/;"	p	signature:(GLenum target, GLuint framebuffer)
glBindRenderbufferOES	GLES/glext.h	/^GL_API void GL_APIENTRY glBindRenderbufferOES (GLenum target, GLuint renderbuffer);$/;"	p	signature:(GLenum target, GLuint renderbuffer)
glBindTexture	GLES/gl.h	/^GL_API void GL_APIENTRY glBindTexture (GLenum target, GLuint texture);$/;"	p	signature:(GLenum target, GLuint texture)
glBlendEquationOES	GLES/glext.h	/^GL_API void GL_APIENTRY glBlendEquationOES (GLenum mode);$/;"	p	signature:(GLenum mode)
glBlendEquationSeparateOES	GLES/glext.h	/^GL_API void GL_APIENTRY glBlendEquationSeparateOES (GLenum modeRGB, GLenum modeAlpha);$/;"	p	signature:(GLenum modeRGB, GLenum modeAlpha)
glBlendFunc	GLES/gl.h	/^GL_API void GL_APIENTRY glBlendFunc (GLenum sfactor, GLenum dfactor);$/;"	p	signature:(GLenum sfactor, GLenum dfactor)
glBlendFuncSeparateOES	GLES/glext.h	/^GL_API void GL_APIENTRY glBlendFuncSeparateOES (GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);$/;"	p	signature:(GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha)
glBufferData	GLES/gl.h	/^GL_API void GL_APIENTRY glBufferData (GLenum target, GLsizeiptr size, const GLvoid *data, GLenum usage);$/;"	p	signature:(GLenum target, GLsizeiptr size, const GLvoid *data, GLenum usage)
glBufferSubData	GLES/gl.h	/^GL_API void GL_APIENTRY glBufferSubData (GLenum target, GLintptr offset, GLsizeiptr size, const GLvoid *data);$/;"	p	signature:(GLenum target, GLintptr offset, GLsizeiptr size, const GLvoid *data)
glCheckFramebufferStatusOES	GLES/glext.h	/^GL_API GLenum GL_APIENTRY glCheckFramebufferStatusOES (GLenum target);$/;"	p	signature:(GLenum target)
glClear	GLES/gl.h	/^GL_API void GL_APIENTRY glClear (GLbitfield mask);$/;"	p	signature:(GLbitfield mask)
glClearColor	GLES/gl.h	/^GL_API void GL_APIENTRY glClearColor (GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha);$/;"	p	signature:(GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha)
glClearColorx	GLES/gl.h	/^GL_API void GL_APIENTRY glClearColorx (GLclampx red, GLclampx green, GLclampx blue, GLclampx alpha);$/;"	p	signature:(GLclampx red, GLclampx green, GLclampx blue, GLclampx alpha)
glClearColorxOES	GLES/glext.h	/^GL_API void GL_APIENTRY glClearColorxOES (GLclampx red, GLclampx green, GLclampx blue, GLclampx alpha);$/;"	p	signature:(GLclampx red, GLclampx green, GLclampx blue, GLclampx alpha)
glClearDepthf	GLES/gl.h	/^GL_API void GL_APIENTRY glClearDepthf (GLclampf depth);$/;"	p	signature:(GLclampf depth)
glClearDepthfOES	GLES/glext.h	/^GL_API void GL_APIENTRY glClearDepthfOES (GLclampf depth);$/;"	p	signature:(GLclampf depth)
glClearDepthx	GLES/gl.h	/^GL_API void GL_APIENTRY glClearDepthx (GLclampx depth);$/;"	p	signature:(GLclampx depth)
glClearDepthxOES	GLES/glext.h	/^GL_API void GL_APIENTRY glClearDepthxOES (GLclampx depth);$/;"	p	signature:(GLclampx depth)
glClearStencil	GLES/gl.h	/^GL_API void GL_APIENTRY glClearStencil (GLint s);$/;"	p	signature:(GLint s)
glClientActiveTexture	GLES/gl.h	/^GL_API void GL_APIENTRY glClientActiveTexture (GLenum texture);$/;"	p	signature:(GLenum texture)
glClipPlanef	GLES/gl.h	/^GL_API void GL_APIENTRY glClipPlanef (GLenum plane, const GLfloat *equation);$/;"	p	signature:(GLenum plane, const GLfloat *equation)
glClipPlanefOES	GLES/glext.h	/^GL_API void GL_APIENTRY glClipPlanefOES (GLenum plane, const GLfloat *equation);$/;"	p	signature:(GLenum plane, const GLfloat *equation)
glClipPlanex	GLES/gl.h	/^GL_API void GL_APIENTRY glClipPlanex (GLenum plane, const GLfixed *equation);$/;"	p	signature:(GLenum plane, const GLfixed *equation)
glClipPlanexOES	GLES/glext.h	/^GL_API void GL_APIENTRY glClipPlanexOES (GLenum plane, const GLfixed *equation);$/;"	p	signature:(GLenum plane, const GLfixed *equation)
glColor4f	GLES/gl.h	/^GL_API void GL_APIENTRY glColor4f (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);$/;"	p	signature:(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha)
glColor4ub	GLES/gl.h	/^GL_API void GL_APIENTRY glColor4ub (GLubyte red, GLubyte green, GLubyte blue, GLubyte alpha);$/;"	p	signature:(GLubyte red, GLubyte green, GLubyte blue, GLubyte alpha)
glColor4x	GLES/gl.h	/^GL_API void GL_APIENTRY glColor4x (GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);$/;"	p	signature:(GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha)
glColor4xOES	GLES/glext.h	/^GL_API void GL_APIENTRY glColor4xOES (GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);$/;"	p	signature:(GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha)
glColorMask	GLES/gl.h	/^GL_API void GL_APIENTRY glColorMask (GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);$/;"	p	signature:(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha)
glColorPointer	GLES/gl.h	/^GL_API void GL_APIENTRY glColorPointer (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	p	signature:(GLint size, GLenum type, GLsizei stride, const GLvoid *pointer)
glCompressedTexImage2D	GLES/gl.h	/^GL_API void GL_APIENTRY glCompressedTexImage2D (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid *data);$/;"	p	signature:(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid *data)
glCompressedTexSubImage2D	GLES/gl.h	/^GL_API void GL_APIENTRY glCompressedTexSubImage2D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid *data);$/;"	p	signature:(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid *data)
glCopyTexImage2D	GLES/gl.h	/^GL_API void GL_APIENTRY glCopyTexImage2D (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);$/;"	p	signature:(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border)
glCopyTexSubImage2D	GLES/gl.h	/^GL_API void GL_APIENTRY glCopyTexSubImage2D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	p	signature:(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height)
glCullFace	GLES/gl.h	/^GL_API void GL_APIENTRY glCullFace (GLenum mode);$/;"	p	signature:(GLenum mode)
glCurrentPaletteMatrixOES	GLES/glext.h	/^GL_API void GL_APIENTRY glCurrentPaletteMatrixOES (GLuint matrixpaletteindex);$/;"	p	signature:(GLuint matrixpaletteindex)
glDeleteBuffers	GLES/gl.h	/^GL_API void GL_APIENTRY glDeleteBuffers (GLsizei n, const GLuint *buffers);$/;"	p	signature:(GLsizei n, const GLuint *buffers)
glDeleteFramebuffersOES	GLES/glext.h	/^GL_API void GL_APIENTRY glDeleteFramebuffersOES (GLsizei n, const GLuint* framebuffers);$/;"	p	signature:(GLsizei n, const GLuint* framebuffers)
glDeleteRenderbuffersOES	GLES/glext.h	/^GL_API void GL_APIENTRY glDeleteRenderbuffersOES (GLsizei n, const GLuint* renderbuffers);$/;"	p	signature:(GLsizei n, const GLuint* renderbuffers)
glDeleteTextures	GLES/gl.h	/^GL_API void GL_APIENTRY glDeleteTextures (GLsizei n, const GLuint *textures);$/;"	p	signature:(GLsizei n, const GLuint *textures)
glDepthFunc	GLES/gl.h	/^GL_API void GL_APIENTRY glDepthFunc (GLenum func);$/;"	p	signature:(GLenum func)
glDepthMask	GLES/gl.h	/^GL_API void GL_APIENTRY glDepthMask (GLboolean flag);$/;"	p	signature:(GLboolean flag)
glDepthRangef	GLES/gl.h	/^GL_API void GL_APIENTRY glDepthRangef (GLclampf zNear, GLclampf zFar);$/;"	p	signature:(GLclampf zNear, GLclampf zFar)
glDepthRangefOES	GLES/glext.h	/^GL_API void GL_APIENTRY glDepthRangefOES (GLclampf zNear, GLclampf zFar);$/;"	p	signature:(GLclampf zNear, GLclampf zFar)
glDepthRangex	GLES/gl.h	/^GL_API void GL_APIENTRY glDepthRangex (GLclampx zNear, GLclampx zFar);$/;"	p	signature:(GLclampx zNear, GLclampx zFar)
glDepthRangexOES	GLES/glext.h	/^GL_API void GL_APIENTRY glDepthRangexOES (GLclampx zNear, GLclampx zFar);$/;"	p	signature:(GLclampx zNear, GLclampx zFar)
glDisable	GLES/gl.h	/^GL_API void GL_APIENTRY glDisable (GLenum cap);$/;"	p	signature:(GLenum cap)
glDisableClientState	GLES/gl.h	/^GL_API void GL_APIENTRY glDisableClientState (GLenum array);$/;"	p	signature:(GLenum array)
glDrawArrays	GLES/gl.h	/^GL_API void GL_APIENTRY glDrawArrays (GLenum mode, GLint first, GLsizei count);$/;"	p	signature:(GLenum mode, GLint first, GLsizei count)
glDrawElements	GLES/gl.h	/^GL_API void GL_APIENTRY glDrawElements (GLenum mode, GLsizei count, GLenum type, const GLvoid *indices);$/;"	p	signature:(GLenum mode, GLsizei count, GLenum type, const GLvoid *indices)
glDrawTexfOES	GLES/glext.h	/^GL_API void GL_APIENTRY glDrawTexfOES (GLfloat x, GLfloat y, GLfloat z, GLfloat width, GLfloat height);$/;"	p	signature:(GLfloat x, GLfloat y, GLfloat z, GLfloat width, GLfloat height)
glDrawTexfvOES	GLES/glext.h	/^GL_API void GL_APIENTRY glDrawTexfvOES (const GLfloat *coords);$/;"	p	signature:(const GLfloat *coords)
glDrawTexiOES	GLES/glext.h	/^GL_API void GL_APIENTRY glDrawTexiOES (GLint x, GLint y, GLint z, GLint width, GLint height);$/;"	p	signature:(GLint x, GLint y, GLint z, GLint width, GLint height)
glDrawTexivOES	GLES/glext.h	/^GL_API void GL_APIENTRY glDrawTexivOES (const GLint *coords);$/;"	p	signature:(const GLint *coords)
glDrawTexsOES	GLES/glext.h	/^GL_API void GL_APIENTRY glDrawTexsOES (GLshort x, GLshort y, GLshort z, GLshort width, GLshort height);$/;"	p	signature:(GLshort x, GLshort y, GLshort z, GLshort width, GLshort height)
glDrawTexsvOES	GLES/glext.h	/^GL_API void GL_APIENTRY glDrawTexsvOES (const GLshort *coords);$/;"	p	signature:(const GLshort *coords)
glDrawTexxOES	GLES/glext.h	/^GL_API void GL_APIENTRY glDrawTexxOES (GLfixed x, GLfixed y, GLfixed z, GLfixed width, GLfixed height);$/;"	p	signature:(GLfixed x, GLfixed y, GLfixed z, GLfixed width, GLfixed height)
glDrawTexxvOES	GLES/glext.h	/^GL_API void GL_APIENTRY glDrawTexxvOES (const GLfixed *coords);$/;"	p	signature:(const GLfixed *coords)
glEGLImageTargetRenderbufferStorageOES	GLES/glext.h	/^GL_API void GL_APIENTRY glEGLImageTargetRenderbufferStorageOES (GLenum target, GLeglImageOES image);$/;"	p	signature:(GLenum target, GLeglImageOES image)
glEGLImageTargetTexture2DOES	GLES/glext.h	/^GL_API void GL_APIENTRY glEGLImageTargetTexture2DOES (GLenum target, GLeglImageOES image);$/;"	p	signature:(GLenum target, GLeglImageOES image)
glEnable	GLES/gl.h	/^GL_API void GL_APIENTRY glEnable (GLenum cap);$/;"	p	signature:(GLenum cap)
glEnableClientState	GLES/gl.h	/^GL_API void GL_APIENTRY glEnableClientState (GLenum array);$/;"	p	signature:(GLenum array)
glFinish	GLES/gl.h	/^GL_API void GL_APIENTRY glFinish (void);$/;"	p	signature:(void)
glFlush	GLES/gl.h	/^GL_API void GL_APIENTRY glFlush (void);$/;"	p	signature:(void)
glFogf	GLES/gl.h	/^GL_API void GL_APIENTRY glFogf (GLenum pname, GLfloat param);$/;"	p	signature:(GLenum pname, GLfloat param)
glFogfv	GLES/gl.h	/^GL_API void GL_APIENTRY glFogfv (GLenum pname, const GLfloat *params);$/;"	p	signature:(GLenum pname, const GLfloat *params)
glFogx	GLES/gl.h	/^GL_API void GL_APIENTRY glFogx (GLenum pname, GLfixed param);$/;"	p	signature:(GLenum pname, GLfixed param)
glFogxOES	GLES/glext.h	/^GL_API void GL_APIENTRY glFogxOES (GLenum pname, GLfixed param);$/;"	p	signature:(GLenum pname, GLfixed param)
glFogxv	GLES/gl.h	/^GL_API void GL_APIENTRY glFogxv (GLenum pname, const GLfixed *params);$/;"	p	signature:(GLenum pname, const GLfixed *params)
glFogxvOES	GLES/glext.h	/^GL_API void GL_APIENTRY glFogxvOES (GLenum pname, const GLfixed *params);$/;"	p	signature:(GLenum pname, const GLfixed *params)
glFramebufferRenderbufferOES	GLES/glext.h	/^GL_API void GL_APIENTRY glFramebufferRenderbufferOES (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);$/;"	p	signature:(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer)
glFramebufferTexture2DOES	GLES/glext.h	/^GL_API void GL_APIENTRY glFramebufferTexture2DOES (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);$/;"	p	signature:(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level)
glFrontFace	GLES/gl.h	/^GL_API void GL_APIENTRY glFrontFace (GLenum mode);$/;"	p	signature:(GLenum mode)
glFrustumf	GLES/gl.h	/^GL_API void GL_APIENTRY glFrustumf (GLfloat left, GLfloat right, GLfloat bottom, GLfloat top, GLfloat zNear, GLfloat zFar);$/;"	p	signature:(GLfloat left, GLfloat right, GLfloat bottom, GLfloat top, GLfloat zNear, GLfloat zFar)
glFrustumfOES	GLES/glext.h	/^GL_API void GL_APIENTRY glFrustumfOES (GLfloat left, GLfloat right, GLfloat bottom, GLfloat top, GLfloat zNear, GLfloat zFar);$/;"	p	signature:(GLfloat left, GLfloat right, GLfloat bottom, GLfloat top, GLfloat zNear, GLfloat zFar)
glFrustumx	GLES/gl.h	/^GL_API void GL_APIENTRY glFrustumx (GLfixed left, GLfixed right, GLfixed bottom, GLfixed top, GLfixed zNear, GLfixed zFar);$/;"	p	signature:(GLfixed left, GLfixed right, GLfixed bottom, GLfixed top, GLfixed zNear, GLfixed zFar)
glFrustumxOES	GLES/glext.h	/^GL_API void GL_APIENTRY glFrustumxOES (GLfixed left, GLfixed right, GLfixed bottom, GLfixed top, GLfixed zNear, GLfixed zFar);$/;"	p	signature:(GLfixed left, GLfixed right, GLfixed bottom, GLfixed top, GLfixed zNear, GLfixed zFar)
glGenBuffers	GLES/gl.h	/^GL_API void GL_APIENTRY glGenBuffers (GLsizei n, GLuint *buffers);$/;"	p	signature:(GLsizei n, GLuint *buffers)
glGenFramebuffersOES	GLES/glext.h	/^GL_API void GL_APIENTRY glGenFramebuffersOES (GLsizei n, GLuint* framebuffers);$/;"	p	signature:(GLsizei n, GLuint* framebuffers)
glGenRenderbuffersOES	GLES/glext.h	/^GL_API void GL_APIENTRY glGenRenderbuffersOES (GLsizei n, GLuint* renderbuffers);$/;"	p	signature:(GLsizei n, GLuint* renderbuffers)
glGenTextures	GLES/gl.h	/^GL_API void GL_APIENTRY glGenTextures (GLsizei n, GLuint *textures);$/;"	p	signature:(GLsizei n, GLuint *textures)
glGenerateMipmapOES	GLES/glext.h	/^GL_API void GL_APIENTRY glGenerateMipmapOES (GLenum target);$/;"	p	signature:(GLenum target)
glGetBooleanv	GLES/gl.h	/^GL_API void GL_APIENTRY glGetBooleanv (GLenum pname, GLboolean *params);$/;"	p	signature:(GLenum pname, GLboolean *params)
glGetBufferParameteriv	GLES/gl.h	/^GL_API void GL_APIENTRY glGetBufferParameteriv (GLenum target, GLenum pname, GLint *params);$/;"	p	signature:(GLenum target, GLenum pname, GLint *params)
glGetBufferPointervOES	GLES/glext.h	/^GL_API void GL_APIENTRY glGetBufferPointervOES (GLenum target, GLenum pname, void** params);$/;"	p	signature:(GLenum target, GLenum pname, void** params)
glGetClipPlanef	GLES/gl.h	/^GL_API void GL_APIENTRY glGetClipPlanef (GLenum pname, GLfloat eqn[4]);$/;"	p	signature:(GLenum pname, GLfloat eqn[4])
glGetClipPlanefOES	GLES/glext.h	/^GL_API void GL_APIENTRY glGetClipPlanefOES (GLenum pname, GLfloat eqn[4]);$/;"	p	signature:(GLenum pname, GLfloat eqn[4])
glGetClipPlanex	GLES/gl.h	/^GL_API void GL_APIENTRY glGetClipPlanex (GLenum pname, GLfixed eqn[4]);$/;"	p	signature:(GLenum pname, GLfixed eqn[4])
glGetClipPlanexOES	GLES/glext.h	/^GL_API void GL_APIENTRY glGetClipPlanexOES (GLenum pname, GLfixed eqn[4]);$/;"	p	signature:(GLenum pname, GLfixed eqn[4])
glGetError	GLES/gl.h	/^GL_API GLenum GL_APIENTRY glGetError (void);$/;"	p	signature:(void)
glGetFixedv	GLES/gl.h	/^GL_API void GL_APIENTRY glGetFixedv (GLenum pname, GLfixed *params);$/;"	p	signature:(GLenum pname, GLfixed *params)
glGetFixedvOES	GLES/glext.h	/^GL_API void GL_APIENTRY glGetFixedvOES (GLenum pname, GLfixed *params);$/;"	p	signature:(GLenum pname, GLfixed *params)
glGetFloatv	GLES/gl.h	/^GL_API void GL_APIENTRY glGetFloatv (GLenum pname, GLfloat *params);$/;"	p	signature:(GLenum pname, GLfloat *params)
glGetFramebufferAttachmentParameterivOES	GLES/glext.h	/^GL_API void GL_APIENTRY glGetFramebufferAttachmentParameterivOES (GLenum target, GLenum attachment, GLenum pname, GLint* params);$/;"	p	signature:(GLenum target, GLenum attachment, GLenum pname, GLint* params)
glGetIntegerv	GLES/gl.h	/^GL_API void GL_APIENTRY glGetIntegerv (GLenum pname, GLint *params);$/;"	p	signature:(GLenum pname, GLint *params)
glGetLightfv	GLES/gl.h	/^GL_API void GL_APIENTRY glGetLightfv (GLenum light, GLenum pname, GLfloat *params);$/;"	p	signature:(GLenum light, GLenum pname, GLfloat *params)
glGetLightxv	GLES/gl.h	/^GL_API void GL_APIENTRY glGetLightxv (GLenum light, GLenum pname, GLfixed *params);$/;"	p	signature:(GLenum light, GLenum pname, GLfixed *params)
glGetLightxvOES	GLES/glext.h	/^GL_API void GL_APIENTRY glGetLightxvOES (GLenum light, GLenum pname, GLfixed *params);$/;"	p	signature:(GLenum light, GLenum pname, GLfixed *params)
glGetMaterialfv	GLES/gl.h	/^GL_API void GL_APIENTRY glGetMaterialfv (GLenum face, GLenum pname, GLfloat *params);$/;"	p	signature:(GLenum face, GLenum pname, GLfloat *params)
glGetMaterialxv	GLES/gl.h	/^GL_API void GL_APIENTRY glGetMaterialxv (GLenum face, GLenum pname, GLfixed *params);$/;"	p	signature:(GLenum face, GLenum pname, GLfixed *params)
glGetMaterialxvOES	GLES/glext.h	/^GL_API void GL_APIENTRY glGetMaterialxvOES (GLenum face, GLenum pname, GLfixed *params);$/;"	p	signature:(GLenum face, GLenum pname, GLfixed *params)
glGetPointerv	GLES/gl.h	/^GL_API void GL_APIENTRY glGetPointerv (GLenum pname, void **params);$/;"	p	signature:(GLenum pname, void **params)
glGetRenderbufferParameterivOES	GLES/glext.h	/^GL_API void GL_APIENTRY glGetRenderbufferParameterivOES (GLenum target, GLenum pname, GLint* params);$/;"	p	signature:(GLenum target, GLenum pname, GLint* params)
glGetString	GLES/gl.h	/^GL_API const GLubyte * GL_APIENTRY glGetString (GLenum name);$/;"	p	signature:(GLenum name)
glGetTexEnvfv	GLES/gl.h	/^GL_API void GL_APIENTRY glGetTexEnvfv (GLenum env, GLenum pname, GLfloat *params);$/;"	p	signature:(GLenum env, GLenum pname, GLfloat *params)
glGetTexEnviv	GLES/gl.h	/^GL_API void GL_APIENTRY glGetTexEnviv (GLenum env, GLenum pname, GLint *params);$/;"	p	signature:(GLenum env, GLenum pname, GLint *params)
glGetTexEnvxv	GLES/gl.h	/^GL_API void GL_APIENTRY glGetTexEnvxv (GLenum env, GLenum pname, GLfixed *params);$/;"	p	signature:(GLenum env, GLenum pname, GLfixed *params)
glGetTexEnvxvOES	GLES/glext.h	/^GL_API void GL_APIENTRY glGetTexEnvxvOES (GLenum env, GLenum pname, GLfixed *params);$/;"	p	signature:(GLenum env, GLenum pname, GLfixed *params)
glGetTexGenfvOES	GLES/glext.h	/^GL_API void GL_APIENTRY glGetTexGenfvOES (GLenum coord, GLenum pname, GLfloat *params);$/;"	p	signature:(GLenum coord, GLenum pname, GLfloat *params)
glGetTexGenivOES	GLES/glext.h	/^GL_API void GL_APIENTRY glGetTexGenivOES (GLenum coord, GLenum pname, GLint *params);$/;"	p	signature:(GLenum coord, GLenum pname, GLint *params)
glGetTexGenxvOES	GLES/glext.h	/^GL_API void GL_APIENTRY glGetTexGenxvOES (GLenum coord, GLenum pname, GLfixed *params);$/;"	p	signature:(GLenum coord, GLenum pname, GLfixed *params)
glGetTexParameterfv	GLES/gl.h	/^GL_API void GL_APIENTRY glGetTexParameterfv (GLenum target, GLenum pname, GLfloat *params);$/;"	p	signature:(GLenum target, GLenum pname, GLfloat *params)
glGetTexParameteriv	GLES/gl.h	/^GL_API void GL_APIENTRY glGetTexParameteriv (GLenum target, GLenum pname, GLint *params);$/;"	p	signature:(GLenum target, GLenum pname, GLint *params)
glGetTexParameterxv	GLES/gl.h	/^GL_API void GL_APIENTRY glGetTexParameterxv (GLenum target, GLenum pname, GLfixed *params);$/;"	p	signature:(GLenum target, GLenum pname, GLfixed *params)
glGetTexParameterxvOES	GLES/glext.h	/^GL_API void GL_APIENTRY glGetTexParameterxvOES (GLenum target, GLenum pname, GLfixed *params);$/;"	p	signature:(GLenum target, GLenum pname, GLfixed *params)
glHint	GLES/gl.h	/^GL_API void GL_APIENTRY glHint (GLenum target, GLenum mode);$/;"	p	signature:(GLenum target, GLenum mode)
glIsBuffer	GLES/gl.h	/^GL_API GLboolean GL_APIENTRY glIsBuffer (GLuint buffer);$/;"	p	signature:(GLuint buffer)
glIsEnabled	GLES/gl.h	/^GL_API GLboolean GL_APIENTRY glIsEnabled (GLenum cap);$/;"	p	signature:(GLenum cap)
glIsFramebufferOES	GLES/glext.h	/^GL_API GLboolean GL_APIENTRY glIsFramebufferOES (GLuint framebuffer);$/;"	p	signature:(GLuint framebuffer)
glIsRenderbufferOES	GLES/glext.h	/^GL_API GLboolean GL_APIENTRY glIsRenderbufferOES (GLuint renderbuffer);$/;"	p	signature:(GLuint renderbuffer)
glIsTexture	GLES/gl.h	/^GL_API GLboolean GL_APIENTRY glIsTexture (GLuint texture);$/;"	p	signature:(GLuint texture)
glLightModelf	GLES/gl.h	/^GL_API void GL_APIENTRY glLightModelf (GLenum pname, GLfloat param);$/;"	p	signature:(GLenum pname, GLfloat param)
glLightModelfv	GLES/gl.h	/^GL_API void GL_APIENTRY glLightModelfv (GLenum pname, const GLfloat *params);$/;"	p	signature:(GLenum pname, const GLfloat *params)
glLightModelx	GLES/gl.h	/^GL_API void GL_APIENTRY glLightModelx (GLenum pname, GLfixed param);$/;"	p	signature:(GLenum pname, GLfixed param)
glLightModelxOES	GLES/glext.h	/^GL_API void GL_APIENTRY glLightModelxOES (GLenum pname, GLfixed param);$/;"	p	signature:(GLenum pname, GLfixed param)
glLightModelxv	GLES/gl.h	/^GL_API void GL_APIENTRY glLightModelxv (GLenum pname, const GLfixed *params);$/;"	p	signature:(GLenum pname, const GLfixed *params)
glLightModelxvOES	GLES/glext.h	/^GL_API void GL_APIENTRY glLightModelxvOES (GLenum pname, const GLfixed *params);$/;"	p	signature:(GLenum pname, const GLfixed *params)
glLightf	GLES/gl.h	/^GL_API void GL_APIENTRY glLightf (GLenum light, GLenum pname, GLfloat param);$/;"	p	signature:(GLenum light, GLenum pname, GLfloat param)
glLightfv	GLES/gl.h	/^GL_API void GL_APIENTRY glLightfv (GLenum light, GLenum pname, const GLfloat *params);$/;"	p	signature:(GLenum light, GLenum pname, const GLfloat *params)
glLightx	GLES/gl.h	/^GL_API void GL_APIENTRY glLightx (GLenum light, GLenum pname, GLfixed param);$/;"	p	signature:(GLenum light, GLenum pname, GLfixed param)
glLightxOES	GLES/glext.h	/^GL_API void GL_APIENTRY glLightxOES (GLenum light, GLenum pname, GLfixed param);$/;"	p	signature:(GLenum light, GLenum pname, GLfixed param)
glLightxv	GLES/gl.h	/^GL_API void GL_APIENTRY glLightxv (GLenum light, GLenum pname, const GLfixed *params);$/;"	p	signature:(GLenum light, GLenum pname, const GLfixed *params)
glLightxvOES	GLES/glext.h	/^GL_API void GL_APIENTRY glLightxvOES (GLenum light, GLenum pname, const GLfixed *params);$/;"	p	signature:(GLenum light, GLenum pname, const GLfixed *params)
glLineWidth	GLES/gl.h	/^GL_API void GL_APIENTRY glLineWidth (GLfloat width);$/;"	p	signature:(GLfloat width)
glLineWidthx	GLES/gl.h	/^GL_API void GL_APIENTRY glLineWidthx (GLfixed width);$/;"	p	signature:(GLfixed width)
glLineWidthxOES	GLES/glext.h	/^GL_API void GL_APIENTRY glLineWidthxOES (GLfixed width);$/;"	p	signature:(GLfixed width)
glLoadIdentity	GLES/gl.h	/^GL_API void GL_APIENTRY glLoadIdentity (void);$/;"	p	signature:(void)
glLoadMatrixf	GLES/gl.h	/^GL_API void GL_APIENTRY glLoadMatrixf (const GLfloat *m);$/;"	p	signature:(const GLfloat *m)
glLoadMatrixx	GLES/gl.h	/^GL_API void GL_APIENTRY glLoadMatrixx (const GLfixed *m);$/;"	p	signature:(const GLfixed *m)
glLoadMatrixxOES	GLES/glext.h	/^GL_API void GL_APIENTRY glLoadMatrixxOES (const GLfixed *m);$/;"	p	signature:(const GLfixed *m)
glLoadPaletteFromModelViewMatrixOES	GLES/glext.h	/^GL_API void GL_APIENTRY glLoadPaletteFromModelViewMatrixOES (void);$/;"	p	signature:(void)
glLogicOp	GLES/gl.h	/^GL_API void GL_APIENTRY glLogicOp (GLenum opcode);$/;"	p	signature:(GLenum opcode)
glMapBufferOES	GLES/glext.h	/^GL_API void* GL_APIENTRY glMapBufferOES (GLenum target, GLenum access);$/;"	p	signature:(GLenum target, GLenum access)
glMaterialf	GLES/gl.h	/^GL_API void GL_APIENTRY glMaterialf (GLenum face, GLenum pname, GLfloat param);$/;"	p	signature:(GLenum face, GLenum pname, GLfloat param)
glMaterialfv	GLES/gl.h	/^GL_API void GL_APIENTRY glMaterialfv (GLenum face, GLenum pname, const GLfloat *params);$/;"	p	signature:(GLenum face, GLenum pname, const GLfloat *params)
glMaterialx	GLES/gl.h	/^GL_API void GL_APIENTRY glMaterialx (GLenum face, GLenum pname, GLfixed param);$/;"	p	signature:(GLenum face, GLenum pname, GLfixed param)
glMaterialxOES	GLES/glext.h	/^GL_API void GL_APIENTRY glMaterialxOES (GLenum face, GLenum pname, GLfixed param);$/;"	p	signature:(GLenum face, GLenum pname, GLfixed param)
glMaterialxv	GLES/gl.h	/^GL_API void GL_APIENTRY glMaterialxv (GLenum face, GLenum pname, const GLfixed *params);$/;"	p	signature:(GLenum face, GLenum pname, const GLfixed *params)
glMaterialxvOES	GLES/glext.h	/^GL_API void GL_APIENTRY glMaterialxvOES (GLenum face, GLenum pname, const GLfixed *params);$/;"	p	signature:(GLenum face, GLenum pname, const GLfixed *params)
glMatrixIndexPointerOES	GLES/glext.h	/^GL_API void GL_APIENTRY glMatrixIndexPointerOES (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	p	signature:(GLint size, GLenum type, GLsizei stride, const GLvoid *pointer)
glMatrixMode	GLES/gl.h	/^GL_API void GL_APIENTRY glMatrixMode (GLenum mode);$/;"	p	signature:(GLenum mode)
glMultMatrixf	GLES/gl.h	/^GL_API void GL_APIENTRY glMultMatrixf (const GLfloat *m);$/;"	p	signature:(const GLfloat *m)
glMultMatrixx	GLES/gl.h	/^GL_API void GL_APIENTRY glMultMatrixx (const GLfixed *m);$/;"	p	signature:(const GLfixed *m)
glMultMatrixxOES	GLES/glext.h	/^GL_API void GL_APIENTRY glMultMatrixxOES (const GLfixed *m);$/;"	p	signature:(const GLfixed *m)
glMultiTexCoord4f	GLES/gl.h	/^GL_API void GL_APIENTRY glMultiTexCoord4f (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);$/;"	p	signature:(GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q)
glMultiTexCoord4x	GLES/gl.h	/^GL_API void GL_APIENTRY glMultiTexCoord4x (GLenum target, GLfixed s, GLfixed t, GLfixed r, GLfixed q);$/;"	p	signature:(GLenum target, GLfixed s, GLfixed t, GLfixed r, GLfixed q)
glMultiTexCoord4xOES	GLES/glext.h	/^GL_API void GL_APIENTRY glMultiTexCoord4xOES (GLenum target, GLfixed s, GLfixed t, GLfixed r, GLfixed q);$/;"	p	signature:(GLenum target, GLfixed s, GLfixed t, GLfixed r, GLfixed q)
glNormal3f	GLES/gl.h	/^GL_API void GL_APIENTRY glNormal3f (GLfloat nx, GLfloat ny, GLfloat nz);$/;"	p	signature:(GLfloat nx, GLfloat ny, GLfloat nz)
glNormal3x	GLES/gl.h	/^GL_API void GL_APIENTRY glNormal3x (GLfixed nx, GLfixed ny, GLfixed nz);$/;"	p	signature:(GLfixed nx, GLfixed ny, GLfixed nz)
glNormal3xOES	GLES/glext.h	/^GL_API void GL_APIENTRY glNormal3xOES (GLfixed nx, GLfixed ny, GLfixed nz);$/;"	p	signature:(GLfixed nx, GLfixed ny, GLfixed nz)
glNormalPointer	GLES/gl.h	/^GL_API void GL_APIENTRY glNormalPointer (GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	p	signature:(GLenum type, GLsizei stride, const GLvoid *pointer)
glOrthof	GLES/gl.h	/^GL_API void GL_APIENTRY glOrthof (GLfloat left, GLfloat right, GLfloat bottom, GLfloat top, GLfloat zNear, GLfloat zFar);$/;"	p	signature:(GLfloat left, GLfloat right, GLfloat bottom, GLfloat top, GLfloat zNear, GLfloat zFar)
glOrthofOES	GLES/glext.h	/^GL_API void GL_APIENTRY glOrthofOES (GLfloat left, GLfloat right, GLfloat bottom, GLfloat top, GLfloat zNear, GLfloat zFar);$/;"	p	signature:(GLfloat left, GLfloat right, GLfloat bottom, GLfloat top, GLfloat zNear, GLfloat zFar)
glOrthox	GLES/gl.h	/^GL_API void GL_APIENTRY glOrthox (GLfixed left, GLfixed right, GLfixed bottom, GLfixed top, GLfixed zNear, GLfixed zFar);$/;"	p	signature:(GLfixed left, GLfixed right, GLfixed bottom, GLfixed top, GLfixed zNear, GLfixed zFar)
glOrthoxOES	GLES/glext.h	/^GL_API void GL_APIENTRY glOrthoxOES (GLfixed left, GLfixed right, GLfixed bottom, GLfixed top, GLfixed zNear, GLfixed zFar);$/;"	p	signature:(GLfixed left, GLfixed right, GLfixed bottom, GLfixed top, GLfixed zNear, GLfixed zFar)
glPixelStorei	GLES/gl.h	/^GL_API void GL_APIENTRY glPixelStorei (GLenum pname, GLint param);$/;"	p	signature:(GLenum pname, GLint param)
glPointParameterf	GLES/gl.h	/^GL_API void GL_APIENTRY glPointParameterf (GLenum pname, GLfloat param);$/;"	p	signature:(GLenum pname, GLfloat param)
glPointParameterfv	GLES/gl.h	/^GL_API void GL_APIENTRY glPointParameterfv (GLenum pname, const GLfloat *params);$/;"	p	signature:(GLenum pname, const GLfloat *params)
glPointParameterx	GLES/gl.h	/^GL_API void GL_APIENTRY glPointParameterx (GLenum pname, GLfixed param);$/;"	p	signature:(GLenum pname, GLfixed param)
glPointParameterxOES	GLES/glext.h	/^GL_API void GL_APIENTRY glPointParameterxOES (GLenum pname, GLfixed param);$/;"	p	signature:(GLenum pname, GLfixed param)
glPointParameterxv	GLES/gl.h	/^GL_API void GL_APIENTRY glPointParameterxv (GLenum pname, const GLfixed *params);$/;"	p	signature:(GLenum pname, const GLfixed *params)
glPointParameterxvOES	GLES/glext.h	/^GL_API void GL_APIENTRY glPointParameterxvOES (GLenum pname, const GLfixed *params);$/;"	p	signature:(GLenum pname, const GLfixed *params)
glPointSize	GLES/gl.h	/^GL_API void GL_APIENTRY glPointSize (GLfloat size);$/;"	p	signature:(GLfloat size)
glPointSizePointerOES	GLES/gl.h	/^GL_API void GL_APIENTRY glPointSizePointerOES (GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	p	signature:(GLenum type, GLsizei stride, const GLvoid *pointer)
glPointSizex	GLES/gl.h	/^GL_API void GL_APIENTRY glPointSizex (GLfixed size);$/;"	p	signature:(GLfixed size)
glPointSizexOES	GLES/glext.h	/^GL_API void GL_APIENTRY glPointSizexOES (GLfixed size);$/;"	p	signature:(GLfixed size)
glPolygonOffset	GLES/gl.h	/^GL_API void GL_APIENTRY glPolygonOffset (GLfloat factor, GLfloat units);$/;"	p	signature:(GLfloat factor, GLfloat units)
glPolygonOffsetx	GLES/gl.h	/^GL_API void GL_APIENTRY glPolygonOffsetx (GLfixed factor, GLfixed units);$/;"	p	signature:(GLfixed factor, GLfixed units)
glPolygonOffsetxOES	GLES/glext.h	/^GL_API void GL_APIENTRY glPolygonOffsetxOES (GLfixed factor, GLfixed units);$/;"	p	signature:(GLfixed factor, GLfixed units)
glPopMatrix	GLES/gl.h	/^GL_API void GL_APIENTRY glPopMatrix (void);$/;"	p	signature:(void)
glPushMatrix	GLES/gl.h	/^GL_API void GL_APIENTRY glPushMatrix (void);$/;"	p	signature:(void)
glQueryMatrixxOES	GLES/glext.h	/^GL_API GLbitfield GL_APIENTRY glQueryMatrixxOES (GLfixed mantissa[16], GLint exponent[16]);$/;"	p	signature:(GLfixed mantissa[16], GLint exponent[16])
glReadPixels	GLES/gl.h	/^GL_API void GL_APIENTRY glReadPixels (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid *pixels);$/;"	p	signature:(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid *pixels)
glRenderbufferStorageOES	GLES/glext.h	/^GL_API void GL_APIENTRY glRenderbufferStorageOES (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);$/;"	p	signature:(GLenum target, GLenum internalformat, GLsizei width, GLsizei height)
glRotatef	GLES/gl.h	/^GL_API void GL_APIENTRY glRotatef (GLfloat angle, GLfloat x, GLfloat y, GLfloat z);$/;"	p	signature:(GLfloat angle, GLfloat x, GLfloat y, GLfloat z)
glRotatex	GLES/gl.h	/^GL_API void GL_APIENTRY glRotatex (GLfixed angle, GLfixed x, GLfixed y, GLfixed z);$/;"	p	signature:(GLfixed angle, GLfixed x, GLfixed y, GLfixed z)
glRotatexOES	GLES/glext.h	/^GL_API void GL_APIENTRY glRotatexOES (GLfixed angle, GLfixed x, GLfixed y, GLfixed z);$/;"	p	signature:(GLfixed angle, GLfixed x, GLfixed y, GLfixed z)
glSampleCoverage	GLES/gl.h	/^GL_API void GL_APIENTRY glSampleCoverage (GLclampf value, GLboolean invert);$/;"	p	signature:(GLclampf value, GLboolean invert)
glSampleCoveragex	GLES/gl.h	/^GL_API void GL_APIENTRY glSampleCoveragex (GLclampx value, GLboolean invert);$/;"	p	signature:(GLclampx value, GLboolean invert)
glSampleCoveragexOES	GLES/glext.h	/^GL_API void GL_APIENTRY glSampleCoveragexOES (GLclampx value, GLboolean invert);$/;"	p	signature:(GLclampx value, GLboolean invert)
glScalef	GLES/gl.h	/^GL_API void GL_APIENTRY glScalef (GLfloat x, GLfloat y, GLfloat z);$/;"	p	signature:(GLfloat x, GLfloat y, GLfloat z)
glScalex	GLES/gl.h	/^GL_API void GL_APIENTRY glScalex (GLfixed x, GLfixed y, GLfixed z);$/;"	p	signature:(GLfixed x, GLfixed y, GLfixed z)
glScalexOES	GLES/glext.h	/^GL_API void GL_APIENTRY glScalexOES (GLfixed x, GLfixed y, GLfixed z);$/;"	p	signature:(GLfixed x, GLfixed y, GLfixed z)
glScissor	GLES/gl.h	/^GL_API void GL_APIENTRY glScissor (GLint x, GLint y, GLsizei width, GLsizei height);$/;"	p	signature:(GLint x, GLint y, GLsizei width, GLsizei height)
glShadeModel	GLES/gl.h	/^GL_API void GL_APIENTRY glShadeModel (GLenum mode);$/;"	p	signature:(GLenum mode)
glStencilFunc	GLES/gl.h	/^GL_API void GL_APIENTRY glStencilFunc (GLenum func, GLint ref, GLuint mask);$/;"	p	signature:(GLenum func, GLint ref, GLuint mask)
glStencilMask	GLES/gl.h	/^GL_API void GL_APIENTRY glStencilMask (GLuint mask);$/;"	p	signature:(GLuint mask)
glStencilOp	GLES/gl.h	/^GL_API void GL_APIENTRY glStencilOp (GLenum fail, GLenum zfail, GLenum zpass);$/;"	p	signature:(GLenum fail, GLenum zfail, GLenum zpass)
glTexCoordPointer	GLES/gl.h	/^GL_API void GL_APIENTRY glTexCoordPointer (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	p	signature:(GLint size, GLenum type, GLsizei stride, const GLvoid *pointer)
glTexEnvf	GLES/gl.h	/^GL_API void GL_APIENTRY glTexEnvf (GLenum target, GLenum pname, GLfloat param);$/;"	p	signature:(GLenum target, GLenum pname, GLfloat param)
glTexEnvfv	GLES/gl.h	/^GL_API void GL_APIENTRY glTexEnvfv (GLenum target, GLenum pname, const GLfloat *params);$/;"	p	signature:(GLenum target, GLenum pname, const GLfloat *params)
glTexEnvi	GLES/gl.h	/^GL_API void GL_APIENTRY glTexEnvi (GLenum target, GLenum pname, GLint param);$/;"	p	signature:(GLenum target, GLenum pname, GLint param)
glTexEnviv	GLES/gl.h	/^GL_API void GL_APIENTRY glTexEnviv (GLenum target, GLenum pname, const GLint *params);$/;"	p	signature:(GLenum target, GLenum pname, const GLint *params)
glTexEnvx	GLES/gl.h	/^GL_API void GL_APIENTRY glTexEnvx (GLenum target, GLenum pname, GLfixed param);$/;"	p	signature:(GLenum target, GLenum pname, GLfixed param)
glTexEnvxOES	GLES/glext.h	/^GL_API void GL_APIENTRY glTexEnvxOES (GLenum target, GLenum pname, GLfixed param);$/;"	p	signature:(GLenum target, GLenum pname, GLfixed param)
glTexEnvxv	GLES/gl.h	/^GL_API void GL_APIENTRY glTexEnvxv (GLenum target, GLenum pname, const GLfixed *params);$/;"	p	signature:(GLenum target, GLenum pname, const GLfixed *params)
glTexEnvxvOES	GLES/glext.h	/^GL_API void GL_APIENTRY glTexEnvxvOES (GLenum target, GLenum pname, const GLfixed *params);$/;"	p	signature:(GLenum target, GLenum pname, const GLfixed *params)
glTexGenfOES	GLES/glext.h	/^GL_API void GL_APIENTRY glTexGenfOES (GLenum coord, GLenum pname, GLfloat param);$/;"	p	signature:(GLenum coord, GLenum pname, GLfloat param)
glTexGenfvOES	GLES/glext.h	/^GL_API void GL_APIENTRY glTexGenfvOES (GLenum coord, GLenum pname, const GLfloat *params);$/;"	p	signature:(GLenum coord, GLenum pname, const GLfloat *params)
glTexGeniOES	GLES/glext.h	/^GL_API void GL_APIENTRY glTexGeniOES (GLenum coord, GLenum pname, GLint param);$/;"	p	signature:(GLenum coord, GLenum pname, GLint param)
glTexGenivOES	GLES/glext.h	/^GL_API void GL_APIENTRY glTexGenivOES (GLenum coord, GLenum pname, const GLint *params);$/;"	p	signature:(GLenum coord, GLenum pname, const GLint *params)
glTexGenxOES	GLES/glext.h	/^GL_API void GL_APIENTRY glTexGenxOES (GLenum coord, GLenum pname, GLfixed param);$/;"	p	signature:(GLenum coord, GLenum pname, GLfixed param)
glTexGenxvOES	GLES/glext.h	/^GL_API void GL_APIENTRY glTexGenxvOES (GLenum coord, GLenum pname, const GLfixed *params);$/;"	p	signature:(GLenum coord, GLenum pname, const GLfixed *params)
glTexImage2D	GLES/gl.h	/^GL_API void GL_APIENTRY glTexImage2D (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const GLvoid *pixels);$/;"	p	signature:(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const GLvoid *pixels)
glTexParameterf	GLES/gl.h	/^GL_API void GL_APIENTRY glTexParameterf (GLenum target, GLenum pname, GLfloat param);$/;"	p	signature:(GLenum target, GLenum pname, GLfloat param)
glTexParameterfv	GLES/gl.h	/^GL_API void GL_APIENTRY glTexParameterfv (GLenum target, GLenum pname, const GLfloat *params);$/;"	p	signature:(GLenum target, GLenum pname, const GLfloat *params)
glTexParameteri	GLES/gl.h	/^GL_API void GL_APIENTRY glTexParameteri (GLenum target, GLenum pname, GLint param);$/;"	p	signature:(GLenum target, GLenum pname, GLint param)
glTexParameteriv	GLES/gl.h	/^GL_API void GL_APIENTRY glTexParameteriv (GLenum target, GLenum pname, const GLint *params);$/;"	p	signature:(GLenum target, GLenum pname, const GLint *params)
glTexParameterx	GLES/gl.h	/^GL_API void GL_APIENTRY glTexParameterx (GLenum target, GLenum pname, GLfixed param);$/;"	p	signature:(GLenum target, GLenum pname, GLfixed param)
glTexParameterxOES	GLES/glext.h	/^GL_API void GL_APIENTRY glTexParameterxOES (GLenum target, GLenum pname, GLfixed param);$/;"	p	signature:(GLenum target, GLenum pname, GLfixed param)
glTexParameterxv	GLES/gl.h	/^GL_API void GL_APIENTRY glTexParameterxv (GLenum target, GLenum pname, const GLfixed *params);$/;"	p	signature:(GLenum target, GLenum pname, const GLfixed *params)
glTexParameterxvOES	GLES/glext.h	/^GL_API void GL_APIENTRY glTexParameterxvOES (GLenum target, GLenum pname, const GLfixed *params);$/;"	p	signature:(GLenum target, GLenum pname, const GLfixed *params)
glTexSubImage2D	GLES/gl.h	/^GL_API void GL_APIENTRY glTexSubImage2D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels);$/;"	p	signature:(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels)
glTranslatef	GLES/gl.h	/^GL_API void GL_APIENTRY glTranslatef (GLfloat x, GLfloat y, GLfloat z);$/;"	p	signature:(GLfloat x, GLfloat y, GLfloat z)
glTranslatex	GLES/gl.h	/^GL_API void GL_APIENTRY glTranslatex (GLfixed x, GLfixed y, GLfixed z);$/;"	p	signature:(GLfixed x, GLfixed y, GLfixed z)
glTranslatexOES	GLES/glext.h	/^GL_API void GL_APIENTRY glTranslatexOES (GLfixed x, GLfixed y, GLfixed z);$/;"	p	signature:(GLfixed x, GLfixed y, GLfixed z)
glUnmapBufferOES	GLES/glext.h	/^GL_API GLboolean GL_APIENTRY glUnmapBufferOES (GLenum target);$/;"	p	signature:(GLenum target)
glVertexPointer	GLES/gl.h	/^GL_API void GL_APIENTRY glVertexPointer (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	p	signature:(GLint size, GLenum type, GLsizei stride, const GLvoid *pointer)
glViewport	GLES/gl.h	/^GL_API void GL_APIENTRY glViewport (GLint x, GLint y, GLsizei width, GLsizei height);$/;"	p	signature:(GLint x, GLint y, GLsizei width, GLsizei height)
glWeightPointerOES	GLES/glext.h	/^GL_API void GL_APIENTRY glWeightPointerOES (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	p	signature:(GLint size, GLenum type, GLsizei stride, const GLvoid *pointer)
khronos_boolean_enum_t	KHR/khrplatform.h	/^} khronos_boolean_enum_t;$/;"	t	typeref:enum:__anon1
khronos_float_t	KHR/khrplatform.h	/^typedef          float         khronos_float_t;$/;"	t
khronos_int16_t	KHR/khrplatform.h	/^typedef signed   short int     khronos_int16_t;$/;"	t
khronos_int32_t	KHR/khrplatform.h	/^typedef TInt32                 khronos_int32_t;$/;"	t
khronos_int32_t	KHR/khrplatform.h	/^typedef __int32                 khronos_int32_t;$/;"	t
khronos_int32_t	KHR/khrplatform.h	/^typedef int                     khronos_int32_t;$/;"	t
khronos_int32_t	KHR/khrplatform.h	/^typedef int32_t                 khronos_int32_t;$/;"	t
khronos_int32_t	KHR/khrplatform.h	/^typedef signed int              khronos_int32_t;$/;"	t
khronos_int64_t	KHR/khrplatform.h	/^typedef TInt64                 khronos_int64_t;$/;"	t
khronos_int64_t	KHR/khrplatform.h	/^typedef __int64                 khronos_int64_t;$/;"	t
khronos_int64_t	KHR/khrplatform.h	/^typedef int64_t                 khronos_int64_t;$/;"	t
khronos_int64_t	KHR/khrplatform.h	/^typedef long int                khronos_int64_t;$/;"	t
khronos_int64_t	KHR/khrplatform.h	/^typedef long long               khronos_int64_t;$/;"	t
khronos_int64_t	KHR/khrplatform.h	/^typedef long long int           khronos_int64_t;$/;"	t
khronos_int8_t	KHR/khrplatform.h	/^typedef signed   char          khronos_int8_t;$/;"	t
khronos_intptr_t	KHR/khrplatform.h	/^typedef signed   long  int     khronos_intptr_t;$/;"	t
khronos_ssize_t	KHR/khrplatform.h	/^typedef signed   long  int     khronos_ssize_t;$/;"	t
khronos_stime_nanoseconds_t	KHR/khrplatform.h	/^typedef khronos_int64_t        khronos_stime_nanoseconds_t;$/;"	t
khronos_uint16_t	KHR/khrplatform.h	/^typedef unsigned short int     khronos_uint16_t;$/;"	t
khronos_uint32_t	KHR/khrplatform.h	/^typedef TUint32                khronos_uint32_t;$/;"	t
khronos_uint32_t	KHR/khrplatform.h	/^typedef uint32_t                khronos_uint32_t;$/;"	t
khronos_uint32_t	KHR/khrplatform.h	/^typedef unsigned __int32        khronos_uint32_t;$/;"	t
khronos_uint32_t	KHR/khrplatform.h	/^typedef unsigned int	        khronos_uint32_t;$/;"	t
khronos_uint32_t	KHR/khrplatform.h	/^typedef unsigned int            khronos_uint32_t;$/;"	t
khronos_uint64_t	KHR/khrplatform.h	/^typedef TUint64                khronos_uint64_t;$/;"	t
khronos_uint64_t	KHR/khrplatform.h	/^typedef uint64_t                khronos_uint64_t;$/;"	t
khronos_uint64_t	KHR/khrplatform.h	/^typedef unsigned __int64        khronos_uint64_t;$/;"	t
khronos_uint64_t	KHR/khrplatform.h	/^typedef unsigned long int       khronos_uint64_t;$/;"	t
khronos_uint64_t	KHR/khrplatform.h	/^typedef unsigned long long      khronos_uint64_t;$/;"	t
khronos_uint64_t	KHR/khrplatform.h	/^typedef unsigned long long int  khronos_uint64_t;$/;"	t
khronos_uint8_t	KHR/khrplatform.h	/^typedef unsigned char          khronos_uint8_t;$/;"	t
khronos_uintptr_t	KHR/khrplatform.h	/^typedef unsigned long  int     khronos_uintptr_t;$/;"	t
khronos_usize_t	KHR/khrplatform.h	/^typedef unsigned long  int     khronos_usize_t;$/;"	t
khronos_utime_nanoseconds_t	KHR/khrplatform.h	/^typedef khronos_uint64_t       khronos_utime_nanoseconds_t;$/;"	t
