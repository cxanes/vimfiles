!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.6	//
ABDAY_1	langinfo.h	20;"	d
ABDAY_2	langinfo.h	21;"	d
ABDAY_3	langinfo.h	22;"	d
ABDAY_4	langinfo.h	23;"	d
ABDAY_5	langinfo.h	24;"	d
ABDAY_6	langinfo.h	25;"	d
ABDAY_7	langinfo.h	26;"	d
ABMON_1	langinfo.h	42;"	d
ABMON_10	langinfo.h	51;"	d
ABMON_11	langinfo.h	52;"	d
ABMON_12	langinfo.h	53;"	d
ABMON_2	langinfo.h	43;"	d
ABMON_3	langinfo.h	44;"	d
ABMON_4	langinfo.h	45;"	d
ABMON_5	langinfo.h	46;"	d
ABMON_6	langinfo.h	47;"	d
ABMON_7	langinfo.h	48;"	d
ABMON_8	langinfo.h	49;"	d
ABMON_9	langinfo.h	50;"	d
ACCOUNTING	utmp.h	230;"	d
ACS_BLOCK	curses.h	20;"	d
ACS_BLOCK	ncurses.h	20;"	d
ACS_BOARD	curses.h	24;"	d
ACS_BOARD	ncurses.h	24;"	d
ACS_BTEE	curses.h	36;"	d
ACS_BTEE	ncurses.h	36;"	d
ACS_BULLET	curses.h	40;"	d
ACS_BULLET	ncurses.h	40;"	d
ACS_CKBOARD	curses.h	21;"	d
ACS_CKBOARD	ncurses.h	21;"	d
ACS_DARROW	curses.h	19;"	d
ACS_DARROW	ncurses.h	19;"	d
ACS_DEGREE	curses.h	22;"	d
ACS_DEGREE	ncurses.h	22;"	d
ACS_DIAMOND	curses.h	39;"	d
ACS_DIAMOND	ncurses.h	39;"	d
ACS_HLINE	curses.h	32;"	d
ACS_HLINE	ncurses.h	32;"	d
ACS_LANTERN	curses.h	25;"	d
ACS_LANTERN	ncurses.h	25;"	d
ACS_LARROW	curses.h	17;"	d
ACS_LARROW	ncurses.h	17;"	d
ACS_LLCORNER	curses.h	29;"	d
ACS_LLCORNER	ncurses.h	29;"	d
ACS_LRCORNER	curses.h	26;"	d
ACS_LRCORNER	ncurses.h	26;"	d
ACS_LTEE	curses.h	34;"	d
ACS_LTEE	ncurses.h	34;"	d
ACS_PLMINUS	curses.h	23;"	d
ACS_PLMINUS	ncurses.h	23;"	d
ACS_PLUS	curses.h	30;"	d
ACS_PLUS	ncurses.h	30;"	d
ACS_RARROW	curses.h	16;"	d
ACS_RARROW	ncurses.h	16;"	d
ACS_RTEE	curses.h	35;"	d
ACS_RTEE	ncurses.h	35;"	d
ACS_S1	curses.h	31;"	d
ACS_S1	ncurses.h	31;"	d
ACS_S9	curses.h	33;"	d
ACS_S9	ncurses.h	33;"	d
ACS_TTEE	curses.h	37;"	d
ACS_TTEE	ncurses.h	37;"	d
ACS_UARROW	curses.h	18;"	d
ACS_UARROW	ncurses.h	18;"	d
ACS_ULCORNER	curses.h	28;"	d
ACS_ULCORNER	ncurses.h	28;"	d
ACS_URCORNER	curses.h	27;"	d
ACS_URCORNER	ncurses.h	27;"	d
ACS_VLINE	curses.h	38;"	d
ACS_VLINE	ncurses.h	38;"	d
ACTION	search.h	/^    } ACTION;$/;"	t	typeref:enum:__anon53
AF_INET	sys/socket.h	128;"	d
AF_INET6	sys/socket.h	127;"	d
AF_UNIX	sys/socket.h	126;"	d
AF_UNSPEC	sys/socket.h	125;"	d
AI_ADDRCONFIG	netdb.h	62;"	d
AI_ALL	netdb.h	61;"	d
AI_CANONNAME	netdb.h	58;"	d
AI_NUMERICHOST	netdb.h	59;"	d
AI_NUMERICSERV	netdb.h	63;"	d
AI_PASSIVE	netdb.h	57;"	d
AI_V4MAPPED	netdb.h	60;"	d
ALT_DIGITS	langinfo.h	87;"	d
AM_STR	langinfo.h	73;"	d
AREGTYPE	tar.h	19;"	d
AR_results	rpc/rpc_msg.h	/^	    } AR_results;$/;"	m	union:accepted_reply::__anon134	typeref:struct:accepted_reply::__anon134::__anon136
AR_versions	rpc/rpc_msg.h	/^	    } AR_versions;$/;"	m	union:accepted_reply::__anon134	typeref:struct:accepted_reply::__anon134::__anon135
ATOMIC_INIT	alsa/iatomic.h	13;"	d
AUTH	rpc/auth.h	/^    struct AUTH {$/;"	s
AUTH	rpc/auth.h	/^    typedef struct AUTH AUTH;$/;"	t	typeref:struct:AUTH
AUTH::ah_cred	rpc/auth.h	/^	struct opaque_auth ah_cred;$/;"	m	struct:AUTH	typeref:struct:AUTH::opaque_auth	access:public
AUTH::ah_key	rpc/auth.h	/^	union des_block ah_key;$/;"	m	struct:AUTH	typeref:union:AUTH::des_block	access:public
AUTH::ah_ops	rpc/auth.h	/^	struct auth_ops *ah_ops;$/;"	m	struct:AUTH	typeref:struct:AUTH::auth_ops	access:public
AUTH::ah_private	rpc/auth.h	/^	caddr_t ah_private;$/;"	m	struct:AUTH	access:public
AUTH::ah_verf	rpc/auth.h	/^	struct opaque_auth ah_verf;$/;"	m	struct:AUTH	typeref:struct:AUTH::opaque_auth	access:public
AUTH_BADCRED	rpc/auth.h	/^	AUTH_BADCRED = 1,	\/* bogus credentials (seal broken) *\/$/;"	e	enum:auth_stat
AUTH_BADVERF	rpc/auth.h	/^	AUTH_BADVERF = 3,	\/* bogus verifier (seal broken) *\/$/;"	e	enum:auth_stat
AUTH_ERROR	rpc/rpc_msg.h	/^	AUTH_ERROR = 1$/;"	e	enum:reject_stat
AUTH_FAILED	rpc/auth.h	/^	AUTH_FAILED = 7		\/* some unknown reason *\/$/;"	e	enum:auth_stat
AUTH_INVALIDRESP	rpc/auth.h	/^	AUTH_INVALIDRESP = 6,	\/* bogus response verifier *\/$/;"	e	enum:auth_stat
AUTH_OK	rpc/auth.h	/^	AUTH_OK = 0,$/;"	e	enum:auth_stat
AUTH_REJECTEDCRED	rpc/auth.h	/^	AUTH_REJECTEDCRED = 2,	\/* client should begin new session *\/$/;"	e	enum:auth_stat
AUTH_REJECTEDVERF	rpc/auth.h	/^	AUTH_REJECTEDVERF = 4,	\/* verifier expired or was replayed *\/$/;"	e	enum:auth_stat
AUTH_TOOWEAK	rpc/auth.h	/^	AUTH_TOOWEAK = 5,	\/* Rpc calls return an enum clnt_stat. *\/$/;"	e	enum:auth_stat
A_ALTCHARSET	curses.h	291;"	d
A_ALTCHARSET	ncurses.h	291;"	d
A_ATTRIBUTES	curses.h	303;"	d
A_ATTRIBUTES	ncurses.h	303;"	d
A_BLINK	curses.h	288;"	d
A_BLINK	ncurses.h	288;"	d
A_BOLD	curses.h	290;"	d
A_BOLD	ncurses.h	290;"	d
A_CHARTEXT	curses.h	284;"	d
A_CHARTEXT	ncurses.h	284;"	d
A_COLOR	curses.h	287;"	d
A_COLOR	ncurses.h	287;"	d
A_DIM	curses.h	289;"	d
A_DIM	ncurses.h	289;"	d
A_HORIZONTAL	curses.h	294;"	d
A_HORIZONTAL	ncurses.h	294;"	d
A_INVIS	curses.h	292;"	d
A_INVIS	ncurses.h	292;"	d
A_LEFT	curses.h	295;"	d
A_LEFT	ncurses.h	295;"	d
A_LOW	curses.h	296;"	d
A_LOW	ncurses.h	296;"	d
A_NORMAL	curses.h	285;"	d
A_NORMAL	ncurses.h	285;"	d
A_PROTECT	curses.h	293;"	d
A_PROTECT	ncurses.h	293;"	d
A_REVERSE	curses.h	78;"	d
A_REVERSE	ncurses.h	78;"	d
A_RIGHT	curses.h	297;"	d
A_RIGHT	ncurses.h	297;"	d
A_STANDOUT	curses.h	300;"	d
A_STANDOUT	ncurses.h	300;"	d
A_TOP	curses.h	298;"	d
A_TOP	ncurses.h	298;"	d
A_UNDERLINE	curses.h	301;"	d
A_UNDERLINE	ncurses.h	301;"	d
A_VERTICAL	curses.h	299;"	d
A_VERTICAL	ncurses.h	299;"	d
AdvanceDistance	cups/raster.h	/^	unsigned int AdvanceDistance;$/;"	m	struct:__anon87	access:public
AdvanceMedia	cups/raster.h	/^	cups_adv_t AdvanceMedia;$/;"	m	struct:__anon87	access:public
B0	termios.h	1257;"	d
B110	termios.h	1260;"	d
B1200	termios.h	1266;"	d
B134	termios.h	1261;"	d
B150	termios.h	1262;"	d
B1800	termios.h	1267;"	d
B19200	termios.h	1271;"	d
B200	termios.h	1263;"	d
B2400	termios.h	1268;"	d
B300	termios.h	1264;"	d
B38400	termios.h	1272;"	d
B4800	termios.h	1269;"	d
B50	termios.h	1258;"	d
B600	termios.h	1265;"	d
B75	termios.h	1259;"	d
B9600	termios.h	1270;"	d
BC_BASE_MAX	limits.h	104;"	d
BC_DIM_MAX	limits.h	105;"	d
BC_SCALE_MAX	limits.h	106;"	d
BC_STRING_MAX	limits.h	107;"	d
BIG_ENDIAN	endian.h	15;"	d
BLKTYPE	tar.h	15;"	d
BOOT_TIME	utmp.h	223;"	d
BRKINT	termios.h	683;"	d
BS0	termios.h	15;"	d
BS1	termios.h	185;"	d
BS1	termios.h	188;"	d
BS1	termios.h	191;"	d
BS1	termios.h	194;"	d
BS1	termios.h	348;"	d
BS1	termios.h	351;"	d
BS1	termios.h	423;"	d
BSDLY	termios.h	197;"	d
BSDLY	termios.h	200;"	d
BSDLY	termios.h	203;"	d
BSDLY	termios.h	206;"	d
BSDLY	termios.h	354;"	d
BSDLY	termios.h	357;"	d
BSDLY	termios.h	426;"	d
BUFSIZ	stdio.h	42;"	d
BUS_ADRALN	signal.h	369;"	d
BUS_ADRERR	signal.h	370;"	d
BUS_OBJERR	signal.h	371;"	d
BYTE_ORDER	endian.h	16;"	d
Byte	zlib.h	/^    typedef unsigned char Byte;$/;"	t
Bytef	zlib.h	/^    typedef Byte Bytef;$/;"	t
CALL	rpc/rpc_msg.h	/^	CALL = 0,$/;"	e	enum:msg_type
CHARCLASS_NAME_MAX	limits.h	53;"	d
CHAR_BIT	limits.h	150;"	d
CHAR_MAX	limits.h	134;"	d
CHAR_MAX	limits.h	138;"	d
CHAR_MAX	limits.h	141;"	d
CHAR_MAX	limits.h	144;"	d
CHAR_MAX	limits.h	147;"	d
CHAR_MAX	limits.h	152;"	d
CHAR_MAX	limits.h	155;"	d
CHAR_MIN	limits.h	122;"	d
CHAR_MIN	limits.h	125;"	d
CHAR_MIN	limits.h	128;"	d
CHAR_MIN	limits.h	131;"	d
CHAR_MIN	limits.h	158;"	d
CHAR_MIN	limits.h	161;"	d
CHAR_MIN	limits.h	164;"	d
CHRTYPE	tar.h	14;"	d
CLD_CONTINUED	signal.h	387;"	d
CLD_DUMPED	signal.h	384;"	d
CLD_EXITED	signal.h	382;"	d
CLD_KILLED	signal.h	383;"	d
CLD_STOPPED	signal.h	386;"	d
CLD_TRAPPED	signal.h	385;"	d
CLGET_FD	rpc/clnt.h	33;"	d
CLGET_PROG	rpc/clnt.h	27;"	d
CLGET_RETRY_TIMEOUT	rpc/clnt.h	32;"	d
CLGET_SERVER_ADDR	rpc/clnt.h	30;"	d
CLGET_SVC_ADDR	rpc/clnt.h	34;"	d
CLGET_TIMEOUT	rpc/clnt.h	29;"	d
CLGET_VERS	rpc/clnt.h	25;"	d
CLGET_XID	rpc/clnt.h	23;"	d
CLIENT	rpc/clnt.h	/^    struct CLIENT {$/;"	s
CLIENT	rpc/clnt.h	/^    typedef struct CLIENT CLIENT;$/;"	t	typeref:struct:CLIENT
CLIENT::cl_auth	rpc/clnt.h	/^	struct AUTH *cl_auth;$/;"	m	struct:CLIENT	typeref:struct:CLIENT::AUTH	access:public
CLIENT::cl_ops	rpc/clnt.h	/^	struct clnt_ops *cl_ops;$/;"	m	struct:CLIENT	typeref:struct:CLIENT::clnt_ops	access:public
CLIENT::cl_private	rpc/clnt.h	/^	caddr_t cl_private;$/;"	m	struct:CLIENT	access:public
CLK_TCK	time.h	15;"	d
CLOCAL	termios.h	853;"	d
CLOCAL	termios.h	856;"	d
CLOCAL	termios.h	859;"	d
CLOCAL	termios.h	862;"	d
CLOCAL	termios.h	886;"	d
CLOCAL	termios.h	907;"	d
CLOCAL	termios.h	910;"	d
CLOCKS_PER_SEC	time.h	18;"	d
CLOCK_REALTIME	time.h	16;"	d
CLSET_FD_CLOSE	rpc/clnt.h	35;"	d
CLSET_FD_NCLOSE	rpc/clnt.h	36;"	d
CLSET_PROG	rpc/clnt.h	28;"	d
CLSET_RETRY_TIMEOUT	rpc/clnt.h	31;"	d
CLSET_TIMEOUT	rpc/clnt.h	22;"	d
CLSET_VERS	rpc/clnt.h	26;"	d
CLSET_XID	rpc/clnt.h	24;"	d
CMSG_ALIGN	sys/socket.h	19;"	d
CMSG_DATA	sys/socket.h	21;"	d
CMSG_FIRSTHDR	sys/socket.h	25;"	d
CMSG_LEN	sys/socket.h	14;"	d
CMSG_NXTHDR	sys/socket.h	29;"	d
CMSG_SPACE	sys/socket.h	23;"	d
CODESET	langinfo.h	98;"	d
COLL_WEIGHTS_MAX	limits.h	64;"	d
COLOR_BLACK	curses.h	83;"	d
COLOR_BLACK	ncurses.h	83;"	d
COLOR_BLUE	curses.h	87;"	d
COLOR_BLUE	ncurses.h	87;"	d
COLOR_CYAN	curses.h	89;"	d
COLOR_CYAN	ncurses.h	89;"	d
COLOR_GREEN	curses.h	85;"	d
COLOR_GREEN	ncurses.h	85;"	d
COLOR_MAGENTA	curses.h	88;"	d
COLOR_MAGENTA	ncurses.h	88;"	d
COLOR_PAIR	curses.h	302;"	d
COLOR_PAIR	ncurses.h	302;"	d
COLOR_RED	curses.h	84;"	d
COLOR_RED	ncurses.h	84;"	d
COLOR_WHITE	curses.h	90;"	d
COLOR_WHITE	ncurses.h	90;"	d
COLOR_YELLOW	curses.h	86;"	d
COLOR_YELLOW	ncurses.h	86;"	d
CONTTYPE	tar.h	18;"	d
CR0	termios.h	16;"	d
CR1	termios.h	378;"	d
CR1	termios.h	381;"	d
CR1	termios.h	393;"	d
CR1	termios.h	77;"	d
CR1	termios.h	80;"	d
CR1	termios.h	83;"	d
CR1	termios.h	86;"	d
CR2	termios.h	101;"	d
CR2	termios.h	104;"	d
CR2	termios.h	107;"	d
CR2	termios.h	110;"	d
CR2	termios.h	260;"	d
CR2	termios.h	429;"	d
CR2	termios.h	432;"	d
CR3	termios.h	113;"	d
CR3	termios.h	116;"	d
CR3	termios.h	119;"	d
CR3	termios.h	122;"	d
CR3	termios.h	269;"	d
CR3	termios.h	272;"	d
CR3	termios.h	281;"	d
CRDLY	termios.h	125;"	d
CRDLY	termios.h	128;"	d
CRDLY	termios.h	131;"	d
CRDLY	termios.h	134;"	d
CRDLY	termios.h	275;"	d
CRDLY	termios.h	278;"	d
CRDLY	termios.h	284;"	d
CREAD	termios.h	805;"	d
CREAD	termios.h	808;"	d
CREAD	termios.h	811;"	d
CREAD	termios.h	814;"	d
CREAD	termios.h	874;"	d
CREAD	termios.h	889;"	d
CREAD	termios.h	892;"	d
CRNCYSTR	langinfo.h	103;"	d
CS5	termios.h	743;"	d
CS6	termios.h	745;"	d
CS6	termios.h	748;"	d
CS6	termios.h	751;"	d
CS6	termios.h	754;"	d
CS6	termios.h	877;"	d
CS6	termios.h	895;"	d
CS6	termios.h	898;"	d
CS7	termios.h	757;"	d
CS7	termios.h	760;"	d
CS7	termios.h	763;"	d
CS7	termios.h	766;"	d
CS7	termios.h	904;"	d
CS7	termios.h	940;"	d
CS7	termios.h	943;"	d
CS8	termios.h	769;"	d
CS8	termios.h	772;"	d
CS8	termios.h	775;"	d
CS8	termios.h	778;"	d
CS8	termios.h	919;"	d
CS8	termios.h	958;"	d
CS8	termios.h	961;"	d
CSIZE	termios.h	781;"	d
CSIZE	termios.h	784;"	d
CSIZE	termios.h	787;"	d
CSIZE	termios.h	790;"	d
CSIZE	termios.h	922;"	d
CSIZE	termios.h	964;"	d
CSIZE	termios.h	967;"	d
CSTOPB	termios.h	793;"	d
CSTOPB	termios.h	796;"	d
CSTOPB	termios.h	799;"	d
CSTOPB	termios.h	802;"	d
CSTOPB	termios.h	865;"	d
CSTOPB	termios.h	868;"	d
CSTOPB	termios.h	949;"	d
CUPS_ADVANCE_FILE	cups/raster.h	/^	CUPS_ADVANCE_FILE,$/;"	e	enum:__anon79
CUPS_ADVANCE_JOB	cups/raster.h	/^	CUPS_ADVANCE_JOB,$/;"	e	enum:__anon79
CUPS_ADVANCE_NONE	cups/raster.h	/^	CUPS_ADVANCE_NONE,$/;"	e	enum:__anon79
CUPS_ADVANCE_PAGE	cups/raster.h	/^	CUPS_ADVANCE_PAGE$/;"	e	enum:__anon79
CUPS_ADVANCE_SET	cups/raster.h	/^	CUPS_ADVANCE_SET,$/;"	e	enum:__anon79
CUPS_AUTO_ENCODING	cups/cups.h	/^	CUPS_AUTO_ENCODING,$/;"	e	enum:__anon88
CUPS_CSPACE_CIELab	cups/raster.h	/^	CUPS_CSPACE_CIELab,$/;"	e	enum:__anon86
CUPS_CSPACE_CIEXYZ	cups/raster.h	/^	CUPS_CSPACE_CIEXYZ,$/;"	e	enum:__anon86
CUPS_CSPACE_CMY	cups/raster.h	/^	CUPS_CSPACE_CMY,$/;"	e	enum:__anon86
CUPS_CSPACE_CMYK	cups/raster.h	/^	CUPS_CSPACE_CMYK,$/;"	e	enum:__anon86
CUPS_CSPACE_GMCK	cups/raster.h	/^	CUPS_CSPACE_GMCK,$/;"	e	enum:__anon86
CUPS_CSPACE_GMCS	cups/raster.h	/^	CUPS_CSPACE_GMCS,$/;"	e	enum:__anon86
CUPS_CSPACE_GOLD	cups/raster.h	/^	CUPS_CSPACE_GOLD,$/;"	e	enum:__anon86
CUPS_CSPACE_ICC1	cups/raster.h	/^	CUPS_CSPACE_ICC1 = 32,$/;"	e	enum:__anon86
CUPS_CSPACE_ICC2	cups/raster.h	/^	CUPS_CSPACE_ICC2 = 33,$/;"	e	enum:__anon86
CUPS_CSPACE_ICC3	cups/raster.h	/^	CUPS_CSPACE_ICC3 = 34,$/;"	e	enum:__anon86
CUPS_CSPACE_ICC4	cups/raster.h	/^	CUPS_CSPACE_ICC4 = 35,$/;"	e	enum:__anon86
CUPS_CSPACE_ICC5	cups/raster.h	/^	CUPS_CSPACE_ICC5 = 36,$/;"	e	enum:__anon86
CUPS_CSPACE_ICC6	cups/raster.h	/^	CUPS_CSPACE_ICC6 = 37,$/;"	e	enum:__anon86
CUPS_CSPACE_ICC7	cups/raster.h	/^	CUPS_CSPACE_ICC7 = 38,$/;"	e	enum:__anon86
CUPS_CSPACE_ICC8	cups/raster.h	/^	CUPS_CSPACE_ICC8 = 39,$/;"	e	enum:__anon86
CUPS_CSPACE_ICC9	cups/raster.h	/^	CUPS_CSPACE_ICC9 = 40,$/;"	e	enum:__anon86
CUPS_CSPACE_ICCA	cups/raster.h	/^	CUPS_CSPACE_ICCA = 41,$/;"	e	enum:__anon86
CUPS_CSPACE_ICCB	cups/raster.h	/^	CUPS_CSPACE_ICCB = 42,$/;"	e	enum:__anon86
CUPS_CSPACE_ICCC	cups/raster.h	/^	CUPS_CSPACE_ICCC = 43,$/;"	e	enum:__anon86
CUPS_CSPACE_ICCD	cups/raster.h	/^	CUPS_CSPACE_ICCD = 44,$/;"	e	enum:__anon86
CUPS_CSPACE_ICCE	cups/raster.h	/^	CUPS_CSPACE_ICCE = 45,$/;"	e	enum:__anon86
CUPS_CSPACE_ICCF	cups/raster.h	/^	CUPS_CSPACE_ICCF = 46$/;"	e	enum:__anon86
CUPS_CSPACE_K	cups/raster.h	/^	CUPS_CSPACE_K,$/;"	e	enum:__anon86
CUPS_CSPACE_KCMY	cups/raster.h	/^	CUPS_CSPACE_KCMY,$/;"	e	enum:__anon86
CUPS_CSPACE_KCMYcm	cups/raster.h	/^	CUPS_CSPACE_KCMYcm,$/;"	e	enum:__anon86
CUPS_CSPACE_RGB	cups/raster.h	/^	CUPS_CSPACE_RGB,$/;"	e	enum:__anon86
CUPS_CSPACE_RGBA	cups/raster.h	/^	CUPS_CSPACE_RGBA,$/;"	e	enum:__anon86
CUPS_CSPACE_SILVER	cups/raster.h	/^	CUPS_CSPACE_SILVER,$/;"	e	enum:__anon86
CUPS_CSPACE_W	cups/raster.h	/^	CUPS_CSPACE_W,$/;"	e	enum:__anon86
CUPS_CSPACE_WHITE	cups/raster.h	/^	CUPS_CSPACE_WHITE,$/;"	e	enum:__anon86
CUPS_CSPACE_YMC	cups/raster.h	/^	CUPS_CSPACE_YMC,$/;"	e	enum:__anon86
CUPS_CSPACE_YMCK	cups/raster.h	/^	CUPS_CSPACE_YMCK,$/;"	e	enum:__anon86
CUPS_CUT_FILE	cups/raster.h	/^	CUPS_CUT_FILE,$/;"	e	enum:__anon81
CUPS_CUT_JOB	cups/raster.h	/^	CUPS_CUT_JOB,$/;"	e	enum:__anon81
CUPS_CUT_NONE	cups/raster.h	/^	CUPS_CUT_NONE,$/;"	e	enum:__anon81
CUPS_CUT_PAGE	cups/raster.h	/^	CUPS_CUT_PAGE$/;"	e	enum:__anon81
CUPS_CUT_SET	cups/raster.h	/^	CUPS_CUT_SET,$/;"	e	enum:__anon81
CUPS_EDGE_BOTTOM	cups/raster.h	/^	CUPS_EDGE_BOTTOM,$/;"	e	enum:__anon83
CUPS_EDGE_LEFT	cups/raster.h	/^	CUPS_EDGE_LEFT$/;"	e	enum:__anon83
CUPS_EDGE_RIGHT	cups/raster.h	/^	CUPS_EDGE_RIGHT,$/;"	e	enum:__anon83
CUPS_EDGE_TOP	cups/raster.h	/^	CUPS_EDGE_TOP,$/;"	e	enum:__anon83
CUPS_FALSE	cups/raster.h	/^	CUPS_FALSE,$/;"	e	enum:__anon80
CUPS_ISO8859_1	cups/cups.h	/^	CUPS_ISO8859_1,$/;"	e	enum:__anon88
CUPS_ISO8859_10	cups/cups.h	/^	CUPS_ISO8859_10,$/;"	e	enum:__anon88
CUPS_ISO8859_13	cups/cups.h	/^	CUPS_ISO8859_13,$/;"	e	enum:__anon88
CUPS_ISO8859_14	cups/cups.h	/^	CUPS_ISO8859_14,$/;"	e	enum:__anon88
CUPS_ISO8859_15	cups/cups.h	/^	CUPS_ISO8859_15,$/;"	e	enum:__anon88
CUPS_ISO8859_2	cups/cups.h	/^	CUPS_ISO8859_2,$/;"	e	enum:__anon88
CUPS_ISO8859_3	cups/cups.h	/^	CUPS_ISO8859_3,$/;"	e	enum:__anon88
CUPS_ISO8859_4	cups/cups.h	/^	CUPS_ISO8859_4,$/;"	e	enum:__anon88
CUPS_ISO8859_5	cups/cups.h	/^	CUPS_ISO8859_5,$/;"	e	enum:__anon88
CUPS_ISO8859_6	cups/cups.h	/^	CUPS_ISO8859_6,$/;"	e	enum:__anon88
CUPS_ISO8859_7	cups/cups.h	/^	CUPS_ISO8859_7,$/;"	e	enum:__anon88
CUPS_ISO8859_8	cups/cups.h	/^	CUPS_ISO8859_8,$/;"	e	enum:__anon88
CUPS_ISO8859_9	cups/cups.h	/^	CUPS_ISO8859_9,$/;"	e	enum:__anon88
CUPS_JOG_FILE	cups/raster.h	/^	CUPS_JOG_FILE,$/;"	e	enum:__anon82
CUPS_JOG_JOB	cups/raster.h	/^	CUPS_JOG_JOB,$/;"	e	enum:__anon82
CUPS_JOG_NONE	cups/raster.h	/^	CUPS_JOG_NONE,$/;"	e	enum:__anon82
CUPS_JOG_SET	cups/raster.h	/^	CUPS_JOG_SET$/;"	e	enum:__anon82
CUPS_KOI8_R	cups/cups.h	/^	CUPS_KOI8_R,$/;"	e	enum:__anon88
CUPS_KOI8_U	cups/cups.h	/^	CUPS_KOI8_U$/;"	e	enum:__anon88
CUPS_ORDER_BANDED	cups/raster.h	/^	CUPS_ORDER_BANDED,$/;"	e	enum:__anon85
CUPS_ORDER_CHUNKED	cups/raster.h	/^	CUPS_ORDER_CHUNKED,$/;"	e	enum:__anon85
CUPS_ORDER_PLANAR	cups/raster.h	/^	CUPS_ORDER_PLANAR$/;"	e	enum:__anon85
CUPS_ORIENT_0	cups/raster.h	/^	CUPS_ORIENT_0,$/;"	e	enum:__anon84
CUPS_ORIENT_180	cups/raster.h	/^	CUPS_ORIENT_180,$/;"	e	enum:__anon84
CUPS_ORIENT_270	cups/raster.h	/^	CUPS_ORIENT_270$/;"	e	enum:__anon84
CUPS_ORIENT_90	cups/raster.h	/^	CUPS_ORIENT_90,$/;"	e	enum:__anon84
CUPS_RASTER_HAVE_COLORIMETRIC	cups/raster.h	14;"	d
CUPS_RASTER_READ	cups/raster.h	/^	CUPS_RASTER_READ,$/;"	e	enum:__anon77
CUPS_RASTER_REVSYNC	cups/raster.h	13;"	d
CUPS_RASTER_SYNC	cups/raster.h	12;"	d
CUPS_RASTER_WRITE	cups/raster.h	/^	CUPS_RASTER_WRITE$/;"	e	enum:__anon77
CUPS_TRUE	cups/raster.h	/^	CUPS_TRUE$/;"	e	enum:__anon80
CUPS_US_ASCII	cups/cups.h	/^	CUPS_US_ASCII,$/;"	e	enum:__anon88
CUPS_UTF8	cups/cups.h	/^	CUPS_UTF8,$/;"	e	enum:__anon88
CUPS_VERSION	cups/cups.h	19;"	d
CUPS_VERSION_MAJOR	cups/cups.h	17;"	d
CUPS_VERSION_MINOR	cups/cups.h	18;"	d
CUPS_VERSION_PATCH	cups/cups.h	20;"	d
CUPS_WINDOWS_1250	cups/cups.h	/^	CUPS_WINDOWS_1250,$/;"	e	enum:__anon88
CUPS_WINDOWS_1251	cups/cups.h	/^	CUPS_WINDOWS_1251,$/;"	e	enum:__anon88
CUPS_WINDOWS_1252	cups/cups.h	/^	CUPS_WINDOWS_1252,$/;"	e	enum:__anon88
CUPS_WINDOWS_1253	cups/cups.h	/^	CUPS_WINDOWS_1253,$/;"	e	enum:__anon88
CUPS_WINDOWS_1254	cups/cups.h	/^	CUPS_WINDOWS_1254,$/;"	e	enum:__anon88
CUPS_WINDOWS_1255	cups/cups.h	/^	CUPS_WINDOWS_1255,$/;"	e	enum:__anon88
CUPS_WINDOWS_1256	cups/cups.h	/^	CUPS_WINDOWS_1256,$/;"	e	enum:__anon88
CUPS_WINDOWS_1257	cups/cups.h	/^	CUPS_WINDOWS_1257,$/;"	e	enum:__anon88
CUPS_WINDOWS_1258	cups/cups.h	/^	CUPS_WINDOWS_1258,$/;"	e	enum:__anon88
CUPS_WINDOWS_874	cups/cups.h	/^	CUPS_WINDOWS_874,$/;"	e	enum:__anon88
C_IRGRP	cpio.h	16;"	d
C_IROTH	cpio.h	13;"	d
C_IRUSR	cpio.h	19;"	d
C_ISBLK	cpio.h	30;"	d
C_ISCHR	cpio.h	28;"	d
C_ISCTG	cpio.h	25;"	d
C_ISDIR	cpio.h	29;"	d
C_ISFIFO	cpio.h	23;"	d
C_ISGID	cpio.h	21;"	d
C_ISLNK	cpio.h	26;"	d
C_ISREG	cpio.h	24;"	d
C_ISSOCK	cpio.h	27;"	d
C_ISUID	cpio.h	22;"	d
C_ISVTX	cpio.h	20;"	d
C_IWGRP	cpio.h	15;"	d
C_IWOTH	cpio.h	12;"	d
C_IWUSR	cpio.h	18;"	d
C_IXGRP	cpio.h	14;"	d
C_IXOTH	cpio.h	11;"	d
C_IXUSR	cpio.h	17;"	d
Collate	cups/raster.h	/^	cups_bool_t Collate;$/;"	m	struct:__anon87	access:public
CutMedia	cups/raster.h	/^	cups_cut_t CutMedia;$/;"	m	struct:__anon87	access:public
DAY_1	langinfo.h	31;"	d
DAY_2	langinfo.h	32;"	d
DAY_3	langinfo.h	33;"	d
DAY_4	langinfo.h	34;"	d
DAY_5	langinfo.h	35;"	d
DAY_6	langinfo.h	36;"	d
DAY_7	langinfo.h	37;"	d
DEAD_PROCESS	utmp.h	229;"	d
DIR	dirent.h	/^    typedef struct __dirstream DIR;$/;"	t	typeref:struct:__dirstream
DIRTYPE	tar.h	16;"	d
DOMAIN	math.h	11;"	d
D_FMT	langinfo.h	79;"	d
D_T_FMT	langinfo.h	78;"	d
Dl_info	dlfcn.h	/^    } Dl_info;$/;"	t	typeref:struct:__anon120
Duplex	cups/raster.h	/^	cups_bool_t Duplex;$/;"	m	struct:__anon87	access:public
E2BIG	errno.h	110;"	d
EACCES	errno.h	46;"	d
EADDRINUSE	errno.h	141;"	d
EADDRNOTAVAIL	errno.h	142;"	d
EADV	errno.h	108;"	d
EAFNOSUPPORT	errno.h	140;"	d
EAGAIN	errno.h	28;"	d
EAI_ADDRFAMILY	netdb.h	98;"	d
EAI_AGAIN	netdb.h	92;"	d
EAI_BADFLAGS	netdb.h	88;"	d
EAI_FAIL	netdb.h	93;"	d
EAI_FAMILY	netdb.h	95;"	d
EAI_MEMORY	netdb.h	89;"	d
EAI_NODATA	netdb.h	94;"	d
EAI_NONAME	netdb.h	91;"	d
EAI_SERVICE	netdb.h	97;"	d
EAI_SOCKTYPE	netdb.h	96;"	d
EAI_SYSTEM	netdb.h	90;"	d
EALREADY	errno.h	33;"	d
EBADF	errno.h	132;"	d
EBADFD	errno.h	118;"	d
EBADMSG	errno.h	115;"	d
EBADRQC	errno.h	90;"	d
EBADSLT	errno.h	91;"	d
EBFONT	errno.h	98;"	d
EBUSY	errno.h	49;"	d
ECANCELED	errno.h	45;"	d
ECHILD	errno.h	17;"	d
ECHO	termios.h	1003;"	d
ECHOCTL	termios.h	1065;"	d
ECHOCTL	termios.h	1068;"	d
ECHOCTL	termios.h	1071;"	d
ECHOCTL	termios.h	1074;"	d
ECHOCTL	termios.h	1230;"	d
ECHOCTL	termios.h	1239;"	d
ECHOCTL	termios.h	1242;"	d
ECHOE	termios.h	1005;"	d
ECHOE	termios.h	1008;"	d
ECHOE	termios.h	1011;"	d
ECHOE	termios.h	1014;"	d
ECHOE	termios.h	1170;"	d
ECHOE	termios.h	1182;"	d
ECHOE	termios.h	1185;"	d
ECHOK	termios.h	1017;"	d
ECHOK	termios.h	1020;"	d
ECHOK	termios.h	1023;"	d
ECHOK	termios.h	1026;"	d
ECHOK	termios.h	1203;"	d
ECHOK	termios.h	1215;"	d
ECHOK	termios.h	1218;"	d
ECHOKE	termios.h	1089;"	d
ECHOKE	termios.h	1092;"	d
ECHOKE	termios.h	1095;"	d
ECHOKE	termios.h	1098;"	d
ECHOKE	termios.h	1143;"	d
ECHOKE	termios.h	1146;"	d
ECHOKE	termios.h	1191;"	d
ECHONL	termios.h	1029;"	d
ECHONL	termios.h	1032;"	d
ECHONL	termios.h	1035;"	d
ECHONL	termios.h	1038;"	d
ECHONL	termios.h	1173;"	d
ECHONL	termios.h	1176;"	d
ECHONL	termios.h	1245;"	d
ECHOPRT	termios.h	1077;"	d
ECHOPRT	termios.h	1080;"	d
ECHOPRT	termios.h	1083;"	d
ECHOPRT	termios.h	1086;"	d
ECHOPRT	termios.h	1152;"	d
ECHOPRT	termios.h	1206;"	d
ECHOPRT	termios.h	1209;"	d
ECHRNG	errno.h	82;"	d
ECOMM	errno.h	111;"	d
ECONNABORTED	errno.h	21;"	d
ECONNREFUSED	errno.h	30;"	d
ECONNRESET	errno.h	22;"	d
EDEADLK	errno.h	70;"	d
EDEADLOCK	errno.h	145;"	d
EDEADLOCK	errno.h	148;"	d
EDEADLOCK	errno.h	151;"	d
EDEADLOCK	errno.h	154;"	d
EDEADLOCK	errno.h	72;"	d
EDEADLOCK	errno.h	93;"	d
EDEADLOCK	errno.h	96;"	d
EDESTADDRREQ	errno.h	131;"	d
EDOM	errno.h	68;"	d
EDOTDOT	errno.h	114;"	d
EDQUOT	errno.h	42;"	d
EEXIST	errno.h	50;"	d
EFAULT	errno.h	47;"	d
EFBIG	errno.h	61;"	d
EHOSTDOWN	errno.h	31;"	d
EHOSTUNREACH	errno.h	32;"	d
EIDRM	errno.h	81;"	d
EILSEQ	errno.h	126;"	d
EINPROGRESS	errno.h	34;"	d
EINTR	errno.h	78;"	d
EINVAL	errno.h	56;"	d
EIO	errno.h	88;"	d
EISCONN	errno.h	24;"	d
EISDIR	errno.h	55;"	d
EISNAM	errno.h	40;"	d
EL2NSYNC	errno.h	83;"	d
EL3HLT	errno.h	84;"	d
EL3RST	errno.h	85;"	d
ELIBACC	errno.h	120;"	d
ELIBBAD	errno.h	122;"	d
ELIBEXEC	errno.h	125;"	d
ELIBMAX	errno.h	124;"	d
ELIBSCN	errno.h	123;"	d
ELNRNG	errno.h	86;"	d
ELOOP	errno.h	79;"	d
EMEDIUMTYPE	errno.h	44;"	d
EMFILE	errno.h	58;"	d
EMLINK	errno.h	66;"	d
EMPTY	utmp.h	221;"	d
EMSGSIZE	errno.h	133;"	d
EMULTIHOP	errno.h	113;"	d
ENAMETOOLONG	errno.h	74;"	d
ENAVAIL	errno.h	38;"	d
ENETDOWN	errno.h	18;"	d
ENETRESET	errno.h	20;"	d
ENETUNREACH	errno.h	19;"	d
ENFILE	errno.h	57;"	d
ENOANO	errno.h	89;"	d
ENOBUFS	errno.h	23;"	d
ENODATA	errno.h	101;"	d
ENODEV	errno.h	52;"	d
ENOENT	errno.h	53;"	d
ENOEXEC	errno.h	121;"	d
ENOLCK	errno.h	75;"	d
ENOLINK	errno.h	107;"	d
ENOMEDIUM	errno.h	43;"	d
ENOMEM	errno.h	39;"	d
ENOMSG	errno.h	80;"	d
ENONET	errno.h	104;"	d
ENOPKG	errno.h	105;"	d
ENOPROTOOPT	errno.h	135;"	d
ENOSPC	errno.h	62;"	d
ENOSR	errno.h	103;"	d
ENOSTR	errno.h	100;"	d
ENOSYS	errno.h	76;"	d
ENOTBLK	errno.h	48;"	d
ENOTCONN	errno.h	25;"	d
ENOTDIR	errno.h	54;"	d
ENOTEMPTY	errno.h	77;"	d
ENOTNAM	errno.h	37;"	d
ENOTSOCK	errno.h	130;"	d
ENOTSUP	errno.h	156;"	d
ENOTTY	errno.h	59;"	d
ENOTUNIQ	errno.h	117;"	d
ENTER	search.h	/^	ENTER$/;"	e	enum:__anon53
ENTRY	search.h	/^    typedef struct entry ENTRY;$/;"	t	typeref:struct:entry
ENXIO	errno.h	99;"	d
EOF	stdio.h	16;"	d
EOPNOTSUPP	errno.h	138;"	d
EOVERFLOW	errno.h	116;"	d
EPERM	errno.h	16;"	d
EPFNOSUPPORT	errno.h	139;"	d
EPIPE	errno.h	67;"	d
EPROTO	errno.h	112;"	d
EPROTONOSUPPORT	errno.h	136;"	d
EPROTOTYPE	errno.h	134;"	d
ERA	langinfo.h	85;"	d
ERANGE	errno.h	69;"	d
ERA_D_FMT	langinfo.h	86;"	d
ERA_D_T_FMT	langinfo.h	88;"	d
ERA_T_FMT	langinfo.h	89;"	d
EREMCHG	errno.h	119;"	d
EREMOTE	errno.h	106;"	d
EREMOTEIO	errno.h	41;"	d
ERESTART	errno.h	127;"	d
EROFS	errno.h	65;"	d
ERR	curses.h	14;"	d
ERR	ncurses.h	14;"	d
ESHUTDOWN	errno.h	26;"	d
ESOCKTNOSUPPORT	errno.h	137;"	d
ESPIPE	errno.h	63;"	d
ESRCH	errno.h	64;"	d
ESRMNT	errno.h	109;"	d
ESTALE	errno.h	35;"	d
ESTRPIPE	errno.h	128;"	d
ETIME	errno.h	102;"	d
ETIMEDOUT	errno.h	29;"	d
ETOOMANYREFS	errno.h	27;"	d
ETXTBSY	errno.h	60;"	d
EUCLEAN	errno.h	36;"	d
EUNATCH	errno.h	87;"	d
EUSERS	errno.h	129;"	d
EWOULDBLOCK	errno.h	143;"	d
EXDEV	errno.h	51;"	d
EXIT_FAILURE	stdlib.h	15;"	d
EXIT_SUCCESS	stdlib.h	14;"	d
EXPR_NEST_MAX	limits.h	108;"	d
FALSE	sys/types.h	15;"	d
FD_CLOEXEC	fcntl.h	47;"	d
FD_CLR	sys/types.h	24;"	d
FD_ISSET	sys/types.h	22;"	d
FD_SET	sys/types.h	26;"	d
FD_SETSIZE	sys/types.h	20;"	d
FD_ZERO	sys/types.h	21;"	d
FE_ALL_EXCEPT	fenv.h	127;"	d
FE_ALL_EXCEPT	fenv.h	131;"	d
FE_ALL_EXCEPT	fenv.h	135;"	d
FE_ALL_EXCEPT	fenv.h	139;"	d
FE_ALL_EXCEPT	fenv.h	143;"	d
FE_ALL_EXCEPT	fenv.h	147;"	d
FE_ALL_EXCEPT	fenv.h	151;"	d
FE_DFL_ENV	fenv.h	360;"	d
FE_DFL_ENV	fenv.h	363;"	d
FE_DFL_ENV	fenv.h	366;"	d
FE_DFL_ENV	fenv.h	369;"	d
FE_DFL_ENV	fenv.h	372;"	d
FE_DFL_ENV	fenv.h	375;"	d
FE_DFL_ENV	fenv.h	378;"	d
FE_DIVBYZERO	fenv.h	109;"	d
FE_DIVBYZERO	fenv.h	112;"	d
FE_DIVBYZERO	fenv.h	34;"	d
FE_DIVBYZERO	fenv.h	37;"	d
FE_DIVBYZERO	fenv.h	49;"	d
FE_DIVBYZERO	fenv.h	67;"	d
FE_DIVBYZERO	fenv.h	70;"	d
FE_DOWNWARD	fenv.h	192;"	d
FE_DOWNWARD	fenv.h	195;"	d
FE_DOWNWARD	fenv.h	198;"	d
FE_DOWNWARD	fenv.h	201;"	d
FE_DOWNWARD	fenv.h	216;"	d
FE_DOWNWARD	fenv.h	234;"	d
FE_DOWNWARD	fenv.h	237;"	d
FE_INEXACT	fenv.h	100;"	d
FE_INEXACT	fenv.h	40;"	d
FE_INEXACT	fenv.h	43;"	d
FE_INEXACT	fenv.h	58;"	d
FE_INEXACT	fenv.h	73;"	d
FE_INEXACT	fenv.h	76;"	d
FE_INEXACT	fenv.h	97;"	d
FE_INVALID	fenv.h	115;"	d
FE_INVALID	fenv.h	118;"	d
FE_INVALID	fenv.h	16;"	d
FE_INVALID	fenv.h	19;"	d
FE_INVALID	fenv.h	46;"	d
FE_INVALID	fenv.h	61;"	d
FE_INVALID	fenv.h	64;"	d
FE_OVERFLOW	fenv.h	103;"	d
FE_OVERFLOW	fenv.h	106;"	d
FE_OVERFLOW	fenv.h	22;"	d
FE_OVERFLOW	fenv.h	25;"	d
FE_OVERFLOW	fenv.h	52;"	d
FE_OVERFLOW	fenv.h	79;"	d
FE_OVERFLOW	fenv.h	82;"	d
FE_TONEAREST	fenv.h	159;"	d
FE_TONEAREST	fenv.h	162;"	d
FE_TONEAREST	fenv.h	165;"	d
FE_TONEAREST	fenv.h	168;"	d
FE_TONEAREST	fenv.h	171;"	d
FE_TONEAREST	fenv.h	174;"	d
FE_TONEAREST	fenv.h	177;"	d
FE_TOWARDZERO	fenv.h	180;"	d
FE_TOWARDZERO	fenv.h	183;"	d
FE_TOWARDZERO	fenv.h	210;"	d
FE_TOWARDZERO	fenv.h	213;"	d
FE_TOWARDZERO	fenv.h	219;"	d
FE_TOWARDZERO	fenv.h	222;"	d
FE_TOWARDZERO	fenv.h	240;"	d
FE_UNDERFLOW	fenv.h	28;"	d
FE_UNDERFLOW	fenv.h	31;"	d
FE_UNDERFLOW	fenv.h	55;"	d
FE_UNDERFLOW	fenv.h	85;"	d
FE_UNDERFLOW	fenv.h	88;"	d
FE_UNDERFLOW	fenv.h	91;"	d
FE_UNDERFLOW	fenv.h	94;"	d
FE_UNNORMAL	fenv.h	121;"	d
FE_UPWARD	fenv.h	186;"	d
FE_UPWARD	fenv.h	189;"	d
FE_UPWARD	fenv.h	204;"	d
FE_UPWARD	fenv.h	207;"	d
FE_UPWARD	fenv.h	225;"	d
FE_UPWARD	fenv.h	228;"	d
FE_UPWARD	fenv.h	231;"	d
FF0	termios.h	17;"	d
FF1	termios.h	233;"	d
FF1	termios.h	236;"	d
FF1	termios.h	239;"	d
FF1	termios.h	242;"	d
FF1	termios.h	287;"	d
FF1	termios.h	290;"	d
FF1	termios.h	360;"	d
FFDLY	termios.h	245;"	d
FFDLY	termios.h	248;"	d
FFDLY	termios.h	251;"	d
FFDLY	termios.h	254;"	d
FFDLY	termios.h	293;"	d
FFDLY	termios.h	296;"	d
FFDLY	termios.h	363;"	d
FIFOTYPE	tar.h	17;"	d
FILE	stdio.h	/^    typedef struct _IO_FILE FILE;$/;"	t	typeref:struct:_IO_FILE
FILENAME_MAX	stdio.h	41;"	d
FIND	search.h	/^	FIND,$/;"	e	enum:__anon53
FIONREAD	sys/ioctl.h	33;"	d
FIONREAD	sys/ioctl.h	36;"	d
FIONREAD	sys/ioctl.h	39;"	d
FIONREAD	sys/ioctl.h	42;"	d
FIONREAD	sys/ioctl.h	54;"	d
FIONREAD	sys/ioctl.h	57;"	d
FIONREAD	sys/ioctl.h	60;"	d
FLUSHO	termios.h	1101;"	d
FLUSHO	termios.h	1104;"	d
FLUSHO	termios.h	1107;"	d
FLUSHO	termios.h	1110;"	d
FLUSHO	termios.h	1221;"	d
FLUSHO	termios.h	1248;"	d
FLUSHO	termios.h	1251;"	d
FNM_NOESCAPE	fnmatch.h	16;"	d
FNM_NOMATCH	fnmatch.h	18;"	d
FNM_PATHNAME	fnmatch.h	15;"	d
FNM_PERIOD	fnmatch.h	17;"	d
FOPEN_MAX	stdio.h	27;"	d
FPE_FLTDIV	signal.h	353;"	d
FPE_FLTINV	signal.h	357;"	d
FPE_FLTOVF	signal.h	354;"	d
FPE_FLTRES	signal.h	356;"	d
FPE_FLTSUB	signal.h	358;"	d
FPE_FLTUND	signal.h	355;"	d
FPE_INTDIV	signal.h	351;"	d
FPE_INTOVF	signal.h	352;"	d
FP_ILOGB0	math.h	208;"	d
FP_ILOGB0	math.h	214;"	d
FP_ILOGB0	math.h	217;"	d
FP_ILOGB0	math.h	220;"	d
FP_ILOGB0	math.h	223;"	d
FP_ILOGB0	math.h	226;"	d
FP_ILOGB0	math.h	229;"	d
FP_ILOGBNAN	math.h	211;"	d
FP_ILOGBNAN	math.h	232;"	d
FP_ILOGBNAN	math.h	247;"	d
FP_ILOGBNAN	math.h	250;"	d
FP_ILOGBNAN	math.h	253;"	d
FP_ILOGBNAN	math.h	256;"	d
FP_ILOGBNAN	math.h	259;"	d
FP_INFINITE	math.h	26;"	d
FP_NAN	math.h	25;"	d
FP_NORMAL	math.h	29;"	d
FP_SUBNORMAL	math.h	28;"	d
FP_ZERO	math.h	27;"	d
FTW	ftw.h	/^    struct FTW {$/;"	s
FTW::base	ftw.h	/^	int base;$/;"	m	struct:FTW	access:public
FTW::level	ftw.h	/^	int level;$/;"	m	struct:FTW	access:public
FTW_CHDIR	ftw.h	/^	FTW_CHDIR = 4,$/;"	e	enum:__anon73
FTW_D	ftw.h	/^	FTW_D,$/;"	e	enum:__anon72
FTW_D	ftw.h	19;"	d
FTW_DEPTH	ftw.h	/^	FTW_DEPTH = 8$/;"	e	enum:__anon73
FTW_DNR	ftw.h	/^	FTW_DNR,$/;"	e	enum:__anon72
FTW_DNR	ftw.h	20;"	d
FTW_DP	ftw.h	/^	FTW_DP,$/;"	e	enum:__anon72
FTW_DP	ftw.h	21;"	d
FTW_F	ftw.h	/^	FTW_F,$/;"	e	enum:__anon72
FTW_F	ftw.h	22;"	d
FTW_MOUNT	ftw.h	/^	FTW_MOUNT = 2,$/;"	e	enum:__anon73
FTW_NS	ftw.h	/^	FTW_NS,$/;"	e	enum:__anon72
FTW_NS	ftw.h	23;"	d
FTW_PHYS	ftw.h	/^	FTW_PHYS = 1,$/;"	e	enum:__anon73
FTW_SL	ftw.h	/^	FTW_SL,$/;"	e	enum:__anon72
FTW_SL	ftw.h	24;"	d
FTW_SLN	ftw.h	/^	FTW_SLN$/;"	e	enum:__anon72
FTW_SLN	ftw.h	25;"	d
F_DUPFD	fcntl.h	76;"	d
F_GETFD	fcntl.h	78;"	d
F_GETFL	fcntl.h	120;"	d
F_GETLK	fcntl.h	122;"	d
F_GETLK64	fcntl.h	124;"	d
F_GETLK64	fcntl.h	127;"	d
F_GETLK64	fcntl.h	130;"	d
F_GETLK64	fcntl.h	83;"	d
F_GETLK64	fcntl.h	86;"	d
F_GETLK64	fcntl.h	89;"	d
F_GETLK64	fcntl.h	92;"	d
F_GETOWN	fcntl.h	153;"	d
F_GETSIG	fcntl.h	81;"	d
F_LOCK	unistd.h	313;"	d
F_OK	unistd.h	27;"	d
F_RDLCK	fcntl.h	77;"	d
F_SETFD	fcntl.h	118;"	d
F_SETFL	fcntl.h	121;"	d
F_SETLK	fcntl.h	132;"	d
F_SETLK64	fcntl.h	101;"	d
F_SETLK64	fcntl.h	104;"	d
F_SETLK64	fcntl.h	134;"	d
F_SETLK64	fcntl.h	137;"	d
F_SETLK64	fcntl.h	140;"	d
F_SETLK64	fcntl.h	95;"	d
F_SETLK64	fcntl.h	98;"	d
F_SETLKW	fcntl.h	142;"	d
F_SETLKW64	fcntl.h	107;"	d
F_SETLKW64	fcntl.h	110;"	d
F_SETLKW64	fcntl.h	113;"	d
F_SETLKW64	fcntl.h	116;"	d
F_SETLKW64	fcntl.h	144;"	d
F_SETLKW64	fcntl.h	147;"	d
F_SETLKW64	fcntl.h	150;"	d
F_SETOWN	fcntl.h	152;"	d
F_SETSIG	fcntl.h	80;"	d
F_TEST	unistd.h	315;"	d
F_TLOCK	unistd.h	314;"	d
F_ULOCK	unistd.h	312;"	d
F_UNLCK	fcntl.h	119;"	d
F_WRLCK	fcntl.h	79;"	d
GARBAGE_ARGS	rpc/rpc_msg.h	/^	GARBAGE_ARGS = 4,$/;"	e	enum:accept_stat
GETALL	sys/sem.h	17;"	d
GETNCNT	sys/sem.h	18;"	d
GETPID	sys/sem.h	15;"	d
GETVAL	sys/sem.h	16;"	d
GETZCNT	sys/sem.h	19;"	d
GLOB_ABORTED	glob.h	38;"	d
GLOB_ALTDIRFUNC	glob.h	32;"	d
GLOB_APPEND	glob.h	28;"	d
GLOB_BRACE	glob.h	20;"	d
GLOB_DOOFFS	glob.h	26;"	d
GLOB_ERR	glob.h	18;"	d
GLOB_MAGCHAR	glob.h	31;"	d
GLOB_MARK	glob.h	19;"	d
GLOB_NOCHECK	glob.h	27;"	d
GLOB_NOESCAPE	glob.h	29;"	d
GLOB_NOMAGIC	glob.h	21;"	d
GLOB_NOMATCH	glob.h	39;"	d
GLOB_NOSORT	glob.h	25;"	d
GLOB_NOSPACE	glob.h	37;"	d
GLOB_NOSYS	glob.h	40;"	d
GLOB_ONLYDIR	glob.h	23;"	d
GLOB_PERIOD	glob.h	30;"	d
GLOB_TILDE	glob.h	22;"	d
GLOB_TILDE_CHECK	glob.h	24;"	d
HOST_NOT_FOUND	netdb.h	16;"	d
HTTP_0_9	cups/cups.h	/^	HTTP_0_9,$/;"	e	enum:__anon94
HTTP_1_0	cups/cups.h	/^	HTTP_1_0,$/;"	e	enum:__anon94
HTTP_1_1	cups/cups.h	/^	HTTP_1_1$/;"	e	enum:__anon94
HTTP_ACCEPTED	cups/cups.h	/^	HTTP_ACCEPTED,$/;"	e	enum:__anon93
HTTP_BAD_GATEWAY	cups/cups.h	/^	HTTP_BAD_GATEWAY,$/;"	e	enum:__anon93
HTTP_BAD_REQUEST	cups/cups.h	/^	HTTP_BAD_REQUEST,$/;"	e	enum:__anon93
HTTP_CLOSE	cups/cups.h	/^	HTTP_CLOSE,$/;"	e	enum:__anon92
HTTP_CONFLICT	cups/cups.h	/^	HTTP_CONFLICT,$/;"	e	enum:__anon93
HTTP_CONTINUE	cups/cups.h	/^	HTTP_CONTINUE,$/;"	e	enum:__anon93
HTTP_CREATED	cups/cups.h	/^	HTTP_CREATED,$/;"	e	enum:__anon93
HTTP_DELETE	cups/cups.h	/^	HTTP_DELETE,$/;"	e	enum:__anon92
HTTP_ENCODE_CHUNKED	cups/cups.h	/^	HTTP_ENCODE_CHUNKED$/;"	e	enum:__anon96
HTTP_ENCODE_LENGTH	cups/cups.h	/^	HTTP_ENCODE_LENGTH,$/;"	e	enum:__anon96
HTTP_ENCRYPT_ALWAYS	cups/cups.h	/^	HTTP_ENCRYPT_ALWAYS$/;"	e	enum:__anon89
HTTP_ENCRYPT_IF_REQUESTED	cups/cups.h	/^	HTTP_ENCRYPT_IF_REQUESTED,$/;"	e	enum:__anon89
HTTP_ENCRYPT_NEVER	cups/cups.h	/^	HTTP_ENCRYPT_NEVER,$/;"	e	enum:__anon89
HTTP_ENCRYPT_REQUIRED	cups/cups.h	/^	HTTP_ENCRYPT_REQUIRED,$/;"	e	enum:__anon89
HTTP_ERROR	cups/cups.h	/^	HTTP_ERROR,$/;"	e	enum:__anon93
HTTP_FORBIDDEN	cups/cups.h	/^	HTTP_FORBIDDEN,$/;"	e	enum:__anon93
HTTP_GATEWAY_TIMEOUT	cups/cups.h	/^	HTTP_GATEWAY_TIMEOUT,$/;"	e	enum:__anon93
HTTP_GET	cups/cups.h	/^	HTTP_GET,$/;"	e	enum:__anon92
HTTP_GET_SEND	cups/cups.h	/^	HTTP_GET_SEND,$/;"	e	enum:__anon92
HTTP_GONE	cups/cups.h	/^	HTTP_GONE,$/;"	e	enum:__anon93
HTTP_HEAD	cups/cups.h	/^	HTTP_HEAD,$/;"	e	enum:__anon92
HTTP_KEEPALIVE_OFF	cups/cups.h	/^	HTTP_KEEPALIVE_OFF,$/;"	e	enum:__anon95
HTTP_KEEPALIVE_ON	cups/cups.h	/^	HTTP_KEEPALIVE_ON$/;"	e	enum:__anon95
HTTP_LENGTH_REQUIRED	cups/cups.h	/^	HTTP_LENGTH_REQUIRED,$/;"	e	enum:__anon93
HTTP_METHOD_NOT_ALLOWED	cups/cups.h	/^	HTTP_METHOD_NOT_ALLOWED,$/;"	e	enum:__anon93
HTTP_MOVED_PERMANENTLY	cups/cups.h	/^	HTTP_MOVED_PERMANENTLY,$/;"	e	enum:__anon93
HTTP_MOVED_TEMPORARILY	cups/cups.h	/^	HTTP_MOVED_TEMPORARILY,$/;"	e	enum:__anon93
HTTP_MULTIPLE_CHOICES	cups/cups.h	/^	HTTP_MULTIPLE_CHOICES,$/;"	e	enum:__anon93
HTTP_NOT_ACCEPTABLE	cups/cups.h	/^	HTTP_NOT_ACCEPTABLE,$/;"	e	enum:__anon93
HTTP_NOT_AUTHORITATIVE	cups/cups.h	/^	HTTP_NOT_AUTHORITATIVE,$/;"	e	enum:__anon93
HTTP_NOT_FOUND	cups/cups.h	/^	HTTP_NOT_FOUND,$/;"	e	enum:__anon93
HTTP_NOT_IMPLEMENTED	cups/cups.h	/^	HTTP_NOT_IMPLEMENTED,$/;"	e	enum:__anon93
HTTP_NOT_MODIFIED	cups/cups.h	/^	HTTP_NOT_MODIFIED,$/;"	e	enum:__anon93
HTTP_NOT_SUPPORTED	cups/cups.h	/^	HTTP_NOT_SUPPORTED$/;"	e	enum:__anon93
HTTP_NO_CONTENT	cups/cups.h	/^	HTTP_NO_CONTENT,$/;"	e	enum:__anon93
HTTP_OK	cups/cups.h	/^	HTTP_OK,$/;"	e	enum:__anon93
HTTP_OPTIONS	cups/cups.h	/^	HTTP_OPTIONS,$/;"	e	enum:__anon92
HTTP_PARTIAL_CONTENT	cups/cups.h	/^	HTTP_PARTIAL_CONTENT,$/;"	e	enum:__anon93
HTTP_PAYMENT_REQUIRED	cups/cups.h	/^	HTTP_PAYMENT_REQUIRED,$/;"	e	enum:__anon93
HTTP_POST	cups/cups.h	/^	HTTP_POST,$/;"	e	enum:__anon92
HTTP_POST_RECV	cups/cups.h	/^	HTTP_POST_RECV,$/;"	e	enum:__anon92
HTTP_POST_SEND	cups/cups.h	/^	HTTP_POST_SEND,$/;"	e	enum:__anon92
HTTP_PRECONDITION	cups/cups.h	/^	HTTP_PRECONDITION,$/;"	e	enum:__anon93
HTTP_PROXY_AUTHENTICATION	cups/cups.h	/^	HTTP_PROXY_AUTHENTICATION,$/;"	e	enum:__anon93
HTTP_PUT	cups/cups.h	/^	HTTP_PUT,$/;"	e	enum:__anon92
HTTP_PUT_RECV	cups/cups.h	/^	HTTP_PUT_RECV,$/;"	e	enum:__anon92
HTTP_REQUEST_TIMEOUT	cups/cups.h	/^	HTTP_REQUEST_TIMEOUT,$/;"	e	enum:__anon93
HTTP_REQUEST_TOO_LARGE	cups/cups.h	/^	HTTP_REQUEST_TOO_LARGE,$/;"	e	enum:__anon93
HTTP_RESET_CONTENT	cups/cups.h	/^	HTTP_RESET_CONTENT,$/;"	e	enum:__anon93
HTTP_SEE_OTHER	cups/cups.h	/^	HTTP_SEE_OTHER,$/;"	e	enum:__anon93
HTTP_SERVER_ERROR	cups/cups.h	/^	HTTP_SERVER_ERROR,$/;"	e	enum:__anon93
HTTP_SERVICE_UNAVAILABLE	cups/cups.h	/^	HTTP_SERVICE_UNAVAILABLE,$/;"	e	enum:__anon93
HTTP_STATUS	cups/cups.h	/^	HTTP_STATUS$/;"	e	enum:__anon92
HTTP_SWITCHING_PROTOCOLS	cups/cups.h	/^	HTTP_SWITCHING_PROTOCOLS,$/;"	e	enum:__anon93
HTTP_TRACE	cups/cups.h	/^	HTTP_TRACE,$/;"	e	enum:__anon92
HTTP_UNAUTHORIZED	cups/cups.h	/^	HTTP_UNAUTHORIZED,$/;"	e	enum:__anon93
HTTP_UNSUPPORTED_MEDIATYPE	cups/cups.h	/^	HTTP_UNSUPPORTED_MEDIATYPE,$/;"	e	enum:__anon93
HTTP_UPGRADE_REQUIRED	cups/cups.h	/^	HTTP_UPGRADE_REQUIRED,$/;"	e	enum:__anon93
HTTP_URI_TOO_LONG	cups/cups.h	/^	HTTP_URI_TOO_LONG,$/;"	e	enum:__anon93
HTTP_USE_PROXY	cups/cups.h	/^	HTTP_USE_PROXY,$/;"	e	enum:__anon93
HTTP_WAITING	cups/cups.h	/^	HTTP_WAITING,$/;"	e	enum:__anon92
HUGE_VAL	math.h	179;"	d
HUGE_VALF	math.h	192;"	d
HUGE_VALL	math.h	181;"	d
HUGE_VALL	math.h	184;"	d
HUGE_VALL	math.h	187;"	d
HUGE_VALL	math.h	190;"	d
HUGE_VALL	math.h	194;"	d
HUGE_VALL	math.h	197;"	d
HUGE_VALL	math.h	200;"	d
HUPCL	termios.h	841;"	d
HUPCL	termios.h	844;"	d
HUPCL	termios.h	847;"	d
HUPCL	termios.h	850;"	d
HUPCL	termios.h	871;"	d
HUPCL	termios.h	880;"	d
HUPCL	termios.h	883;"	d
HWResolution	cups/raster.h	/^	unsigned int HWResolution[2];$/;"	m	struct:__anon87	access:public
ICANON	termios.h	1001;"	d
ICANON	termios.h	1188;"	d
ICANON	termios.h	1194;"	d
ICANON	termios.h	1197;"	d
ICANON	termios.h	992;"	d
ICANON	termios.h	995;"	d
ICANON	termios.h	998;"	d
ICRNL	termios.h	690;"	d
IEXTEN	termios.h	1125;"	d
IEXTEN	termios.h	1128;"	d
IEXTEN	termios.h	1131;"	d
IEXTEN	termios.h	1134;"	d
IEXTEN	termios.h	1155;"	d
IEXTEN	termios.h	1158;"	d
IEXTEN	termios.h	1212;"	d
IFF_BROADCAST	net/if.h	28;"	d
IFF_DEBUG	net/if.h	29;"	d
IFF_LOOPBACK	net/if.h	30;"	d
IFF_MULTICAST	net/if.h	33;"	d
IFF_NOARP	net/if.h	36;"	d
IFF_NOTRAILERS	net/if.h	34;"	d
IFF_POINTOPOINT	net/if.h	31;"	d
IFF_PROMISC	net/if.h	32;"	d
IFF_RUNNING	net/if.h	35;"	d
IFF_UP	net/if.h	27;"	d
IFNAMSIZ	net/if.h	85;"	d
IF_NAMESIZE	net/if.h	13;"	d
IGNBRK	termios.h	682;"	d
IGNCR	termios.h	689;"	d
IGNPAR	termios.h	684;"	d
ILL_BADSTK	signal.h	346;"	d
ILL_COPROC	signal.h	345;"	d
ILL_ILLADR	signal.h	341;"	d
ILL_ILLOPC	signal.h	339;"	d
ILL_ILLOPN	signal.h	340;"	d
ILL_ILLTRP	signal.h	342;"	d
ILL_PRVOPC	signal.h	343;"	d
ILL_PRVREG	signal.h	344;"	d
IMAXBEL	termios.h	716;"	d
IN6ADDR_ANY_INIT	netinet/in.h	73;"	d
IN6ADDR_LOOPBACK_INIT	netinet/in.h	74;"	d
IN6_ARE_ADDR_EQUAL	netinet/in.h	94;"	d
IN6_IS_ADDR_LINKLOCAL	netinet/in.h	92;"	d
IN6_IS_ADDR_LOOPBACK	netinet/in.h	98;"	d
IN6_IS_ADDR_MC_GLOBAL	netinet/in.h	104;"	d
IN6_IS_ADDR_MC_LINKLOCAL	netinet/in.h	101;"	d
IN6_IS_ADDR_MC_NODELOCAL	netinet/in.h	100;"	d
IN6_IS_ADDR_MC_ORGLOCAL	netinet/in.h	103;"	d
IN6_IS_ADDR_MC_SITELOCAL	netinet/in.h	102;"	d
IN6_IS_ADDR_MULTICAST	netinet/in.h	99;"	d
IN6_IS_ADDR_SITELOCAL	netinet/in.h	93;"	d
IN6_IS_ADDR_UNSPECIFIED	netinet/in.h	97;"	d
IN6_IS_ADDR_V4COMPAT	netinet/in.h	95;"	d
IN6_IS_ADDR_V4MAPPED	netinet/in.h	96;"	d
INADDR_ANY	netinet/in.h	52;"	d
INADDR_BROADCAST	netinet/in.h	51;"	d
INADDR_LOOPBACK	netinet/in.h	53;"	d
INADDR_NONE	netinet/in.h	50;"	d
INET6_ADDRSTRLEN	netinet/in.h	105;"	d
INET_ADDRSTRLEN	netinet/in.h	80;"	d
INFINITY	math.h	262;"	d
INIT_PROCESS	utmp.h	226;"	d
INLCR	termios.h	688;"	d
INPCK	termios.h	686;"	d
INT16_C	stdint.h	11;"	d
INT16_MAX	stdint.h	337;"	d
INT16_MIN	stdint.h	189;"	d
INT32_C	stdint.h	12;"	d
INT32_MAX	stdint.h	295;"	d
INT32_MIN	stdint.h	150;"	d
INT64_C	stdint.h	17;"	d
INT64_C	stdint.h	20;"	d
INT64_C	stdint.h	23;"	d
INT64_C	stdint.h	26;"	d
INT64_C	stdint.h	53;"	d
INT64_C	stdint.h	56;"	d
INT64_C	stdint.h	59;"	d
INT64_MAX	stdint.h	428;"	d
INT64_MIN	stdint.h	239;"	d
INT8_C	stdint.h	13;"	d
INT8_MAX	stdint.h	244;"	d
INT8_MIN	stdint.h	147;"	d
INTMAX_C	stdint.h	29;"	d
INTMAX_C	stdint.h	32;"	d
INTMAX_C	stdint.h	35;"	d
INTMAX_C	stdint.h	38;"	d
INTMAX_C	stdint.h	62;"	d
INTMAX_C	stdint.h	65;"	d
INTMAX_C	stdint.h	68;"	d
INTMAX_MAX	stdint.h	429;"	d
INTMAX_MIN	stdint.h	240;"	d
INTPTR_MAX	stdint.h	297;"	d
INTPTR_MAX	stdint.h	300;"	d
INTPTR_MAX	stdint.h	303;"	d
INTPTR_MAX	stdint.h	381;"	d
INTPTR_MAX	stdint.h	384;"	d
INTPTR_MAX	stdint.h	387;"	d
INTPTR_MAX	stdint.h	390;"	d
INTPTR_MIN	stdint.h	152;"	d
INTPTR_MIN	stdint.h	155;"	d
INTPTR_MIN	stdint.h	158;"	d
INTPTR_MIN	stdint.h	192;"	d
INTPTR_MIN	stdint.h	195;"	d
INTPTR_MIN	stdint.h	198;"	d
INTPTR_MIN	stdint.h	201;"	d
INT_FAST16_MAX	stdint.h	306;"	d
INT_FAST16_MAX	stdint.h	309;"	d
INT_FAST16_MAX	stdint.h	312;"	d
INT_FAST16_MAX	stdint.h	393;"	d
INT_FAST16_MAX	stdint.h	396;"	d
INT_FAST16_MAX	stdint.h	399;"	d
INT_FAST16_MAX	stdint.h	402;"	d
INT_FAST16_MIN	stdint.h	161;"	d
INT_FAST16_MIN	stdint.h	164;"	d
INT_FAST16_MIN	stdint.h	167;"	d
INT_FAST16_MIN	stdint.h	204;"	d
INT_FAST16_MIN	stdint.h	207;"	d
INT_FAST16_MIN	stdint.h	210;"	d
INT_FAST16_MIN	stdint.h	213;"	d
INT_FAST32_MAX	stdint.h	315;"	d
INT_FAST32_MAX	stdint.h	318;"	d
INT_FAST32_MAX	stdint.h	321;"	d
INT_FAST32_MAX	stdint.h	405;"	d
INT_FAST32_MAX	stdint.h	408;"	d
INT_FAST32_MAX	stdint.h	411;"	d
INT_FAST32_MAX	stdint.h	414;"	d
INT_FAST32_MIN	stdint.h	170;"	d
INT_FAST32_MIN	stdint.h	173;"	d
INT_FAST32_MIN	stdint.h	176;"	d
INT_FAST32_MIN	stdint.h	216;"	d
INT_FAST32_MIN	stdint.h	219;"	d
INT_FAST32_MIN	stdint.h	222;"	d
INT_FAST32_MIN	stdint.h	225;"	d
INT_FAST64_MAX	stdint.h	430;"	d
INT_FAST64_MIN	stdint.h	241;"	d
INT_FAST8_MAX	stdint.h	245;"	d
INT_FAST8_MIN	stdint.h	148;"	d
INT_LEAST16_MAX	stdint.h	338;"	d
INT_LEAST16_MIN	stdint.h	190;"	d
INT_LEAST32_MAX	stdint.h	323;"	d
INT_LEAST32_MIN	stdint.h	178;"	d
INT_LEAST64_MAX	stdint.h	431;"	d
INT_LEAST64_MIN	stdint.h	242;"	d
INT_LEAST8_MAX	stdint.h	246;"	d
INT_LEAST8_MIN	stdint.h	149;"	d
INT_MAX	limits.h	178;"	d
INT_MIN	limits.h	177;"	d
IN_MULTICAST	netinet/in.h	79;"	d
IPC_CREAT	sys/ipc.h	14;"	d
IPC_EXCL	sys/ipc.h	15;"	d
IPC_NOWAIT	sys/ipc.h	16;"	d
IPC_PRIVATE	sys/ipc.h	12;"	d
IPC_RMID	sys/ipc.h	13;"	d
IPC_SET	sys/ipc.h	17;"	d
IPC_STAT	sys/ipc.h	18;"	d
IPPORT_RESERVED	netdb.h	17;"	d
IPPROTO_ICMP	netinet/in.h	18;"	d
IPPROTO_ICMPV6	netinet/in.h	23;"	d
IPPROTO_IGMP	netinet/in.h	20;"	d
IPPROTO_IP	netinet/in.h	17;"	d
IPPROTO_IPV6	netinet/in.h	22;"	d
IPPROTO_RAW	netinet/in.h	21;"	d
IPPROTO_TCP	netinet/in.h	24;"	d
IPPROTO_UDP	netinet/in.h	19;"	d
IPP_ATTRIBUTES	cups/cups.h	/^	IPP_ATTRIBUTES,$/;"	e	enum:__anon99
IPP_ATTRIBUTES_NOT_SETTABLE	cups/cups.h	/^	IPP_ATTRIBUTES_NOT_SETTABLE,$/;"	e	enum:__anon99
IPP_BAD_REQUEST	cups/cups.h	/^	IPP_BAD_REQUEST,$/;"	e	enum:__anon99
IPP_CHARSET	cups/cups.h	/^	IPP_CHARSET,$/;"	e	enum:__anon99
IPP_COMPRESSION_ERROR	cups/cups.h	/^	IPP_COMPRESSION_ERROR,$/;"	e	enum:__anon99
IPP_COMPRESSION_NOT_SUPPORTED	cups/cups.h	/^	IPP_COMPRESSION_NOT_SUPPORTED,$/;"	e	enum:__anon99
IPP_CONFLICT	cups/cups.h	/^	IPP_CONFLICT,$/;"	e	enum:__anon99
IPP_DEVICE_ERROR	cups/cups.h	/^	IPP_DEVICE_ERROR,$/;"	e	enum:__anon99
IPP_DOCUMENT_ACCESS_ERROR	cups/cups.h	/^	IPP_DOCUMENT_ACCESS_ERROR,$/;"	e	enum:__anon99
IPP_DOCUMENT_FORMAT	cups/cups.h	/^	IPP_DOCUMENT_FORMAT,$/;"	e	enum:__anon99
IPP_DOCUMENT_FORMAT_ERROR	cups/cups.h	/^	IPP_DOCUMENT_FORMAT_ERROR,$/;"	e	enum:__anon99
IPP_ERROR_JOB_CANCELLED	cups/cups.h	/^	IPP_ERROR_JOB_CANCELLED,$/;"	e	enum:__anon99
IPP_FORBIDDEN	cups/cups.h	/^	IPP_FORBIDDEN,$/;"	e	enum:__anon99
IPP_GONE	cups/cups.h	/^	IPP_GONE,$/;"	e	enum:__anon99
IPP_IGNORED_ALL_NOTIFICATIONS	cups/cups.h	/^	IPP_IGNORED_ALL_NOTIFICATIONS,$/;"	e	enum:__anon99
IPP_IGNORED_ALL_SUBSCRIPTIONS	cups/cups.h	/^	IPP_IGNORED_ALL_SUBSCRIPTIONS,$/;"	e	enum:__anon99
IPP_INTERNAL_ERROR	cups/cups.h	/^	IPP_INTERNAL_ERROR,$/;"	e	enum:__anon99
IPP_JOB_ABORTED	cups/cups.h	/^	IPP_JOB_ABORTED,$/;"	e	enum:__anon97
IPP_JOB_CANCELLED	cups/cups.h	/^	IPP_JOB_CANCELLED,$/;"	e	enum:__anon97
IPP_JOB_COMPLETED	cups/cups.h	/^	IPP_JOB_COMPLETED$/;"	e	enum:__anon97
IPP_JOB_HELD	cups/cups.h	/^	IPP_JOB_HELD,$/;"	e	enum:__anon97
IPP_JOB_PENDING	cups/cups.h	/^	IPP_JOB_PENDING,$/;"	e	enum:__anon97
IPP_JOB_PROCESSING	cups/cups.h	/^	IPP_JOB_PROCESSING,$/;"	e	enum:__anon97
IPP_JOB_STOPPED	cups/cups.h	/^	IPP_JOB_STOPPED,$/;"	e	enum:__anon97
IPP_MULTIPLE_JOBS_NOT_SUPPORTED	cups/cups.h	/^	IPP_MULTIPLE_JOBS_NOT_SUPPORTED,$/;"	e	enum:__anon99
IPP_NOT_ACCEPTING	cups/cups.h	/^	IPP_NOT_ACCEPTING,$/;"	e	enum:__anon99
IPP_NOT_AUTHENTICATED	cups/cups.h	/^	IPP_NOT_AUTHENTICATED,$/;"	e	enum:__anon99
IPP_NOT_AUTHORIZED	cups/cups.h	/^	IPP_NOT_AUTHORIZED,$/;"	e	enum:__anon99
IPP_NOT_FOUND	cups/cups.h	/^	IPP_NOT_FOUND,$/;"	e	enum:__anon99
IPP_NOT_POSSIBLE	cups/cups.h	/^	IPP_NOT_POSSIBLE,$/;"	e	enum:__anon99
IPP_OK	cups/cups.h	/^	IPP_OK,$/;"	e	enum:__anon99
IPP_OK_BUT_CANCEL_SUBSCRIPTION	cups/cups.h	/^	IPP_OK_BUT_CANCEL_SUBSCRIPTION,$/;"	e	enum:__anon99
IPP_OK_CONFLICT	cups/cups.h	/^	IPP_OK_CONFLICT,$/;"	e	enum:__anon99
IPP_OK_IGNORED_NOTIFICATIONS	cups/cups.h	/^	IPP_OK_IGNORED_NOTIFICATIONS,$/;"	e	enum:__anon99
IPP_OK_IGNORED_SUBSCRIPTIONS	cups/cups.h	/^	IPP_OK_IGNORED_SUBSCRIPTIONS,$/;"	e	enum:__anon99
IPP_OK_SUBST	cups/cups.h	/^	IPP_OK_SUBST,$/;"	e	enum:__anon99
IPP_OK_TOO_MANY_EVENTS	cups/cups.h	/^	IPP_OK_TOO_MANY_EVENTS,$/;"	e	enum:__anon99
IPP_OPERATION_NOT_SUPPORTED	cups/cups.h	/^	IPP_OPERATION_NOT_SUPPORTED,$/;"	e	enum:__anon99
IPP_PRINTER_BUSY	cups/cups.h	/^	IPP_PRINTER_BUSY,$/;"	e	enum:__anon99
IPP_PRINTER_IS_DEACTIVATED	cups/cups.h	/^	IPP_PRINTER_IS_DEACTIVATED$/;"	e	enum:__anon99
IPP_PRINT_SUPPORT_FILE_NOT_FOUND	cups/cups.h	/^	IPP_PRINT_SUPPORT_FILE_NOT_FOUND,$/;"	e	enum:__anon99
IPP_REDIRECTION_OTHER_SITE	cups/cups.h	/^	IPP_REDIRECTION_OTHER_SITE,$/;"	e	enum:__anon99
IPP_REQUEST_ENTITY	cups/cups.h	/^	IPP_REQUEST_ENTITY,$/;"	e	enum:__anon99
IPP_REQUEST_VALUE	cups/cups.h	/^	IPP_REQUEST_VALUE,$/;"	e	enum:__anon99
IPP_SERVICE_UNAVAILABLE	cups/cups.h	/^	IPP_SERVICE_UNAVAILABLE,$/;"	e	enum:__anon99
IPP_TEMPORARY_ERROR	cups/cups.h	/^	IPP_TEMPORARY_ERROR,$/;"	e	enum:__anon99
IPP_TIMEOUT	cups/cups.h	/^	IPP_TIMEOUT,$/;"	e	enum:__anon99
IPP_TOO_MANY_SUBSCRIPTIONS	cups/cups.h	/^	IPP_TOO_MANY_SUBSCRIPTIONS,$/;"	e	enum:__anon99
IPP_URI_SCHEME	cups/cups.h	/^	IPP_URI_SCHEME,$/;"	e	enum:__anon99
IPP_VERSION_NOT_SUPPORTED	cups/cups.h	/^	IPP_VERSION_NOT_SUPPORTED,$/;"	e	enum:__anon99
IPTOS_LOWCOST	netinet/ip.h	16;"	d
IPTOS_LOWDELAY	netinet/ip.h	19;"	d
IPTOS_MINCOST	netinet/ip.h	21;"	d
IPTOS_PREC	netinet/ip.h	26;"	d
IPTOS_PREC_MASK	netinet/ip.h	27;"	d
IPTOS_RELIABILITY	netinet/ip.h	17;"	d
IPTOS_THROUGHPUT	netinet/ip.h	18;"	d
IPTOS_TOS	netinet/ip.h	15;"	d
IPTOS_TOS_MASK	netinet/ip.h	20;"	d
IPV6_ADD_MEMBERSHIP	netinet/in.h	134;"	d
IPV6_DROP_MEMBERSHIP	netinet/in.h	135;"	d
IPV6_JOIN_GROUP	netinet/in.h	125;"	d
IPV6_LEAVE_GROUP	netinet/in.h	126;"	d
IPV6_MULTICAST_HOPS	netinet/in.h	122;"	d
IPV6_MULTICAST_IF	netinet/in.h	121;"	d
IPV6_MULTICAST_LOOP	netinet/in.h	123;"	d
IPV6_UNICAST_HOPS	netinet/in.h	120;"	d
IPV6_V6ONLY	netinet/in.h	127;"	d
IP_ADD_MEMBERSHIP	netinet/in.h	131;"	d
IP_DROP_MEMBERSHIP	netinet/in.h	132;"	d
IP_MULTICAST_IF	netinet/in.h	128;"	d
IP_MULTICAST_LOOP	netinet/in.h	130;"	d
IP_MULTICAST_TTL	netinet/in.h	129;"	d
IP_OPTIONS	netinet/in.h	133;"	d
IP_TOS	netinet/in.h	119;"	d
IP_TTL	netinet/in.h	124;"	d
ISIG	termios.h	1149;"	d
ISIG	termios.h	1161;"	d
ISIG	termios.h	1164;"	d
ISIG	termios.h	980;"	d
ISIG	termios.h	983;"	d
ISIG	termios.h	986;"	d
ISIG	termios.h	989;"	d
ISTRIP	termios.h	687;"	d
ITIMER_PROF	sys/time.h	15;"	d
ITIMER_REAL	sys/time.h	13;"	d
ITIMER_VIRTUAL	sys/time.h	14;"	d
IUCLC	termios.h	384;"	d
IUCLC	termios.h	387;"	d
IUCLC	termios.h	396;"	d
IUCLC	termios.h	89;"	d
IUCLC	termios.h	92;"	d
IUCLC	termios.h	95;"	d
IUCLC	termios.h	98;"	d
IXANY	termios.h	703;"	d
IXOFF	termios.h	705;"	d
IXOFF	termios.h	708;"	d
IXOFF	termios.h	711;"	d
IXOFF	termios.h	714;"	d
IXOFF	termios.h	718;"	d
IXOFF	termios.h	721;"	d
IXOFF	termios.h	727;"	d
IXON	termios.h	692;"	d
IXON	termios.h	695;"	d
IXON	termios.h	698;"	d
IXON	termios.h	701;"	d
IXON	termios.h	724;"	d
IXON	termios.h	730;"	d
IXON	termios.h	733;"	d
ImagingBoundingBox	cups/raster.h	/^	unsigned int ImagingBoundingBox[4];$/;"	m	struct:__anon87	access:public
InsertSheet	cups/raster.h	/^	cups_bool_t InsertSheet;$/;"	m	struct:__anon87	access:public
Jog	cups/raster.h	/^	cups_jog_t Jog;$/;"	m	struct:__anon87	access:public
KEY_A1	curses.h	210;"	d
KEY_A1	ncurses.h	210;"	d
KEY_A3	curses.h	211;"	d
KEY_A3	ncurses.h	211;"	d
KEY_B2	curses.h	212;"	d
KEY_B2	ncurses.h	212;"	d
KEY_BACKSPACE	curses.h	188;"	d
KEY_BACKSPACE	ncurses.h	188;"	d
KEY_BEG	curses.h	216;"	d
KEY_BEG	ncurses.h	216;"	d
KEY_BREAK	curses.h	181;"	d
KEY_BREAK	ncurses.h	181;"	d
KEY_BTAB	curses.h	215;"	d
KEY_BTAB	ncurses.h	215;"	d
KEY_C1	curses.h	213;"	d
KEY_C1	ncurses.h	213;"	d
KEY_C3	curses.h	214;"	d
KEY_C3	ncurses.h	214;"	d
KEY_CANCEL	curses.h	217;"	d
KEY_CANCEL	ncurses.h	217;"	d
KEY_CATAB	curses.h	204;"	d
KEY_CATAB	ncurses.h	204;"	d
KEY_CLEAR	curses.h	195;"	d
KEY_CLEAR	ncurses.h	195;"	d
KEY_CLOSE	curses.h	218;"	d
KEY_CLOSE	ncurses.h	218;"	d
KEY_CODE_YES	curses.h	180;"	d
KEY_CODE_YES	ncurses.h	180;"	d
KEY_COMMAND	curses.h	219;"	d
KEY_COMMAND	ncurses.h	219;"	d
KEY_COPY	curses.h	220;"	d
KEY_COPY	ncurses.h	220;"	d
KEY_CREATE	curses.h	221;"	d
KEY_CREATE	ncurses.h	221;"	d
KEY_CTAB	curses.h	203;"	d
KEY_CTAB	ncurses.h	203;"	d
KEY_DC	curses.h	192;"	d
KEY_DC	ncurses.h	192;"	d
KEY_DL	curses.h	190;"	d
KEY_DL	ncurses.h	190;"	d
KEY_DOWN	curses.h	183;"	d
KEY_DOWN	ncurses.h	183;"	d
KEY_EIC	curses.h	194;"	d
KEY_EIC	ncurses.h	194;"	d
KEY_END	curses.h	222;"	d
KEY_END	ncurses.h	222;"	d
KEY_ENTER	curses.h	205;"	d
KEY_ENTER	ncurses.h	205;"	d
KEY_EOL	curses.h	197;"	d
KEY_EOL	ncurses.h	197;"	d
KEY_EOS	curses.h	196;"	d
KEY_EOS	ncurses.h	196;"	d
KEY_EXIT	curses.h	223;"	d
KEY_EXIT	ncurses.h	223;"	d
KEY_F	curses.h	179;"	d
KEY_F	ncurses.h	179;"	d
KEY_F0	curses.h	189;"	d
KEY_F0	ncurses.h	189;"	d
KEY_FIND	curses.h	224;"	d
KEY_FIND	ncurses.h	224;"	d
KEY_HELP	curses.h	225;"	d
KEY_HELP	ncurses.h	225;"	d
KEY_HOME	curses.h	187;"	d
KEY_HOME	ncurses.h	187;"	d
KEY_IC	curses.h	193;"	d
KEY_IC	ncurses.h	193;"	d
KEY_IL	curses.h	191;"	d
KEY_IL	ncurses.h	191;"	d
KEY_LEFT	curses.h	185;"	d
KEY_LEFT	ncurses.h	185;"	d
KEY_LL	curses.h	209;"	d
KEY_LL	ncurses.h	209;"	d
KEY_MARK	curses.h	226;"	d
KEY_MARK	ncurses.h	226;"	d
KEY_MAX	curses.h	273;"	d
KEY_MAX	ncurses.h	273;"	d
KEY_MESSAGE	curses.h	227;"	d
KEY_MESSAGE	ncurses.h	227;"	d
KEY_MIN	curses.h	182;"	d
KEY_MIN	ncurses.h	182;"	d
KEY_MOUSE	curses.h	271;"	d
KEY_MOUSE	ncurses.h	271;"	d
KEY_MOVE	curses.h	228;"	d
KEY_MOVE	ncurses.h	228;"	d
KEY_NEXT	curses.h	229;"	d
KEY_NEXT	ncurses.h	229;"	d
KEY_NPAGE	curses.h	200;"	d
KEY_NPAGE	ncurses.h	200;"	d
KEY_OPEN	curses.h	230;"	d
KEY_OPEN	ncurses.h	230;"	d
KEY_OPTIONS	curses.h	231;"	d
KEY_OPTIONS	ncurses.h	231;"	d
KEY_PPAGE	curses.h	201;"	d
KEY_PPAGE	ncurses.h	201;"	d
KEY_PREVIOUS	curses.h	232;"	d
KEY_PREVIOUS	ncurses.h	232;"	d
KEY_PRINT	curses.h	208;"	d
KEY_PRINT	ncurses.h	208;"	d
KEY_REDO	curses.h	233;"	d
KEY_REDO	ncurses.h	233;"	d
KEY_REFERENCE	curses.h	234;"	d
KEY_REFERENCE	ncurses.h	234;"	d
KEY_REFRESH	curses.h	235;"	d
KEY_REFRESH	ncurses.h	235;"	d
KEY_REPLACE	curses.h	236;"	d
KEY_REPLACE	ncurses.h	236;"	d
KEY_RESET	curses.h	207;"	d
KEY_RESET	ncurses.h	207;"	d
KEY_RESIZE	curses.h	272;"	d
KEY_RESIZE	ncurses.h	272;"	d
KEY_RESTART	curses.h	237;"	d
KEY_RESTART	ncurses.h	237;"	d
KEY_RESUME	curses.h	238;"	d
KEY_RESUME	ncurses.h	238;"	d
KEY_RIGHT	curses.h	186;"	d
KEY_RIGHT	ncurses.h	186;"	d
KEY_SAVE	curses.h	239;"	d
KEY_SAVE	ncurses.h	239;"	d
KEY_SBEG	curses.h	240;"	d
KEY_SBEG	ncurses.h	240;"	d
KEY_SCANCEL	curses.h	241;"	d
KEY_SCANCEL	ncurses.h	241;"	d
KEY_SCOMMAND	curses.h	242;"	d
KEY_SCOMMAND	ncurses.h	242;"	d
KEY_SCOPY	curses.h	243;"	d
KEY_SCOPY	ncurses.h	243;"	d
KEY_SCREATE	curses.h	244;"	d
KEY_SCREATE	ncurses.h	244;"	d
KEY_SDC	curses.h	245;"	d
KEY_SDC	ncurses.h	245;"	d
KEY_SDL	curses.h	246;"	d
KEY_SDL	ncurses.h	246;"	d
KEY_SELECT	curses.h	247;"	d
KEY_SELECT	ncurses.h	247;"	d
KEY_SEND	curses.h	248;"	d
KEY_SEND	ncurses.h	248;"	d
KEY_SEOL	curses.h	249;"	d
KEY_SEOL	ncurses.h	249;"	d
KEY_SEXIT	curses.h	250;"	d
KEY_SEXIT	ncurses.h	250;"	d
KEY_SF	curses.h	198;"	d
KEY_SF	ncurses.h	198;"	d
KEY_SFIND	curses.h	251;"	d
KEY_SFIND	ncurses.h	251;"	d
KEY_SHELP	curses.h	252;"	d
KEY_SHELP	ncurses.h	252;"	d
KEY_SHOME	curses.h	253;"	d
KEY_SHOME	ncurses.h	253;"	d
KEY_SIC	curses.h	254;"	d
KEY_SIC	ncurses.h	254;"	d
KEY_SLEFT	curses.h	255;"	d
KEY_SLEFT	ncurses.h	255;"	d
KEY_SMESSAGE	curses.h	256;"	d
KEY_SMESSAGE	ncurses.h	256;"	d
KEY_SMOVE	curses.h	257;"	d
KEY_SMOVE	ncurses.h	257;"	d
KEY_SNEXT	curses.h	258;"	d
KEY_SNEXT	ncurses.h	258;"	d
KEY_SOPTIONS	curses.h	259;"	d
KEY_SOPTIONS	ncurses.h	259;"	d
KEY_SPREVIOUS	curses.h	260;"	d
KEY_SPREVIOUS	ncurses.h	260;"	d
KEY_SPRINT	curses.h	261;"	d
KEY_SPRINT	ncurses.h	261;"	d
KEY_SR	curses.h	199;"	d
KEY_SR	ncurses.h	199;"	d
KEY_SREDO	curses.h	262;"	d
KEY_SREDO	ncurses.h	262;"	d
KEY_SREPLACE	curses.h	263;"	d
KEY_SREPLACE	ncurses.h	263;"	d
KEY_SRESET	curses.h	206;"	d
KEY_SRESET	ncurses.h	206;"	d
KEY_SRIGHT	curses.h	264;"	d
KEY_SRIGHT	ncurses.h	264;"	d
KEY_SRSUME	curses.h	265;"	d
KEY_SRSUME	ncurses.h	265;"	d
KEY_SSAVE	curses.h	266;"	d
KEY_SSAVE	ncurses.h	266;"	d
KEY_SSUSPEND	curses.h	267;"	d
KEY_SSUSPEND	ncurses.h	267;"	d
KEY_STAB	curses.h	202;"	d
KEY_STAB	ncurses.h	202;"	d
KEY_SUNDO	curses.h	268;"	d
KEY_SUNDO	ncurses.h	268;"	d
KEY_SUSPEND	curses.h	269;"	d
KEY_SUSPEND	ncurses.h	269;"	d
KEY_UNDO	curses.h	270;"	d
KEY_UNDO	ncurses.h	270;"	d
KEY_UP	curses.h	184;"	d
KEY_UP	ncurses.h	184;"	d
LC_ADDRESS	locale.h	59;"	d
LC_ADDRESS_MASK	locale.h	85;"	d
LC_ALL	locale.h	56;"	d
LC_ALL_MASK	locale.h	97;"	d
LC_COLLATE	locale.h	53;"	d
LC_COLLATE_MASK	locale.h	86;"	d
LC_CTYPE	locale.h	47;"	d
LC_CTYPE_MASK	locale.h	96;"	d
LC_GLOBAL_LOCALE	locale.h	46;"	d
LC_IDENTIFICATION	locale.h	51;"	d
LC_IDENTIFICATION_MASK	locale.h	87;"	d
LC_MEASUREMENT	locale.h	50;"	d
LC_MEASUREMENT_MASK	locale.h	88;"	d
LC_MESSAGES	locale.h	55;"	d
LC_MESSAGES_MASK	locale.h	89;"	d
LC_MONETARY	locale.h	54;"	d
LC_MONETARY_MASK	locale.h	90;"	d
LC_NAME	locale.h	58;"	d
LC_NAME_MASK	locale.h	91;"	d
LC_NUMERIC	locale.h	48;"	d
LC_NUMERIC_MASK	locale.h	92;"	d
LC_PAPER	locale.h	57;"	d
LC_PAPER_MASK	locale.h	93;"	d
LC_TELEPHONE	locale.h	49;"	d
LC_TELEPHONE_MASK	locale.h	94;"	d
LC_TIME	locale.h	52;"	d
LC_TIME_MASK	locale.h	95;"	d
LINE_MAX	limits.h	54;"	d
LITTLE_ENDIAN	endian.h	17;"	d
LLONG_MAX	limits.h	100;"	d
LLONG_MIN	limits.h	11;"	d
LNKTYPE	tar.h	12;"	d
LOCK_EX	sys/file.h	12;"	d
LOCK_NB	sys/file.h	13;"	d
LOCK_SH	sys/file.h	11;"	d
LOCK_UN	sys/file.h	14;"	d
LOGIN_PROCESS	utmp.h	227;"	d
LOG_ALERT	syslog.h	20;"	d
LOG_AUTH	syslog.h	38;"	d
LOG_AUTHPRIV	syslog.h	33;"	d
LOG_CONS	syslog.h	68;"	d
LOG_CRIT	syslog.h	21;"	d
LOG_CRON	syslog.h	43;"	d
LOG_DAEMON	syslog.h	37;"	d
LOG_DEBUG	syslog.h	26;"	d
LOG_EMERG	syslog.h	18;"	d
LOG_ERR	syslog.h	22;"	d
LOG_FAC	syslog.h	31;"	d
LOG_FACMASK	syslog.h	44;"	d
LOG_FTP	syslog.h	34;"	d
LOG_INFO	syslog.h	25;"	d
LOG_KERN	syslog.h	32;"	d
LOG_LOCAL0	syslog.h	49;"	d
LOG_LOCAL1	syslog.h	50;"	d
LOG_LOCAL2	syslog.h	51;"	d
LOG_LOCAL3	syslog.h	52;"	d
LOG_LOCAL4	syslog.h	53;"	d
LOG_LOCAL5	syslog.h	54;"	d
LOG_LOCAL6	syslog.h	55;"	d
LOG_LOCAL7	syslog.h	56;"	d
LOG_LPR	syslog.h	40;"	d
LOG_MAIL	syslog.h	36;"	d
LOG_MAKEPRI	syslog.h	16;"	d
LOG_MASK	syslog.h	62;"	d
LOG_NDELAY	syslog.h	70;"	d
LOG_NEWS	syslog.h	41;"	d
LOG_NOTICE	syslog.h	24;"	d
LOG_NOWAIT	syslog.h	71;"	d
LOG_ODELAY	syslog.h	69;"	d
LOG_PERROR	syslog.h	72;"	d
LOG_PID	syslog.h	67;"	d
LOG_PRI	syslog.h	17;"	d
LOG_PRIMASK	syslog.h	19;"	d
LOG_SYSLOG	syslog.h	39;"	d
LOG_UPTO	syslog.h	61;"	d
LOG_USER	syslog.h	35;"	d
LOG_UUCP	syslog.h	42;"	d
LOG_WARNING	syslog.h	23;"	d
LONG_MAX	limits.h	13;"	d
LONG_MAX	limits.h	16;"	d
LONG_MAX	limits.h	19;"	d
LONG_MAX	limits.h	58;"	d
LONG_MAX	limits.h	61;"	d
LONG_MAX	limits.h	95;"	d
LONG_MAX	limits.h	98;"	d
LONG_MIN	limits.h	184;"	d
L_ctermid	stdio.h	43;"	d
L_cuserid	stdio.h	44;"	d
L_tmpnam	stdio.h	28;"	d
LeadingEdge	cups/raster.h	/^	cups_edge_t LeadingEdge;$/;"	m	struct:__anon87	access:public
MAGIC	cpio.h	31;"	d
MAP_ANON	sys/mman.h	70;"	d
MAP_ANONYMOUS	sys/mman.h	21;"	d
MAP_FAILED	sys/mman.h	14;"	d
MAP_FIXED	sys/mman.h	19;"	d
MAP_PRIVATE	sys/mman.h	17;"	d
MAP_SHARED	sys/mman.h	16;"	d
MATH_ERREXCEPT	math.h	268;"	d
MATH_ERRNO	math.h	267;"	d
MAXPATHLEN	sys/param.h	12;"	d
MAX_MEM_LEVEL	zlib.h	15;"	d
MAX_WBITS	zlib.h	14;"	d
MB_CUR_MAX	stdlib.h	13;"	d
MB_LEN_MAX	limits.h	115;"	d
MCL_CURRENT	sys/mman.h	24;"	d
MCL_CURRENT	sys/mman.h	27;"	d
MCL_CURRENT	sys/mman.h	30;"	d
MCL_CURRENT	sys/mman.h	33;"	d
MCL_CURRENT	sys/mman.h	36;"	d
MCL_CURRENT	sys/mman.h	65;"	d
MCL_CURRENT	sys/mman.h	68;"	d
MCL_FUTURE	sys/mman.h	41;"	d
MCL_FUTURE	sys/mman.h	44;"	d
MCL_FUTURE	sys/mman.h	47;"	d
MCL_FUTURE	sys/mman.h	50;"	d
MCL_FUTURE	sys/mman.h	53;"	d
MCL_FUTURE	sys/mman.h	56;"	d
MCL_FUTURE	sys/mman.h	59;"	d
MINSIGSTKSZ	signal.h	517;"	d
MINSIGSTKSZ	signal.h	520;"	d
MINSIGSTKSZ	signal.h	523;"	d
MINSIGSTKSZ	signal.h	526;"	d
MINSIGSTKSZ	signal.h	529;"	d
MINSIGSTKSZ	signal.h	532;"	d
MINSIGSTKSZ	signal.h	535;"	d
MM_APPL	fmtmsg.h	22;"	d
MM_ERROR	fmtmsg.h	29;"	d
MM_FIRM	fmtmsg.h	20;"	d
MM_HALT	fmtmsg.h	28;"	d
MM_HARD	fmtmsg.h	15;"	d
MM_NOSEV	fmtmsg.h	27;"	d
MM_NRECOV	fmtmsg.h	16;"	d
MM_NULLLBL	fmtmsg.h	34;"	d
MM_OPSYS	fmtmsg.h	19;"	d
MM_RECOVER	fmtmsg.h	21;"	d
MM_SOFT	fmtmsg.h	18;"	d
MM_UTIL	fmtmsg.h	17;"	d
MON_1	langinfo.h	58;"	d
MON_10	langinfo.h	67;"	d
MON_11	langinfo.h	68;"	d
MON_12	langinfo.h	69;"	d
MON_2	langinfo.h	59;"	d
MON_3	langinfo.h	60;"	d
MON_4	langinfo.h	61;"	d
MON_5	langinfo.h	62;"	d
MON_6	langinfo.h	63;"	d
MON_7	langinfo.h	64;"	d
MON_8	langinfo.h	65;"	d
MON_9	langinfo.h	66;"	d
MREMAP_FIXED	sys/mman.h	61;"	d
MREMAP_MAYMOVE	sys/mman.h	38;"	d
MSG_ACCEPTED	rpc/rpc_msg.h	/^	MSG_ACCEPTED = 0,$/;"	e	enum:reply_stat
MSG_CTRUNC	sys/socket.h	279;"	d
MSG_DENIED	rpc/rpc_msg.h	/^	MSG_DENIED = 1$/;"	e	enum:reply_stat
MSG_DONTROUTE	sys/socket.h	278;"	d
MSG_EOR	sys/socket.h	275;"	d
MSG_NOERROR	sys/msg.h	15;"	d
MSG_OOB	sys/socket.h	276;"	d
MSG_PEEK	sys/socket.h	277;"	d
MSG_TRUNC	sys/socket.h	274;"	d
MSG_WAITALL	sys/socket.h	273;"	d
MS_ASYNC	sys/mman.h	39;"	d
MS_INVALIDATE	sys/mman.h	62;"	d
MS_SYNC	sys/mman.h	63;"	d
M_1_PI	math.h	234;"	d
M_2_PI	math.h	236;"	d
M_2_SQRTPI	math.h	240;"	d
M_E	math.h	245;"	d
M_LN10	math.h	244;"	d
M_LN2	math.h	237;"	d
M_LOG10E	math.h	235;"	d
M_LOG2E	math.h	242;"	d
M_PI	math.h	261;"	d
M_PI_2	math.h	243;"	d
M_PI_4	math.h	239;"	d
M_SQRT1_2	math.h	238;"	d
M_SQRT2	math.h	241;"	d
ManualFeed	cups/raster.h	/^	cups_bool_t ManualFeed;$/;"	m	struct:__anon87	access:public
Margins	cups/raster.h	/^	unsigned int Margins[2];$/;"	m	struct:__anon87	access:public
MediaClass	cups/raster.h	/^	char MediaClass[64];$/;"	m	struct:__anon87	access:public
MediaColor	cups/raster.h	/^	char MediaColor[64];$/;"	m	struct:__anon87	access:public
MediaPosition	cups/raster.h	/^	unsigned int MediaPosition;$/;"	m	struct:__anon87	access:public
MediaType	cups/raster.h	/^	char MediaType[64];$/;"	m	struct:__anon87	access:public
MediaWeight	cups/raster.h	/^	unsigned int MediaWeight;$/;"	m	struct:__anon87	access:public
MirrorPrint	cups/raster.h	/^	cups_bool_t MirrorPrint;$/;"	m	struct:__anon87	access:public
NAN	math.h	206;"	d
NCCS	termios.h	446;"	d
NCURSES_ATTR_SHIFT	curses.h	286;"	d
NCURSES_ATTR_SHIFT	ncurses.h	286;"	d
NCURSES_BITS	curses.h	283;"	d
NCURSES_BITS	ncurses.h	283;"	d
NCURSES_EXPORT	curses.h	56;"	d
NCURSES_EXPORT	ncurses.h	56;"	d
NCURSES_EXPORT_VAR	curses.h	57;"	d
NCURSES_EXPORT_VAR	ncurses.h	57;"	d
NETDB_INTERNAL	netdb.h	14;"	d
NETDB_SUCCESS	netdb.h	15;"	d
NEW_TIME	utmp.h	224;"	d
NFDBITS	sys/select.h	14;"	d
NFS_SUPER_MAGIC	sys/statfs.h	12;"	d
NGREG	ucontext.h	101;"	d
NGREG	ucontext.h	104;"	d
NGREG	ucontext.h	107;"	d
NGREG	ucontext.h	110;"	d
NGREG	ucontext.h	113;"	d
NGREG	ucontext.h	116;"	d
NGROUPS_MAX	limits.h	74;"	d
NI_DGRAM	netdb.h	80;"	d
NI_MAXHOST	netdb.h	18;"	d
NI_MAXSERV	netdb.h	21;"	d
NI_NAMEREQD	netdb.h	83;"	d
NI_NOFQDN	netdb.h	82;"	d
NI_NUMERICHOST	netdb.h	79;"	d
NI_NUMERICSERV	netdb.h	81;"	d
NL0	termios.h	18;"	d
NL1	termios.h	63;"	d
NLDLY	termios.h	332;"	d
NLDLY	termios.h	417;"	d
NLDLY	termios.h	420;"	d
NLDLY	termios.h	65;"	d
NLDLY	termios.h	68;"	d
NLDLY	termios.h	71;"	d
NLDLY	termios.h	74;"	d
NL_CAT_LOCALE	nl_types.h	11;"	d
NL_SETD	nl_types.h	12;"	d
NOEXPR	langinfo.h	111;"	d
NOFILE	sys/param.h	11;"	d
NOFLSH	termios.h	1041;"	d
NOFLSH	termios.h	1044;"	d
NOFLSH	termios.h	1047;"	d
NOFLSH	termios.h	1050;"	d
NOFLSH	termios.h	1137;"	d
NOFLSH	termios.h	1140;"	d
NOFLSH	termios.h	1167;"	d
NOSTR	langinfo.h	113;"	d
NO_ADDRESS	netdb.h	24;"	d
NO_DATA	netdb.h	22;"	d
NO_RECOVERY	netdb.h	20;"	d
NSIG	signal.h	42;"	d
NULL	stddef.h	12;"	d
NULLPROC	rpc/clnt.h	21;"	d
NegativePrint	cups/raster.h	/^	cups_bool_t NegativePrint;$/;"	m	struct:__anon87	access:public
NumCopies	cups/raster.h	/^	unsigned int NumCopies;$/;"	m	struct:__anon87	access:public
OCRNL	termios.h	58;"	d
OFDEL	termios.h	62;"	d
OFILL	termios.h	61;"	d
OK	curses.h	15;"	d
OK	ncurses.h	15;"	d
OLCUC	termios.h	23;"	d
OLCUC	termios.h	26;"	d
OLCUC	termios.h	29;"	d
OLCUC	termios.h	311;"	d
OLCUC	termios.h	32;"	d
OLCUC	termios.h	366;"	d
OLCUC	termios.h	369;"	d
OLD_TIME	utmp.h	225;"	d
ONLCR	termios.h	314;"	d
ONLCR	termios.h	317;"	d
ONLCR	termios.h	35;"	d
ONLCR	termios.h	372;"	d
ONLCR	termios.h	38;"	d
ONLCR	termios.h	41;"	d
ONLCR	termios.h	44;"	d
ONLRET	termios.h	60;"	d
ONOCR	termios.h	59;"	d
OPEN_MAX	limits.h	71;"	d
OPOST	termios.h	21;"	d
O_ACCMODE	fcntl.h	23;"	d
O_APPEND	fcntl.h	36;"	d
O_ASYNC	fcntl.h	37;"	d
O_CREAT	fcntl.h	25;"	d
O_EXCL	fcntl.h	35;"	d
O_LARGEFILE	fcntl.h	14;"	d
O_LARGEFILE	fcntl.h	17;"	d
O_LARGEFILE	fcntl.h	20;"	d
O_LARGEFILE	fcntl.h	29;"	d
O_LARGEFILE	fcntl.h	32;"	d
O_LARGEFILE	fcntl.h	39;"	d
O_LARGEFILE	fcntl.h	42;"	d
O_NDELAY	fcntl.h	45;"	d
O_NOCTTY	fcntl.h	44;"	d
O_NONBLOCK	fcntl.h	46;"	d
O_RDONLY	fcntl.h	22;"	d
O_RDWR	fcntl.h	34;"	d
O_SYNC	fcntl.h	27;"	d
O_TRUNC	fcntl.h	26;"	d
O_WRONLY	fcntl.h	24;"	d
Orientation	cups/raster.h	/^	cups_orient_t Orientation;$/;"	m	struct:__anon87	access:public
OutputFaceUp	cups/raster.h	/^	cups_bool_t OutputFaceUp;$/;"	m	struct:__anon87	access:public
OutputType	cups/raster.h	/^	char OutputType[64];$/;"	m	struct:__anon87	access:public
PAIR_NUMBER	curses.h	282;"	d
PAIR_NUMBER	ncurses.h	282;"	d
PAM_ABORT	security/pam_appl.h	77;"	d
PAM_ACCT_EXPIRED	security/pam_appl.h	65;"	d
PAM_AUTHINFO_UNAVAIL	security/pam_appl.h	86;"	d
PAM_AUTHTOK_DISABLE_AGING	security/pam_appl.h	75;"	d
PAM_AUTHTOK_ERR	security/pam_appl.h	72;"	d
PAM_AUTHTOK_EXPIRED	security/pam_appl.h	78;"	d
PAM_AUTHTOK_LOCK_BUSY	security/pam_appl.h	74;"	d
PAM_AUTHTOK_RECOVER_ERR	security/pam_appl.h	73;"	d
PAM_AUTH_ERR	security/pam_appl.h	84;"	d
PAM_BAD_ITEM	security/pam_appl.h	79;"	d
PAM_BUF_ERR	security/pam_appl.h	82;"	d
PAM_CHANGE_EXPIRED_AUTHTOK	security/pam_appl.h	96;"	d
PAM_CONV	security/pam_appl.h	53;"	d
PAM_CONV_ERR	security/pam_appl.h	70;"	d
PAM_CRED_ERR	security/pam_appl.h	69;"	d
PAM_CRED_EXPIRED	security/pam_appl.h	68;"	d
PAM_CRED_INSUFFICIENT	security/pam_appl.h	85;"	d
PAM_CRED_UNAVAIL	security/pam_appl.h	67;"	d
PAM_DELETE_CRED	security/pam_appl.h	93;"	d
PAM_DISALLOW_NULL_AUTHTOK	security/pam_appl.h	91;"	d
PAM_ERROR_MSG	security/pam_appl.h	43;"	d
PAM_ESTABLISH_CRED	security/pam_appl.h	92;"	d
PAM_MAXTRIES	security/pam_appl.h	63;"	d
PAM_NEW_AUTHTOK_REQD	security/pam_appl.h	64;"	d
PAM_OPEN_ERR	security/pam_appl.h	61;"	d
PAM_PERM_DENIED	security/pam_appl.h	83;"	d
PAM_PROMPT_ECHO_OFF	security/pam_appl.h	41;"	d
PAM_PROMPT_ECHO_ON	security/pam_appl.h	42;"	d
PAM_REFRESH_CRED	security/pam_appl.h	95;"	d
PAM_REINITIALIZE_CRED	security/pam_appl.h	94;"	d
PAM_RHOST	security/pam_appl.h	52;"	d
PAM_RUSER	security/pam_appl.h	54;"	d
PAM_SERVICE	security/pam_appl.h	49;"	d
PAM_SERVICE_ERR	security/pam_appl.h	80;"	d
PAM_SESSION_ERR	security/pam_appl.h	66;"	d
PAM_SILENT	security/pam_appl.h	97;"	d
PAM_SUCCESS	security/pam_appl.h	60;"	d
PAM_SYMBOL_ERR	security/pam_appl.h	71;"	d
PAM_SYSTEM_ERR	security/pam_appl.h	81;"	d
PAM_TEXT_INFO	security/pam_appl.h	44;"	d
PAM_TRY_AGAIN	security/pam_appl.h	76;"	d
PAM_TTY	security/pam_appl.h	51;"	d
PAM_USER	security/pam_appl.h	50;"	d
PAM_USER_PROMPT	security/pam_appl.h	55;"	d
PAM_USER_UNKNOWN	security/pam_appl.h	62;"	d
PARENB	termios.h	817;"	d
PARENB	termios.h	820;"	d
PARENB	termios.h	823;"	d
PARENB	termios.h	826;"	d
PARENB	termios.h	901;"	d
PARENB	termios.h	913;"	d
PARENB	termios.h	916;"	d
PARMRK	termios.h	685;"	d
PARODD	termios.h	829;"	d
PARODD	termios.h	832;"	d
PARODD	termios.h	835;"	d
PARODD	termios.h	838;"	d
PARODD	termios.h	946;"	d
PARODD	termios.h	970;"	d
PARODD	termios.h	973;"	d
PATH_MAX	limits.h	82;"	d
PDP_ENDIAN	inttypes.h	24;"	d
PENDIN	termios.h	1113;"	d
PENDIN	termios.h	1116;"	d
PENDIN	termios.h	1119;"	d
PENDIN	termios.h	1122;"	d
PENDIN	termios.h	1179;"	d
PENDIN	termios.h	1233;"	d
PENDIN	termios.h	1236;"	d
PF_INET	sys/socket.h	133;"	d
PF_INET6	sys/socket.h	134;"	d
PF_UNIX	sys/socket.h	135;"	d
PF_UNSPEC	sys/socket.h	136;"	d
PM_STR	langinfo.h	74;"	d
POLLERR	sys/poll.h	14;"	d
POLLHUP	sys/poll.h	15;"	d
POLLIN	sys/poll.h	11;"	d
POLLNVAL	sys/poll.h	16;"	d
POLLOUT	sys/poll.h	13;"	d
POLLPRI	sys/poll.h	12;"	d
POLL_ERR	signal.h	395;"	d
POLL_HUP	signal.h	397;"	d
POLL_IN	signal.h	392;"	d
POLL_MSG	signal.h	394;"	d
POLL_OUT	signal.h	393;"	d
POLL_PRI	signal.h	396;"	d
POSIX_SPAWN_RESETIDS	spawn.h	14;"	d
POSIX_SPAWN_SETPGROUP	spawn.h	15;"	d
POSIX_SPAWN_SETSCHEDPARAM	spawn.h	18;"	d
POSIX_SPAWN_SETSCHEDULER	spawn.h	19;"	d
POSIX_SPAWN_SETSIGDEF	spawn.h	16;"	d
POSIX_SPAWN_SETSIGMASK	spawn.h	17;"	d
PPD_ALLOC_ERROR	cups/ppd.h	/^	PPD_ALLOC_ERROR,$/;"	e	enum:__anon112
PPD_BAD_OPEN_GROUP	cups/ppd.h	/^	PPD_BAD_OPEN_GROUP,$/;"	e	enum:__anon112
PPD_BAD_OPEN_UI	cups/ppd.h	/^	PPD_BAD_OPEN_UI,$/;"	e	enum:__anon112
PPD_BAD_ORDER_DEPENDENCY	cups/ppd.h	/^	PPD_BAD_ORDER_DEPENDENCY,$/;"	e	enum:__anon112
PPD_BAD_UI_CONSTRAINTS	cups/ppd.h	/^	PPD_BAD_UI_CONSTRAINTS,$/;"	e	enum:__anon112
PPD_CONFORM_RELAXED	cups/ppd.h	/^	PPD_CONFORM_RELAXED,$/;"	e	enum:__anon113
PPD_CONFORM_STRICT	cups/ppd.h	/^	PPD_CONFORM_STRICT$/;"	e	enum:__anon113
PPD_CS_CMY	cups/ppd.h	/^	PPD_CS_CMY,$/;"	e	enum:__anon101
PPD_CS_CMYK	cups/ppd.h	/^	PPD_CS_CMYK,$/;"	e	enum:__anon101
PPD_CS_GRAY	cups/ppd.h	/^	PPD_CS_GRAY,$/;"	e	enum:__anon101
PPD_CS_N	cups/ppd.h	/^	PPD_CS_N$/;"	e	enum:__anon101
PPD_CS_RGB	cups/ppd.h	/^	PPD_CS_RGB,$/;"	e	enum:__anon101
PPD_CS_RGBK	cups/ppd.h	/^	PPD_CS_RGBK,$/;"	e	enum:__anon101
PPD_FILE_OPEN_ERROR	cups/ppd.h	/^	PPD_FILE_OPEN_ERROR,$/;"	e	enum:__anon112
PPD_ILLEGAL_CHARACTER	cups/ppd.h	/^	PPD_ILLEGAL_CHARACTER,$/;"	e	enum:__anon112
PPD_ILLEGAL_MAIN_KEYWORD	cups/ppd.h	/^	PPD_ILLEGAL_MAIN_KEYWORD,$/;"	e	enum:__anon112
PPD_ILLEGAL_OPTION_KEYWORD	cups/ppd.h	/^	PPD_ILLEGAL_OPTION_KEYWORD,$/;"	e	enum:__anon112
PPD_ILLEGAL_TRANSLATION	cups/ppd.h	/^	PPD_ILLEGAL_TRANSLATION,$/;"	e	enum:__anon112
PPD_ILLEGAL_WHITESPACE	cups/ppd.h	/^	PPD_ILLEGAL_WHITESPACE$/;"	e	enum:__anon112
PPD_INTERNAL_ERROR	cups/ppd.h	/^	PPD_INTERNAL_ERROR,$/;"	e	enum:__anon112
PPD_LINE_TOO_LONG	cups/ppd.h	/^	PPD_LINE_TOO_LONG,$/;"	e	enum:__anon112
PPD_MAX_LINE	cups/ppd.h	13;"	d
PPD_MAX_NAME	cups/ppd.h	15;"	d
PPD_MAX_TEXT	cups/ppd.h	16;"	d
PPD_MISSING_ASTERISK	cups/ppd.h	/^	PPD_MISSING_ASTERISK,$/;"	e	enum:__anon112
PPD_MISSING_PPDADOBE4	cups/ppd.h	/^	PPD_MISSING_PPDADOBE4,$/;"	e	enum:__anon112
PPD_MISSING_VALUE	cups/ppd.h	/^	PPD_MISSING_VALUE,$/;"	e	enum:__anon112
PPD_NESTED_OPEN_GROUP	cups/ppd.h	/^	PPD_NESTED_OPEN_GROUP,$/;"	e	enum:__anon112
PPD_NESTED_OPEN_UI	cups/ppd.h	/^	PPD_NESTED_OPEN_UI,$/;"	e	enum:__anon112
PPD_NULL_FILE	cups/ppd.h	/^	PPD_NULL_FILE,$/;"	e	enum:__anon112
PPD_OK	cups/ppd.h	/^	PPD_OK,$/;"	e	enum:__anon112
PPD_ORDER_ANY	cups/ppd.h	/^	PPD_ORDER_ANY,$/;"	e	enum:__anon104
PPD_ORDER_DOCUMENT	cups/ppd.h	/^	PPD_ORDER_DOCUMENT,$/;"	e	enum:__anon104
PPD_ORDER_EXIT	cups/ppd.h	/^	PPD_ORDER_EXIT,$/;"	e	enum:__anon104
PPD_ORDER_JCL	cups/ppd.h	/^	PPD_ORDER_JCL,$/;"	e	enum:__anon104
PPD_ORDER_PAGE	cups/ppd.h	/^	PPD_ORDER_PAGE,$/;"	e	enum:__anon104
PPD_ORDER_PROLOG	cups/ppd.h	/^	PPD_ORDER_PROLOG$/;"	e	enum:__anon104
PPD_UI_BOOLEAN	cups/ppd.h	/^	PPD_UI_BOOLEAN,$/;"	e	enum:__anon103
PPD_UI_PICKMANY	cups/ppd.h	/^	PPD_UI_PICKMANY$/;"	e	enum:__anon103
PPD_UI_PICKONE	cups/ppd.h	/^	PPD_UI_PICKONE,$/;"	e	enum:__anon103
PPD_VERSION	cups/ppd.h	14;"	d
PRIO_PGRP	sys/resource.h	/^	PRIO_PGRP = 1,		\/* WHO is a process group ID. *\/$/;"	e	enum:__priority_which
PRIO_PGRP	sys/resource.h	92;"	d
PRIO_PROCESS	sys/resource.h	/^	PRIO_PROCESS = 0,	\/* WHO is a process ID. *\/$/;"	e	enum:__priority_which
PRIO_PROCESS	sys/resource.h	93;"	d
PRIO_USER	sys/resource.h	/^	PRIO_USER = 2		\/* WHO is a user ID. *\/$/;"	e	enum:__priority_which
PRIO_USER	sys/resource.h	94;"	d
PROC_UNAVAIL	rpc/rpc_msg.h	/^	PROC_UNAVAIL = 3,$/;"	e	enum:accept_stat
PROG_MISMATCH	rpc/rpc_msg.h	/^	PROG_MISMATCH = 2,$/;"	e	enum:accept_stat
PROG_UNAVAIL	rpc/rpc_msg.h	/^	PROG_UNAVAIL = 1,$/;"	e	enum:accept_stat
PROT_EXEC	sys/mman.h	22;"	d
PROT_NONE	sys/mman.h	15;"	d
PROT_READ	sys/mman.h	18;"	d
PROT_WRITE	sys/mman.h	20;"	d
PTHREAD_CANCELED	pthread.h	238;"	d
PTHREAD_CANCEL_ASYNCHRONOUS	pthread.h	241;"	d
PTHREAD_CANCEL_DEFERRED	pthread.h	239;"	d
PTHREAD_CANCEL_DISABLE	pthread.h	242;"	d
PTHREAD_CANCEL_ENABLE	pthread.h	240;"	d
PTHREAD_COND_INITIALIZER	pthread.h	54;"	d
PTHREAD_CREATE_DETACHED	pthread.h	231;"	d
PTHREAD_CREATE_JOINABLE	pthread.h	227;"	d
PTHREAD_DESTRUCTOR_ITERATIONS	limits.h	212;"	d
PTHREAD_EXPLICIT_SCHED	pthread.h	232;"	d
PTHREAD_INHERIT_SCHED	pthread.h	228;"	d
PTHREAD_KEYS_MAX	limits.h	189;"	d
PTHREAD_MUTEX_DEFAULT	pthread.h	15;"	d
PTHREAD_MUTEX_ERRORCHECK	pthread.h	20;"	d
PTHREAD_MUTEX_INITIALIZER	pthread.h	44;"	d
PTHREAD_MUTEX_NORMAL	pthread.h	16;"	d
PTHREAD_MUTEX_RECURSIVE	pthread.h	18;"	d
PTHREAD_ONCE_INIT	pthread.h	229;"	d
PTHREAD_PROCESS_PRIVATE	pthread.h	230;"	d
PTHREAD_PROCESS_SHARED	pthread.h	233;"	d
PTHREAD_RWLOCK_DEFAULT_NP	pthread.h	21;"	d
PTHREAD_RWLOCK_INITIALIZER	pthread.h	46;"	d
PTHREAD_SCOPE_PROCESS	pthread.h	19;"	d
PTHREAD_SCOPE_SYSTEM	pthread.h	17;"	d
PTHREAD_STACK_MIN	limits.h	191;"	d
PTHREAD_STACK_MIN	limits.h	194;"	d
PTHREAD_STACK_MIN	limits.h	197;"	d
PTHREAD_STACK_MIN	limits.h	200;"	d
PTHREAD_STACK_MIN	limits.h	203;"	d
PTHREAD_STACK_MIN	limits.h	206;"	d
PTHREAD_STACK_MIN	limits.h	210;"	d
PTHREAD_THREADS_MAX	limits.h	208;"	d
PTRDIFF_MAX	stdint.h	325;"	d
PTRDIFF_MAX	stdint.h	328;"	d
PTRDIFF_MAX	stdint.h	331;"	d
PTRDIFF_MAX	stdint.h	417;"	d
PTRDIFF_MAX	stdint.h	420;"	d
PTRDIFF_MAX	stdint.h	423;"	d
PTRDIFF_MAX	stdint.h	426;"	d
PTRDIFF_MIN	stdint.h	180;"	d
PTRDIFF_MIN	stdint.h	183;"	d
PTRDIFF_MIN	stdint.h	186;"	d
PTRDIFF_MIN	stdint.h	228;"	d
PTRDIFF_MIN	stdint.h	231;"	d
PTRDIFF_MIN	stdint.h	234;"	d
PTRDIFF_MIN	stdint.h	237;"	d
P_ALL	sys/wait.h	/^	P_ALL,$/;"	e	enum:__anon49
P_PGID	sys/wait.h	/^	P_PGID$/;"	e	enum:__anon49
P_PID	sys/wait.h	/^	P_PID,$/;"	e	enum:__anon49
P_tmpdir	stdio.h	17;"	d
PageSize	cups/raster.h	/^	unsigned int PageSize[2];$/;"	m	struct:__anon87	access:public
RADIXCHAR	langinfo.h	108;"	d
RAND_MAX	stdlib.h	16;"	d
REGTYPE	tar.h	11;"	d
REG_BADBR	regex.h	/^	REG_BADBR = 10,$/;"	e	enum:__anon71
REG_BADPAT	regex.h	/^	REG_BADPAT = 2,$/;"	e	enum:__anon71
REG_BADRPT	regex.h	/^	REG_BADRPT = 13,$/;"	e	enum:__anon71
REG_EBRACE	regex.h	/^	REG_EBRACE = 9,$/;"	e	enum:__anon71
REG_EBRACK	regex.h	/^	REG_EBRACK = 7,$/;"	e	enum:__anon71
REG_ECOLLATE	regex.h	/^	REG_ECOLLATE = 3,$/;"	e	enum:__anon71
REG_ECTYPE	regex.h	/^	REG_ECTYPE = 4,$/;"	e	enum:__anon71
REG_EEND	regex.h	/^	REG_EEND = 14,$/;"	e	enum:__anon71
REG_EESCAPE	regex.h	/^	REG_EESCAPE = 5,$/;"	e	enum:__anon71
REG_ENOSYS	regex.h	/^	REG_ENOSYS = -1,$/;"	e	enum:__anon71
REG_EPAREN	regex.h	/^	REG_EPAREN = 8,$/;"	e	enum:__anon71
REG_ERANGE	regex.h	/^	REG_ERANGE = 11,$/;"	e	enum:__anon71
REG_ERPAREN	regex.h	/^	REG_ERPAREN = 16$/;"	e	enum:__anon71
REG_ESIZE	regex.h	/^	REG_ESIZE = 15,$/;"	e	enum:__anon71
REG_ESPACE	regex.h	/^	REG_ESPACE = 12,$/;"	e	enum:__anon71
REG_ESUBREG	regex.h	/^	REG_ESUBREG = 6,$/;"	e	enum:__anon71
REG_EXTENDED	regex.h	55;"	d
REG_ICASE	regex.h	52;"	d
REG_NEWLINE	regex.h	53;"	d
REG_NOERROR	regex.h	/^	REG_NOERROR = 0,$/;"	e	enum:__anon71
REG_NOMATCH	regex.h	/^	REG_NOMATCH = 1,$/;"	e	enum:__anon71
REG_NOSUB	regex.h	54;"	d
REG_NOTBOL	regex.h	61;"	d
REG_NOTEOL	regex.h	60;"	d
REPLY	rpc/rpc_msg.h	/^	REPLY = 1$/;"	e	enum:msg_type
RE_DUP_MAX	regex.h	12;"	d
RE_errno	rpc/clnt.h	/^	    int RE_errno;$/;"	m	union:rpc_err::__anon142
RE_lb	rpc/clnt.h	/^	    } RE_lb;$/;"	m	union:rpc_err::__anon142	typeref:struct:rpc_err::__anon142::__anon144
RE_vers	rpc/clnt.h	/^	    } RE_vers;$/;"	m	union:rpc_err::__anon142	typeref:struct:rpc_err::__anon142::__anon143
RE_why	rpc/clnt.h	/^	    enum auth_stat RE_why;$/;"	m	union:rpc_err::__anon142	typeref:enum:rpc_err::__anon142::auth_stat
RJ_versions	rpc/rpc_msg.h	/^	    } RJ_versions;$/;"	m	union:rejected_reply::__anon137	typeref:struct:rejected_reply::__anon137::__anon138
RJ_why	rpc/rpc_msg.h	/^	    enum auth_stat RJ_why;	\/* why authentication did not work *\/$/;"	m	union:rejected_reply::__anon137	typeref:enum:rejected_reply::__anon137::auth_stat
RLIMIT_AS	sys/resource.h	29;"	d
RLIMIT_CORE	sys/resource.h	24;"	d
RLIMIT_CPU	sys/resource.h	17;"	d
RLIMIT_DATA	sys/resource.h	22;"	d
RLIMIT_FSIZE	sys/resource.h	19;"	d
RLIMIT_LOCKS	sys/resource.h	20;"	d
RLIMIT_MEMLOCK	sys/resource.h	28;"	d
RLIMIT_NOFILE	sys/resource.h	27;"	d
RLIMIT_NPROC	sys/resource.h	26;"	d
RLIMIT_RSS	sys/resource.h	25;"	d
RLIMIT_STACK	sys/resource.h	23;"	d
RLIM_INFINITY	sys/resource.h	14;"	d
RLIM_NLIMITS	sys/resource.h	21;"	d
RLIM_SAVED_CUR	sys/resource.h	15;"	d
RLIM_SAVED_MAX	sys/resource.h	16;"	d
RM_cmb	rpc/rpc_msg.h	/^	    struct call_body RM_cmb;$/;"	m	union:rpc_msg::__anon140	typeref:struct:rpc_msg::__anon140::call_body
RM_rmb	rpc/rpc_msg.h	/^	    struct reply_body RM_rmb;$/;"	m	union:rpc_msg::__anon140	typeref:struct:rpc_msg::__anon140::reply_body
RPC_ANYSOCK	rpc/svc.h	23;"	d
RPC_AUTHERROR	rpc/clnt.h	/^	RPC_AUTHERROR = 7,	\/* authentication error *\/$/;"	e	enum:clnt_stat
RPC_CANTDECODEARGS	rpc/clnt.h	/^	RPC_CANTDECODEARGS = 11,	\/* decode arguments error *\/$/;"	e	enum:clnt_stat
RPC_CANTDECODERES	rpc/clnt.h	/^	RPC_CANTDECODERES = 2,	\/* can't decode results *\/$/;"	e	enum:clnt_stat
RPC_CANTENCODEARGS	rpc/clnt.h	/^	RPC_CANTENCODEARGS = 1,	\/* can't encode arguments *\/$/;"	e	enum:clnt_stat
RPC_CANTRECV	rpc/clnt.h	/^	RPC_CANTRECV = 4,	\/* failure in receiving result *\/$/;"	e	enum:clnt_stat
RPC_CANTSEND	rpc/clnt.h	/^	RPC_CANTSEND = 3,	\/* failure in sending call *\/$/;"	e	enum:clnt_stat
RPC_FAILED	rpc/clnt.h	/^	RPC_FAILED = 16,$/;"	e	enum:clnt_stat
RPC_INPROGRESS	rpc/clnt.h	/^	RPC_INPROGRESS = 24,$/;"	e	enum:clnt_stat
RPC_INTR	rpc/clnt.h	/^	RPC_INTR = 18,$/;"	e	enum:clnt_stat
RPC_MISMATCH	rpc/rpc_msg.h	/^	RPC_MISMATCH = 0,$/;"	e	enum:reject_stat
RPC_N2AXLATEFAILURE	rpc/clnt.h	/^	RPC_N2AXLATEFAILURE = 22,	\/* Name to addr translation failed *\/$/;"	e	enum:clnt_stat
RPC_NOBROADCAST	rpc/clnt.h	/^	RPC_NOBROADCAST = 21,	\/* Broadcasting not supported *\/$/;"	e	enum:clnt_stat
RPC_PROCUNAVAIL	rpc/clnt.h	/^	RPC_PROCUNAVAIL = 10,	\/* procedure unavailable *\/$/;"	e	enum:clnt_stat
RPC_PROGNOTREGISTERED	rpc/clnt.h	/^	RPC_PROGNOTREGISTERED = 15,	\/* remote program is not registered *\/$/;"	e	enum:clnt_stat
RPC_PROGUNAVAIL	rpc/clnt.h	/^	RPC_PROGUNAVAIL = 8,	\/* program not available *\/$/;"	e	enum:clnt_stat
RPC_PROGVERSMISMATCH	rpc/clnt.h	/^	RPC_PROGVERSMISMATCH = 9,	\/* program version mismatched *\/$/;"	e	enum:clnt_stat
RPC_RPCBFAILURE	rpc/clnt.h	/^	RPC_RPCBFAILURE = 14,	\/* portmapper failed in its call *\/$/;"	e	enum:clnt_stat
RPC_STALERACHANDLE	rpc/clnt.h	/^	RPC_STALERACHANDLE = 25$/;"	e	enum:clnt_stat
RPC_SUCCESS	rpc/clnt.h	/^	RPC_SUCCESS = 0,	\/* call succeeded *\/$/;"	e	enum:clnt_stat
RPC_SYSTEMERROR	rpc/clnt.h	/^	RPC_SYSTEMERROR = 12,	\/* generic "other problem" *\/$/;"	e	enum:clnt_stat
RPC_TIMEDOUT	rpc/clnt.h	/^	RPC_TIMEDOUT = 5,	\/* call timed out *\/$/;"	e	enum:clnt_stat
RPC_TLIERROR	rpc/clnt.h	/^	RPC_TLIERROR = 20,$/;"	e	enum:clnt_stat
RPC_UDERROR	rpc/clnt.h	/^	RPC_UDERROR = 23,$/;"	e	enum:clnt_stat
RPC_UNKNOWNADDR	rpc/clnt.h	/^	RPC_UNKNOWNADDR = 19,	\/* Remote address unknown *\/$/;"	e	enum:clnt_stat
RPC_UNKNOWNHOST	rpc/clnt.h	/^	RPC_UNKNOWNHOST = 13,	\/* unknown host name *\/$/;"	e	enum:clnt_stat
RPC_UNKNOWNPROTO	rpc/clnt.h	/^	RPC_UNKNOWNPROTO = 17,	\/* unknown protocol *\/$/;"	e	enum:clnt_stat
RPC_VERSMISMATCH	rpc/clnt.h	/^	RPC_VERSMISMATCH = 6,	\/* rpc versions not compatible *\/$/;"	e	enum:clnt_stat
RP_ar	rpc/rpc_msg.h	/^	    struct accepted_reply RP_ar;$/;"	m	union:reply_body::__anon139	typeref:struct:reply_body::__anon139::accepted_reply
RP_dr	rpc/rpc_msg.h	/^	    struct rejected_reply RP_dr;$/;"	m	union:reply_body::__anon139	typeref:struct:reply_body::__anon139::rejected_reply
RTLD_DEFAULT	dlfcn.h	12;"	d
RTLD_GLOBAL	dlfcn.h	16;"	d
RTLD_LAZY	dlfcn.h	14;"	d
RTLD_LOCAL	dlfcn.h	13;"	d
RTLD_NEXT	dlfcn.h	11;"	d
RTLD_NOW	dlfcn.h	15;"	d
RUN_LVL	utmp.h	222;"	d
RUSAGE_CHILDREN	sys/resource.h	13;"	d
RUSAGE_SELF	sys/resource.h	18;"	d
R_OK	unistd.h	30;"	d
SA_INTERRUPT	signal.h	415;"	d
SA_NOCLDSTOP	signal.h	410;"	d
SA_NOCLDWAIT	signal.h	411;"	d
SA_NODEFER	signal.h	416;"	d
SA_NOMASK	signal.h	418;"	d
SA_ONESHOT	signal.h	419;"	d
SA_ONSTACK	signal.h	413;"	d
SA_RESETHAND	signal.h	417;"	d
SA_RESTART	signal.h	414;"	d
SA_SIGINFO	signal.h	412;"	d
SCHAR_MAX	limits.h	136;"	d
SCHAR_MIN	limits.h	120;"	d
SCHED_FIFO	sched.h	14;"	d
SCHED_OTHER	sched.h	13;"	d
SCHED_RR	sched.h	15;"	d
SCM_RIGHTS	sys/socket.h	15;"	d
SCREEN	curses.h	/^    typedef struct screen SCREEN;$/;"	t	typeref:struct:screen
SCREEN	ncurses.h	/^    typedef struct screen SCREEN;$/;"	t	typeref:struct:screen
SEEK_CUR	unistd.h	17;"	d
SEEK_END	unistd.h	19;"	d
SEEK_SET	unistd.h	15;"	d
SEGV_ACCERR	signal.h	364;"	d
SEGV_MAPERR	signal.h	363;"	d
SEM_FAILED	semaphore.h	28;"	d
SEM_UNDO	sys/sem.h	14;"	d
SEM_VALUE_MAX	semaphore.h	33;"	d
SETALL	sys/sem.h	21;"	d
SETVAL	sys/sem.h	20;"	d
SHMLBA	sys/shm.h	15;"	d
SHMLBA	sys/shm.h	18;"	d
SHMLBA	sys/shm.h	21;"	d
SHMLBA	sys/shm.h	24;"	d
SHMLBA	sys/shm.h	27;"	d
SHMLBA	sys/shm.h	30;"	d
SHMLBA	sys/shm.h	33;"	d
SHM_LOCK	sys/shm.h	40;"	d
SHM_R	sys/shm.h	38;"	d
SHM_RDONLY	sys/shm.h	35;"	d
SHM_REMAP	sys/shm.h	39;"	d
SHM_RND	sys/shm.h	37;"	d
SHM_UNLOCK	sys/shm.h	41;"	d
SHM_W	sys/shm.h	36;"	d
SHRT_MAX	limits.h	171;"	d
SHRT_MIN	limits.h	170;"	d
SHUT_RD	sys/socket.h	266;"	d
SHUT_RDWR	sys/socket.h	268;"	d
SHUT_WR	sys/socket.h	267;"	d
SIGABRT	signal.h	177;"	d
SIGALRM	signal.h	154;"	d
SIGBUS	signal.h	179;"	d
SIGCHLD	signal.h	157;"	d
SIGCLD	signal.h	182;"	d
SIGCONT	signal.h	158;"	d
SIGEV_MAX_SIZE	signal.h	226;"	d
SIGEV_NONE	signal.h	224;"	d
SIGEV_PAD_SIZE	signal.h	203;"	d
SIGEV_PAD_SIZE	signal.h	206;"	d
SIGEV_PAD_SIZE	signal.h	209;"	d
SIGEV_PAD_SIZE	signal.h	212;"	d
SIGEV_PAD_SIZE	signal.h	215;"	d
SIGEV_PAD_SIZE	signal.h	218;"	d
SIGEV_PAD_SIZE	signal.h	221;"	d
SIGEV_SIGNAL	signal.h	223;"	d
SIGEV_THREAD	signal.h	225;"	d
SIGFPE	signal.h	180;"	d
SIGHUP	signal.h	149;"	d
SIGILL	signal.h	175;"	d
SIGINT	signal.h	160;"	d
SIGIO	signal.h	170;"	d
SIGIOT	signal.h	178;"	d
SIGKILL	signal.h	181;"	d
SIGPIPE	signal.h	153;"	d
SIGPOLL	signal.h	183;"	d
SIGPROF	signal.h	168;"	d
SIGPWR	signal.h	172;"	d
SIGQUIT	signal.h	171;"	d
SIGRTMAX	signal.h	19;"	d
SIGRTMIN	signal.h	20;"	d
SIGSEGV	signal.h	151;"	d
SIGSTKFLT	signal.h	156;"	d
SIGSTKSZ	signal.h	538;"	d
SIGSTKSZ	signal.h	541;"	d
SIGSTKSZ	signal.h	544;"	d
SIGSTKSZ	signal.h	547;"	d
SIGSTKSZ	signal.h	550;"	d
SIGSTKSZ	signal.h	553;"	d
SIGSTKSZ	signal.h	556;"	d
SIGSTOP	signal.h	159;"	d
SIGSYS	signal.h	173;"	d
SIGTERM	signal.h	155;"	d
SIGTRAP	signal.h	176;"	d
SIGTSTP	signal.h	161;"	d
SIGTTIN	signal.h	162;"	d
SIGTTOU	signal.h	163;"	d
SIGUNUSED	signal.h	174;"	d
SIGURG	signal.h	164;"	d
SIGUSR1	signal.h	150;"	d
SIGUSR2	signal.h	152;"	d
SIGVTALRM	signal.h	167;"	d
SIGWINCH	signal.h	169;"	d
SIGXCPU	signal.h	165;"	d
SIGXFSZ	signal.h	166;"	d
SIG_ATOMIC_MAX	stdint.h	333;"	d
SIG_ATOMIC_MIN	stdint.h	188;"	d
SIG_BLOCK	signal.h	21;"	d
SIG_DFL	signal.h	143;"	d
SIG_ERR	signal.h	142;"	d
SIG_HOLD	signal.h	141;"	d
SIG_IGN	signal.h	144;"	d
SIG_SETMASK	signal.h	41;"	d
SIG_UNBLOCK	signal.h	22;"	d
SING	math.h	12;"	d
SIOCGIFADDR	sys/socket.h	256;"	d
SIOCGIFBRDADDR	sys/socket.h	258;"	d
SIOCGIFCONF	sys/socket.h	254;"	d
SIOCGIFDSTADDR	sys/socket.h	257;"	d
SIOCGIFFLAGS	sys/socket.h	255;"	d
SIOCGIFHWADDR	sys/socket.h	261;"	d
SIOCGIFMTU	sys/socket.h	260;"	d
SIOCGIFNAME	sys/socket.h	253;"	d
SIOCGIFNETMASK	sys/socket.h	259;"	d
SIZE_MAX	stdint.h	248;"	d
SIZE_MAX	stdint.h	251;"	d
SIZE_MAX	stdint.h	254;"	d
SIZE_MAX	stdint.h	257;"	d
SIZE_MAX	stdint.h	340;"	d
SIZE_MAX	stdint.h	343;"	d
SIZE_MAX	stdint.h	346;"	d
SI_ASYNCIO	signal.h	329;"	d
SI_ASYNCNL	signal.h	332;"	d
SI_KERNEL	signal.h	334;"	d
SI_MAX_SIZE	signal.h	268;"	d
SI_MESGQ	signal.h	328;"	d
SI_PAD_SIZE	signal.h	248;"	d
SI_PAD_SIZE	signal.h	251;"	d
SI_PAD_SIZE	signal.h	254;"	d
SI_PAD_SIZE	signal.h	257;"	d
SI_PAD_SIZE	signal.h	260;"	d
SI_PAD_SIZE	signal.h	263;"	d
SI_PAD_SIZE	signal.h	266;"	d
SI_QUEUE	signal.h	326;"	d
SI_SIGIO	signal.h	330;"	d
SI_TIMER	signal.h	327;"	d
SI_TKILL	signal.h	331;"	d
SI_USER	signal.h	333;"	d
SM_CAP_CENUM	alsa/mixer_abst.h	18;"	d
SM_CAP_CSWITCH	alsa/mixer_abst.h	26;"	d
SM_CAP_CSWITCH_EXCL	alsa/mixer_abst.h	16;"	d
SM_CAP_CSWITCH_JOIN	alsa/mixer_abst.h	15;"	d
SM_CAP_CVOLUME	alsa/mixer_abst.h	24;"	d
SM_CAP_CVOLUME_JOIN	alsa/mixer_abst.h	25;"	d
SM_CAP_GSWITCH	alsa/mixer_abst.h	19;"	d
SM_CAP_GVOLUME	alsa/mixer_abst.h	14;"	d
SM_CAP_PENUM	alsa/mixer_abst.h	17;"	d
SM_CAP_PSWITCH	alsa/mixer_abst.h	22;"	d
SM_CAP_PSWITCH_JOIN	alsa/mixer_abst.h	23;"	d
SM_CAP_PVOLUME	alsa/mixer_abst.h	20;"	d
SM_CAP_PVOLUME_JOIN	alsa/mixer_abst.h	21;"	d
SM_OPS_IS_ACTIVE	alsa/mixer_abst.h	27;"	d
SM_OPS_IS_CHANNEL	alsa/mixer_abst.h	29;"	d
SM_OPS_IS_ENUMCNT	alsa/mixer_abst.h	31;"	d
SM_OPS_IS_ENUMERATED	alsa/mixer_abst.h	30;"	d
SM_OPS_IS_MONO	alsa/mixer_abst.h	28;"	d
SND_CONFIG_TYPE_COMPOUND	alsa/conf.h	/^	SND_CONFIG_TYPE_COMPOUND = 1024$/;"	e	enum:_snd_config_type
SND_CONFIG_TYPE_INTEGER	alsa/conf.h	/^	SND_CONFIG_TYPE_INTEGER,$/;"	e	enum:_snd_config_type
SND_CONFIG_TYPE_INTEGER64	alsa/conf.h	/^	SND_CONFIG_TYPE_INTEGER64 = 1,$/;"	e	enum:_snd_config_type
SND_CONFIG_TYPE_POINTER	alsa/conf.h	/^	SND_CONFIG_TYPE_POINTER = 4,$/;"	e	enum:_snd_config_type
SND_CONFIG_TYPE_REAL	alsa/conf.h	/^	SND_CONFIG_TYPE_REAL = 2,$/;"	e	enum:_snd_config_type
SND_CONFIG_TYPE_STRING	alsa/conf.h	/^	SND_CONFIG_TYPE_STRING = 3,$/;"	e	enum:_snd_config_type
SND_CTL_ASYNC	alsa/control.h	30;"	d
SND_CTL_ELEM_IFACE_CARD	alsa/control.h	/^	SND_CTL_ELEM_IFACE_CARD,$/;"	e	enum:_snd_ctl_elem_iface
SND_CTL_ELEM_IFACE_HWDEP	alsa/control.h	/^	SND_CTL_ELEM_IFACE_HWDEP = 1,$/;"	e	enum:_snd_ctl_elem_iface
SND_CTL_ELEM_IFACE_LAST	alsa/control.h	/^	SND_CTL_ELEM_IFACE_LAST = 6$/;"	e	enum:_snd_ctl_elem_iface
SND_CTL_ELEM_IFACE_MIXER	alsa/control.h	/^	SND_CTL_ELEM_IFACE_MIXER = 2,$/;"	e	enum:_snd_ctl_elem_iface
SND_CTL_ELEM_IFACE_PCM	alsa/control.h	/^	SND_CTL_ELEM_IFACE_PCM = 3,$/;"	e	enum:_snd_ctl_elem_iface
SND_CTL_ELEM_IFACE_RAWMIDI	alsa/control.h	/^	SND_CTL_ELEM_IFACE_RAWMIDI = 4,$/;"	e	enum:_snd_ctl_elem_iface
SND_CTL_ELEM_IFACE_SEQUENCER	alsa/control.h	/^	SND_CTL_ELEM_IFACE_SEQUENCER = 6,$/;"	e	enum:_snd_ctl_elem_iface
SND_CTL_ELEM_IFACE_TIMER	alsa/control.h	/^	SND_CTL_ELEM_IFACE_TIMER = 5,$/;"	e	enum:_snd_ctl_elem_iface
SND_CTL_ELEM_TYPE_BOOLEAN	alsa/control.h	/^	SND_CTL_ELEM_TYPE_BOOLEAN = 1,$/;"	e	enum:_snd_ctl_elem_type
SND_CTL_ELEM_TYPE_BYTES	alsa/control.h	/^	SND_CTL_ELEM_TYPE_BYTES = 4,$/;"	e	enum:_snd_ctl_elem_type
SND_CTL_ELEM_TYPE_ENUMERATED	alsa/control.h	/^	SND_CTL_ELEM_TYPE_ENUMERATED = 3,$/;"	e	enum:_snd_ctl_elem_type
SND_CTL_ELEM_TYPE_IEC958	alsa/control.h	/^	SND_CTL_ELEM_TYPE_IEC958 = 5,$/;"	e	enum:_snd_ctl_elem_type
SND_CTL_ELEM_TYPE_INTEGER	alsa/control.h	/^	SND_CTL_ELEM_TYPE_INTEGER = 2,$/;"	e	enum:_snd_ctl_elem_type
SND_CTL_ELEM_TYPE_INTEGER64	alsa/control.h	/^	SND_CTL_ELEM_TYPE_INTEGER64 = 6,$/;"	e	enum:_snd_ctl_elem_type
SND_CTL_ELEM_TYPE_LAST	alsa/control.h	/^	SND_CTL_ELEM_TYPE_LAST = 6$/;"	e	enum:_snd_ctl_elem_type
SND_CTL_ELEM_TYPE_NONE	alsa/control.h	/^	SND_CTL_ELEM_TYPE_NONE,$/;"	e	enum:_snd_ctl_elem_type
SND_CTL_EVENT_ELEM	alsa/control.h	/^	SND_CTL_EVENT_ELEM,$/;"	e	enum:_snd_ctl_event_type
SND_CTL_EVENT_LAST	alsa/control.h	/^	SND_CTL_EVENT_LAST$/;"	e	enum:_snd_ctl_event_type
SND_CTL_EVENT_MASK_ADD	alsa/control.h	19;"	d
SND_CTL_EVENT_MASK_INFO	alsa/control.h	18;"	d
SND_CTL_EVENT_MASK_REMOVE	alsa/control.h	23;"	d
SND_CTL_EVENT_MASK_TLV	alsa/control.h	20;"	d
SND_CTL_EVENT_MASK_VALUE	alsa/control.h	17;"	d
SND_CTL_EXT_KEY_NOT_FOUND	alsa/control_external.h	13;"	d
SND_CTL_EXT_VERSION	alsa/control_external.h	12;"	d
SND_CTL_EXT_VERSION_MAJOR	alsa/control_external.h	16;"	d
SND_CTL_EXT_VERSION_MINOR	alsa/control_external.h	14;"	d
SND_CTL_EXT_VERSION_TINY	alsa/control_external.h	15;"	d
SND_CTL_NONBLOCK	alsa/control.h	27;"	d
SND_CTL_POWER_D0	alsa/control.h	25;"	d
SND_CTL_POWER_D1	alsa/control.h	34;"	d
SND_CTL_POWER_D2	alsa/control.h	35;"	d
SND_CTL_POWER_D3	alsa/control.h	36;"	d
SND_CTL_POWER_D3cold	alsa/control.h	22;"	d
SND_CTL_POWER_D3hot	alsa/control.h	21;"	d
SND_CTL_POWER_MASK	alsa/control.h	37;"	d
SND_CTL_READONLY	alsa/control.h	33;"	d
SND_CTL_TLVT_CONTAINER	alsa/control.h	26;"	d
SND_CTL_TLVT_DB_LINEAR	alsa/control.h	31;"	d
SND_CTL_TLVT_DB_RANGE	alsa/control.h	32;"	d
SND_CTL_TLVT_DB_SCALE	alsa/control.h	28;"	d
SND_CTL_TLV_DB_GAIN_MUTE	alsa/control.h	24;"	d
SND_CTL_TYPE_EXT	alsa/control.h	/^	SND_CTL_TYPE_EXT = 3$/;"	e	enum:_snd_ctl_type
SND_CTL_TYPE_HW	alsa/control.h	/^	SND_CTL_TYPE_HW,$/;"	e	enum:_snd_ctl_type
SND_CTL_TYPE_INET	alsa/control.h	/^	SND_CTL_TYPE_INET = 2,$/;"	e	enum:_snd_ctl_type
SND_CTL_TYPE_SHM	alsa/control.h	/^	SND_CTL_TYPE_SHM = 1,$/;"	e	enum:_snd_ctl_type
SND_ERROR_ALISP_NIL	alsa/error.h	12;"	d
SND_ERROR_BEGIN	alsa/error.h	13;"	d
SND_ERROR_INCOMPATIBLE_VERSION	alsa/error.h	11;"	d
SND_HWDEP_IFACE_BLUETOOTH	alsa/hwdep.h	/^	SND_HWDEP_IFACE_BLUETOOTH = 12,$/;"	e	enum:_snd_hwdep_iface
SND_HWDEP_IFACE_EMU10K1	alsa/hwdep.h	/^	SND_HWDEP_IFACE_EMU10K1 = 4,$/;"	e	enum:_snd_hwdep_iface
SND_HWDEP_IFACE_EMUX_WAVETABLE	alsa/hwdep.h	/^	SND_HWDEP_IFACE_EMUX_WAVETABLE = 11,$/;"	e	enum:_snd_hwdep_iface
SND_HWDEP_IFACE_ICS2115	alsa/hwdep.h	/^	SND_HWDEP_IFACE_ICS2115 = 6,$/;"	e	enum:_snd_hwdep_iface
SND_HWDEP_IFACE_LAST	alsa/hwdep.h	/^	SND_HWDEP_IFACE_LAST = 15$/;"	e	enum:_snd_hwdep_iface
SND_HWDEP_IFACE_MIXART	alsa/hwdep.h	/^	SND_HWDEP_IFACE_MIXART = 9,$/;"	e	enum:_snd_hwdep_iface
SND_HWDEP_IFACE_OPL2	alsa/hwdep.h	/^	SND_HWDEP_IFACE_OPL2,$/;"	e	enum:_snd_hwdep_iface
SND_HWDEP_IFACE_OPL3	alsa/hwdep.h	/^	SND_HWDEP_IFACE_OPL3 = 1,$/;"	e	enum:_snd_hwdep_iface
SND_HWDEP_IFACE_OPL4	alsa/hwdep.h	/^	SND_HWDEP_IFACE_OPL4 = 2,$/;"	e	enum:_snd_hwdep_iface
SND_HWDEP_IFACE_PCXHR	alsa/hwdep.h	/^	SND_HWDEP_IFACE_PCXHR = 14,$/;"	e	enum:_snd_hwdep_iface
SND_HWDEP_IFACE_SB16CSP	alsa/hwdep.h	/^	SND_HWDEP_IFACE_SB16CSP = 3,$/;"	e	enum:_snd_hwdep_iface
SND_HWDEP_IFACE_SB_RC	alsa/hwdep.h	/^	SND_HWDEP_IFACE_SB_RC = 15,$/;"	e	enum:_snd_hwdep_iface
SND_HWDEP_IFACE_SSCAPE	alsa/hwdep.h	/^	SND_HWDEP_IFACE_SSCAPE = 7,$/;"	e	enum:_snd_hwdep_iface
SND_HWDEP_IFACE_USX2Y	alsa/hwdep.h	/^	SND_HWDEP_IFACE_USX2Y = 10,$/;"	e	enum:_snd_hwdep_iface
SND_HWDEP_IFACE_USX2Y_PCM	alsa/hwdep.h	/^	SND_HWDEP_IFACE_USX2Y_PCM = 13,$/;"	e	enum:_snd_hwdep_iface
SND_HWDEP_IFACE_VX	alsa/hwdep.h	/^	SND_HWDEP_IFACE_VX = 8,$/;"	e	enum:_snd_hwdep_iface
SND_HWDEP_IFACE_YSS225	alsa/hwdep.h	/^	SND_HWDEP_IFACE_YSS225 = 5,$/;"	e	enum:_snd_hwdep_iface
SND_HWDEP_OPEN_DUPLEX	alsa/hwdep.h	17;"	d
SND_HWDEP_OPEN_NONBLOCK	alsa/hwdep.h	15;"	d
SND_HWDEP_OPEN_READ	alsa/hwdep.h	16;"	d
SND_HWDEP_OPEN_WRITE	alsa/hwdep.h	18;"	d
SND_HWDEP_TYPE_HW	alsa/hwdep.h	/^	SND_HWDEP_TYPE_HW,$/;"	e	enum:_snd_hwdep_type
SND_HWDEP_TYPE_INET	alsa/hwdep.h	/^	SND_HWDEP_TYPE_INET = 2$/;"	e	enum:_snd_hwdep_type
SND_HWDEP_TYPE_SHM	alsa/hwdep.h	/^	SND_HWDEP_TYPE_SHM = 1,$/;"	e	enum:_snd_hwdep_type
SND_MIXER_ELEM_LAST	alsa/mixer.h	/^	SND_MIXER_ELEM_LAST$/;"	e	enum:_snd_mixer_elem_type
SND_MIXER_ELEM_SIMPLE	alsa/mixer.h	/^	SND_MIXER_ELEM_SIMPLE,$/;"	e	enum:_snd_mixer_elem_type
SND_MIXER_SABSTRACT_BASIC	alsa/mixer.h	/^	SND_MIXER_SABSTRACT_BASIC = 1$/;"	e	enum:snd_mixer_selem_regopt_abstract
SND_MIXER_SABSTRACT_NONE	alsa/mixer.h	/^	SND_MIXER_SABSTRACT_NONE,$/;"	e	enum:snd_mixer_selem_regopt_abstract
SND_MIXER_SCHN_FRONT_CENTER	alsa/mixer.h	/^	SND_MIXER_SCHN_FRONT_CENTER = 4,$/;"	e	enum:_snd_mixer_selem_channel_id
SND_MIXER_SCHN_FRONT_LEFT	alsa/mixer.h	/^	SND_MIXER_SCHN_FRONT_LEFT,$/;"	e	enum:_snd_mixer_selem_channel_id
SND_MIXER_SCHN_FRONT_RIGHT	alsa/mixer.h	/^	SND_MIXER_SCHN_FRONT_RIGHT = 1,$/;"	e	enum:_snd_mixer_selem_channel_id
SND_MIXER_SCHN_LAST	alsa/mixer.h	/^	SND_MIXER_SCHN_LAST = 31,$/;"	e	enum:_snd_mixer_selem_channel_id
SND_MIXER_SCHN_MONO	alsa/mixer.h	/^	SND_MIXER_SCHN_MONO$/;"	e	enum:_snd_mixer_selem_channel_id
SND_MIXER_SCHN_REAR_CENTER	alsa/mixer.h	/^	SND_MIXER_SCHN_REAR_CENTER = 8,$/;"	e	enum:_snd_mixer_selem_channel_id
SND_MIXER_SCHN_REAR_LEFT	alsa/mixer.h	/^	SND_MIXER_SCHN_REAR_LEFT = 2,$/;"	e	enum:_snd_mixer_selem_channel_id
SND_MIXER_SCHN_REAR_RIGHT	alsa/mixer.h	/^	SND_MIXER_SCHN_REAR_RIGHT = 3,$/;"	e	enum:_snd_mixer_selem_channel_id
SND_MIXER_SCHN_SIDE_LEFT	alsa/mixer.h	/^	SND_MIXER_SCHN_SIDE_LEFT = 6,$/;"	e	enum:_snd_mixer_selem_channel_id
SND_MIXER_SCHN_SIDE_RIGHT	alsa/mixer.h	/^	SND_MIXER_SCHN_SIDE_RIGHT = 7,$/;"	e	enum:_snd_mixer_selem_channel_id
SND_MIXER_SCHN_UNKNOWN	alsa/mixer.h	/^	SND_MIXER_SCHN_UNKNOWN = -1,$/;"	e	enum:_snd_mixer_selem_channel_id
SND_MIXER_SCHN_WOOFER	alsa/mixer.h	/^	SND_MIXER_SCHN_WOOFER = 5,$/;"	e	enum:_snd_mixer_selem_channel_id
SND_PCM_ACCESS_LAST	alsa/pcm.h	/^	SND_PCM_ACCESS_LAST = 4$/;"	e	enum:_snd_pcm_access
SND_PCM_ACCESS_MMAP_COMPLEX	alsa/pcm.h	/^	SND_PCM_ACCESS_MMAP_COMPLEX = 2,$/;"	e	enum:_snd_pcm_access
SND_PCM_ACCESS_MMAP_INTERLEAVED	alsa/pcm.h	/^	SND_PCM_ACCESS_MMAP_INTERLEAVED,$/;"	e	enum:_snd_pcm_access
SND_PCM_ACCESS_MMAP_NONINTERLEAVED	alsa/pcm.h	/^	SND_PCM_ACCESS_MMAP_NONINTERLEAVED = 1,$/;"	e	enum:_snd_pcm_access
SND_PCM_ACCESS_RW_INTERLEAVED	alsa/pcm.h	/^	SND_PCM_ACCESS_RW_INTERLEAVED = 3,$/;"	e	enum:_snd_pcm_access
SND_PCM_ACCESS_RW_NONINTERLEAVED	alsa/pcm.h	/^	SND_PCM_ACCESS_RW_NONINTERLEAVED = 4,$/;"	e	enum:_snd_pcm_access
SND_PCM_ASYNC	alsa/pcm.h	20;"	d
SND_PCM_CLASS_DIGITIZER	alsa/pcm.h	/^	SND_PCM_CLASS_DIGITIZER = 3,$/;"	e	enum:_snd_pcm_class
SND_PCM_CLASS_GENERIC	alsa/pcm.h	/^	SND_PCM_CLASS_GENERIC,$/;"	e	enum:_snd_pcm_class
SND_PCM_CLASS_LAST	alsa/pcm.h	/^	SND_PCM_CLASS_LAST = 3$/;"	e	enum:_snd_pcm_class
SND_PCM_CLASS_MODEM	alsa/pcm.h	/^	SND_PCM_CLASS_MODEM = 2,$/;"	e	enum:_snd_pcm_class
SND_PCM_CLASS_MULTI	alsa/pcm.h	/^	SND_PCM_CLASS_MULTI = 1,$/;"	e	enum:_snd_pcm_class
SND_PCM_EXTPLUG_VERSION	alsa/pcm_extplug.h	12;"	d
SND_PCM_EXTPLUG_VERSION_MAJOR	alsa/pcm_extplug.h	14;"	d
SND_PCM_EXTPLUG_VERSION_MINOR	alsa/pcm_extplug.h	13;"	d
SND_PCM_EXTPLUG_VERSION_TINY	alsa/pcm_extplug.h	15;"	d
SND_PCM_FORMAT_A_LAW	alsa/pcm.h	/^	SND_PCM_FORMAT_A_LAW = 21,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_FLOAT	alsa/pcm.h	/^	SND_PCM_FORMAT_FLOAT = 14,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_FLOAT64	alsa/pcm.h	/^	SND_PCM_FORMAT_FLOAT64 = 16,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_FLOAT64_BE	alsa/pcm.h	/^	SND_PCM_FORMAT_FLOAT64_BE = 17,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_FLOAT64_LE	alsa/pcm.h	/^	SND_PCM_FORMAT_FLOAT64_LE = 16,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_FLOAT_BE	alsa/pcm.h	/^	SND_PCM_FORMAT_FLOAT_BE = 15,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_FLOAT_LE	alsa/pcm.h	/^	SND_PCM_FORMAT_FLOAT_LE = 14,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_GSM	alsa/pcm.h	/^	SND_PCM_FORMAT_GSM = 24,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_IEC958_SUBFRAME	alsa/pcm.h	/^	SND_PCM_FORMAT_IEC958_SUBFRAME = 18$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_IEC958_SUBFRAME_BE	alsa/pcm.h	/^	SND_PCM_FORMAT_IEC958_SUBFRAME_BE = 19,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_IEC958_SUBFRAME_LE	alsa/pcm.h	/^	SND_PCM_FORMAT_IEC958_SUBFRAME_LE = 18,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_IMA_ADPCM	alsa/pcm.h	/^	SND_PCM_FORMAT_IMA_ADPCM = 22,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_LAST	alsa/pcm.h	/^	SND_PCM_FORMAT_LAST = 43,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_MPEG	alsa/pcm.h	/^	SND_PCM_FORMAT_MPEG = 23,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_MU_LAW	alsa/pcm.h	/^	SND_PCM_FORMAT_MU_LAW = 20,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_S16	alsa/pcm.h	/^	SND_PCM_FORMAT_S16 = 2,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_S16_BE	alsa/pcm.h	/^	SND_PCM_FORMAT_S16_BE = 3,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_S16_LE	alsa/pcm.h	/^	SND_PCM_FORMAT_S16_LE = 2,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_S18_3BE	alsa/pcm.h	/^	SND_PCM_FORMAT_S18_3BE = 41,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_S18_3LE	alsa/pcm.h	/^	SND_PCM_FORMAT_S18_3LE = 40,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_S20_3BE	alsa/pcm.h	/^	SND_PCM_FORMAT_S20_3BE = 37,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_S20_3LE	alsa/pcm.h	/^	SND_PCM_FORMAT_S20_3LE = 36,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_S24	alsa/pcm.h	/^	SND_PCM_FORMAT_S24 = 6,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_S24_3BE	alsa/pcm.h	/^	SND_PCM_FORMAT_S24_3BE = 33,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_S24_3LE	alsa/pcm.h	/^	SND_PCM_FORMAT_S24_3LE = 32,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_S24_BE	alsa/pcm.h	/^	SND_PCM_FORMAT_S24_BE = 7,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_S24_LE	alsa/pcm.h	/^	SND_PCM_FORMAT_S24_LE = 6,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_S32	alsa/pcm.h	/^	SND_PCM_FORMAT_S32 = 10,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_S32_BE	alsa/pcm.h	/^	SND_PCM_FORMAT_S32_BE = 11,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_S32_LE	alsa/pcm.h	/^	SND_PCM_FORMAT_S32_LE = 10,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_S8	alsa/pcm.h	/^	SND_PCM_FORMAT_S8,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_SPECIAL	alsa/pcm.h	/^	SND_PCM_FORMAT_SPECIAL = 31,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_U16	alsa/pcm.h	/^	SND_PCM_FORMAT_U16 = 4,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_U16_BE	alsa/pcm.h	/^	SND_PCM_FORMAT_U16_BE = 5,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_U16_LE	alsa/pcm.h	/^	SND_PCM_FORMAT_U16_LE = 4,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_U18_3BE	alsa/pcm.h	/^	SND_PCM_FORMAT_U18_3BE = 43,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_U18_3LE	alsa/pcm.h	/^	SND_PCM_FORMAT_U18_3LE = 42,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_U20_3BE	alsa/pcm.h	/^	SND_PCM_FORMAT_U20_3BE = 39,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_U20_3LE	alsa/pcm.h	/^	SND_PCM_FORMAT_U20_3LE = 38,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_U24	alsa/pcm.h	/^	SND_PCM_FORMAT_U24 = 8,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_U24_3BE	alsa/pcm.h	/^	SND_PCM_FORMAT_U24_3BE = 35,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_U24_3LE	alsa/pcm.h	/^	SND_PCM_FORMAT_U24_3LE = 34,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_U24_BE	alsa/pcm.h	/^	SND_PCM_FORMAT_U24_BE = 9,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_U24_LE	alsa/pcm.h	/^	SND_PCM_FORMAT_U24_LE = 8,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_U32	alsa/pcm.h	/^	SND_PCM_FORMAT_U32 = 12,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_U32_BE	alsa/pcm.h	/^	SND_PCM_FORMAT_U32_BE = 13,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_U32_LE	alsa/pcm.h	/^	SND_PCM_FORMAT_U32_LE = 12,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_U8	alsa/pcm.h	/^	SND_PCM_FORMAT_U8 = 1,$/;"	e	enum:_snd_pcm_format
SND_PCM_FORMAT_UNKNOWN	alsa/pcm.h	/^	SND_PCM_FORMAT_UNKNOWN = -1,$/;"	e	enum:_snd_pcm_format
SND_PCM_HOOK_TYPE_CLOSE	alsa/pcm.h	/^	SND_PCM_HOOK_TYPE_CLOSE = 2,$/;"	e	enum:_snd_pcm_hook_type
SND_PCM_HOOK_TYPE_HW_FREE	alsa/pcm.h	/^	SND_PCM_HOOK_TYPE_HW_FREE = 1,$/;"	e	enum:_snd_pcm_hook_type
SND_PCM_HOOK_TYPE_HW_PARAMS	alsa/pcm.h	/^	SND_PCM_HOOK_TYPE_HW_PARAMS,$/;"	e	enum:_snd_pcm_hook_type
SND_PCM_HOOK_TYPE_LAST	alsa/pcm.h	/^	SND_PCM_HOOK_TYPE_LAST = 2$/;"	e	enum:_snd_pcm_hook_type
SND_PCM_NONBLOCK	alsa/pcm.h	19;"	d
SND_PCM_PLUGIN_RATE_MAX	alsa/pcm_plugin.h	15;"	d
SND_PCM_PLUGIN_RATE_MIN	alsa/pcm_plugin.h	16;"	d
SND_PCM_PLUGIN_ROUTE_FLOAT	alsa/pcm_plugin.h	12;"	d
SND_PCM_PLUGIN_ROUTE_FULL	alsa/pcm_plugin.h	13;"	d
SND_PCM_PLUGIN_ROUTE_HALF	alsa/pcm_plugin.h	11;"	d
SND_PCM_PLUGIN_ROUTE_RESOLUTION	alsa/pcm_plugin.h	14;"	d
SND_PCM_START_DATA	alsa/pcm.h	/^	SND_PCM_START_DATA,$/;"	e	enum:_snd_pcm_start
SND_PCM_START_EXPLICIT	alsa/pcm.h	/^	SND_PCM_START_EXPLICIT = 1,$/;"	e	enum:_snd_pcm_start
SND_PCM_START_LAST	alsa/pcm.h	/^	SND_PCM_START_LAST = 1$/;"	e	enum:_snd_pcm_start
SND_PCM_STATE_DISCONNECTED	alsa/pcm.h	/^	SND_PCM_STATE_DISCONNECTED = 8,$/;"	e	enum:_snd_pcm_state
SND_PCM_STATE_DRAINING	alsa/pcm.h	/^	SND_PCM_STATE_DRAINING = 5,$/;"	e	enum:_snd_pcm_state
SND_PCM_STATE_LAST	alsa/pcm.h	/^	SND_PCM_STATE_LAST = 8$/;"	e	enum:_snd_pcm_state
SND_PCM_STATE_OPEN	alsa/pcm.h	/^	SND_PCM_STATE_OPEN,$/;"	e	enum:_snd_pcm_state
SND_PCM_STATE_PAUSED	alsa/pcm.h	/^	SND_PCM_STATE_PAUSED = 6,$/;"	e	enum:_snd_pcm_state
SND_PCM_STATE_PREPARED	alsa/pcm.h	/^	SND_PCM_STATE_PREPARED = 2,$/;"	e	enum:_snd_pcm_state
SND_PCM_STATE_RUNNING	alsa/pcm.h	/^	SND_PCM_STATE_RUNNING = 3,$/;"	e	enum:_snd_pcm_state
SND_PCM_STATE_SETUP	alsa/pcm.h	/^	SND_PCM_STATE_SETUP = 1,$/;"	e	enum:_snd_pcm_state
SND_PCM_STATE_SUSPENDED	alsa/pcm.h	/^	SND_PCM_STATE_SUSPENDED = 7,$/;"	e	enum:_snd_pcm_state
SND_PCM_STATE_XRUN	alsa/pcm.h	/^	SND_PCM_STATE_XRUN = 4,$/;"	e	enum:_snd_pcm_state
SND_PCM_STREAM_CAPTURE	alsa/pcm.h	/^	SND_PCM_STREAM_CAPTURE = 1,$/;"	e	enum:_snd_pcm_stream
SND_PCM_STREAM_LAST	alsa/pcm.h	/^	SND_PCM_STREAM_LAST = 1$/;"	e	enum:_snd_pcm_stream
SND_PCM_STREAM_PLAYBACK	alsa/pcm.h	/^	SND_PCM_STREAM_PLAYBACK,$/;"	e	enum:_snd_pcm_stream
SND_PCM_SUBCLASS_GENERIC_MIX	alsa/pcm.h	/^	SND_PCM_SUBCLASS_GENERIC_MIX,$/;"	e	enum:_snd_pcm_subclass
SND_PCM_SUBCLASS_LAST	alsa/pcm.h	/^	SND_PCM_SUBCLASS_LAST = 1$/;"	e	enum:_snd_pcm_subclass
SND_PCM_SUBCLASS_MULTI_MIX	alsa/pcm.h	/^	SND_PCM_SUBCLASS_MULTI_MIX = 1,$/;"	e	enum:_snd_pcm_subclass
SND_PCM_SUBFORMAT_LAST	alsa/pcm.h	/^	SND_PCM_SUBFORMAT_LAST$/;"	e	enum:_snd_pcm_subformat
SND_PCM_SUBFORMAT_STD	alsa/pcm.h	/^	SND_PCM_SUBFORMAT_STD,$/;"	e	enum:_snd_pcm_subformat
SND_PCM_TSTAMP_LAST	alsa/pcm.h	/^	SND_PCM_TSTAMP_LAST = 1$/;"	e	enum:_snd_pcm_tstamp
SND_PCM_TSTAMP_MMAP	alsa/pcm.h	/^	SND_PCM_TSTAMP_MMAP = 1,$/;"	e	enum:_snd_pcm_tstamp
SND_PCM_TSTAMP_NONE	alsa/pcm.h	/^	SND_PCM_TSTAMP_NONE,$/;"	e	enum:_snd_pcm_tstamp
SND_PCM_TYPE_ADPCM	alsa/pcm.h	/^	SND_PCM_TYPE_ADPCM = 11,$/;"	e	enum:_snd_pcm_type
SND_PCM_TYPE_ALAW	alsa/pcm.h	/^	SND_PCM_TYPE_ALAW = 9,$/;"	e	enum:_snd_pcm_type
SND_PCM_TYPE_COPY	alsa/pcm.h	/^	SND_PCM_TYPE_COPY = 7,$/;"	e	enum:_snd_pcm_type
SND_PCM_TYPE_DMIX	alsa/pcm.h	/^	SND_PCM_TYPE_DMIX = 22,$/;"	e	enum:_snd_pcm_type
SND_PCM_TYPE_DROUTE	alsa/pcm.h	/^	SND_PCM_TYPE_DROUTE = 18,$/;"	e	enum:_snd_pcm_type
SND_PCM_TYPE_DSHARE	alsa/pcm.h	/^	SND_PCM_TYPE_DSHARE = 25,$/;"	e	enum:_snd_pcm_type
SND_PCM_TYPE_DSNOOP	alsa/pcm.h	/^	SND_PCM_TYPE_DSNOOP = 24,$/;"	e	enum:_snd_pcm_type
SND_PCM_TYPE_EXTPLUG	alsa/pcm.h	/^	SND_PCM_TYPE_EXTPLUG = 29,$/;"	e	enum:_snd_pcm_type
SND_PCM_TYPE_FILE	alsa/pcm.h	/^	SND_PCM_TYPE_FILE = 3,$/;"	e	enum:_snd_pcm_type
SND_PCM_TYPE_HOOKS	alsa/pcm.h	/^	SND_PCM_TYPE_HOOKS = 1,$/;"	e	enum:_snd_pcm_type
SND_PCM_TYPE_HW	alsa/pcm.h	/^	SND_PCM_TYPE_HW,$/;"	e	enum:_snd_pcm_type
SND_PCM_TYPE_IEC958	alsa/pcm.h	/^	SND_PCM_TYPE_IEC958 = 26,$/;"	e	enum:_snd_pcm_type
SND_PCM_TYPE_INET	alsa/pcm.h	/^	SND_PCM_TYPE_INET = 6,$/;"	e	enum:_snd_pcm_type
SND_PCM_TYPE_IOPLUG	alsa/pcm.h	/^	SND_PCM_TYPE_IOPLUG = 28,$/;"	e	enum:_snd_pcm_type
SND_PCM_TYPE_JACK	alsa/pcm.h	/^	SND_PCM_TYPE_JACK = 23,$/;"	e	enum:_snd_pcm_type
SND_PCM_TYPE_LADSPA	alsa/pcm.h	/^	SND_PCM_TYPE_LADSPA = 21,$/;"	e	enum:_snd_pcm_type
SND_PCM_TYPE_LAST	alsa/pcm.h	/^	SND_PCM_TYPE_LAST = 29$/;"	e	enum:_snd_pcm_type
SND_PCM_TYPE_LBSERVER	alsa/pcm.h	/^	SND_PCM_TYPE_LBSERVER = 19,$/;"	e	enum:_snd_pcm_type
SND_PCM_TYPE_LINEAR	alsa/pcm.h	/^	SND_PCM_TYPE_LINEAR = 8,$/;"	e	enum:_snd_pcm_type
SND_PCM_TYPE_LINEAR_FLOAT	alsa/pcm.h	/^	SND_PCM_TYPE_LINEAR_FLOAT = 20,$/;"	e	enum:_snd_pcm_type
SND_PCM_TYPE_METER	alsa/pcm.h	/^	SND_PCM_TYPE_METER = 16,$/;"	e	enum:_snd_pcm_type
SND_PCM_TYPE_MIX	alsa/pcm.h	/^	SND_PCM_TYPE_MIX = 17,$/;"	e	enum:_snd_pcm_type
SND_PCM_TYPE_MULAW	alsa/pcm.h	/^	SND_PCM_TYPE_MULAW = 10,$/;"	e	enum:_snd_pcm_type
SND_PCM_TYPE_MULTI	alsa/pcm.h	/^	SND_PCM_TYPE_MULTI = 2,$/;"	e	enum:_snd_pcm_type
SND_PCM_TYPE_NULL	alsa/pcm.h	/^	SND_PCM_TYPE_NULL = 4,$/;"	e	enum:_snd_pcm_type
SND_PCM_TYPE_PLUG	alsa/pcm.h	/^	SND_PCM_TYPE_PLUG = 14,$/;"	e	enum:_snd_pcm_type
SND_PCM_TYPE_RATE	alsa/pcm.h	/^	SND_PCM_TYPE_RATE = 12,$/;"	e	enum:_snd_pcm_type
SND_PCM_TYPE_ROUTE	alsa/pcm.h	/^	SND_PCM_TYPE_ROUTE = 13,$/;"	e	enum:_snd_pcm_type
SND_PCM_TYPE_SHARE	alsa/pcm.h	/^	SND_PCM_TYPE_SHARE = 15,$/;"	e	enum:_snd_pcm_type
SND_PCM_TYPE_SHM	alsa/pcm.h	/^	SND_PCM_TYPE_SHM = 5,$/;"	e	enum:_snd_pcm_type
SND_PCM_TYPE_SOFTVOL	alsa/pcm.h	/^	SND_PCM_TYPE_SOFTVOL = 27,$/;"	e	enum:_snd_pcm_type
SND_PCM_XRUN_LAST	alsa/pcm.h	/^	SND_PCM_XRUN_LAST = 1$/;"	e	enum:_snd_pcm_xrun
SND_PCM_XRUN_NONE	alsa/pcm.h	/^	SND_PCM_XRUN_NONE,$/;"	e	enum:_snd_pcm_xrun
SND_PCM_XRUN_STOP	alsa/pcm.h	/^	SND_PCM_XRUN_STOP = 1,$/;"	e	enum:_snd_pcm_xrun
SND_RAWMIDI_APPEND	alsa/rawmidi.h	15;"	d
SND_RAWMIDI_NONBLOCK	alsa/rawmidi.h	16;"	d
SND_RAWMIDI_STREAM_INPUT	alsa/rawmidi.h	/^	SND_RAWMIDI_STREAM_INPUT = 1,$/;"	e	enum:_snd_rawmidi_stream
SND_RAWMIDI_STREAM_LAST	alsa/rawmidi.h	/^	SND_RAWMIDI_STREAM_LAST = 1$/;"	e	enum:_snd_rawmidi_stream
SND_RAWMIDI_STREAM_OUTPUT	alsa/rawmidi.h	/^	SND_RAWMIDI_STREAM_OUTPUT,$/;"	e	enum:_snd_rawmidi_stream
SND_RAWMIDI_SYNC	alsa/rawmidi.h	17;"	d
SND_RAWMIDI_TYPE_HW	alsa/rawmidi.h	/^	SND_RAWMIDI_TYPE_HW,$/;"	e	enum:_snd_rawmidi_type
SND_RAWMIDI_TYPE_INET	alsa/rawmidi.h	/^	SND_RAWMIDI_TYPE_INET = 2,$/;"	e	enum:_snd_rawmidi_type
SND_RAWMIDI_TYPE_SHM	alsa/rawmidi.h	/^	SND_RAWMIDI_TYPE_SHM = 1,$/;"	e	enum:_snd_rawmidi_type
SND_RAWMIDI_TYPE_VIRTUAL	alsa/rawmidi.h	/^	SND_RAWMIDI_TYPE_VIRTUAL = 3$/;"	e	enum:_snd_rawmidi_type
SND_SCTL_NOFREE	alsa/control.h	29;"	d
SND_SEQ_ADDRESS_BROADCAST	alsa/seq.h	115;"	d
SND_SEQ_ADDRESS_SUBSCRIBERS	alsa/seq.h	114;"	d
SND_SEQ_ADDRESS_UNKNOWN	alsa/seq.h	112;"	d
SND_SEQ_CLIENT_SYSTEM	alsa/seq.h	106;"	d
SND_SEQ_EVENT_LENGTH_FIXED	alsa/seq_event.h	14;"	d
SND_SEQ_EVENT_LENGTH_MASK	alsa/seq_event.h	24;"	d
SND_SEQ_EVENT_LENGTH_VARIABLE	alsa/seq_event.h	20;"	d
SND_SEQ_EVENT_LENGTH_VARUSR	alsa/seq_event.h	23;"	d
SND_SEQ_INSTR_ATYPE_ALIAS	alsa/instr.h	32;"	d
SND_SEQ_INSTR_ATYPE_DATA	alsa/instr.h	28;"	d
SND_SEQ_INSTR_FREE_CMD_ALL	alsa/instr.h	29;"	d
SND_SEQ_INSTR_FREE_CMD_CLUSTER	alsa/instr.h	36;"	d
SND_SEQ_INSTR_FREE_CMD_PRIVATE	alsa/instr.h	33;"	d
SND_SEQ_INSTR_FREE_CMD_SINGLE	alsa/instr.h	38;"	d
SND_SEQ_INSTR_GET_CMD_FULL	alsa/instr.h	30;"	d
SND_SEQ_INSTR_GET_CMD_PARTIAL	alsa/instr.h	34;"	d
SND_SEQ_INSTR_ID_DLS1	alsa/instr.h	11;"	d
SND_SEQ_INSTR_ID_DLS2	alsa/instr.h	12;"	d
SND_SEQ_INSTR_ID_GUS_PATCH	alsa/instr.h	13;"	d
SND_SEQ_INSTR_ID_INTERWAVE	alsa/instr.h	14;"	d
SND_SEQ_INSTR_ID_OPL2_3	alsa/instr.h	15;"	d
SND_SEQ_INSTR_ID_OPL4	alsa/instr.h	16;"	d
SND_SEQ_INSTR_ID_SIMPLE	alsa/instr.h	17;"	d
SND_SEQ_INSTR_ID_SOUNDFONT	alsa/instr.h	18;"	d
SND_SEQ_INSTR_PUT_CMD_ADD	alsa/instr.h	39;"	d
SND_SEQ_INSTR_PUT_CMD_CREATE	alsa/instr.h	31;"	d
SND_SEQ_INSTR_PUT_CMD_MODIFY	alsa/instr.h	37;"	d
SND_SEQ_INSTR_PUT_CMD_REMOVE	alsa/instr.h	40;"	d
SND_SEQ_INSTR_PUT_CMD_REPLACE	alsa/instr.h	35;"	d
SND_SEQ_INSTR_QUERY_FOLLOW_ALIAS	alsa/instr.h	19;"	d
SND_SEQ_INSTR_TYPE0_DLS1	alsa/instr.h	20;"	d
SND_SEQ_INSTR_TYPE0_DLS2	alsa/instr.h	23;"	d
SND_SEQ_INSTR_TYPE1_GUS_PATCH	alsa/instr.h	26;"	d
SND_SEQ_INSTR_TYPE1_INTERWAVE	alsa/instr.h	27;"	d
SND_SEQ_INSTR_TYPE1_SIMPLE	alsa/instr.h	21;"	d
SND_SEQ_INSTR_TYPE1_SOUNDFONT	alsa/instr.h	24;"	d
SND_SEQ_INSTR_TYPE2_OPL2_3	alsa/instr.h	22;"	d
SND_SEQ_INSTR_TYPE2_OPL4	alsa/instr.h	25;"	d
SND_SEQ_KERNEL_CLIENT	alsa/seq.h	/^	SND_SEQ_KERNEL_CLIENT = 2$/;"	e	enum:snd_seq_client_type
SND_SEQ_NONBLOCK	alsa/seq.h	108;"	d
SND_SEQ_OPEN_DUPLEX	alsa/seq.h	105;"	d
SND_SEQ_OPEN_INPUT	alsa/seq.h	111;"	d
SND_SEQ_OPEN_OUTPUT	alsa/seq.h	109;"	d
SND_SEQ_PORT_CAP_DUPLEX	alsa/seq.h	92;"	d
SND_SEQ_PORT_CAP_NO_EXPORT	alsa/seq.h	101;"	d
SND_SEQ_PORT_CAP_READ	alsa/seq.h	72;"	d
SND_SEQ_PORT_CAP_SUBS_READ	alsa/seq.h	95;"	d
SND_SEQ_PORT_CAP_SUBS_WRITE	alsa/seq.h	98;"	d
SND_SEQ_PORT_CAP_SYNC_READ	alsa/seq.h	85;"	d
SND_SEQ_PORT_CAP_SYNC_WRITE	alsa/seq.h	89;"	d
SND_SEQ_PORT_CAP_WRITE	alsa/seq.h	75;"	d
SND_SEQ_PORT_SYSTEM_ANNOUNCE	alsa/seq.h	110;"	d
SND_SEQ_PORT_SYSTEM_TIMER	alsa/seq.h	107;"	d
SND_SEQ_PORT_TYPE_APPLICATION	alsa/seq.h	88;"	d
SND_SEQ_PORT_TYPE_DIRECT_SAMPLE	alsa/seq.h	79;"	d
SND_SEQ_PORT_TYPE_HARDWARE	alsa/seq.h	81;"	d
SND_SEQ_PORT_TYPE_MIDI_GENERIC	alsa/seq.h	76;"	d
SND_SEQ_PORT_TYPE_MIDI_GM	alsa/seq.h	86;"	d
SND_SEQ_PORT_TYPE_MIDI_GM2	alsa/seq.h	99;"	d
SND_SEQ_PORT_TYPE_MIDI_GS	alsa/seq.h	90;"	d
SND_SEQ_PORT_TYPE_MIDI_MT32	alsa/seq.h	96;"	d
SND_SEQ_PORT_TYPE_MIDI_XG	alsa/seq.h	93;"	d
SND_SEQ_PORT_TYPE_PORT	alsa/seq.h	84;"	d
SND_SEQ_PORT_TYPE_SAMPLE	alsa/seq.h	80;"	d
SND_SEQ_PORT_TYPE_SOFTWARE	alsa/seq.h	82;"	d
SND_SEQ_PORT_TYPE_SPECIFIC	alsa/seq.h	73;"	d
SND_SEQ_PORT_TYPE_SYNTH	alsa/seq.h	78;"	d
SND_SEQ_PORT_TYPE_SYNTHESIZER	alsa/seq.h	83;"	d
SND_SEQ_PRIORITY_HIGH	alsa/seq_event.h	21;"	d
SND_SEQ_PRIORITY_MASK	alsa/seq_event.h	22;"	d
SND_SEQ_PRIORITY_NORMAL	alsa/seq_event.h	15;"	d
SND_SEQ_QUERY_SUBS_READ	alsa/seq.h	/^	SND_SEQ_QUERY_SUBS_READ,$/;"	e	enum:__anon9
SND_SEQ_QUERY_SUBS_WRITE	alsa/seq.h	/^	SND_SEQ_QUERY_SUBS_WRITE = 1$/;"	e	enum:__anon9
SND_SEQ_QUEUE_DIRECT	alsa/seq.h	113;"	d
SND_SEQ_REMOVE_DEST	alsa/seq.h	87;"	d
SND_SEQ_REMOVE_DEST_CHANNEL	alsa/seq.h	91;"	d
SND_SEQ_REMOVE_EVENT_TYPE	alsa/seq.h	102;"	d
SND_SEQ_REMOVE_IGNORE_OFF	alsa/seq.h	103;"	d
SND_SEQ_REMOVE_INPUT	alsa/seq.h	74;"	d
SND_SEQ_REMOVE_OUTPUT	alsa/seq.h	77;"	d
SND_SEQ_REMOVE_TAG_MATCH	alsa/seq.h	104;"	d
SND_SEQ_REMOVE_TIME_AFTER	alsa/seq.h	97;"	d
SND_SEQ_REMOVE_TIME_BEFORE	alsa/seq.h	94;"	d
SND_SEQ_REMOVE_TIME_TICK	alsa/seq.h	100;"	d
SND_SEQ_SAMPLE_STOP_IMMEDIATELY	alsa/seq_event.h	/^	SND_SEQ_SAMPLE_STOP_IMMEDIATELY,$/;"	e	enum:snd_seq_stop_mode
SND_SEQ_SAMPLE_STOP_LOOP	alsa/seq_event.h	/^	SND_SEQ_SAMPLE_STOP_LOOP = 2$/;"	e	enum:snd_seq_stop_mode
SND_SEQ_SAMPLE_STOP_VENVELOPE	alsa/seq_event.h	/^	SND_SEQ_SAMPLE_STOP_VENVELOPE = 1,$/;"	e	enum:snd_seq_stop_mode
SND_SEQ_TIMER_ALSA	alsa/seq.h	/^	SND_SEQ_TIMER_ALSA,$/;"	e	enum:__anon10
SND_SEQ_TIMER_MIDI_CLOCK	alsa/seq.h	/^	SND_SEQ_TIMER_MIDI_CLOCK = 1,$/;"	e	enum:__anon10
SND_SEQ_TIMER_MIDI_TICK	alsa/seq.h	/^	SND_SEQ_TIMER_MIDI_TICK = 2$/;"	e	enum:__anon10
SND_SEQ_TIME_MODE_ABS	alsa/seq_event.h	13;"	d
SND_SEQ_TIME_MODE_MASK	alsa/seq_event.h	18;"	d
SND_SEQ_TIME_MODE_REL	alsa/seq_event.h	19;"	d
SND_SEQ_TIME_STAMP_MASK	alsa/seq_event.h	16;"	d
SND_SEQ_TIME_STAMP_REAL	alsa/seq_event.h	17;"	d
SND_SEQ_TIME_STAMP_TICK	alsa/seq_event.h	12;"	d
SND_SEQ_TYPE_HW	alsa/seq.h	/^	SND_SEQ_TYPE_HW,$/;"	e	enum:_snd_seq_type
SND_SEQ_TYPE_INET	alsa/seq.h	/^	SND_SEQ_TYPE_INET = 2$/;"	e	enum:_snd_seq_type
SND_SEQ_TYPE_SHM	alsa/seq.h	/^	SND_SEQ_TYPE_SHM = 1,$/;"	e	enum:_snd_seq_type
SND_SEQ_USER_CLIENT	alsa/seq.h	/^	SND_SEQ_USER_CLIENT = 1,$/;"	e	enum:snd_seq_client_type
SND_SPCM_DUPLEX_LIBERAL	alsa/pcm.h	/^	SND_SPCM_DUPLEX_LIBERAL,$/;"	e	enum:_snd_spcm_duplex_type
SND_SPCM_DUPLEX_PEDANTIC	alsa/pcm.h	/^	SND_SPCM_DUPLEX_PEDANTIC = 1$/;"	e	enum:_snd_spcm_duplex_type
SND_SPCM_LATENCY_MEDIUM	alsa/pcm.h	/^	SND_SPCM_LATENCY_MEDIUM = 1,$/;"	e	enum:_snd_spcm_latency
SND_SPCM_LATENCY_REALTIME	alsa/pcm.h	/^	SND_SPCM_LATENCY_REALTIME = 2$/;"	e	enum:_snd_spcm_latency
SND_SPCM_LATENCY_STANDARD	alsa/pcm.h	/^	SND_SPCM_LATENCY_STANDARD,$/;"	e	enum:_snd_spcm_latency
SND_SPCM_XRUN_IGNORE	alsa/pcm.h	/^	SND_SPCM_XRUN_IGNORE,$/;"	e	enum:_snd_spcm_xrun_type
SND_SPCM_XRUN_STOP	alsa/pcm.h	/^	SND_SPCM_XRUN_STOP = 1$/;"	e	enum:_snd_spcm_xrun_type
SND_TIMER_GLOBAL_HPET	alsa/timer.h	19;"	d
SND_TIMER_GLOBAL_RTC	alsa/timer.h	18;"	d
SND_TIMER_GLOBAL_SYSTEM	alsa/timer.h	17;"	d
SND_TIMER_OPEN_NONBLOCK	alsa/timer.h	15;"	d
SND_TIMER_OPEN_TREAD	alsa/timer.h	16;"	d
SND_TIMER_TYPE_HW	alsa/timer.h	/^	SND_TIMER_TYPE_HW,$/;"	e	enum:_snd_timer_type
SND_TIMER_TYPE_INET	alsa/timer.h	/^	SND_TIMER_TYPE_INET = 2$/;"	e	enum:_snd_timer_type
SND_TIMER_TYPE_SHM	alsa/timer.h	/^	SND_TIMER_TYPE_SHM = 1,$/;"	e	enum:_snd_timer_type
SOCK_DGRAM	sys/socket.h	142;"	d
SOCK_PACKET	sys/socket.h	141;"	d
SOCK_RAW	sys/socket.h	143;"	d
SOCK_RDM	sys/socket.h	144;"	d
SOCK_SEQPACKET	sys/socket.h	145;"	d
SOCK_STREAM	sys/socket.h	140;"	d
SOL_IP	netinet/in.h	118;"	d
SOL_RAW	sys/socket.h	18;"	d
SOL_SOCKET	sys/socket.h	16;"	d
SOL_TCP	netinet/tcp.h	12;"	d
SOL_UDP	netinet/udp.h	11;"	d
SOMAXCONN	sys/socket.h	17;"	d
SO_ACCEPTCONN	sys/socket.h	242;"	d
SO_BROADCAST	sys/socket.h	245;"	d
SO_BSDCOMPAT	sys/socket.h	155;"	d
SO_DEBUG	sys/socket.h	150;"	d
SO_DONTROUTE	sys/socket.h	244;"	d
SO_ERROR	sys/socket.h	243;"	d
SO_KEEPALIVE	sys/socket.h	248;"	d
SO_LINGER	sys/socket.h	154;"	d
SO_NO_CHECK	sys/socket.h	152;"	d
SO_OOBINLINE	sys/socket.h	151;"	d
SO_PRIORITY	sys/socket.h	153;"	d
SO_RCVBUF	sys/socket.h	247;"	d
SO_RCVLOWAT	sys/socket.h	157;"	d
SO_RCVLOWAT	sys/socket.h	160;"	d
SO_RCVLOWAT	sys/socket.h	169;"	d
SO_RCVLOWAT	sys/socket.h	172;"	d
SO_RCVLOWAT	sys/socket.h	175;"	d
SO_RCVLOWAT	sys/socket.h	178;"	d
SO_RCVLOWAT	sys/socket.h	181;"	d
SO_RCVTIMEO	sys/socket.h	184;"	d
SO_RCVTIMEO	sys/socket.h	187;"	d
SO_RCVTIMEO	sys/socket.h	212;"	d
SO_RCVTIMEO	sys/socket.h	215;"	d
SO_RCVTIMEO	sys/socket.h	218;"	d
SO_RCVTIMEO	sys/socket.h	221;"	d
SO_RCVTIMEO	sys/socket.h	224;"	d
SO_REUSEADDR	sys/socket.h	210;"	d
SO_SNDBUF	sys/socket.h	246;"	d
SO_SNDLOWAT	sys/socket.h	163;"	d
SO_SNDLOWAT	sys/socket.h	166;"	d
SO_SNDLOWAT	sys/socket.h	190;"	d
SO_SNDLOWAT	sys/socket.h	193;"	d
SO_SNDLOWAT	sys/socket.h	196;"	d
SO_SNDLOWAT	sys/socket.h	199;"	d
SO_SNDLOWAT	sys/socket.h	202;"	d
SO_SNDTIMEO	sys/socket.h	205;"	d
SO_SNDTIMEO	sys/socket.h	208;"	d
SO_SNDTIMEO	sys/socket.h	227;"	d
SO_SNDTIMEO	sys/socket.h	230;"	d
SO_SNDTIMEO	sys/socket.h	233;"	d
SO_SNDTIMEO	sys/socket.h	236;"	d
SO_SNDTIMEO	sys/socket.h	239;"	d
SO_TYPE	sys/socket.h	241;"	d
SSIZE_MAX	limits.h	103;"	d
SS_DISABLE	signal.h	572;"	d
SS_ONSTACK	signal.h	571;"	d
STDERR_FILENO	unistd.h	20;"	d
STDIN_FILENO	unistd.h	16;"	d
STDOUT_FILENO	unistd.h	18;"	d
SUCCESS	rpc/rpc_msg.h	/^	SUCCESS = 0,$/;"	e	enum:accept_stat
SVCXPRT	rpc/svc.h	/^    struct SVCXPRT {$/;"	s
SVCXPRT	rpc/svc.h	/^    typedef struct SVCXPRT SVCXPRT;$/;"	t	typeref:struct:SVCXPRT
SVCXPRT::xp_addrlen	rpc/svc.h	/^	int xp_addrlen;$/;"	m	struct:SVCXPRT	access:public
SVCXPRT::xp_ops	rpc/svc.h	/^	struct xp_ops *xp_ops;$/;"	m	struct:SVCXPRT	typeref:struct:SVCXPRT::xp_ops	access:public
SVCXPRT::xp_p1	rpc/svc.h	/^	caddr_t xp_p1;$/;"	m	struct:SVCXPRT	access:public
SVCXPRT::xp_p2	rpc/svc.h	/^	caddr_t xp_p2;$/;"	m	struct:SVCXPRT	access:public
SVCXPRT::xp_pad	rpc/svc.h	/^	char xp_pad[256];$/;"	m	struct:SVCXPRT	access:public
SVCXPRT::xp_port	rpc/svc.h	/^	u_short xp_port;$/;"	m	struct:SVCXPRT	access:public
SVCXPRT::xp_raddr	rpc/svc.h	/^	struct sockaddr_in xp_raddr;$/;"	m	struct:SVCXPRT	typeref:struct:SVCXPRT::sockaddr_in	access:public
SVCXPRT::xp_sock	rpc/svc.h	/^	int xp_sock;$/;"	m	struct:SVCXPRT	access:public
SVCXPRT::xp_verf	rpc/svc.h	/^	struct opaque_auth xp_verf;$/;"	m	struct:SVCXPRT	typeref:struct:SVCXPRT::opaque_auth	access:public
SV_INTERRUPT	signal.h	189;"	d
SV_ONSTACK	signal.h	188;"	d
SV_RESETHAND	signal.h	190;"	d
SYMTYPE	tar.h	13;"	d
SYSTEM_ERR	rpc/rpc_msg.h	/^	SYSTEM_ERR = 5$/;"	e	enum:accept_stat
SYS_NMLN	sys/utsname.h	11;"	d
S_IEXEC	sys/stat.h	73;"	d
S_IFBLK	sys/stat.h	42;"	d
S_IFCHR	sys/stat.h	40;"	d
S_IFDIR	sys/stat.h	41;"	d
S_IFIFO	sys/stat.h	39;"	d
S_IFLNK	sys/stat.h	44;"	d
S_IFMT	sys/stat.h	46;"	d
S_IFREG	sys/stat.h	43;"	d
S_IFSOCK	sys/stat.h	45;"	d
S_IREAD	sys/stat.h	71;"	d
S_IRGRP	sys/stat.h	26;"	d
S_IROTH	sys/stat.h	25;"	d
S_IRUSR	sys/stat.h	36;"	d
S_IRWXG	sys/stat.h	28;"	d
S_IRWXO	sys/stat.h	27;"	d
S_IRWXU	sys/stat.h	24;"	d
S_ISBLK	sys/stat.h	14;"	d
S_ISCHR	sys/stat.h	15;"	d
S_ISDIR	sys/stat.h	16;"	d
S_ISFIFO	sys/stat.h	17;"	d
S_ISGID	sys/stat.h	37;"	d
S_ISLNK	sys/stat.h	18;"	d
S_ISREG	sys/stat.h	19;"	d
S_ISSOCK	sys/stat.h	20;"	d
S_ISUID	sys/stat.h	38;"	d
S_ISVTX	sys/stat.h	33;"	d
S_IWGRP	sys/stat.h	30;"	d
S_IWOTH	sys/stat.h	29;"	d
S_IWRITE	sys/stat.h	72;"	d
S_IWUSR	sys/stat.h	35;"	d
S_IXGRP	sys/stat.h	32;"	d
S_IXOTH	sys/stat.h	31;"	d
S_IXUSR	sys/stat.h	34;"	d
S_TYPEISMQ	sys/stat.h	21;"	d
S_TYPEISSEM	sys/stat.h	22;"	d
S_TYPEISSHM	sys/stat.h	23;"	d
Separations	cups/raster.h	/^	cups_bool_t Separations;$/;"	m	struct:__anon87	access:public
TAB0	termios.h	19;"	d
TAB1	termios.h	137;"	d
TAB1	termios.h	140;"	d
TAB1	termios.h	143;"	d
TAB1	termios.h	146;"	d
TAB1	termios.h	263;"	d
TAB1	termios.h	266;"	d
TAB1	termios.h	323;"	d
TAB2	termios.h	149;"	d
TAB2	termios.h	152;"	d
TAB2	termios.h	155;"	d
TAB2	termios.h	158;"	d
TAB2	termios.h	326;"	d
TAB2	termios.h	329;"	d
TAB2	termios.h	390;"	d
TAB3	termios.h	161;"	d
TAB3	termios.h	164;"	d
TAB3	termios.h	167;"	d
TAB3	termios.h	170;"	d
TAB3	termios.h	336;"	d
TAB3	termios.h	339;"	d
TAB3	termios.h	399;"	d
TABDLY	termios.h	173;"	d
TABDLY	termios.h	176;"	d
TABDLY	termios.h	179;"	d
TABDLY	termios.h	182;"	d
TABDLY	termios.h	342;"	d
TABDLY	termios.h	345;"	d
TABDLY	termios.h	402;"	d
TCIFLUSH	termios.h	12;"	d
TCIOFF	termios.h	319;"	d
TCIOFLUSH	termios.h	320;"	d
TCION	termios.h	334;"	d
TCOFLUSH	termios.h	256;"	d
TCOOFF	termios.h	13;"	d
TCOON	termios.h	257;"	d
TCP_NODELAY	netinet/tcp.h	11;"	d
TCSADRAIN	termios.h	258;"	d
TCSAFLUSH	termios.h	321;"	d
TCSANOW	termios.h	14;"	d
TERMINAL	term.h	/^    typedef struct term TERMINAL;$/;"	t	typeref:struct:term
TGEXEC	tar.h	24;"	d
TGREAD	tar.h	26;"	d
TGWRITE	tar.h	25;"	d
THOUSEP	langinfo.h	109;"	d
TIMER_ABSTIME	time.h	17;"	d
TIOCGWINSZ	sys/ioctl.h	12;"	d
TIOCGWINSZ	sys/ioctl.h	15;"	d
TIOCGWINSZ	sys/ioctl.h	18;"	d
TIOCGWINSZ	sys/ioctl.h	21;"	d
TIOCGWINSZ	sys/ioctl.h	24;"	d
TIOCGWINSZ	sys/ioctl.h	27;"	d
TIOCGWINSZ	sys/ioctl.h	30;"	d
TIOCNOTTY	sys/ioctl.h	45;"	d
TIOCNOTTY	sys/ioctl.h	48;"	d
TIOCNOTTY	sys/ioctl.h	51;"	d
TIOCNOTTY	sys/ioctl.h	63;"	d
TIOCNOTTY	sys/ioctl.h	66;"	d
TIOCNOTTY	sys/ioctl.h	69;"	d
TIOCNOTTY	sys/ioctl.h	72;"	d
TMAGIC	tar.h	35;"	d
TMAGLEN	tar.h	34;"	d
TOEXEC	tar.h	21;"	d
TOREAD	tar.h	23;"	d
TOSTOP	termios.h	1053;"	d
TOSTOP	termios.h	1056;"	d
TOSTOP	termios.h	1059;"	d
TOSTOP	termios.h	1062;"	d
TOSTOP	termios.h	1200;"	d
TOSTOP	termios.h	1224;"	d
TOSTOP	termios.h	1227;"	d
TOWRITE	tar.h	22;"	d
TRAP_BRKPT	signal.h	376;"	d
TRAP_TRACE	signal.h	377;"	d
TRUE	sys/types.h	18;"	d
TRY_AGAIN	netdb.h	19;"	d
TSGID	tar.h	31;"	d
TSUID	tar.h	32;"	d
TSVTX	tar.h	30;"	d
TUEXEC	tar.h	27;"	d
TUREAD	tar.h	29;"	d
TUWRITE	tar.h	28;"	d
TVERSION	tar.h	20;"	d
TVERSLEN	tar.h	33;"	d
T_FMT	langinfo.h	80;"	d
T_FMT_AMPM	langinfo.h	81;"	d
TraySwitch	cups/raster.h	/^	cups_bool_t TraySwitch;$/;"	m	struct:__anon87	access:public
Tumble	cups/raster.h	/^	cups_bool_t Tumble;$/;"	m	struct:__anon87	access:public
UCHAR_MAX	limits.h	149;"	d
UINT16_C	stdint.h	14;"	d
UINT16_MAX	stdint.h	378;"	d
UINT32_C	stdint.h	79;"	d
UINT32_MAX	stdint.h	348;"	d
UINT64_C	stdint.h	117;"	d
UINT64_C	stdint.h	120;"	d
UINT64_C	stdint.h	123;"	d
UINT64_C	stdint.h	81;"	d
UINT64_C	stdint.h	84;"	d
UINT64_C	stdint.h	87;"	d
UINT64_C	stdint.h	90;"	d
UINT64_MAX	stdint.h	432;"	d
UINT8_C	stdint.h	15;"	d
UINT8_MAX	stdint.h	334;"	d
UINTMAX_C	stdint.h	102;"	d
UINTMAX_C	stdint.h	126;"	d
UINTMAX_C	stdint.h	129;"	d
UINTMAX_C	stdint.h	132;"	d
UINTMAX_C	stdint.h	93;"	d
UINTMAX_C	stdint.h	96;"	d
UINTMAX_C	stdint.h	99;"	d
UINTMAX_MAX	stdint.h	433;"	d
UINTPTR_MAX	stdint.h	260;"	d
UINTPTR_MAX	stdint.h	263;"	d
UINTPTR_MAX	stdint.h	266;"	d
UINTPTR_MAX	stdint.h	269;"	d
UINTPTR_MAX	stdint.h	350;"	d
UINTPTR_MAX	stdint.h	353;"	d
UINTPTR_MAX	stdint.h	356;"	d
UINT_FAST16_MAX	stdint.h	272;"	d
UINT_FAST16_MAX	stdint.h	275;"	d
UINT_FAST16_MAX	stdint.h	278;"	d
UINT_FAST16_MAX	stdint.h	281;"	d
UINT_FAST16_MAX	stdint.h	359;"	d
UINT_FAST16_MAX	stdint.h	362;"	d
UINT_FAST16_MAX	stdint.h	365;"	d
UINT_FAST32_MAX	stdint.h	284;"	d
UINT_FAST32_MAX	stdint.h	287;"	d
UINT_FAST32_MAX	stdint.h	290;"	d
UINT_FAST32_MAX	stdint.h	293;"	d
UINT_FAST32_MAX	stdint.h	368;"	d
UINT_FAST32_MAX	stdint.h	371;"	d
UINT_FAST32_MAX	stdint.h	374;"	d
UINT_FAST64_MAX	stdint.h	434;"	d
UINT_FAST8_MAX	stdint.h	335;"	d
UINT_LEAST16_MAX	stdint.h	379;"	d
UINT_LEAST32_MAX	stdint.h	376;"	d
UINT_LEAST64_MAX	stdint.h	435;"	d
UINT_LEAST8_MAX	stdint.h	336;"	d
UINT_MAX	limits.h	179;"	d
ULLONG_MAX	limits.h	48;"	d
ULONG_MAX	limits.h	22;"	d
ULONG_MAX	limits.h	25;"	d
ULONG_MAX	limits.h	28;"	d
ULONG_MAX	limits.h	31;"	d
ULONG_MAX	limits.h	34;"	d
ULONG_MAX	limits.h	37;"	d
ULONG_MAX	limits.h	40;"	d
UL_GETFSIZE	ulimit.h	11;"	d
UL_SETFSIZE	ulimit.h	12;"	d
UNIX_PATH_MAX	sys/un.h	12;"	d
USER_PROCESS	utmp.h	228;"	d
USHRT_MAX	limits.h	172;"	d
UT_HOSTSIZE	utmp.h	14;"	d
UT_LINESIZE	utmp.h	15;"	d
UT_NAMESIZE	utmp.h	16;"	d
VDISCARD	termios.h	528;"	d
VDISCARD	termios.h	531;"	d
VDISCARD	termios.h	534;"	d
VDISCARD	termios.h	537;"	d
VDISCARD	termios.h	540;"	d
VDISCARD	termios.h	571;"	d
VDISCARD	termios.h	574;"	d
VEOF	termios.h	593;"	d
VEOL	termios.h	486;"	d
VEOL	termios.h	489;"	d
VEOL	termios.h	492;"	d
VEOL	termios.h	495;"	d
VEOL	termios.h	498;"	d
VEOL	termios.h	601;"	d
VEOL	termios.h	604;"	d
VEOL2	termios.h	577;"	d
VEOL2	termios.h	580;"	d
VEOL2	termios.h	583;"	d
VEOL2	termios.h	586;"	d
VEOL2	termios.h	589;"	d
VEOL2	termios.h	637;"	d
VEOL2	termios.h	640;"	d
VERASE	termios.h	591;"	d
VINTR	termios.h	462;"	d
VISIT	search.h	/^    } VISIT;$/;"	t	typeref:enum:__anon54
VKILL	termios.h	592;"	d
VLNEXT	termios.h	569;"	d
VMIN	termios.h	595;"	d
VMIN	termios.h	598;"	d
VMIN	termios.h	607;"	d
VMIN	termios.h	610;"	d
VMIN	termios.h	613;"	d
VMIN	termios.h	616;"	d
VMIN	termios.h	619;"	d
VQUIT	termios.h	463;"	d
VREPRINT	termios.h	501;"	d
VREPRINT	termios.h	504;"	d
VREPRINT	termios.h	507;"	d
VREPRINT	termios.h	510;"	d
VREPRINT	termios.h	513;"	d
VREPRINT	termios.h	516;"	d
VREPRINT	termios.h	519;"	d
VSTART	termios.h	543;"	d
VSTART	termios.h	546;"	d
VSTART	termios.h	643;"	d
VSTART	termios.h	646;"	d
VSTART	termios.h	649;"	d
VSTART	termios.h	652;"	d
VSTART	termios.h	655;"	d
VSTOP	termios.h	549;"	d
VSTOP	termios.h	552;"	d
VSTOP	termios.h	658;"	d
VSTOP	termios.h	661;"	d
VSTOP	termios.h	664;"	d
VSTOP	termios.h	667;"	d
VSTOP	termios.h	670;"	d
VSUSP	termios.h	465;"	d
VSUSP	termios.h	468;"	d
VSUSP	termios.h	471;"	d
VSUSP	termios.h	474;"	d
VSUSP	termios.h	477;"	d
VSUSP	termios.h	522;"	d
VSUSP	termios.h	525;"	d
VSWTC	termios.h	622;"	d
VSWTC	termios.h	625;"	d
VSWTC	termios.h	628;"	d
VSWTC	termios.h	631;"	d
VSWTC	termios.h	634;"	d
VSWTC	termios.h	673;"	d
VSWTC	termios.h	676;"	d
VT0	termios.h	20;"	d
VT1	termios.h	209;"	d
VT1	termios.h	212;"	d
VT1	termios.h	215;"	d
VT1	termios.h	218;"	d
VT1	termios.h	299;"	d
VT1	termios.h	405;"	d
VT1	termios.h	408;"	d
VTDLY	termios.h	221;"	d
VTDLY	termios.h	224;"	d
VTDLY	termios.h	227;"	d
VTDLY	termios.h	230;"	d
VTDLY	termios.h	302;"	d
VTDLY	termios.h	411;"	d
VTDLY	termios.h	414;"	d
VTIME	termios.h	925;"	d
VTIME	termios.h	928;"	d
VTIME	termios.h	931;"	d
VTIME	termios.h	934;"	d
VTIME	termios.h	937;"	d
VTIME	termios.h	952;"	d
VTIME	termios.h	955;"	d
VWERASE	termios.h	480;"	d
VWERASE	termios.h	483;"	d
VWERASE	termios.h	555;"	d
VWERASE	termios.h	558;"	d
VWERASE	termios.h	561;"	d
VWERASE	termios.h	564;"	d
VWERASE	termios.h	567;"	d
WA_ALTCHARSET	curses.h	61;"	d
WA_ALTCHARSET	ncurses.h	61;"	d
WA_ATTRIBUTES	curses.h	62;"	d
WA_ATTRIBUTES	ncurses.h	62;"	d
WA_BLINK	curses.h	63;"	d
WA_BLINK	ncurses.h	63;"	d
WA_BOLD	curses.h	64;"	d
WA_BOLD	ncurses.h	64;"	d
WA_DIM	curses.h	65;"	d
WA_DIM	ncurses.h	65;"	d
WA_HORIZONTAL	curses.h	66;"	d
WA_HORIZONTAL	ncurses.h	66;"	d
WA_INVIS	curses.h	67;"	d
WA_INVIS	ncurses.h	67;"	d
WA_LEFT	curses.h	68;"	d
WA_LEFT	ncurses.h	68;"	d
WA_LOW	curses.h	69;"	d
WA_LOW	ncurses.h	69;"	d
WA_NORMAL	curses.h	70;"	d
WA_NORMAL	ncurses.h	70;"	d
WA_PROTECT	curses.h	71;"	d
WA_PROTECT	ncurses.h	71;"	d
WA_REVERSE	curses.h	72;"	d
WA_REVERSE	ncurses.h	72;"	d
WA_RIGHT	curses.h	73;"	d
WA_RIGHT	ncurses.h	73;"	d
WA_STANDOUT	curses.h	74;"	d
WA_STANDOUT	ncurses.h	74;"	d
WA_TOP	curses.h	75;"	d
WA_TOP	ncurses.h	75;"	d
WA_UNDERLINE	curses.h	76;"	d
WA_UNDERLINE	ncurses.h	76;"	d
WA_VERTICAL	curses.h	77;"	d
WA_VERTICAL	ncurses.h	77;"	d
WCHAR_MAX	wchar.h	17;"	d
WCHAR_MIN	wchar.h	18;"	d
WCOREDUMP	sys/wait.h	19;"	d
WCOREFLAG	sys/wait.h	23;"	d
WEOF	wchar.h	16;"	d
WEXITSTATUS	sys/wait.h	17;"	d
WIFEXITED	sys/wait.h	20;"	d
WIFSIGNALED	sys/wait.h	15;"	d
WIFSTOPPED	sys/wait.h	16;"	d
WINDOW	curses.h	/^    typedef struct _win_st WINDOW;$/;"	t	typeref:struct:_win_st
WINDOW	ncurses.h	/^    typedef struct _win_st WINDOW;$/;"	t	typeref:struct:_win_st
WINT_MAX	stdint.h	377;"	d
WINT_MIN	stdint.h	243;"	d
WNOHANG	sys/wait.h	21;"	d
WRDE_APPEND	wordexp.h	/^	WRDE_APPEND = 2,$/;"	e	enum:__anon42
WRDE_BADCHAR	wordexp.h	/^	WRDE_BADCHAR = 2,$/;"	e	enum:__anon44
WRDE_BADVAL	wordexp.h	/^	WRDE_BADVAL = 3,$/;"	e	enum:__anon44
WRDE_CMDSUB	wordexp.h	/^	WRDE_CMDSUB = 4,$/;"	e	enum:__anon44
WRDE_DOOFFS	wordexp.h	/^	WRDE_DOOFFS = 1,$/;"	e	enum:__anon42
WRDE_NOCMD	wordexp.h	/^	WRDE_NOCMD = 4,$/;"	e	enum:__anon42
WRDE_NOSPACE	wordexp.h	/^	WRDE_NOSPACE = 1,$/;"	e	enum:__anon44
WRDE_NOSYS	wordexp.h	/^	WRDE_NOSYS = -1,$/;"	e	enum:__anon44
WRDE_REUSE	wordexp.h	/^	WRDE_REUSE = 8,$/;"	e	enum:__anon42
WRDE_SHOWERR	wordexp.h	/^	WRDE_SHOWERR = 16,$/;"	e	enum:__anon42
WRDE_SYNTAX	wordexp.h	/^	WRDE_SYNTAX = 5$/;"	e	enum:__anon44
WRDE_UNDEF	wordexp.h	/^	WRDE_UNDEF = 32$/;"	e	enum:__anon42
WSTOPSIG	sys/wait.h	24;"	d
WTERMSIG	sys/wait.h	18;"	d
WUNTRACED	sys/wait.h	22;"	d
W_OK	unistd.h	29;"	d
XCASE	termios.h	305;"	d
XCASE	termios.h	308;"	d
XCASE	termios.h	375;"	d
XCASE	termios.h	47;"	d
XCASE	termios.h	50;"	d
XCASE	termios.h	53;"	d
XCASE	termios.h	56;"	d
XDR	rpc/xdr.h	/^    struct XDR {$/;"	s
XDR	rpc/xdr.h	/^    typedef struct XDR XDR;$/;"	t	typeref:struct:XDR
XDR::x_base	rpc/xdr.h	/^	caddr_t x_base;$/;"	m	struct:XDR	access:public
XDR::x_handy	rpc/xdr.h	/^	int x_handy;$/;"	m	struct:XDR	access:public
XDR::x_op	rpc/xdr.h	/^	enum xdr_op x_op;$/;"	m	struct:XDR	typeref:enum:XDR::xdr_op	access:public
XDR::x_ops	rpc/xdr.h	/^	struct xdr_ops *x_ops;$/;"	m	struct:XDR	typeref:struct:XDR::xdr_ops	access:public
XDR::x_private	rpc/xdr.h	/^	caddr_t x_private;$/;"	m	struct:XDR	access:public
XDR::x_public	rpc/xdr.h	/^	caddr_t x_public;$/;"	m	struct:XDR	access:public
XDR_DECODE	rpc/xdr.h	/^	XDR_DECODE,$/;"	e	enum:xdr_op
XDR_ENCODE	rpc/xdr.h	/^	XDR_ENCODE,$/;"	e	enum:xdr_op
XDR_FREE	rpc/xdr.h	/^	XDR_FREE$/;"	e	enum:xdr_op
XPRT_DIED	rpc/svc.h	/^	XPRT_DIED,$/;"	e	enum:xprt_stat
XPRT_IDLE	rpc/svc.h	/^	XPRT_IDLE$/;"	e	enum:xprt_stat
XPRT_MOREREQS	rpc/svc.h	/^	XPRT_MOREREQS,$/;"	e	enum:xprt_stat
X_OK	unistd.h	28;"	d
YESEXPR	langinfo.h	110;"	d
YESSTR	langinfo.h	112;"	d
ZLIB_VERSION	zlib.h	13;"	d
Z_ASCII	zlib.h	134;"	d
Z_BEST_COMPRESSION	zlib.h	121;"	d
Z_BEST_SPEED	zlib.h	120;"	d
Z_BINARY	zlib.h	133;"	d
Z_BLOCK	zlib.h	100;"	d
Z_BUF_ERROR	zlib.h	109;"	d
Z_DATA_ERROR	zlib.h	107;"	d
Z_DEFAULT_COMPRESSION	zlib.h	118;"	d
Z_DEFAULT_STRATEGY	zlib.h	126;"	d
Z_DEFLATED	zlib.h	140;"	d
Z_ERRNO	zlib.h	105;"	d
Z_FILTERED	zlib.h	127;"	d
Z_FINISH	zlib.h	99;"	d
Z_FULL_FLUSH	zlib.h	98;"	d
Z_HUFFMAN_ONLY	zlib.h	128;"	d
Z_MEM_ERROR	zlib.h	108;"	d
Z_NEED_DICT	zlib.h	113;"	d
Z_NO_COMPRESSION	zlib.h	119;"	d
Z_NO_FLUSH	zlib.h	95;"	d
Z_NULL	zlib.h	12;"	d
Z_OK	zlib.h	111;"	d
Z_PARTIAL_FLUSH	zlib.h	96;"	d
Z_STREAM_END	zlib.h	112;"	d
Z_STREAM_ERROR	zlib.h	106;"	d
Z_SYNC_FLUSH	zlib.h	97;"	d
Z_UNKNOWN	zlib.h	135;"	d
Z_VERSION_ERROR	zlib.h	110;"	d
_ALSA_CONF_H_	alsa/conf.h	2;"	d
_ALSA_CONTROL_EXTERNAL_H_	alsa/control_external.h	2;"	d
_ALSA_CONTROL_H_	alsa/control.h	2;"	d
_ALSA_ERROR_H_	alsa/error.h	2;"	d
_ALSA_GLOBAL_H_	alsa/global.h	2;"	d
_ALSA_HWDEP_H_	alsa/hwdep.h	2;"	d
_ALSA_IATOMIC_H_	alsa/iatomic.h	2;"	d
_ALSA_INPUT_H_	alsa/input.h	2;"	d
_ALSA_INSTR_H_	alsa/instr.h	2;"	d
_ALSA_MIXER_ABST_H_	alsa/mixer_abst.h	2;"	d
_ALSA_MIXER_H_	alsa/mixer.h	2;"	d
_ALSA_OUTPUT_H_	alsa/output.h	2;"	d
_ALSA_PCM_EXTPLUG_H_	alsa/pcm_extplug.h	2;"	d
_ALSA_PCM_H_	alsa/pcm.h	2;"	d
_ALSA_PCM_PLUGIN_H_	alsa/pcm_plugin.h	2;"	d
_ALSA_RAWMIDI_H_	alsa/rawmidi.h	2;"	d
_ALSA_SEQMID_H_	alsa/seqmid.h	2;"	d
_ALSA_SEQ_EVENT_H_	alsa/seq_event.h	2;"	d
_ALSA_SEQ_H_	alsa/seq.h	2;"	d
_ALSA_SEQ_MIDI_EVENT_H_	alsa/seq_midi_event.h	2;"	d
_ALSA_TIMER_H_	alsa/timer.h	2;"	d
_ARPA_INET_H_	arpa/inet.h	2;"	d
_ASSERT_H_	assert.h	2;"	d
_COMPLEX_H_	complex.h	2;"	d
_CPIO_H_	cpio.h	2;"	d
_CRYPT_H_	crypt.h	2;"	d
_CS_PATH	unistd.h	285;"	d
_CS_XBS5_ILP32_OFF32_CFLAGS	unistd.h	287;"	d
_CS_XBS5_ILP32_OFF32_LDFLAGS	unistd.h	288;"	d
_CS_XBS5_ILP32_OFF32_LIBS	unistd.h	289;"	d
_CS_XBS5_ILP32_OFF32_LINTFLAGS	unistd.h	290;"	d
_CS_XBS5_ILP32_OFFBIG_CFLAGS	unistd.h	291;"	d
_CS_XBS5_ILP32_OFFBIG_LDFLAGS	unistd.h	292;"	d
_CS_XBS5_ILP32_OFFBIG_LIBS	unistd.h	293;"	d
_CS_XBS5_ILP32_OFFBIG_LINTFLAGS	unistd.h	294;"	d
_CS_XBS5_LP64_OFF64_CFLAGS	unistd.h	295;"	d
_CS_XBS5_LP64_OFF64_LDFLAGS	unistd.h	296;"	d
_CS_XBS5_LP64_OFF64_LIBS	unistd.h	297;"	d
_CS_XBS5_LP64_OFF64_LINTFLAGS	unistd.h	298;"	d
_CS_XBS5_LPBIG_OFFBIG_CFLAGS	unistd.h	299;"	d
_CS_XBS5_LPBIG_OFFBIG_LDFLAGS	unistd.h	300;"	d
_CS_XBS5_LPBIG_OFFBIG_LIBS	unistd.h	301;"	d
_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS	unistd.h	302;"	d
_CTYPE_H_	ctype.h	2;"	d
_CUPS_CUPS_H_	cups/cups.h	16;"	d
_CUPS_CUPS_H_	cups/cups.h	2;"	d
_CUPS_PPD_H_	cups/ppd.h	12;"	d
_CUPS_PPD_H_	cups/ppd.h	2;"	d
_CUPS_RASTER_H_	cups/raster.h	11;"	d
_CUPS_RASTER_H_	cups/raster.h	2;"	d
_CURSES_H_	curses.h	2;"	d
_CURSES_H_	ncurses.h	2;"	d
_DIRENT_H_	dirent.h	2;"	d
_DLFCN_H_	dlfcn.h	2;"	d
_ENDIAN_H_	endian.h	2;"	d
_ENDLINE	curses.h	96;"	d
_ENDLINE	ncurses.h	96;"	d
_ERRNO_H_	errno.h	2;"	d
_Exit	stdlib.h	/^    extern void _Exit(int);$/;"	p	signature:(int)
_FCNTL_H_	fcntl.h	2;"	d
_FENV_H_	fenv.h	2;"	d
_FMTMSG_H_	fmtmsg.h	2;"	d
_FNMATCH_H_	fnmatch.h	2;"	d
_FTW_H_	ftw.h	2;"	d
_FULLWIN	curses.h	97;"	d
_FULLWIN	ncurses.h	97;"	d
_GETOPT_H_	getopt.h	2;"	d
_GLOB_H_	glob.h	2;"	d
_GRP_H_	grp.h	2;"	d
_HASMOVED	curses.h	100;"	d
_HASMOVED	ncurses.h	100;"	d
_ICONV_H_	iconv.h	2;"	d
_INTTYPES_H_	inttypes.h	2;"	d
_IOFBF	stdio.h	69;"	d
_IOLBF	stdio.h	70;"	d
_IONBF	stdio.h	71;"	d
_IO_FILE	stdio.h	/^    struct _IO_FILE {$/;"	s
_IO_FILE::dummy	stdio.h	/^	char dummy[__IO_FILE_SIZE];$/;"	m	struct:_IO_FILE	access:public
_ISPAD	curses.h	99;"	d
_ISPAD	ncurses.h	99;"	d
_ISalnum	ctype.h	/^	_ISalnum = 2048$/;"	e	enum:__anon114
_ISalnum	ctype.h	/^	_ISalnum = 2048,$/;"	e	enum:__anon114
_ISalnum	ctype.h	/^	_ISalnum = 8,$/;"	e	enum:__anon114
_ISalpha	ctype.h	/^	_ISalpha = 1024,$/;"	e	enum:__anon114
_ISalpha	ctype.h	/^	_ISalpha = 4,$/;"	e	enum:__anon114
_ISblank	ctype.h	/^	_ISblank = 1,$/;"	e	enum:__anon114
_ISblank	ctype.h	/^	_ISblank = 256,$/;"	e	enum:__anon114
_IScntrl	ctype.h	/^	_IScntrl = 2,$/;"	e	enum:__anon114
_IScntrl	ctype.h	/^	_IScntrl = 512,$/;"	e	enum:__anon114
_ISdigit	ctype.h	/^	_ISdigit = 2048,$/;"	e	enum:__anon114
_ISdigit	ctype.h	/^	_ISdigit = 8,$/;"	e	enum:__anon114
_ISgraph	ctype.h	/^	_ISgraph = 128,$/;"	e	enum:__anon114
_ISgraph	ctype.h	/^	_ISgraph = 32768,$/;"	e	enum:__anon114
_ISlower	ctype.h	/^	_ISlower = 2,$/;"	e	enum:__anon114
_ISlower	ctype.h	/^	_ISlower = 512,$/;"	e	enum:__anon114
_ISprint	ctype.h	/^	_ISprint = 16384,$/;"	e	enum:__anon114
_ISprint	ctype.h	/^	_ISprint = 64,$/;"	e	enum:__anon114
_ISpunct	ctype.h	/^	_ISpunct = 1024,$/;"	e	enum:__anon114
_ISpunct	ctype.h	/^	_ISpunct = 4,$/;"	e	enum:__anon114
_ISspace	ctype.h	/^	_ISspace = 32,$/;"	e	enum:__anon114
_ISspace	ctype.h	/^	_ISspace = 8192,$/;"	e	enum:__anon114
_ISupper	ctype.h	/^	_ISupper = 1,$/;"	e	enum:__anon114
_ISupper	ctype.h	/^	_ISupper = 256,$/;"	e	enum:__anon114
_ISxdigit	ctype.h	/^	_ISxdigit = 16,$/;"	e	enum:__anon114
_ISxdigit	ctype.h	/^	_ISxdigit = 4096,$/;"	e	enum:__anon114
_LANGINFO_H_	langinfo.h	2;"	d
_LIBGEN_H_	libgen.h	2;"	d
_LIBINTL_H_	libintl.h	2;"	d
_LIMITS_H_	limits.h	2;"	d
_LINUX_NETLINK_H_	linux/netlink.h	2;"	d
_LINUX_RTNETLINK_H_	linux/rtnetlink.h	2;"	d
_LINUX_SOCKET_H_	linux/socket.h	2;"	d
_LOCALE_H_	locale.h	2;"	d
_MALLOC_H_	malloc.h	2;"	d
_MATH_H_	math.h	2;"	d
_MONETARY_H_	monetary.h	2;"	d
_MQUEUE_H_	mqueue.h	2;"	d
_NETDB_H_	netdb.h	2;"	d
_NETINET_IN_H_	netinet/in.h	2;"	d
_NETINET_IP_H_	netinet/ip.h	2;"	d
_NETINET_TCP_H_	netinet/tcp.h	2;"	d
_NETINET_UDP_H_	netinet/udp.h	2;"	d
_NETPACKET_PACKET_H_	netpacket/packet.h	2;"	d
_NET_IF_H_	net/if.h	2;"	d
_NL_TYPES_H_	nl_types.h	2;"	d
_PC_2_SYMLINKS	unistd.h	65;"	d
_PC_ALLOC_SIZE_MIN	unistd.h	63;"	d
_PC_ASYNC_IO	unistd.h	57;"	d
_PC_CHOWN_RESTRICTED	unistd.h	69;"	d
_PC_FILESIZEBITS	unistd.h	59;"	d
_PC_LINK_MAX	unistd.h	55;"	d
_PC_MAX_CANON	unistd.h	56;"	d
_PC_MAX_INPUT	unistd.h	64;"	d
_PC_NAME_MAX	unistd.h	66;"	d
_PC_NO_TRUNC	unistd.h	70;"	d
_PC_PATH_MAX	unistd.h	67;"	d
_PC_PIPE_BUF	unistd.h	68;"	d
_PC_PRIO_IO	unistd.h	58;"	d
_PC_REC_INCR_XFER_SIZE	unistd.h	60;"	d
_PC_REC_MIN_XFER_SIZE	unistd.h	61;"	d
_PC_REC_XFER_ALIGN	unistd.h	62;"	d
_PC_SYNC_IO	unistd.h	72;"	d
_PC_VDISABLE	unistd.h	71;"	d
_POLL_H_	poll.h	2;"	d
_POSIX2_BC_BASE_MAX	limits.h	101;"	d
_POSIX2_BC_DIM_MAX	limits.h	55;"	d
_POSIX2_BC_SCALE_MAX	limits.h	102;"	d
_POSIX2_BC_STRING_MAX	limits.h	44;"	d
_POSIX2_CHARCLASS_NAME_MAX	limits.h	45;"	d
_POSIX2_COLL_WEIGHTS_MAX	limits.h	49;"	d
_POSIX2_C_BIND	unistd.h	47;"	d
_POSIX2_EXPR_NEST_MAX	limits.h	75;"	d
_POSIX2_LINE_MAX	limits.h	56;"	d
_POSIX2_RE_DUP_MAX	limits.h	65;"	d
_POSIX2_VERSION	unistd.h	48;"	d
_POSIX_AIO_LISTIO_MAX	limits.h	50;"	d
_POSIX_AIO_MAX	limits.h	42;"	d
_POSIX_ARG_MAX	limits.h	83;"	d
_POSIX_CHILD_MAX	limits.h	63;"	d
_POSIX_CHOWN_RESTRICTED	unistd.h	35;"	d
_POSIX_CLOCKRES_MIN	limits.h	52;"	d
_POSIX_DELAYTIMER_MAX	limits.h	76;"	d
_POSIX_FD_SETSIZE	limits.h	109;"	d
_POSIX_FSYNC	unistd.h	39;"	d
_POSIX_HIWAT	limits.h	110;"	d
_POSIX_HOST_NAME_MAX	limits.h	66;"	d
_POSIX_JOB_CONTROL	unistd.h	36;"	d
_POSIX_LINK_MAX	limits.h	86;"	d
_POSIX_LOGIN_NAME_MAX	limits.h	92;"	d
_POSIX_MAPPED_FILES	unistd.h	40;"	d
_POSIX_MAX_CANON	limits.h	67;"	d
_POSIX_MAX_INPUT	limits.h	68;"	d
_POSIX_MEMLOCK	unistd.h	41;"	d
_POSIX_MEMLOCK_RANGE	unistd.h	42;"	d
_POSIX_MEMORY_PROTECTION	unistd.h	43;"	d
_POSIX_MQ_OPEN_MAX	limits.h	87;"	d
_POSIX_MQ_PRIO_MAX	limits.h	77;"	d
_POSIX_NAME_MAX	limits.h	46;"	d
_POSIX_NGROUPS_MAX	limits.h	88;"	d
_POSIX_NO_TRUNC	unistd.h	37;"	d
_POSIX_OPEN_MAX	limits.h	51;"	d
_POSIX_PATH_MAX	limits.h	72;"	d
_POSIX_PIPE_BUF	limits.h	84;"	d
_POSIX_QLIMIT	limits.h	43;"	d
_POSIX_REGEXP	unistd.h	286;"	d
_POSIX_RE_DUP_MAX	limits.h	69;"	d
_POSIX_RTSIG_MAX	limits.h	89;"	d
_POSIX_SEMAPHORES	unistd.h	44;"	d
_POSIX_SEM_NSEMS_MAX	limits.h	73;"	d
_POSIX_SEM_VALUE_MAX	limits.h	80;"	d
_POSIX_SHARED_MEMORY_OBJECTS	unistd.h	45;"	d
_POSIX_SHELL	unistd.h	38;"	d
_POSIX_SIGQUEUE_MAX	limits.h	78;"	d
_POSIX_SSIZE_MAX	limits.h	81;"	d
_POSIX_STREAM_MAX	limits.h	90;"	d
_POSIX_SYMLINK_MAX	limits.h	70;"	d
_POSIX_SYMLOOP_MAX	limits.h	91;"	d
_POSIX_THREADS	unistd.h	49;"	d
_POSIX_TIMERS	unistd.h	46;"	d
_POSIX_TIMER_MAX	limits.h	79;"	d
_POSIX_TTY_NAME_MAX	limits.h	93;"	d
_POSIX_TZNAME_MAX	limits.h	85;"	d
_POSIX_UIO_MAXIOV	limits.h	47;"	d
_POSIX_VDISABLE	unistd.h	34;"	d
_POSIX_VERSION	unistd.h	50;"	d
_PTHREAD_H_	pthread.h	2;"	d
_PTY_H_	pty.h	2;"	d
_PWD_H_	pwd.h	2;"	d
_REGEXP_H_	regexp.h	2;"	d
_REGEX_H_	regex.h	2;"	d
_RPC_AUTH_DES_H_	rpc/auth_des.h	2;"	d
_RPC_AUTH_H_	rpc/auth.h	2;"	d
_RPC_AUTH_UNIX_H_	rpc/auth_unix.h	2;"	d
_RPC_CLNT_H_	rpc/clnt.h	2;"	d
_RPC_RPC_MSG_H_	rpc/rpc_msg.h	2;"	d
_RPC_SVC_H_	rpc/svc.h	2;"	d
_RPC_TYPES_H_	rpc/types.h	2;"	d
_RPC_XDR_H_	rpc/xdr.h	2;"	d
_SCHED_H_	sched.h	2;"	d
_SCROLLWIN	curses.h	98;"	d
_SCROLLWIN	ncurses.h	98;"	d
_SC_2_CHAR_TERM	unistd.h	276;"	d
_SC_2_C_BIND	unistd.h	222;"	d
_SC_2_C_DEV	unistd.h	223;"	d
_SC_2_C_VERSION	unistd.h	277;"	d
_SC_2_FORT_DEV	unistd.h	224;"	d
_SC_2_FORT_RUN	unistd.h	226;"	d
_SC_2_LOCALEDEF	unistd.h	228;"	d
_SC_2_PBS	unistd.h	154;"	d
_SC_2_PBS_ACCOUNTING	unistd.h	155;"	d
_SC_2_PBS_CHECKPOINT	unistd.h	162;"	d
_SC_2_PBS_LOCATE	unistd.h	157;"	d
_SC_2_PBS_MESSAGE	unistd.h	158;"	d
_SC_2_PBS_TRACK	unistd.h	159;"	d
_SC_2_SW_DEV	unistd.h	227;"	d
_SC_2_UPE	unistd.h	278;"	d
_SC_2_VERSION	unistd.h	221;"	d
_SC_ADVISORY_INFO	unistd.h	115;"	d
_SC_AIO_LISTIO_MAX	unistd.h	193;"	d
_SC_AIO_MAX	unistd.h	196;"	d
_SC_AIO_PRIO_DELTA_MAX	unistd.h	197;"	d
_SC_ARG_MAX	unistd.h	77;"	d
_SC_ASYNCHRONOUS_IO	unistd.h	101;"	d
_SC_ATEXIT_MAX	unistd.h	267;"	d
_SC_AVPHYS_PAGES	unistd.h	266;"	d
_SC_BARRIERS	unistd.h	116;"	d
_SC_BASE	unistd.h	117;"	d
_SC_BC_BASE_MAX	unistd.h	210;"	d
_SC_BC_DIM_MAX	unistd.h	211;"	d
_SC_BC_SCALE_MAX	unistd.h	212;"	d
_SC_BC_STRING_MAX	unistd.h	213;"	d
_SC_CHARCLASS_NAME_MAX	unistd.h	220;"	d
_SC_CHAR_BIT	unistd.h	81;"	d
_SC_CHAR_MAX	unistd.h	82;"	d
_SC_CHAR_MIN	unistd.h	83;"	d
_SC_CHILD_MAX	unistd.h	78;"	d
_SC_CLK_TCK	unistd.h	189;"	d
_SC_CLOCK_SELECTION	unistd.h	120;"	d
_SC_COLL_WEIGHTS_MAX	unistd.h	215;"	d
_SC_CPUTIME	unistd.h	121;"	d
_SC_C_LANG_SUPPORT	unistd.h	118;"	d
_SC_C_LANG_SUPPORT_R	unistd.h	119;"	d
_SC_DELAYTIMER_MAX	unistd.h	198;"	d
_SC_DEVICE_IO	unistd.h	124;"	d
_SC_DEVICE_SPECIFIC	unistd.h	125;"	d
_SC_DEVICE_SPECIFIC_R	unistd.h	126;"	d
_SC_EQUIV_CLASS_MAX	unistd.h	216;"	d
_SC_EXPR_NEST_MAX	unistd.h	217;"	d
_SC_FD_MGMT	unistd.h	127;"	d
_SC_FIFO	unistd.h	128;"	d
_SC_FILE_ATTRIBUTES	unistd.h	130;"	d
_SC_FILE_LOCKING	unistd.h	131;"	d
_SC_FILE_SYSTEM	unistd.h	132;"	d
_SC_FSYNC	unistd.h	134;"	d
_SC_GETGR_R_SIZE_MAX	unistd.h	247;"	d
_SC_GETPW_R_SIZE_MAX	unistd.h	249;"	d
_SC_GR0_OFFSET	ucontext.h	15;"	d
_SC_HOST_NAME_MAX	unistd.h	168;"	d
_SC_INT_MAX	unistd.h	84;"	d
_SC_INT_MIN	unistd.h	85;"	d
_SC_IOV_MAX	unistd.h	237;"	d
_SC_IPV6	unistd.h	194;"	d
_SC_JOB_CONTROL	unistd.h	248;"	d
_SC_LEVEL1_DCACHE_ASSOC	unistd.h	177;"	d
_SC_LEVEL1_DCACHE_LINESIZE	unistd.h	179;"	d
_SC_LEVEL1_DCACHE_SIZE	unistd.h	176;"	d
_SC_LEVEL1_ICACHE_ASSOC	unistd.h	174;"	d
_SC_LEVEL1_ICACHE_LINESIZE	unistd.h	175;"	d
_SC_LEVEL1_ICACHE_SIZE	unistd.h	173;"	d
_SC_LEVEL2_CACHE_ASSOC	unistd.h	181;"	d
_SC_LEVEL2_CACHE_LINESIZE	unistd.h	182;"	d
_SC_LEVEL2_CACHE_SIZE	unistd.h	180;"	d
_SC_LEVEL3_CACHE_ASSOC	unistd.h	184;"	d
_SC_LEVEL3_CACHE_LINESIZE	unistd.h	185;"	d
_SC_LEVEL3_CACHE_SIZE	unistd.h	183;"	d
_SC_LEVEL4_CACHE_ASSOC	unistd.h	187;"	d
_SC_LEVEL4_CACHE_LINESIZE	unistd.h	188;"	d
_SC_LEVEL4_CACHE_SIZE	unistd.h	186;"	d
_SC_LINE_MAX	unistd.h	218;"	d
_SC_LOGIN_NAME_MAX	unistd.h	250;"	d
_SC_LONG_BIT	unistd.h	86;"	d
_SC_MAPPED_FILES	unistd.h	145;"	d
_SC_MB_LEN_MAX	unistd.h	88;"	d
_SC_MEMLOCK	unistd.h	156;"	d
_SC_MEMLOCK_RANGE	unistd.h	167;"	d
_SC_MEMORY_PROTECTION	unistd.h	178;"	d
_SC_MESSAGE_PASSING	unistd.h	190;"	d
_SC_MONOTONIC_CLOCK	unistd.h	133;"	d
_SC_MQ_OPEN_MAX	unistd.h	199;"	d
_SC_MQ_PRIO_MAX	unistd.h	200;"	d
_SC_MULTI_PROCESS	unistd.h	135;"	d
_SC_NETWORKING	unistd.h	137;"	d
_SC_NGROUPS_MAX	unistd.h	202;"	d
_SC_NL_ARGMAX	unistd.h	100;"	d
_SC_NL_LANGMAX	unistd.h	102;"	d
_SC_NL_MSGMAX	unistd.h	103;"	d
_SC_NL_NMAX	unistd.h	104;"	d
_SC_NL_SETMAX	unistd.h	105;"	d
_SC_NL_TEXTMAX	unistd.h	106;"	d
_SC_NPROCESSORS_CONF	unistd.h	263;"	d
_SC_NPROCESSORS_ONLN	unistd.h	264;"	d
_SC_NZERO	unistd.h	89;"	d
_SC_OPEN_MAX	unistd.h	214;"	d
_SC_PAGESIZE	unistd.h	203;"	d
_SC_PAGE_SIZE	unistd.h	204;"	d
_SC_PASS_MAX	unistd.h	268;"	d
_SC_PHYS_PAGES	unistd.h	265;"	d
_SC_PII	unistd.h	229;"	d
_SC_PII_INTERNET	unistd.h	232;"	d
_SC_PII_INTERNET_DGRAM	unistd.h	240;"	d
_SC_PII_INTERNET_STREAM	unistd.h	239;"	d
_SC_PII_OSI	unistd.h	233;"	d
_SC_PII_OSI_CLTS	unistd.h	242;"	d
_SC_PII_OSI_COTS	unistd.h	241;"	d
_SC_PII_OSI_M	unistd.h	243;"	d
_SC_PII_SOCKET	unistd.h	231;"	d
_SC_PII_XTI	unistd.h	230;"	d
_SC_PIPE	unistd.h	129;"	d
_SC_POLL	unistd.h	234;"	d
_SC_PRIORITIZED_IO	unistd.h	112;"	d
_SC_PRIORITY_SCHEDULING	unistd.h	79;"	d
_SC_RAW_SOCKETS	unistd.h	195;"	d
_SC_READER_WRITER_LOCKS	unistd.h	138;"	d
_SC_REALTIME_SIGNALS	unistd.h	270;"	d
_SC_REGEXP	unistd.h	140;"	d
_SC_REGEX_VERSION	unistd.h	141;"	d
_SC_RE_DUP_MAX	unistd.h	219;"	d
_SC_RTSIG_MAX	unistd.h	205;"	d
_SC_SAVED_IDS	unistd.h	259;"	d
_SC_SCHAR_MAX	unistd.h	92;"	d
_SC_SCHAR_MIN	unistd.h	93;"	d
_SC_SELECT	unistd.h	235;"	d
_SC_SEMAPHORES	unistd.h	191;"	d
_SC_SEM_NSEMS_MAX	unistd.h	206;"	d
_SC_SEM_VALUE_MAX	unistd.h	207;"	d
_SC_SHARED_MEMORY_OBJECTS	unistd.h	192;"	d
_SC_SHELL	unistd.h	142;"	d
_SC_SHRT_MAX	unistd.h	94;"	d
_SC_SHRT_MIN	unistd.h	95;"	d
_SC_SIGNALS	unistd.h	143;"	d
_SC_SIGQUEUE_MAX	unistd.h	208;"	d
_SC_SINGLE_PROCESS	unistd.h	136;"	d
_SC_SPAWN	unistd.h	144;"	d
_SC_SPIN_LOCKS	unistd.h	139;"	d
_SC_SPORADIC_SERVER	unistd.h	146;"	d
_SC_SSIZE_MAX	unistd.h	91;"	d
_SC_STREAMS	unistd.h	161;"	d
_SC_STREAM_MAX	unistd.h	225;"	d
_SC_SYMLOOP_MAX	unistd.h	160;"	d
_SC_SYNCHRONIZED_IO	unistd.h	123;"	d
_SC_SYSTEM_DATABASE	unistd.h	148;"	d
_SC_SYSTEM_DATABASE_R	unistd.h	149;"	d
_SC_THREADS	unistd.h	245;"	d
_SC_THREAD_ATTR_STACKADDR	unistd.h	256;"	d
_SC_THREAD_ATTR_STACKSIZE	unistd.h	257;"	d
_SC_THREAD_CPUTIME	unistd.h	122;"	d
_SC_THREAD_DESTRUCTOR_ITERATIONS	unistd.h	252;"	d
_SC_THREAD_KEYS_MAX	unistd.h	253;"	d
_SC_THREAD_PRIORITY_SCHEDULING	unistd.h	258;"	d
_SC_THREAD_PRIO_INHERIT	unistd.h	260;"	d
_SC_THREAD_PRIO_PROTECT	unistd.h	261;"	d
_SC_THREAD_PROCESS_SHARED	unistd.h	262;"	d
_SC_THREAD_SAFE_FUNCTIONS	unistd.h	246;"	d
_SC_THREAD_SPORADIC_SERVER	unistd.h	147;"	d
_SC_THREAD_STACK_MIN	unistd.h	254;"	d
_SC_THREAD_THREADS_MAX	unistd.h	255;"	d
_SC_TIMEOUTS	unistd.h	150;"	d
_SC_TIMERS	unistd.h	90;"	d
_SC_TIMER_MAX	unistd.h	209;"	d
_SC_TRACE	unistd.h	169;"	d
_SC_TRACE_EVENT_FILTER	unistd.h	170;"	d
_SC_TRACE_INHERIT	unistd.h	171;"	d
_SC_TRACE_LOG	unistd.h	172;"	d
_SC_TTY_NAME_MAX	unistd.h	251;"	d
_SC_TYPED_MEMORY_OBJECTS	unistd.h	151;"	d
_SC_TZNAME_MAX	unistd.h	236;"	d
_SC_T_IOV_MAX	unistd.h	244;"	d
_SC_UCHAR_MAX	unistd.h	96;"	d
_SC_UINT_MAX	unistd.h	97;"	d
_SC_UIO_MAXIOV	unistd.h	238;"	d
_SC_ULONG_MAX	unistd.h	98;"	d
_SC_USER_GROUPS	unistd.h	152;"	d
_SC_USER_GROUPS_R	unistd.h	153;"	d
_SC_USHRT_MAX	unistd.h	99;"	d
_SC_V6_ILP32_OFF32	unistd.h	163;"	d
_SC_V6_ILP32_OFFBIG	unistd.h	164;"	d
_SC_V6_LP64_OFF64	unistd.h	165;"	d
_SC_V6_LPBIG_OFFBIG	unistd.h	166;"	d
_SC_VERSION	unistd.h	201;"	d
_SC_WORD_BIT	unistd.h	87;"	d
_SC_XBS5_ILP32_OFF32	unistd.h	107;"	d
_SC_XBS5_ILP32_OFFBIG	unistd.h	108;"	d
_SC_XBS5_LP64_OFF64	unistd.h	109;"	d
_SC_XBS5_LPBIG_OFFBIG	unistd.h	110;"	d
_SC_XOPEN_CRYPT	unistd.h	273;"	d
_SC_XOPEN_ENH_I18N	unistd.h	274;"	d
_SC_XOPEN_LEGACY	unistd.h	111;"	d
_SC_XOPEN_REALTIME	unistd.h	113;"	d
_SC_XOPEN_REALTIME_THREADS	unistd.h	114;"	d
_SC_XOPEN_SHM	unistd.h	275;"	d
_SC_XOPEN_UNIX	unistd.h	272;"	d
_SC_XOPEN_VERSION	unistd.h	269;"	d
_SC_XOPEN_XCU_VERSION	unistd.h	271;"	d
_SC_XOPEN_XPG2	unistd.h	279;"	d
_SC_XOPEN_XPG3	unistd.h	280;"	d
_SC_XOPEN_XPG4	unistd.h	80;"	d
_SEARCH_H_	search.h	2;"	d
_SECURITY_PAM_APPL_H_	security/pam_appl.h	2;"	d
_SEMAPHORE_H_	semaphore.h	2;"	d
_SETJMP_H_	setjmp.h	2;"	d
_SIGNAL_H_	signal.h	2;"	d
_SIGSET_NWORDS	signal.h	18;"	d
_SND_SEQ_TYPE	alsa/seq.h	71;"	d
_SND_SEQ_TYPE_OPT	alsa/seq.h	70;"	d
_SPAWN_H_	spawn.h	2;"	d
_STAT_VER	sys/stat.h	48;"	d
_STAT_VER	sys/stat.h	51;"	d
_STAT_VER	sys/stat.h	54;"	d
_STAT_VER	sys/stat.h	57;"	d
_STAT_VER	sys/stat.h	60;"	d
_STAT_VER	sys/stat.h	63;"	d
_STAT_VER	sys/stat.h	66;"	d
_STDDEF_H_	stddef.h	2;"	d
_STDINT_H_	stdint.h	2;"	d
_STDIO_H_	stdio.h	2;"	d
_STDLIB_H_	stdlib.h	2;"	d
_STRINGS_H_	strings.h	2;"	d
_STRING_H_	string.h	2;"	d
_STROPTS_H_	stropts.h	2;"	d
_SUBWIN	curses.h	95;"	d
_SUBWIN	ncurses.h	95;"	d
_SYSLOG_H_	syslog.h	2;"	d
_SYS_FILE_H_	sys/file.h	2;"	d
_SYS_IOCTL_H_	sys/ioctl.h	2;"	d
_SYS_IO_H_	sys/io.h	2;"	d
_SYS_IPC_H_	sys/ipc.h	2;"	d
_SYS_MMAN_H_	sys/mman.h	2;"	d
_SYS_MMAP_H_	sys/mmap.h	2;"	d
_SYS_MSG_H_	sys/msg.h	2;"	d
_SYS_PARAM_H_	sys/param.h	2;"	d
_SYS_POLL_H_	sys/poll.h	2;"	d
_SYS_RESOURCE_H_	sys/resource.h	2;"	d
_SYS_SELECT_H_	sys/select.h	2;"	d
_SYS_SEM_H_	sys/sem.h	2;"	d
_SYS_SENDFILE_H_	sys/sendfile.h	2;"	d
_SYS_SHM_H_	sys/shm.h	2;"	d
_SYS_SOCKET_H_	sys/socket.h	2;"	d
_SYS_STATFS_H_	sys/statfs.h	2;"	d
_SYS_STATVFS_H_	sys/statvfs.h	2;"	d
_SYS_STAT_H_	sys/stat.h	2;"	d
_SYS_TIMEB_H_	sys/timeb.h	2;"	d
_SYS_TIMES_H_	sys/times.h	2;"	d
_SYS_TIMEX_H_	sys/timex.h	2;"	d
_SYS_TIME_H_	sys/time.h	2;"	d
_SYS_TYPES_H_	sys/types.h	2;"	d
_SYS_UIO_H_	sys/uio.h	2;"	d
_SYS_UN_H_	sys/un.h	2;"	d
_SYS_UTSNAME_H_	sys/utsname.h	2;"	d
_SYS_VFS_H_	sys/vfs.h	2;"	d
_SYS_WAIT_H_	sys/wait.h	2;"	d
_TAR_H_	tar.h	2;"	d
_TERMIOS_H_	termios.h	2;"	d
_TERM_H_	term.h	2;"	d
_TIME_H_	time.h	2;"	d
_UA_CLEANUP_PHASE	unwind.h	69;"	d
_UA_END_OF_STACK	unwind.h	68;"	d
_UA_FORCE_UNWIND	unwind.h	71;"	d
_UA_HANDLER_FRAME	unwind.h	70;"	d
_UA_SEARCH_PHASE	unwind.h	67;"	d
_UCONTEXT_H_	ucontext.h	2;"	d
_ULIMIT_H_	ulimit.h	2;"	d
_UNCTRL_H_	unctrl.h	2;"	d
_UNISTD_H_	unistd.h	2;"	d
_UNWIND_H_	unwind.h	2;"	d
_URC_CONTINUE_UNWIND	unwind.h	/^	_URC_CONTINUE_UNWIND = 8$/;"	e	enum:__anon76
_URC_END_OF_STACK	unwind.h	/^	_URC_END_OF_STACK = 5,$/;"	e	enum:__anon76
_URC_FATAL_PHASE1_ERROR	unwind.h	/^	_URC_FATAL_PHASE1_ERROR = 3,$/;"	e	enum:__anon76
_URC_FATAL_PHASE2_ERROR	unwind.h	/^	_URC_FATAL_PHASE2_ERROR = 2,$/;"	e	enum:__anon76
_URC_FOREIGN_EXCEPTION_CAUGHT	unwind.h	/^	_URC_FOREIGN_EXCEPTION_CAUGHT = 1,$/;"	e	enum:__anon76
_URC_HANDLER_FOUND	unwind.h	/^	_URC_HANDLER_FOUND = 6,$/;"	e	enum:__anon76
_URC_INSTALL_CONTEXT	unwind.h	/^	_URC_INSTALL_CONTEXT = 7,$/;"	e	enum:__anon76
_URC_NORMAL_STOP	unwind.h	/^	_URC_NORMAL_STOP = 4,$/;"	e	enum:__anon76
_URC_NO_REASON	unwind.h	/^	_URC_NO_REASON = 0,$/;"	e	enum:__anon76
_UTIME_H_	utime.h	2;"	d
_UTMPX_H_	utmpx.h	2;"	d
_UTMP_H_	utmp.h	2;"	d
_Unwind_Action	unwind.h	/^    typedef int _Unwind_Action;$/;"	t
_Unwind_Backtrace	unwind.h	/^    extern _Unwind_Reason_Code _Unwind_Backtrace(_Unwind_Trace_Fn, void *);$/;"	p	signature:(_Unwind_Trace_Fn, void *)
_Unwind_DeleteException	unwind.h	/^    extern void _Unwind_DeleteException(struct _Unwind_Exception *);$/;"	p	signature:(struct _Unwind_Exception *)
_Unwind_Exception	unwind.h	/^    struct _Unwind_Exception {$/;"	s
_Unwind_Exception::exception_class	unwind.h	/^	u_int64_t exception_class;$/;"	m	struct:_Unwind_Exception	access:public
_Unwind_Exception::exception_cleanup	unwind.h	/^	_Unwind_Exception_Cleanup_Fn exception_cleanup;$/;"	m	struct:_Unwind_Exception	access:public
_Unwind_Exception::private_1	unwind.h	/^	u_int64_t private_1;$/;"	m	struct:_Unwind_Exception	access:public
_Unwind_Exception::private_2	unwind.h	/^	u_int64_t private_2;$/;"	m	struct:_Unwind_Exception	access:public
_Unwind_Exception_Class	unwind.h	/^    typedef u_int64_t _Unwind_Exception_Class;$/;"	t
_Unwind_Exception_Cleanup_Fn	unwind.h	/^    typedef void (*_Unwind_Exception_Cleanup_Fn) (enum,$/;"	t
_Unwind_FindEnclosingFunction	unwind.h	/^    extern void *_Unwind_FindEnclosingFunction(void *);$/;"	p	signature:(void *)
_Unwind_Find_FDE	unwind.h	/^    extern fde *_Unwind_Find_FDE(void *, struct dwarf_eh_base *);$/;"	p	signature:(void *, struct dwarf_eh_base *)
_Unwind_ForcedUnwind	unwind.h	/^    extern _Unwind_Ptr _Unwind_ForcedUnwind(struct _Unwind_Exception *,$/;"	p	signature:(struct _Unwind_Exception *, _Unwind_Stop_Fn, void *)
_Unwind_GetBSP	unwind.h	/^    extern _Unwind_Word _Unwind_GetBSP(struct _Unwind_Context *);$/;"	p	signature:(struct _Unwind_Context *)
_Unwind_GetCFA	unwind.h	/^    extern _Unwind_Reason_Code _Unwind_GetCFA(struct _Unwind_Context *);$/;"	p	signature:(struct _Unwind_Context *)
_Unwind_GetDataRelBase	unwind.h	/^    extern _Unwind_Ptr _Unwind_GetDataRelBase(struct _Unwind_Context *);$/;"	p	signature:(struct _Unwind_Context *)
_Unwind_GetGR	unwind.h	/^    extern _Unwind_Word _Unwind_GetGR(struct _Unwind_Context *, int);$/;"	p	signature:(struct _Unwind_Context *, int)
_Unwind_GetIP	unwind.h	/^    extern _Unwind_Ptr _Unwind_GetIP(struct _Unwind_Context *);$/;"	p	signature:(struct _Unwind_Context *)
_Unwind_GetLanguageSpecificData	unwind.h	/^    extern _Unwind_Ptr _Unwind_GetLanguageSpecificData(struct$/;"	p	signature:(struct _Unwind_Context *, unsigned int)
_Unwind_GetRegionStart	unwind.h	/^    extern _Unwind_Ptr _Unwind_GetRegionStart(struct _Unwind_Context *);$/;"	p	signature:(struct _Unwind_Context *)
_Unwind_GetTextRelBase	unwind.h	/^    extern _Unwind_Ptr _Unwind_GetTextRelBase(struct _Unwind_Context *);$/;"	p	signature:(struct _Unwind_Context *)
_Unwind_Ptr	unwind.h	/^    typedef void *_Unwind_Ptr;$/;"	t
_Unwind_RaiseException	unwind.h	/^    extern _Unwind_Reason_Code _Unwind_RaiseException(struct$/;"	p	signature:(struct _Unwind_Exception *)
_Unwind_Reason_Code	unwind.h	/^    } _Unwind_Reason_Code;$/;"	t	typeref:enum:__anon76
_Unwind_Resume	unwind.h	/^    extern void _Unwind_Resume(struct _Unwind_Exception *);$/;"	p	signature:(struct _Unwind_Exception *)
_Unwind_Resume_or_Rethrow	unwind.h	/^    extern _Unwind_Reason_Code _Unwind_Resume_or_Rethrow(struct$/;"	p	signature:(struct _Unwind_Exception *)
_Unwind_SetGR	unwind.h	/^    extern void _Unwind_SetGR(struct _Unwind_Context *, int, u_int64_t);$/;"	p	signature:(struct _Unwind_Context *, int, u_int64_t)
_Unwind_SetIP	unwind.h	/^    extern void _Unwind_SetIP(struct _Unwind_Context *, unsigned int);$/;"	p	signature:(struct _Unwind_Context *, unsigned int)
_Unwind_Stop_Fn	unwind.h	/^    typedef _Unwind_Reason_Code(*_Unwind_Stop_Fn) (int version,$/;"	t
_Unwind_Trace_Fn	unwind.h	/^    typedef _Unwind_Reason_Code(*_Unwind_Trace_Fn) (struct _Unwind_Context$/;"	t
_Unwind_Word	unwind.h	/^    typedef unsigned int _Unwind_Word;$/;"	t
_WCHAR_H_	wchar.h	2;"	d
_WCTYPE_H_	wctype.h	2;"	d
_WORDEXP_H_	wordexp.h	2;"	d
_XOPEN_VERSION	unistd.h	307;"	d
_XOPEN_XPG4	unistd.h	306;"	d
_ZLIB_H_	zlib.h	2;"	d
__BIG_ENDIAN	sys/types.h	186;"	d
__BYTE_ORDER	sys/types.h	192;"	d
__BYTE_ORDER	sys/types.h	195;"	d
__BYTE_ORDER	sys/types.h	198;"	d
__BYTE_ORDER	sys/types.h	201;"	d
__BYTE_ORDER	sys/types.h	204;"	d
__BYTE_ORDER	sys/types.h	207;"	d
__BYTE_ORDER	sys/types.h	210;"	d
__FDSET_LONGS	sys/types.h	149;"	d
__FDSET_LONGS	sys/types.h	152;"	d
__FDSET_LONGS	sys/types.h	155;"	d
__FDSET_LONGS	sys/types.h	158;"	d
__FDSET_LONGS	sys/types.h	161;"	d
__FDSET_LONGS	sys/types.h	164;"	d
__FDSET_LONGS	sys/types.h	167;"	d
__INT64_C	stdint.h	41;"	d
__INT64_C	stdint.h	44;"	d
__INT64_C	stdint.h	47;"	d
__INT64_C	stdint.h	50;"	d
__INT64_C	stdint.h	71;"	d
__INT64_C	stdint.h	74;"	d
__INT64_C	stdint.h	77;"	d
__IO_FILE_SIZE	stdio.h	19;"	d
__IO_FILE_SIZE	stdio.h	22;"	d
__IO_FILE_SIZE	stdio.h	25;"	d
__IO_FILE_SIZE	stdio.h	30;"	d
__IO_FILE_SIZE	stdio.h	33;"	d
__IO_FILE_SIZE	stdio.h	36;"	d
__IO_FILE_SIZE	stdio.h	39;"	d
__LITTLE_ENDIAN	sys/types.h	185;"	d
__LOCK_INITIALIZER	pthread.h	53;"	d
__NCURSES_H	curses.h	55;"	d
__NCURSES_H	ncurses.h	55;"	d
__NUM_ACRS	signal.h	24;"	d
__NUM_ACRS	signal.h	27;"	d
__NUM_FPRS	signal.h	30;"	d
__NUM_FPRS	signal.h	33;"	d
__NUM_GPRS	signal.h	36;"	d
__NUM_GPRS	signal.h	39;"	d
__PDP_ENDIAN	inttypes.h	23;"	d
__SIZEOF_PTHREAD_BARRIERATTR_T	pthread.h	43;"	d
__SIZEOF_PTHREAD_BARRIER_T	pthread.h	23;"	d
__SIZEOF_PTHREAD_BARRIER_T	pthread.h	26;"	d
__SIZEOF_PTHREAD_BARRIER_T	pthread.h	29;"	d
__SIZEOF_PTHREAD_BARRIER_T	pthread.h	32;"	d
__SIZEOF_PTHREAD_BARRIER_T	pthread.h	35;"	d
__SIZEOF_PTHREAD_BARRIER_T	pthread.h	38;"	d
__SIZEOF_PTHREAD_BARRIER_T	pthread.h	41;"	d
__UINT64_C	stdint.h	105;"	d
__UINT64_C	stdint.h	108;"	d
__UINT64_C	stdint.h	111;"	d
__UINT64_C	stdint.h	114;"	d
__UINT64_C	stdint.h	135;"	d
__UINT64_C	stdint.h	138;"	d
__UINT64_C	stdint.h	141;"	d
__action_fn_t	search.h	/^    typedef void (*__action_fn_t) (void *__nodep, VISIT __value,$/;"	t
__actions	spawn.h	/^	struct __spawn_action *__actions;$/;"	m	struct:__anon7	typeref:struct:__anon7::__spawn_action	access:public
__align	pthread.h	/^	__pthread_cond_align_t __align;$/;"	m	struct:__anon66	access:public
__align	pthread.h	/^	int __align;$/;"	m	union:__anon62
__align	pthread.h	/^	long int __align;$/;"	m	union:__anon55
__align	pthread.h	/^	long int __align;$/;"	m	union:__anon56
__align	pthread.h	/^	long int __align;$/;"	m	union:__anon57
__align	pthread.h	/^	long int __align;$/;"	m	union:__anon58
__align	pthread.h	/^	long int __align;$/;"	m	union:__anon59
__align	pthread.h	/^	long int __align;$/;"	m	union:__anon60
__align	pthread.h	/^	long int __align;$/;"	m	union:__anon61
__allocated	spawn.h	/^	int __allocated;$/;"	m	struct:__anon7	access:public
__anon100::activity	cups/cups.h	/^	time_t activity;$/;"	m	struct:__anon100	access:public
__anon100::auth_type	cups/cups.h	/^	int auth_type;$/;"	m	struct:__anon100	access:public
__anon100::authstring	cups/cups.h	/^	char authstring[256];$/;"	m	struct:__anon100	access:public
__anon100::blocking	cups/cups.h	/^	int blocking;$/;"	m	struct:__anon100	access:public
__anon100::buffer	cups/cups.h	/^	char buffer[2048];$/;"	m	struct:__anon100	access:public
__anon100::cookie	cups/cups.h	/^	char *cookie;$/;"	m	struct:__anon100	access:public
__anon100::data	cups/cups.h	/^	char *data;$/;"	m	struct:__anon100	access:public
__anon100::data_encoding	cups/cups.h	/^	http_encoding_t data_encoding;$/;"	m	struct:__anon100	access:public
__anon100::data_remaining	cups/cups.h	/^	int data_remaining;$/;"	m	struct:__anon100	access:public
__anon100::digest_tries	cups/cups.h	/^	int digest_tries;$/;"	m	struct:__anon100	access:public
__anon100::encryption	cups/cups.h	/^	http_encryption_t encryption;$/;"	m	struct:__anon100	access:public
__anon100::error	cups/cups.h	/^	int error;$/;"	m	struct:__anon100	access:public
__anon100::expect	cups/cups.h	/^	http_status_t expect;$/;"	m	struct:__anon100	access:public
__anon100::fd	cups/cups.h	/^	int fd;$/;"	m	struct:__anon100	access:public
__anon100::fields	cups/cups.h	/^	char fields[27][256];$/;"	m	struct:__anon100	access:public
__anon100::hostaddr	cups/cups.h	/^	struct sockaddr_in hostaddr;$/;"	m	struct:__anon100	typeref:struct:__anon100::sockaddr_in	access:public
__anon100::hostname	cups/cups.h	/^	char hostname[256];$/;"	m	struct:__anon100	access:public
__anon100::input_set	cups/cups.h	/^	fd_set *input_set;$/;"	m	struct:__anon100	access:public
__anon100::keep_alive	cups/cups.h	/^	http_keepalive_t keep_alive;$/;"	m	struct:__anon100	access:public
__anon100::md5_state	cups/cups.h	/^	md5_state_t md5_state;$/;"	m	struct:__anon100	access:public
__anon100::nonce	cups/cups.h	/^	char nonce[256];$/;"	m	struct:__anon100	access:public
__anon100::nonce_count	cups/cups.h	/^	int nonce_count;$/;"	m	struct:__anon100	access:public
__anon100::state	cups/cups.h	/^	http_state_t state;$/;"	m	struct:__anon100	access:public
__anon100::status	cups/cups.h	/^	http_status_t status;$/;"	m	struct:__anon100	access:public
__anon100::tls	cups/cups.h	/^	void *tls;$/;"	m	struct:__anon100	access:public
__anon100::used	cups/cups.h	/^	int used;$/;"	m	struct:__anon100	access:public
__anon100::userpass	cups/cups.h	/^	char userpass[256];$/;"	m	struct:__anon100	access:public
__anon100::version	cups/cups.h	/^	http_version_t version;$/;"	m	struct:__anon100	access:public
__anon102::name	cups/ppd.h	/^	char name[41];$/;"	m	struct:__anon102	access:public
__anon102::start	cups/ppd.h	/^	char *start;$/;"	m	struct:__anon102	access:public
__anon102::stop	cups/ppd.h	/^	char *stop;$/;"	m	struct:__anon102	access:public
__anon105::choice	cups/ppd.h	/^	char choice[41];$/;"	m	struct:__anon105	access:public
__anon105::code	cups/ppd.h	/^	char *code;$/;"	m	struct:__anon105	access:public
__anon105::marked	cups/ppd.h	/^	char marked;$/;"	m	struct:__anon105	access:public
__anon105::option	cups/ppd.h	/^	void *option;$/;"	m	struct:__anon105	access:public
__anon105::text	cups/ppd.h	/^	char text[81];$/;"	m	struct:__anon105	access:public
__anon106::choices	cups/ppd.h	/^	ppd_choice_t *choices;$/;"	m	struct:__anon106	access:public
__anon106::conflicted	cups/ppd.h	/^	char conflicted;$/;"	m	struct:__anon106	access:public
__anon106::defchoice	cups/ppd.h	/^	char defchoice[41];$/;"	m	struct:__anon106	access:public
__anon106::keyword	cups/ppd.h	/^	char keyword[41];$/;"	m	struct:__anon106	access:public
__anon106::num_choices	cups/ppd.h	/^	int num_choices;$/;"	m	struct:__anon106	access:public
__anon106::order	cups/ppd.h	/^	float order;$/;"	m	struct:__anon106	access:public
__anon106::section	cups/ppd.h	/^	ppd_section_t section;$/;"	m	struct:__anon106	access:public
__anon106::text	cups/ppd.h	/^	char text[81];$/;"	m	struct:__anon106	access:public
__anon106::ui	cups/ppd.h	/^	ppd_ui_t ui;$/;"	m	struct:__anon106	access:public
__anon107::bottom	cups/ppd.h	/^	float bottom;$/;"	m	struct:__anon107	access:public
__anon107::left	cups/ppd.h	/^	float left;$/;"	m	struct:__anon107	access:public
__anon107::length	cups/ppd.h	/^	float length;$/;"	m	struct:__anon107	access:public
__anon107::marked	cups/ppd.h	/^	int marked;$/;"	m	struct:__anon107	access:public
__anon107::name	cups/ppd.h	/^	char name[41];$/;"	m	struct:__anon107	access:public
__anon107::right	cups/ppd.h	/^	float right;$/;"	m	struct:__anon107	access:public
__anon107::top	cups/ppd.h	/^	float top;$/;"	m	struct:__anon107	access:public
__anon107::width	cups/ppd.h	/^	float width;$/;"	m	struct:__anon107	access:public
__anon108::choice1	cups/ppd.h	/^	char choice1[41];$/;"	m	struct:__anon108	access:public
__anon108::choice2	cups/ppd.h	/^	char choice2[41];$/;"	m	struct:__anon108	access:public
__anon108::option1	cups/ppd.h	/^	char option1[41];$/;"	m	struct:__anon108	access:public
__anon108::option2	cups/ppd.h	/^	char option2[41];$/;"	m	struct:__anon108	access:public
__anon109::density	cups/ppd.h	/^	float density;$/;"	m	struct:__anon109	access:public
__anon109::gamma	cups/ppd.h	/^	float gamma;$/;"	m	struct:__anon109	access:public
__anon109::matrix	cups/ppd.h	/^	float matrix[3][3];$/;"	m	struct:__anon109	access:public
__anon109::media_type	cups/ppd.h	/^	char media_type[41];$/;"	m	struct:__anon109	access:public
__anon109::resolution	cups/ppd.h	/^	char resolution[41];$/;"	m	struct:__anon109	access:public
__anon110::name	cups/ppd.h	/^	char name[41];$/;"	m	struct:__anon110	access:public
__anon110::spec	cups/ppd.h	/^	char spec[41];$/;"	m	struct:__anon110	access:public
__anon110::text	cups/ppd.h	/^	char text[81];$/;"	m	struct:__anon110	access:public
__anon110::value	cups/ppd.h	/^	char *value;$/;"	m	struct:__anon110	access:public
__anon111::accurate_screens	cups/ppd.h	/^	int accurate_screens;$/;"	m	struct:__anon111	access:public
__anon111::attrs	cups/ppd.h	/^	ppd_attr_t **attrs;$/;"	m	struct:__anon111	access:public
__anon111::color_device	cups/ppd.h	/^	int color_device;$/;"	m	struct:__anon111	access:public
__anon111::colorspace	cups/ppd.h	/^	ppd_cs_t colorspace;$/;"	m	struct:__anon111	access:public
__anon111::consts	cups/ppd.h	/^	ppd_const_t *consts;$/;"	m	struct:__anon111	access:public
__anon111::contone_only	cups/ppd.h	/^	int contone_only;$/;"	m	struct:__anon111	access:public
__anon111::cur_attr	cups/ppd.h	/^	int cur_attr;$/;"	m	struct:__anon111	access:public
__anon111::custom_margins	cups/ppd.h	/^	float custom_margins[4];$/;"	m	struct:__anon111	access:public
__anon111::custom_max	cups/ppd.h	/^	float custom_max[2];$/;"	m	struct:__anon111	access:public
__anon111::custom_min	cups/ppd.h	/^	float custom_min[2];$/;"	m	struct:__anon111	access:public
__anon111::emulations	cups/ppd.h	/^	ppd_emul_t *emulations;$/;"	m	struct:__anon111	access:public
__anon111::filters	cups/ppd.h	/^	char **filters;$/;"	m	struct:__anon111	access:public
__anon111::flip_duplex	cups/ppd.h	/^	int flip_duplex;$/;"	m	struct:__anon111	access:public
__anon111::fonts	cups/ppd.h	/^	char **fonts;$/;"	m	struct:__anon111	access:public
__anon111::groups	cups/ppd.h	/^	ppd_group_t *groups;$/;"	m	struct:__anon111	access:public
__anon111::jcl_begin	cups/ppd.h	/^	char *jcl_begin;$/;"	m	struct:__anon111	access:public
__anon111::jcl_end	cups/ppd.h	/^	char *jcl_end;$/;"	m	struct:__anon111	access:public
__anon111::jcl_ps	cups/ppd.h	/^	char *jcl_ps;$/;"	m	struct:__anon111	access:public
__anon111::landscape	cups/ppd.h	/^	int landscape;$/;"	m	struct:__anon111	access:public
__anon111::lang_encoding	cups/ppd.h	/^	char *lang_encoding;$/;"	m	struct:__anon111	access:public
__anon111::lang_version	cups/ppd.h	/^	char *lang_version;$/;"	m	struct:__anon111	access:public
__anon111::language_level	cups/ppd.h	/^	int language_level;$/;"	m	struct:__anon111	access:public
__anon111::manual_copies	cups/ppd.h	/^	int manual_copies;$/;"	m	struct:__anon111	access:public
__anon111::manufacturer	cups/ppd.h	/^	char *manufacturer;$/;"	m	struct:__anon111	access:public
__anon111::model_number	cups/ppd.h	/^	int model_number;$/;"	m	struct:__anon111	access:public
__anon111::modelname	cups/ppd.h	/^	char *modelname;$/;"	m	struct:__anon111	access:public
__anon111::nickname	cups/ppd.h	/^	char *nickname;$/;"	m	struct:__anon111	access:public
__anon111::num_attrs	cups/ppd.h	/^	int num_attrs;$/;"	m	struct:__anon111	access:public
__anon111::num_consts	cups/ppd.h	/^	int num_consts;$/;"	m	struct:__anon111	access:public
__anon111::num_emulations	cups/ppd.h	/^	int num_emulations;$/;"	m	struct:__anon111	access:public
__anon111::num_filters	cups/ppd.h	/^	int num_filters;$/;"	m	struct:__anon111	access:public
__anon111::num_fonts	cups/ppd.h	/^	int num_fonts;$/;"	m	struct:__anon111	access:public
__anon111::num_groups	cups/ppd.h	/^	int num_groups;$/;"	m	struct:__anon111	access:public
__anon111::num_profiles	cups/ppd.h	/^	int num_profiles;$/;"	m	struct:__anon111	access:public
__anon111::num_sizes	cups/ppd.h	/^	int num_sizes;$/;"	m	struct:__anon111	access:public
__anon111::patches	cups/ppd.h	/^	char *patches;$/;"	m	struct:__anon111	access:public
__anon111::pcfilename	cups/ppd.h	/^	char *pcfilename;$/;"	m	struct:__anon111	access:public
__anon111::product	cups/ppd.h	/^	char *product;$/;"	m	struct:__anon111	access:public
__anon111::profiles	cups/ppd.h	/^	ppd_profile_t *profiles;$/;"	m	struct:__anon111	access:public
__anon111::protocols	cups/ppd.h	/^	char *protocols;$/;"	m	struct:__anon111	access:public
__anon111::shortnickname	cups/ppd.h	/^	char *shortnickname;$/;"	m	struct:__anon111	access:public
__anon111::sizes	cups/ppd.h	/^	ppd_size_t *sizes;$/;"	m	struct:__anon111	access:public
__anon111::throughput	cups/ppd.h	/^	int throughput;$/;"	m	struct:__anon111	access:public
__anon111::ttrasterizer	cups/ppd.h	/^	char *ttrasterizer;$/;"	m	struct:__anon111	access:public
__anon111::variable_sizes	cups/ppd.h	/^	int variable_sizes;$/;"	m	struct:__anon111	access:public
__anon115::gl_closedir	glob.h	/^	void (*gl_closedir) (void *);$/;"	m	struct:__anon115	access:public
__anon115::gl_flags	glob.h	/^	int gl_flags;$/;"	m	struct:__anon115	access:public
__anon115::gl_lstat	glob.h	/^	int (*gl_lstat) (const char *, struct stat *);$/;"	m	struct:__anon115	access:public
__anon115::gl_offs	glob.h	/^	size_t gl_offs;$/;"	m	struct:__anon115	access:public
__anon115::gl_opendir	glob.h	/^	void *(*gl_opendir) (const char *);$/;"	m	struct:__anon115	access:public
__anon115::gl_pathc	glob.h	/^	size_t gl_pathc;$/;"	m	struct:__anon115	access:public
__anon115::gl_pathv	glob.h	/^	char **gl_pathv;$/;"	m	struct:__anon115	access:public
__anon115::gl_readdir	glob.h	/^	struct dirent *(*gl_readdir) (void *);$/;"	m	struct:__anon115	typeref:struct:__anon115::gl_readdir	access:public
__anon115::gl_stat	glob.h	/^	int (*gl_stat) (const char *, struct stat *);$/;"	m	struct:__anon115	access:public
__anon116::gl_closedir	glob.h	/^	void (*gl_closedir) (void *);$/;"	m	struct:__anon116	access:public
__anon116::gl_flags	glob.h	/^	int gl_flags;$/;"	m	struct:__anon116	access:public
__anon116::gl_lstat	glob.h	/^	int (*gl_lstat) (const char *, struct stat *);$/;"	m	struct:__anon116	access:public
__anon116::gl_offs	glob.h	/^	size_t gl_offs;$/;"	m	struct:__anon116	access:public
__anon116::gl_opendir	glob.h	/^	void *(*gl_opendir) (const char *);$/;"	m	struct:__anon116	access:public
__anon116::gl_pathc	glob.h	/^	size_t gl_pathc;$/;"	m	struct:__anon116	access:public
__anon116::gl_pathv	glob.h	/^	char **gl_pathv;$/;"	m	struct:__anon116	access:public
__anon116::gl_readdir	glob.h	/^	struct dirent64 *(*gl_readdir) (void *);$/;"	m	struct:__anon116	typeref:struct:__anon116::gl_readdir	access:public
__anon116::gl_stat	glob.h	/^	int (*gl_stat) (const char *, struct stat *);$/;"	m	struct:__anon116	access:public
__anon117::quot	stdlib.h	/^	int quot;$/;"	m	struct:__anon117	access:public
__anon117::rem	stdlib.h	/^	int rem;$/;"	m	struct:__anon117	access:public
__anon118::quot	stdlib.h	/^	long int quot;$/;"	m	struct:__anon118	access:public
__anon118::rem	stdlib.h	/^	long int rem;$/;"	m	struct:__anon118	access:public
__anon119::quot	stdlib.h	/^	long long int quot;$/;"	m	struct:__anon119	access:public
__anon119::rem	stdlib.h	/^	long long int rem;$/;"	m	struct:__anon119	access:public
__anon120::dli_fbase	dlfcn.h	/^	void *dli_fbase;$/;"	m	struct:__anon120	access:public
__anon120::dli_fname	dlfcn.h	/^	char *dli_fname;$/;"	m	struct:__anon120	access:public
__anon120::dli_saddr	dlfcn.h	/^	void *dli_saddr;$/;"	m	struct:__anon120	access:public
__anon120::dli_sname	dlfcn.h	/^	char *dli_sname;$/;"	m	struct:__anon120	access:public
__anon121::attr	ncurses.h	/^	attr_t attr;$/;"	m	struct:__anon121	access:public
__anon121::chars	ncurses.h	/^	wchar_t chars[5];$/;"	m	struct:__anon121	access:public
__anon122::d	ucontext.h	/^	double d;$/;"	m	union:__anon122
__anon122::f	ucontext.h	/^	float f;$/;"	m	union:__anon122
__anon123::d	ucontext.h	/^	double d;$/;"	m	union:__anon123
__anon123::f	ucontext.h	/^	float f;$/;"	m	union:__anon123
__anon124::fpc	ucontext.h	/^	unsigned int fpc;$/;"	m	struct:__anon124	access:public
__anon124::fprs	ucontext.h	/^	fpreg_t fprs[16];$/;"	m	struct:__anon124	access:public
__anon125::fpc	ucontext.h	/^	unsigned int fpc;$/;"	m	struct:__anon125	access:public
__anon125::fprs	ucontext.h	/^	fpreg_t fprs[16];$/;"	m	struct:__anon125	access:public
__anon126::cr2	ucontext.h	/^	unsigned long int cr2;$/;"	m	struct:__anon126	access:public
__anon126::fpregs	ucontext.h	/^	fpregset_t fpregs;$/;"	m	struct:__anon126	access:public
__anon126::gregs	ucontext.h	/^	gregset_t gregs;$/;"	m	struct:__anon126	access:public
__anon126::oldmask	ucontext.h	/^	unsigned long int oldmask;$/;"	m	struct:__anon126	access:public
__anon127::aregs	ucontext.h	/^	unsigned int aregs[16];$/;"	m	struct:__anon127	access:public
__anon127::fpregs	ucontext.h	/^	fpregset_t fpregs;$/;"	m	struct:__anon127	access:public
__anon127::gregs	ucontext.h	/^	unsigned long int gregs[16];$/;"	m	struct:__anon127	access:public
__anon127::psw	ucontext.h	/^	_psw_t psw;$/;"	m	struct:__anon127	access:public
__anon128::aregs	ucontext.h	/^	unsigned int aregs[16];$/;"	m	struct:__anon128	access:public
__anon128::fpregs	ucontext.h	/^	fpregset_t fpregs;$/;"	m	struct:__anon128	access:public
__anon128::gregs	ucontext.h	/^	unsigned long int gregs[16];$/;"	m	struct:__anon128	access:public
__anon128::psw	ucontext.h	/^	_psw_t psw;$/;"	m	struct:__anon128	access:public
__anon129::__reserved1	ucontext.h	/^	unsigned long int __reserved1[8];$/;"	m	struct:__anon129	access:public
__anon129::fpregs	ucontext.h	/^	fpregset_t fpregs;$/;"	m	struct:__anon129	access:public
__anon129::gregs	ucontext.h	/^	gregset_t gregs;$/;"	m	struct:__anon129	access:public
__anon130::fpregs	ucontext.h	/^	fpregset_t fpregs;$/;"	m	struct:__anon130	access:public
__anon130::gregs	ucontext.h	/^	gregset_t gregs;$/;"	m	struct:__anon130	access:public
__anon130::vrregs	ucontext.h	/^	vrregset_t vrregs;$/;"	m	struct:__anon130	access:public
__anon131::__unused	ucontext.h	/^	unsigned long int __unused[4];$/;"	m	struct:__anon131	access:public
__anon131::fp_regs	ucontext.h	/^	fpregset_t fp_regs;$/;"	m	struct:__anon131	access:public
__anon131::gp_regs	ucontext.h	/^	gregset_t gp_regs;$/;"	m	struct:__anon131	access:public
__anon131::handler	ucontext.h	/^	unsigned long int handler;$/;"	m	struct:__anon131	access:public
__anon131::oldmask	ucontext.h	/^	unsigned long int oldmask;$/;"	m	struct:__anon131	access:public
__anon131::pad0	ucontext.h	/^	int pad0;$/;"	m	struct:__anon131	access:public
__anon131::regs	ucontext.h	/^	struct pt_regs *regs;$/;"	m	struct:__anon131	typeref:struct:__anon131::pt_regs	access:public
__anon131::signal	ucontext.h	/^	int signal;$/;"	m	struct:__anon131	access:public
__anon131::v_regs	ucontext.h	/^	vrregset_t *v_regs;$/;"	m	struct:__anon131	access:public
__anon131::vmx_reserve	ucontext.h	/^	long int vmx_reserve[69];$/;"	m	struct:__anon131	access:public
__anon145::fpc	fenv.h	/^	fexcept_t fpc;$/;"	m	struct:__anon145	access:public
__anon145::ieee_instruction_pointer	fenv.h	/^	void *ieee_instruction_pointer;$/;"	m	struct:__anon145	access:public
__anon146::fpc	fenv.h	/^	fexcept_t fpc;$/;"	m	struct:__anon146	access:public
__anon146::ieee_instruction_pointer	fenv.h	/^	void *ieee_instruction_pointer;$/;"	m	struct:__anon146	access:public
__anon147::__control_word	fenv.h	/^	unsigned short __control_word;$/;"	m	struct:__anon147	access:public
__anon147::__cs_selector	fenv.h	/^	unsigned short __cs_selector;$/;"	m	struct:__anon147	access:public
__anon147::__data_offset	fenv.h	/^	unsigned int __data_offset;$/;"	m	struct:__anon147	access:public
__anon147::__data_selector	fenv.h	/^	unsigned short __data_selector;$/;"	m	struct:__anon147	access:public
__anon147::__eip	fenv.h	/^	unsigned int __eip;$/;"	m	struct:__anon147	access:public
__anon147::__opcode	fenv.h	/^	unsigned int __opcode:11;$/;"	m	struct:__anon147	access:public
__anon147::__status_word	fenv.h	/^	unsigned short __status_word;$/;"	m	struct:__anon147	access:public
__anon147::__tags	fenv.h	/^	unsigned short __tags;$/;"	m	struct:__anon147	access:public
__anon147::__unused1	fenv.h	/^	unsigned short __unused1;$/;"	m	struct:__anon147	access:public
__anon147::__unused2	fenv.h	/^	unsigned short __unused2;$/;"	m	struct:__anon147	access:public
__anon147::__unused3	fenv.h	/^	unsigned short __unused3;$/;"	m	struct:__anon147	access:public
__anon147::__unused4	fenv.h	/^	unsigned int __unused4:5;$/;"	m	struct:__anon147	access:public
__anon147::__unused5	fenv.h	/^	unsigned short __unused5;$/;"	m	struct:__anon147	access:public
__anon148::__control_word	fenv.h	/^	unsigned short __control_word;$/;"	m	struct:__anon148	access:public
__anon148::__cs_selector	fenv.h	/^	unsigned short __cs_selector;$/;"	m	struct:__anon148	access:public
__anon148::__data_offset	fenv.h	/^	unsigned int __data_offset;$/;"	m	struct:__anon148	access:public
__anon148::__data_selector	fenv.h	/^	unsigned short __data_selector;$/;"	m	struct:__anon148	access:public
__anon148::__eip	fenv.h	/^	unsigned int __eip;$/;"	m	struct:__anon148	access:public
__anon148::__mxcsr	fenv.h	/^	unsigned int __mxcsr;$/;"	m	struct:__anon148	access:public
__anon148::__opcode	fenv.h	/^	unsigned int __opcode:11;$/;"	m	struct:__anon148	access:public
__anon148::__status_word	fenv.h	/^	unsigned short __status_word;$/;"	m	struct:__anon148	access:public
__anon148::__tags	fenv.h	/^	unsigned short __tags;$/;"	m	struct:__anon148	access:public
__anon148::__unused1	fenv.h	/^	unsigned short __unused1;$/;"	m	struct:__anon148	access:public
__anon148::__unused2	fenv.h	/^	unsigned short __unused2;$/;"	m	struct:__anon148	access:public
__anon148::__unused3	fenv.h	/^	unsigned short __unused3;$/;"	m	struct:__anon148	access:public
__anon148::__unused4	fenv.h	/^	unsigned int __unused4:5;$/;"	m	struct:__anon148	access:public
__anon148::__unused5	fenv.h	/^	unsigned short __unused5;$/;"	m	struct:__anon148	access:public
__anon14::begin	alsa/iatomic.h	/^	unsigned int begin;$/;"	m	struct:__anon14	access:public
__anon14::end	alsa/iatomic.h	/^	unsigned int end;$/;"	m	struct:__anon14	access:public
__anon15::end	alsa/iatomic.h	/^	unsigned int end;$/;"	m	struct:__anon15	access:public
__anon15::write	alsa/iatomic.h	/^	const volatile snd_atomic_write_t *write;$/;"	m	struct:__anon15	access:public
__anon16::addr	signal.h	/^	unsigned long int addr;$/;"	m	struct:__anon16	access:public
__anon16::mask	signal.h	/^	unsigned long int mask;$/;"	m	struct:__anon16	access:public
__anon17::addr	signal.h	/^	unsigned long int addr;$/;"	m	struct:__anon17	access:public
__anon17::mask	signal.h	/^	unsigned long int mask;$/;"	m	struct:__anon17	access:public
__anon18::acrs	signal.h	/^	unsigned int acrs[__NUM_ACRS];$/;"	m	struct:__anon18	access:public
__anon18::gprs	signal.h	/^	unsigned long int gprs[__NUM_GPRS];$/;"	m	struct:__anon18	access:public
__anon18::psw	signal.h	/^	_psw_t psw;$/;"	m	struct:__anon18	access:public
__anon19::acrs	signal.h	/^	unsigned int acrs[16];$/;"	m	struct:__anon19	access:public
__anon19::gprs	signal.h	/^	unsigned long int gprs[16];$/;"	m	struct:__anon19	access:public
__anon19::psw	signal.h	/^	_psw_t psw;$/;"	m	struct:__anon19	access:public
__anon29::sig	signal.h	/^	unsigned long int sig[_SIGSET_NWORDS];$/;"	m	struct:__anon29	access:public
__anon37::fpc	signal.h	/^	unsigned int fpc;$/;"	m	struct:__anon37	access:public
__anon37::fprs	signal.h	/^	double fprs[__NUM_FPRS];$/;"	m	struct:__anon37	access:public
__anon38::fpc	signal.h	/^	unsigned int fpc;$/;"	m	struct:__anon38	access:public
__anon38::fprs	signal.h	/^	double fprs[__NUM_FPRS];$/;"	m	struct:__anon38	access:public
__anon39::fpregs	signal.h	/^	_s390_fp_regs fpregs;$/;"	m	struct:__anon39	access:public
__anon39::regs	signal.h	/^	_s390_regs_common regs;$/;"	m	struct:__anon39	access:public
__anon40::fpregs	signal.h	/^	_s390_fp_regs fpregs;$/;"	m	struct:__anon40	access:public
__anon40::regs	signal.h	/^	_s390_regs_common regs;$/;"	m	struct:__anon40	access:public
__anon43::we_offs	wordexp.h	/^	size_t we_offs;$/;"	m	struct:__anon43	access:public
__anon43::we_wordc	wordexp.h	/^	size_t we_wordc;$/;"	m	struct:__anon43	access:public
__anon43::we_wordv	wordexp.h	/^	char **we_wordv;$/;"	m	struct:__anon43	access:public
__anon45::__pos	stdio.h	/^	off_t __pos;$/;"	m	struct:__anon45	access:public
__anon45::__state	stdio.h	/^	mbstate_t __state;$/;"	m	struct:__anon45	access:public
__anon46::__pos	stdio.h	/^	off64_t __pos;$/;"	m	struct:__anon46	access:public
__anon46::__state	stdio.h	/^	mbstate_t __state;$/;"	m	struct:__anon46	access:public
__anon47::__val	sys/types.h	/^	int __val[2];$/;"	m	struct:__anon47	access:public
__anon48::fds_bits	sys/types.h	/^	unsigned long int fds_bits[__FDSET_LONGS];$/;"	m	struct:__anon48	access:public
__anon51::attr	curses.h	/^	attr_t attr;$/;"	m	struct:__anon51	access:public
__anon51::chars	curses.h	/^	wchar_t chars[5];$/;"	m	struct:__anon51	access:public
__anon52::count	wctype.h	/^	int count;$/;"	m	struct:__anon52	access:public
__anon52::value	wctype.h	/^	wint_t value;$/;"	m	struct:__anon52	access:public
__anon55::__align	pthread.h	/^	long int __align;$/;"	m	union:__anon55
__anon55::__size	pthread.h	/^	char __size[__SIZEOF_PTHREAD_BARRIER_T];$/;"	m	union:__anon55
__anon56::__align	pthread.h	/^	long int __align;$/;"	m	union:__anon56
__anon56::__size	pthread.h	/^	char __size[__SIZEOF_PTHREAD_BARRIER_T];$/;"	m	union:__anon56
__anon57::__align	pthread.h	/^	long int __align;$/;"	m	union:__anon57
__anon57::__size	pthread.h	/^	char __size[__SIZEOF_PTHREAD_BARRIER_T];$/;"	m	union:__anon57
__anon58::__align	pthread.h	/^	long int __align;$/;"	m	union:__anon58
__anon58::__size	pthread.h	/^	char __size[__SIZEOF_PTHREAD_BARRIER_T];$/;"	m	union:__anon58
__anon59::__align	pthread.h	/^	long int __align;$/;"	m	union:__anon59
__anon59::__size	pthread.h	/^	char __size[__SIZEOF_PTHREAD_BARRIER_T];$/;"	m	union:__anon59
__anon60::__align	pthread.h	/^	long int __align;$/;"	m	union:__anon60
__anon60::__size	pthread.h	/^	char __size[__SIZEOF_PTHREAD_BARRIER_T];$/;"	m	union:__anon60
__anon61::__align	pthread.h	/^	long int __align;$/;"	m	union:__anon61
__anon61::__size	pthread.h	/^	char __size[__SIZEOF_PTHREAD_BARRIER_T];$/;"	m	union:__anon61
__anon62::__align	pthread.h	/^	int __align;$/;"	m	union:__anon62
__anon62::__size	pthread.h	/^	char __size[__SIZEOF_PTHREAD_BARRIERATTR_T];$/;"	m	union:__anon62
__anon63::__m_count	pthread.h	/^	int __m_count;		\/* Depth of recursive locking *\/$/;"	m	struct:__anon63	access:public
__anon63::__m_kind	pthread.h	/^	int __m_kind;		\/* Mutex kind: fast, recursive or errcheck *\/$/;"	m	struct:__anon63	access:public
__anon63::__m_lock	pthread.h	/^	struct _pthread_fastlock __m_lock;	\/* Underlying fast lock *\/$/;"	m	struct:__anon63	typeref:struct:__anon63::_pthread_fastlock	access:public
__anon63::__m_owner	pthread.h	/^	_pthread_descr __m_owner;	\/* Owner thread (if recursive or errcheck) *\/$/;"	m	struct:__anon63	access:public
__anon63::__m_reserved	pthread.h	/^	int __m_reserved;	\/* Reserved for future use *\/$/;"	m	struct:__anon63	access:public
__anon64::__mutexkind	pthread.h	/^	int __mutexkind;$/;"	m	struct:__anon64	access:public
__anon65::__detachstate	pthread.h	/^	int __detachstate;$/;"	m	struct:__anon65	access:public
__anon65::__guardsize	pthread.h	/^	size_t __guardsize;$/;"	m	struct:__anon65	access:public
__anon65::__inheritsched	pthread.h	/^	int __inheritsched;$/;"	m	struct:__anon65	access:public
__anon65::__schedparam	pthread.h	/^	struct sched_param __schedparam;$/;"	m	struct:__anon65	typeref:struct:__anon65::sched_param	access:public
__anon65::__schedpolicy	pthread.h	/^	int __schedpolicy;$/;"	m	struct:__anon65	access:public
__anon65::__scope	pthread.h	/^	int __scope;$/;"	m	struct:__anon65	access:public
__anon65::__stackaddr	pthread.h	/^	void *__stackaddr;$/;"	m	struct:__anon65	access:public
__anon65::__stackaddr_set	pthread.h	/^	int __stackaddr_set;$/;"	m	struct:__anon65	access:public
__anon65::__stacksize	pthread.h	/^	unsigned long int __stacksize;$/;"	m	struct:__anon65	access:public
__anon66::__align	pthread.h	/^	__pthread_cond_align_t __align;$/;"	m	struct:__anon66	access:public
__anon66::__c_lock	pthread.h	/^	struct _pthread_fastlock __c_lock;$/;"	m	struct:__anon66	typeref:struct:__anon66::_pthread_fastlock	access:public
__anon66::__c_waiting	pthread.h	/^	_pthread_descr __c_waiting;$/;"	m	struct:__anon66	access:public
__anon66::__padding	pthread.h	/^	char __padding[48 - sizeof(struct _pthread_fastlock) -$/;"	m	struct:__anon66	access:public
__anon67::__dummy	pthread.h	/^	int __dummy;$/;"	m	struct:__anon67	access:public
__anon68::__lockkind	pthread.h	/^	int __lockkind;$/;"	m	struct:__anon68	access:public
__anon68::__pshared	pthread.h	/^	int __pshared;$/;"	m	struct:__anon68	access:public
__anon69::__sem_lock	semaphore.h	/^	struct _pthread_fastlock __sem_lock;$/;"	m	struct:__anon69	typeref:struct:__anon69::_pthread_fastlock	access:public
__anon69::__sem_value	semaphore.h	/^	int __sem_value;$/;"	m	struct:__anon69	access:public
__anon69::__sem_waiting	semaphore.h	/^	_pthread_descr __sem_waiting;$/;"	m	struct:__anon69	access:public
__anon70::rm_eo	regex.h	/^	regoff_t rm_eo;$/;"	m	struct:__anon70	access:public
__anon70::rm_so	regex.h	/^	regoff_t rm_so;$/;"	m	struct:__anon70	access:public
__anon78::fd	cups/raster.h	/^	int fd;$/;"	m	struct:__anon78	access:public
__anon78::mode	cups/raster.h	/^	cups_mode_t mode;$/;"	m	struct:__anon78	access:public
__anon78::sync	cups/raster.h	/^	unsigned int sync;$/;"	m	struct:__anon78	access:public
__anon7::__actions	spawn.h	/^	struct __spawn_action *__actions;$/;"	m	struct:__anon7	typeref:struct:__anon7::__spawn_action	access:public
__anon7::__allocated	spawn.h	/^	int __allocated;$/;"	m	struct:__anon7	access:public
__anon7::__pad	spawn.h	/^	int __pad[16];$/;"	m	struct:__anon7	access:public
__anon7::__used	spawn.h	/^	int __used;$/;"	m	struct:__anon7	access:public
__anon87::AdvanceDistance	cups/raster.h	/^	unsigned int AdvanceDistance;$/;"	m	struct:__anon87	access:public
__anon87::AdvanceMedia	cups/raster.h	/^	cups_adv_t AdvanceMedia;$/;"	m	struct:__anon87	access:public
__anon87::Collate	cups/raster.h	/^	cups_bool_t Collate;$/;"	m	struct:__anon87	access:public
__anon87::CutMedia	cups/raster.h	/^	cups_cut_t CutMedia;$/;"	m	struct:__anon87	access:public
__anon87::Duplex	cups/raster.h	/^	cups_bool_t Duplex;$/;"	m	struct:__anon87	access:public
__anon87::HWResolution	cups/raster.h	/^	unsigned int HWResolution[2];$/;"	m	struct:__anon87	access:public
__anon87::ImagingBoundingBox	cups/raster.h	/^	unsigned int ImagingBoundingBox[4];$/;"	m	struct:__anon87	access:public
__anon87::InsertSheet	cups/raster.h	/^	cups_bool_t InsertSheet;$/;"	m	struct:__anon87	access:public
__anon87::Jog	cups/raster.h	/^	cups_jog_t Jog;$/;"	m	struct:__anon87	access:public
__anon87::LeadingEdge	cups/raster.h	/^	cups_edge_t LeadingEdge;$/;"	m	struct:__anon87	access:public
__anon87::ManualFeed	cups/raster.h	/^	cups_bool_t ManualFeed;$/;"	m	struct:__anon87	access:public
__anon87::Margins	cups/raster.h	/^	unsigned int Margins[2];$/;"	m	struct:__anon87	access:public
__anon87::MediaClass	cups/raster.h	/^	char MediaClass[64];$/;"	m	struct:__anon87	access:public
__anon87::MediaColor	cups/raster.h	/^	char MediaColor[64];$/;"	m	struct:__anon87	access:public
__anon87::MediaPosition	cups/raster.h	/^	unsigned int MediaPosition;$/;"	m	struct:__anon87	access:public
__anon87::MediaType	cups/raster.h	/^	char MediaType[64];$/;"	m	struct:__anon87	access:public
__anon87::MediaWeight	cups/raster.h	/^	unsigned int MediaWeight;$/;"	m	struct:__anon87	access:public
__anon87::MirrorPrint	cups/raster.h	/^	cups_bool_t MirrorPrint;$/;"	m	struct:__anon87	access:public
__anon87::NegativePrint	cups/raster.h	/^	cups_bool_t NegativePrint;$/;"	m	struct:__anon87	access:public
__anon87::NumCopies	cups/raster.h	/^	unsigned int NumCopies;$/;"	m	struct:__anon87	access:public
__anon87::Orientation	cups/raster.h	/^	cups_orient_t Orientation;$/;"	m	struct:__anon87	access:public
__anon87::OutputFaceUp	cups/raster.h	/^	cups_bool_t OutputFaceUp;$/;"	m	struct:__anon87	access:public
__anon87::OutputType	cups/raster.h	/^	char OutputType[64];$/;"	m	struct:__anon87	access:public
__anon87::PageSize	cups/raster.h	/^	unsigned int PageSize[2];$/;"	m	struct:__anon87	access:public
__anon87::Separations	cups/raster.h	/^	cups_bool_t Separations;$/;"	m	struct:__anon87	access:public
__anon87::TraySwitch	cups/raster.h	/^	cups_bool_t TraySwitch;$/;"	m	struct:__anon87	access:public
__anon87::Tumble	cups/raster.h	/^	cups_bool_t Tumble;$/;"	m	struct:__anon87	access:public
__anon87::cupsBitsPerColor	cups/raster.h	/^	unsigned int cupsBitsPerColor;$/;"	m	struct:__anon87	access:public
__anon87::cupsBitsPerPixel	cups/raster.h	/^	unsigned int cupsBitsPerPixel;$/;"	m	struct:__anon87	access:public
__anon87::cupsBytesPerLine	cups/raster.h	/^	unsigned int cupsBytesPerLine;$/;"	m	struct:__anon87	access:public
__anon87::cupsColorOrder	cups/raster.h	/^	cups_order_t cupsColorOrder;$/;"	m	struct:__anon87	access:public
__anon87::cupsColorSpace	cups/raster.h	/^	cups_cspace_t cupsColorSpace;$/;"	m	struct:__anon87	access:public
__anon87::cupsCompression	cups/raster.h	/^	unsigned int cupsCompression;$/;"	m	struct:__anon87	access:public
__anon87::cupsHeight	cups/raster.h	/^	unsigned int cupsHeight;$/;"	m	struct:__anon87	access:public
__anon87::cupsMediaType	cups/raster.h	/^	unsigned int cupsMediaType;$/;"	m	struct:__anon87	access:public
__anon87::cupsRowCount	cups/raster.h	/^	unsigned int cupsRowCount;$/;"	m	struct:__anon87	access:public
__anon87::cupsRowFeed	cups/raster.h	/^	unsigned int cupsRowFeed;$/;"	m	struct:__anon87	access:public
__anon87::cupsRowStep	cups/raster.h	/^	unsigned int cupsRowStep;$/;"	m	struct:__anon87	access:public
__anon87::cupsWidth	cups/raster.h	/^	unsigned int cupsWidth;$/;"	m	struct:__anon87	access:public
__anon8::__flags	spawn.h	/^	short __flags;$/;"	m	struct:__anon8	access:public
__anon8::__pad	spawn.h	/^	int __pad[16];$/;"	m	struct:__anon8	access:public
__anon8::__pgrp	spawn.h	/^	pid_t __pgrp;$/;"	m	struct:__anon8	access:public
__anon8::__policy	spawn.h	/^	int __policy;$/;"	m	struct:__anon8	access:public
__anon8::__sd	spawn.h	/^	sigset_t __sd;$/;"	m	struct:__anon8	access:public
__anon8::__sp	spawn.h	/^	struct sched_param __sp;$/;"	m	struct:__anon8	typeref:struct:__anon8::sched_param	access:public
__anon8::__ss	spawn.h	/^	sigset_t __ss;$/;"	m	struct:__anon8	access:public
__anon90::name	cups/cups.h	/^	char *name;$/;"	m	struct:__anon90	access:public
__anon90::value	cups/cups.h	/^	char *value;$/;"	m	struct:__anon90	access:public
__anon91::instance	cups/cups.h	/^	char *instance;$/;"	m	struct:__anon91	access:public
__anon91::is_default	cups/cups.h	/^	int is_default;$/;"	m	struct:__anon91	access:public
__anon91::name	cups/cups.h	/^	char *name;$/;"	m	struct:__anon91	access:public
__anon91::num_options	cups/cups.h	/^	int num_options;$/;"	m	struct:__anon91	access:public
__anon91::options	cups/cups.h	/^	cups_option_t *options;$/;"	m	struct:__anon91	access:public
__anon98::completed_time	cups/cups.h	/^	time_t completed_time;$/;"	m	struct:__anon98	access:public
__anon98::creation_time	cups/cups.h	/^	time_t creation_time;$/;"	m	struct:__anon98	access:public
__anon98::dest	cups/cups.h	/^	char *dest;$/;"	m	struct:__anon98	access:public
__anon98::format	cups/cups.h	/^	char *format;$/;"	m	struct:__anon98	access:public
__anon98::id	cups/cups.h	/^	int id;$/;"	m	struct:__anon98	access:public
__anon98::priority	cups/cups.h	/^	int priority;$/;"	m	struct:__anon98	access:public
__anon98::processing_time	cups/cups.h	/^	time_t processing_time;$/;"	m	struct:__anon98	access:public
__anon98::size	cups/cups.h	/^	int size;$/;"	m	struct:__anon98	access:public
__anon98::state	cups/cups.h	/^	ipp_jstate_t state;$/;"	m	struct:__anon98	access:public
__anon98::title	cups/cups.h	/^	char *title;$/;"	m	struct:__anon98	access:public
__anon98::user	cups/cups.h	/^	char *user;$/;"	m	struct:__anon98	access:public
__arg	pthread.h	/^	void *__arg;$/;"	m	struct:_pthread_cleanup_buffer	access:public
__assert_fail	assert.h	/^    extern void __assert_fail(const char *, const char *, unsigned int,$/;"	p	signature:(const char *, const char *, unsigned int, const char *)
__c_lock	pthread.h	/^	struct _pthread_fastlock __c_lock;$/;"	m	struct:__anon66	typeref:struct:__anon66::_pthread_fastlock	access:public
__c_waiting	pthread.h	/^	_pthread_descr __c_waiting;$/;"	m	struct:__anon66	access:public
__canceltype	pthread.h	/^	int __canceltype;$/;"	m	struct:_pthread_cleanup_buffer	access:public
__compar_fn_t	stdlib.h	/^    typedef int (*__compar_fn_t) (const void *, const void *);$/;"	t
__control_word	fenv.h	/^	unsigned short __control_word;$/;"	m	struct:__anon147	access:public
__control_word	fenv.h	/^	unsigned short __control_word;$/;"	m	struct:__anon148	access:public
__cs_selector	fenv.h	/^	unsigned short __cs_selector;$/;"	m	struct:__anon147	access:public
__cs_selector	fenv.h	/^	unsigned short __cs_selector;$/;"	m	struct:__anon148	access:public
__csh	signal.h	/^	unsigned short __csh;$/;"	m	struct:sigcontext	access:public
__ctype_b	locale.h	/^	const unsigned short *__ctype_b;$/;"	m	struct:__locale_struct	access:public
__ctype_b_loc	ctype.h	/^    extern const unsigned short **__ctype_b_loc(void);$/;"	p	signature:(void)
__ctype_get_mb_cur_max	stdlib.h	/^    extern size_t __ctype_get_mb_cur_max(void);$/;"	p	signature:(void)
__ctype_tolower	locale.h	/^	const int *__ctype_tolower;$/;"	m	struct:__locale_struct	access:public
__ctype_tolower_loc	ctype.h	/^    extern const int32_t **__ctype_tolower_loc(void);$/;"	p	signature:(void)
__ctype_toupper	locale.h	/^	const int *__ctype_toupper;$/;"	m	struct:__locale_struct	access:public
__ctype_toupper_loc	ctype.h	/^    extern const int32_t **__ctype_toupper_loc(void);$/;"	p	signature:(void)
__data_offset	fenv.h	/^	unsigned int __data_offset;$/;"	m	struct:__anon147	access:public
__data_offset	fenv.h	/^	unsigned int __data_offset;$/;"	m	struct:__anon148	access:public
__data_selector	fenv.h	/^	unsigned short __data_selector;$/;"	m	struct:__anon147	access:public
__data_selector	fenv.h	/^	unsigned short __data_selector;$/;"	m	struct:__anon148	access:public
__detachstate	pthread.h	/^	int __detachstate;$/;"	m	struct:__anon65	access:public
__dispatch_fn_t	rpc/svc.h	/^    typedef void (*__dispatch_fn_t) (struct svc_req *, SVCXPRT *);$/;"	t
__dsh	signal.h	/^	unsigned short __dsh;$/;"	m	struct:sigcontext	access:public
__dummy	pthread.h	/^	int __dummy;$/;"	m	struct:__anon67	access:public
__dummy	signal.h	/^	    long double __dummy;	\/* force 16-byte alignment *\/$/;"	m	union:ia64_fpreg::__anon41
__eip	fenv.h	/^	unsigned int __eip;$/;"	m	struct:__anon147	access:public
__eip	fenv.h	/^	unsigned int __eip;$/;"	m	struct:__anon148	access:public
__errno_location	errno.h	/^    extern int *__errno_location(void);$/;"	p	signature:(void)
__esh	signal.h	/^	unsigned short __esh;$/;"	m	struct:sigcontext	access:public
__f_spare	sys/statvfs.h	/^	int __f_spare[6];$/;"	m	struct:statvfs	access:public
__f_spare	sys/statvfs.h	/^	int __f_spare[6];$/;"	m	struct:statvfs64	access:public
__f_spare	sys/statvfs.h	/^	unsigned int __f_spare[6];$/;"	m	struct:statvfs	access:public
__f_spare	sys/statvfs.h	/^	unsigned int __f_spare[6];$/;"	m	struct:statvfs64	access:public
__f_unused	sys/statvfs.h	/^	int __f_unused;$/;"	m	struct:statvfs	access:public
__f_unused	sys/statvfs.h	/^	int __f_unused;$/;"	m	struct:statvfs64	access:public
__finite	math.h	/^    extern int __finite(double);$/;"	p	signature:(double)
__finitef	math.h	/^    extern int __finitef(float);$/;"	p	signature:(float)
__finitel	math.h	/^    extern int __finitel(long double);$/;"	p	signature:(long double)
__flags	spawn.h	/^	short __flags;$/;"	m	struct:__anon8	access:public
__fpclassify	math.h	/^    extern int __fpclassify(double);$/;"	p	signature:(double)
__fpclassifyf	math.h	/^    extern int __fpclassifyf(float);$/;"	p	signature:(float)
__fpclassifyl	math.h	/^    extern int __fpclassifyl(long double);$/;"	p	signature:(long double)
__fpending	stdio.h	/^    extern size_t __fpending(FILE *);$/;"	p	signature:(FILE *)
__fpregs_mem	ucontext.h	/^	struct _libc_fpstate __fpregs_mem;$/;"	m	struct:ucontext	typeref:struct:ucontext::_libc_fpstate	access:public
__fsh	signal.h	/^	unsigned short __fsh;$/;"	m	struct:sigcontext	access:public
__ftw64_func_t	ftw.h	/^    typedef int (*__ftw64_func_t) (char *__filename,$/;"	t
__ftw_func_t	ftw.h	/^    typedef int (*__ftw_func_t) (char *__filename, struct stat * __status,$/;"	t
__fxstat	sys/stat.h	/^    extern int __fxstat(int, int, struct stat *);$/;"	p	signature:(int, int, struct stat *)
__fxstat64	sys/stat.h	/^    extern int __fxstat64(int, int, struct stat64 *);$/;"	p	signature:(int, int, struct stat64 *)
__getpagesize	sys/shm.h	/^    extern int __getpagesize(void);$/;"	p	signature:(void)
__getpgid	unistd.h	/^    extern pid_t __getpgid(pid_t);$/;"	p	signature:(pid_t)
__gsh	signal.h	/^	unsigned short __gsh;$/;"	m	struct:sigcontext	access:public
__guardsize	pthread.h	/^	size_t __guardsize;$/;"	m	struct:__anon65	access:public
__h_errno_location	netdb.h	/^    extern int *__h_errno_location(void);$/;"	p	signature:(void)
__inheritsched	pthread.h	/^	int __inheritsched;$/;"	m	struct:__anon65	access:public
__isinf	math.h	/^    extern int __isinf(double);$/;"	p	signature:(double)
__isinff	math.h	/^    extern int __isinff(float);$/;"	p	signature:(float)
__isinfl	math.h	/^    extern int __isinfl(long double);$/;"	p	signature:(long double)
__isnan	math.h	/^    extern int __isnan(double);$/;"	p	signature:(double)
__isnanf	math.h	/^    extern int __isnanf(float);$/;"	p	signature:(float)
__isnanl	math.h	/^    extern int __isnanl(long double);$/;"	p	signature:(long double)
__itimer_which_t	sys/time.h	/^    typedef int __itimer_which_t;$/;"	t
__jmp_buf	setjmp.h	/^    typedef int __jmp_buf[14];$/;"	t
__jmp_buf	setjmp.h	/^    typedef int __jmp_buf[6];$/;"	t
__jmp_buf	setjmp.h	/^    typedef long int __jmp_buf[112] __attribute__ ((aligned(16)));$/;"	t
__jmp_buf	setjmp.h	/^    typedef long int __jmp_buf[18];$/;"	t
__jmp_buf	setjmp.h	/^    typedef long int __jmp_buf[64] __attribute__ ((aligned(16)));$/;"	t
__jmp_buf	setjmp.h	/^    typedef long int __jmp_buf[70] __attribute__ ((aligned(16)));$/;"	t
__jmp_buf	setjmp.h	/^    typedef long int __jmp_buf[8];$/;"	t
__jmp_buf_tag	setjmp.h	/^    struct __jmp_buf_tag {$/;"	s
__jmp_buf_tag::__jmpbuf	setjmp.h	/^	__jmp_buf __jmpbuf;$/;"	m	struct:__jmp_buf_tag	access:public
__jmp_buf_tag::__mask_was_saved	setjmp.h	/^	int __mask_was_saved;$/;"	m	struct:__jmp_buf_tag	access:public
__jmp_buf_tag::__saved_mask	setjmp.h	/^	sigset_t __saved_mask;$/;"	m	struct:__jmp_buf_tag	access:public
__jmpbuf	setjmp.h	/^	__jmp_buf __jmpbuf;$/;"	m	struct:__jmp_buf_tag	access:public
__key	sys/ipc.h	/^	key_t __key;		\/* Key. *\/$/;"	m	struct:ipc_perm	access:public
__key	sys/ipc.h	/^	key_t __key;$/;"	m	struct:ipc_perm	access:public
__libc_current_sigrtmax	signal.h	/^    extern int __libc_current_sigrtmax(void);$/;"	p	signature:(void)
__libc_current_sigrtmin	signal.h	/^    extern int __libc_current_sigrtmin(void);$/;"	p	signature:(void)
__locale_struct	locale.h	/^    struct __locale_struct {$/;"	s
__locale_struct::__ctype_b	locale.h	/^	const unsigned short *__ctype_b;$/;"	m	struct:__locale_struct	access:public
__locale_struct::__ctype_tolower	locale.h	/^	const int *__ctype_tolower;$/;"	m	struct:__locale_struct	access:public
__locale_struct::__ctype_toupper	locale.h	/^	const int *__ctype_toupper;$/;"	m	struct:__locale_struct	access:public
__locale_struct::__locales	locale.h	/^	struct locale_data *__locales[13];$/;"	m	struct:__locale_struct	typeref:struct:__locale_struct::locale_data	access:public
__locale_struct::__names	locale.h	/^	const char *__names[13];$/;"	m	struct:__locale_struct	access:public
__locale_t	locale.h	/^    typedef struct __locale_struct *__locale_t;$/;"	t	typeref:struct:__locale_struct
__locales	locale.h	/^	struct locale_data *__locales[13];$/;"	m	struct:__locale_struct	typeref:struct:__locale_struct::locale_data	access:public
__lockkind	pthread.h	/^	int __lockkind;$/;"	m	struct:__anon68	access:public
__lxstat	sys/stat.h	/^    extern int __lxstat(int, const char *, struct stat *);$/;"	p	signature:(int, const char *, struct stat *)
__lxstat64	sys/stat.h	/^    extern int __lxstat64(int, const char *, struct stat64 *);$/;"	p	signature:(int, const char *, struct stat64 *)
__m_count	pthread.h	/^	int __m_count;		\/* Depth of recursive locking *\/$/;"	m	struct:__anon63	access:public
__m_kind	pthread.h	/^	int __m_kind;		\/* Mutex kind: fast, recursive or errcheck *\/$/;"	m	struct:__anon63	access:public
__m_lock	pthread.h	/^	struct _pthread_fastlock __m_lock;	\/* Underlying fast lock *\/$/;"	m	struct:__anon63	typeref:struct:__anon63::_pthread_fastlock	access:public
__m_owner	pthread.h	/^	_pthread_descr __m_owner;	\/* Owner thread (if recursive or errcheck) *\/$/;"	m	struct:__anon63	access:public
__m_reserved	pthread.h	/^	int __m_reserved;	\/* Reserved for future use *\/$/;"	m	struct:__anon63	access:public
__mask_was_saved	setjmp.h	/^	int __mask_was_saved;$/;"	m	struct:__jmp_buf_tag	access:public
__mbstate_t	wctype.h	/^    } __mbstate_t;$/;"	t	typeref:struct:__anon52
__mempcpy	string.h	/^    extern void *__mempcpy(void *, const void *, size_t);$/;"	p	signature:(void *, const void *, size_t)
__msg_cbytes	sys/msg.h	/^	unsigned long int __msg_cbytes;	\/* current number of bytes on queue *\/$/;"	m	struct:msqid_ds	access:public
__msg_cbytes	sys/msg.h	/^	unsigned long int __msg_cbytes;$/;"	m	struct:msqid_ds	access:public
__mutexkind	pthread.h	/^	int __mutexkind;$/;"	m	struct:__anon64	access:public
__mxcsr	fenv.h	/^	unsigned int __mxcsr;$/;"	m	struct:__anon148	access:public
__names	locale.h	/^	const char *__names[13];$/;"	m	struct:__locale_struct	access:public
__nftw64_func_t	ftw.h	/^    typedef int (*__nftw64_func_t) (char *__filename,$/;"	t
__nftw_func_t	ftw.h	/^    typedef int (*__nftw_func_t) (char *__filename, struct stat * __status,$/;"	t
__opcode	fenv.h	/^	unsigned int __opcode:11;$/;"	m	struct:__anon147	access:public
__opcode	fenv.h	/^	unsigned int __opcode:11;$/;"	m	struct:__anon148	access:public
__pad	mqueue.h	/^	long int __pad[4];$/;"	m	struct:mq_attr	access:public
__pad	spawn.h	/^	int __pad[16];$/;"	m	struct:__anon7	access:public
__pad	spawn.h	/^	int __pad[16];$/;"	m	struct:__anon8	access:public
__pad	ucontext.h	/^	int __pad[3];$/;"	m	struct:_libc_vscr	access:public
__pad	ucontext.h	/^	unsigned int __pad[3];$/;"	m	struct:_libc_vrstate	access:public
__pad0	signal.h	/^	unsigned short __pad0;$/;"	m	struct:sigcontext	access:public
__pad1	sys/ipc.h	/^	int __pad1;$/;"	m	struct:ipc_perm	access:public
__pad1	sys/ipc.h	/^	unsigned int __pad1;$/;"	m	struct:ipc_perm	access:public
__pad1	sys/ipc.h	/^	unsigned short __pad1;$/;"	m	struct:ipc_perm	access:public
__pad1	sys/stat.h	/^	int __pad1;$/;"	m	struct:stat64	access:public
__pad1	sys/stat.h	/^	unsigned int __pad1;$/;"	m	struct:stat	access:public
__pad1	sys/stat.h	/^	unsigned int __pad1;$/;"	m	struct:stat64	access:public
__pad1	sys/stat.h	/^	unsigned short __pad1;$/;"	m	struct:stat	access:public
__pad2	sys/ipc.h	/^	unsigned short __pad2;$/;"	m	struct:ipc_perm	access:public
__pad2	sys/stat.h	/^	int __pad2;$/;"	m	struct:stat	access:public
__pad2	sys/stat.h	/^	int __pad2;$/;"	m	struct:stat64	access:public
__pad2	sys/stat.h	/^	unsigned int __pad2;$/;"	m	struct:stat	access:public
__pad2	sys/stat.h	/^	unsigned int __pad2;$/;"	m	struct:stat64	access:public
__pad2	sys/stat.h	/^	unsigned short __pad2;$/;"	m	struct:stat	access:public
__pad2	sys/stat.h	/^	unsigned short __pad2;$/;"	m	struct:stat64	access:public
__padding	pthread.h	/^	char __padding[48 - sizeof(struct _pthread_fastlock) -$/;"	m	struct:__anon66	access:public
__pgrp	spawn.h	/^	pid_t __pgrp;$/;"	m	struct:__anon8	access:public
__policy	spawn.h	/^	int __policy;$/;"	m	struct:__anon8	access:public
__pos	stdio.h	/^	off64_t __pos;$/;"	m	struct:__anon46	access:public
__pos	stdio.h	/^	off_t __pos;$/;"	m	struct:__anon45	access:public
__prev	pthread.h	/^	struct _pthread_cleanup_buffer *__prev;$/;"	m	struct:_pthread_cleanup_buffer	typeref:struct:_pthread_cleanup_buffer::_pthread_cleanup_buffer	access:public
__priority_which	sys/resource.h	/^    enum __priority_which {$/;"	g
__priority_which_t	sys/resource.h	/^    typedef enum __priority_which __priority_which_t;$/;"	t	typeref:enum:__priority_which
__pshared	pthread.h	/^	int __pshared;$/;"	m	struct:__anon68	access:public
__pthread_cond_align_t	pthread.h	/^    typedef long long int __pthread_cond_align_t;$/;"	t
__register_atfork	pthread.h	/^    extern int __register_atfork(void (*)(void)$/;"	p	signature:(void (*)(void) , void (*)(void) , void (*)(void) , void *)
__reserved1	signal.h	/^	unsigned long int __reserved1[8];$/;"	m	struct:sigcontext	access:public
__reserved1	ucontext.h	/^	unsigned long int __reserved1[8];$/;"	m	struct:__anon129	access:public
__rlimit_resource_t	sys/resource.h	/^    typedef int __rlimit_resource_t;$/;"	t
__routine	pthread.h	/^	void (*__routine) (void *);$/;"	m	struct:_pthread_cleanup_buffer	access:public
__rw_kind	pthread.h	/^	int __rw_kind;		\/* Reader\/Writer preference selection *\/$/;"	m	struct:_pthread_rwlock_t	access:public
__rw_lock	pthread.h	/^	struct _pthread_fastlock __rw_lock;	\/* Lock to guarantee mutual exclusion *\/$/;"	m	struct:_pthread_rwlock_t	typeref:struct:_pthread_rwlock_t::_pthread_fastlock	access:public
__rw_pshared	pthread.h	/^	int __rw_pshared;	\/* Shared between processes or not *\/$/;"	m	struct:_pthread_rwlock_t	access:public
__rw_read_waiting	pthread.h	/^	_pthread_descr __rw_read_waiting;	\/* Threads waiting for reading *\/$/;"	m	struct:_pthread_rwlock_t	access:public
__rw_readers	pthread.h	/^	int __rw_readers;	\/* Number of readers *\/$/;"	m	struct:_pthread_rwlock_t	access:public
__rw_write_waiting	pthread.h	/^	_pthread_descr __rw_write_waiting;	\/* Threads waiting for writing *\/$/;"	m	struct:_pthread_rwlock_t	access:public
__rw_writer	pthread.h	/^	_pthread_descr __rw_writer;	\/* Identity of writer, or NULL if none *\/$/;"	m	struct:_pthread_rwlock_t	access:public
__saved_mask	setjmp.h	/^	sigset_t __saved_mask;$/;"	m	struct:__jmp_buf_tag	access:public
__schedparam	pthread.h	/^	struct sched_param __schedparam;$/;"	m	struct:__anon65	typeref:struct:__anon65::sched_param	access:public
__schedpolicy	pthread.h	/^	int __schedpolicy;$/;"	m	struct:__anon65	access:public
__scope	pthread.h	/^	int __scope;$/;"	m	struct:__anon65	access:public
__sd	spawn.h	/^	sigset_t __sd;$/;"	m	struct:__anon8	access:public
__sem_lock	semaphore.h	/^	struct _pthread_fastlock __sem_lock;$/;"	m	struct:__anon69	typeref:struct:__anon69::_pthread_fastlock	access:public
__sem_value	semaphore.h	/^	int __sem_value;$/;"	m	struct:__anon69	access:public
__sem_waiting	semaphore.h	/^	_pthread_descr __sem_waiting;$/;"	m	struct:__anon69	access:public
__seq	sys/ipc.h	/^	long int __seq;$/;"	m	struct:ipc_perm	access:public
__seq	sys/ipc.h	/^	unsigned int __seq;$/;"	m	struct:ipc_perm	access:public
__seq	sys/ipc.h	/^	unsigned short __seq;	\/* Sequence number. *\/$/;"	m	struct:ipc_perm	access:public
__seq	sys/ipc.h	/^	unsigned short __seq;$/;"	m	struct:ipc_perm	access:public
__sigaction_handler	signal.h	/^	} __sigaction_handler;$/;"	m	struct:sigaction	typeref:union:sigaction::__anon30	access:public
__sigaction_handler	signal.h	/^	} __sigaction_handler;$/;"	m	struct:sigaction	typeref:union:sigaction::__anon31	access:public
__sigaction_handler	signal.h	/^	} __sigaction_handler;$/;"	m	struct:sigaction	typeref:union:sigaction::__anon32	access:public
__sigaction_handler	signal.h	/^	} __sigaction_handler;$/;"	m	struct:sigaction	typeref:union:sigaction::__anon33	access:public
__sigaction_handler	signal.h	/^	} __sigaction_handler;$/;"	m	struct:sigaction	typeref:union:sigaction::__anon34	access:public
__sigaction_handler	signal.h	/^	} __sigaction_handler;$/;"	m	struct:sigaction	typeref:union:sigaction::__anon35	access:public
__sigaction_handler	signal.h	/^	} __sigaction_handler;$/;"	m	struct:sigaction	typeref:union:sigaction::__anon36	access:public
__signbit	math.h	/^    extern int __signbit(double);$/;"	p	signature:(double)
__signbitf	math.h	/^    extern int __signbitf(float);$/;"	p	signature:(float)
__signbitl	math.h	/^    extern int __signbitl(long double);$/;"	p	signature:(long double)
__sigsetjmp	setjmp.h	/^    extern int __sigsetjmp(jmp_buf, int);$/;"	p	signature:(jmp_buf, int)
__size	pthread.h	/^	char __size[__SIZEOF_PTHREAD_BARRIERATTR_T];$/;"	m	union:__anon62
__size	pthread.h	/^	char __size[__SIZEOF_PTHREAD_BARRIER_T];$/;"	m	union:__anon55
__size	pthread.h	/^	char __size[__SIZEOF_PTHREAD_BARRIER_T];$/;"	m	union:__anon56
__size	pthread.h	/^	char __size[__SIZEOF_PTHREAD_BARRIER_T];$/;"	m	union:__anon57
__size	pthread.h	/^	char __size[__SIZEOF_PTHREAD_BARRIER_T];$/;"	m	union:__anon58
__size	pthread.h	/^	char __size[__SIZEOF_PTHREAD_BARRIER_T];$/;"	m	union:__anon59
__size	pthread.h	/^	char __size[__SIZEOF_PTHREAD_BARRIER_T];$/;"	m	union:__anon60
__size	pthread.h	/^	char __size[__SIZEOF_PTHREAD_BARRIER_T];$/;"	m	union:__anon61
__sp	spawn.h	/^	struct sched_param __sp;$/;"	m	struct:__anon8	typeref:struct:__anon8::sched_param	access:public
__spinlock	pthread.h	/^	int __spinlock;$/;"	m	struct:_pthread_fastlock	access:public
__ss	spawn.h	/^	sigset_t __ss;$/;"	m	struct:__anon8	access:public
__ss_align	sys/socket.h	/^	__ss_aligntype __ss_align;$/;"	m	struct:sockaddr_storage	access:public
__ss_aligntype	sys/socket.h	/^    typedef uint32_t __ss_aligntype;$/;"	t
__ss_aligntype	sys/socket.h	/^    typedef uint64_t __ss_aligntype;$/;"	t
__ss_padding	sys/socket.h	/^	char __ss_padding[(128 - (2 * sizeof(__ss_aligntype)))];$/;"	m	struct:sockaddr_storage	access:public
__ssh	signal.h	/^	unsigned short __ssh;$/;"	m	struct:sigcontext	access:public
__st_ino	sys/stat.h	/^	ino_t __st_ino;$/;"	m	struct:stat64	access:public
__stackaddr	pthread.h	/^	void *__stackaddr;$/;"	m	struct:__anon65	access:public
__stackaddr_set	pthread.h	/^	int __stackaddr_set;$/;"	m	struct:__anon65	access:public
__stacksize	pthread.h	/^	unsigned long int __stacksize;$/;"	m	struct:__anon65	access:public
__state	stdio.h	/^	mbstate_t __state;$/;"	m	struct:__anon45	access:public
__state	stdio.h	/^	mbstate_t __state;$/;"	m	struct:__anon46	access:public
__status	pthread.h	/^	long int __status;$/;"	m	struct:_pthread_fastlock	access:public
__status_word	fenv.h	/^	unsigned short __status_word;$/;"	m	struct:__anon147	access:public
__status_word	fenv.h	/^	unsigned short __status_word;$/;"	m	struct:__anon148	access:public
__stpcpy	string.h	/^    extern char *__stpcpy(char *, const char *);$/;"	p	signature:(char *, const char *)
__strdup	string.h	/^    extern char *__strdup(const char *);$/;"	p	signature:(const char *)
__strtod_internal	stdlib.h	/^    extern double __strtod_internal(const char *, char **, int);$/;"	p	signature:(const char *, char **, int)
__strtof_internal	stdlib.h	/^    extern float __strtof_internal(const char *, char **, int);$/;"	p	signature:(const char *, char **, int)
__strtok_r	string.h	/^    extern char *__strtok_r(char *, const char *, char **);$/;"	p	signature:(char *, const char *, char **)
__strtol_internal	stdlib.h	/^    extern long int __strtol_internal(const char *, char **, int, int);$/;"	p	signature:(const char *, char **, int, int)
__strtold_internal	stdlib.h	/^    extern long double __strtold_internal(const char *, char **, int);$/;"	p	signature:(const char *, char **, int)
__strtoll_internal	stdlib.h	/^    extern long long int __strtoll_internal(const char *, char **, int,$/;"	p	signature:(const char *, char **, int, int)
__strtoul_internal	stdlib.h	/^    extern unsigned long int __strtoul_internal(const char *, char **, int,$/;"	p	signature:(const char *, char **, int, int)
__strtoull_internal	stdlib.h	/^    extern unsigned long long int __strtoull_internal(const char *,$/;"	p	signature:(const char *, char **, int, int)
__sysv_signal	signal.h	/^    extern sighandler_t __sysv_signal(int, sighandler_t);$/;"	p	signature:(int, sighandler_t)
__tags	fenv.h	/^	unsigned short __tags;$/;"	m	struct:__anon147	access:public
__tags	fenv.h	/^	unsigned short __tags;$/;"	m	struct:__anon148	access:public
__unused	sys/stat.h	/^	long int __unused[3];$/;"	m	struct:stat	access:public
__unused	sys/stat.h	/^	long int __unused[3];$/;"	m	struct:stat64	access:public
__unused	sys/stat.h	/^	unsigned long int __unused[3];$/;"	m	struct:stat	access:public
__unused	sys/stat.h	/^	unsigned long int __unused[3];$/;"	m	struct:stat64	access:public
__unused	ucontext.h	/^	unsigned long int __unused[4];$/;"	m	struct:__anon131	access:public
__unused	utmp.h	/^	char __unused[20];	\/* Reserved for future use. *\/$/;"	m	struct:utmp	access:public
__unused	utmpx.h	/^	char __unused[20];	\/* Reserved for future use. *\/$/;"	m	struct:utmpx	access:public
__unused1	fenv.h	/^	unsigned short __unused1;$/;"	m	struct:__anon147	access:public
__unused1	fenv.h	/^	unsigned short __unused1;$/;"	m	struct:__anon148	access:public
__unused1	sys/ipc.h	/^	unsigned long int __unused1;$/;"	m	struct:ipc_perm	access:public
__unused1	sys/ipc.h	/^	unsigned long long int __unused1;$/;"	m	struct:ipc_perm	access:public
__unused1	sys/msg.h	/^	unsigned int __unused1;$/;"	m	struct:msqid_ds	access:public
__unused1	sys/msg.h	/^	unsigned long int __unused1;$/;"	m	struct:msqid_ds	access:public
__unused1	sys/sem.h	/^	unsigned int __unused1;$/;"	m	struct:semid_ds	access:public
__unused1	sys/sem.h	/^	unsigned long int __unused1;$/;"	m	struct:semid_ds	access:public
__unused1	sys/shm.h	/^	unsigned int __unused1;$/;"	m	struct:shmid_ds	access:public
__unused1	sys/shm.h	/^	unsigned long int __unused1;$/;"	m	struct:shmid_ds	access:public
__unused2	fenv.h	/^	unsigned short __unused2;$/;"	m	struct:__anon147	access:public
__unused2	fenv.h	/^	unsigned short __unused2;$/;"	m	struct:__anon148	access:public
__unused2	sys/ipc.h	/^	unsigned long int __unused2;$/;"	m	struct:ipc_perm	access:public
__unused2	sys/ipc.h	/^	unsigned long long int __unused2;$/;"	m	struct:ipc_perm	access:public
__unused2	sys/msg.h	/^	unsigned int __unused2;$/;"	m	struct:msqid_ds	access:public
__unused2	sys/msg.h	/^	unsigned long int __unused2;$/;"	m	struct:msqid_ds	access:public
__unused2	sys/sem.h	/^	unsigned int __unused2;$/;"	m	struct:semid_ds	access:public
__unused2	sys/sem.h	/^	unsigned long int __unused2;$/;"	m	struct:semid_ds	access:public
__unused2	sys/shm.h	/^	unsigned int __unused2;$/;"	m	struct:shmid_ds	access:public
__unused2	sys/shm.h	/^	unsigned long int __unused2;$/;"	m	struct:shmid_ds	access:public
__unused3	fenv.h	/^	unsigned short __unused3;$/;"	m	struct:__anon147	access:public
__unused3	fenv.h	/^	unsigned short __unused3;$/;"	m	struct:__anon148	access:public
__unused3	sys/msg.h	/^	unsigned int __unused3;$/;"	m	struct:msqid_ds	access:public
__unused3	sys/msg.h	/^	unsigned long int __unused3;$/;"	m	struct:msqid_ds	access:public
__unused3	sys/sem.h	/^	unsigned long int __unused3;$/;"	m	struct:semid_ds	access:public
__unused3	sys/shm.h	/^	unsigned int __unused3;$/;"	m	struct:shmid_ds	access:public
__unused3	sys/shm.h	/^	unsigned long int __unused3;$/;"	m	struct:shmid_ds	access:public
__unused4	fenv.h	/^	unsigned int __unused4:5;$/;"	m	struct:__anon147	access:public
__unused4	fenv.h	/^	unsigned int __unused4:5;$/;"	m	struct:__anon148	access:public
__unused4	sys/msg.h	/^	unsigned long int __unused4;$/;"	m	struct:msqid_ds	access:public
__unused4	sys/sem.h	/^	unsigned long int __unused4;$/;"	m	struct:semid_ds	access:public
__unused4	sys/shm.h	/^	unsigned int __unused4;$/;"	m	struct:shmid_ds	access:public
__unused4	sys/shm.h	/^	unsigned long int __unused4;$/;"	m	struct:shmid_ds	access:public
__unused4	sys/stat.h	/^	unsigned long int __unused4;$/;"	m	struct:stat	access:public
__unused4	sys/stat.h	/^	unsigned long int __unused4;$/;"	m	struct:stat64	access:public
__unused5	fenv.h	/^	unsigned short __unused5;$/;"	m	struct:__anon147	access:public
__unused5	fenv.h	/^	unsigned short __unused5;$/;"	m	struct:__anon148	access:public
__unused5	sys/msg.h	/^	unsigned long int __unused5;$/;"	m	struct:msqid_ds	access:public
__unused5	sys/shm.h	/^	unsigned long int __unused5;$/;"	m	struct:shmid_ds	access:public
__unused5	sys/stat.h	/^	unsigned long int __unused5;$/;"	m	struct:stat	access:public
__unused5	sys/stat.h	/^	unsigned long int __unused5;$/;"	m	struct:stat64	access:public
__unused6	sys/shm.h	/^	unsigned long int __unused6;$/;"	m	struct:shmid_ds	access:public
__unused6	sys/stat.h	/^	unsigned long int __unused6;$/;"	m	struct:stat	access:public
__unused6	sys/stat.h	/^	unsigned long int __unused6;$/;"	m	struct:stat64	access:public
__used	spawn.h	/^	int __used;$/;"	m	struct:__anon7	access:public
__val	sys/types.h	/^	int __val[2];$/;"	m	struct:__anon47	access:public
__wcstod_internal	wchar.h	/^    extern double __wcstod_internal(const wchar_t *, wchar_t * *, int);$/;"	p	signature:(const wchar_t *, wchar_t * *, int)
__wcstof_internal	wchar.h	/^    extern float __wcstof_internal(const wchar_t *, wchar_t * *, int);$/;"	p	signature:(const wchar_t *, wchar_t * *, int)
__wcstol_internal	wchar.h	/^    extern long int __wcstol_internal(const wchar_t *, wchar_t * *, int,$/;"	p	signature:(const wchar_t *, wchar_t * *, int, int)
__wcstold_internal	wchar.h	/^    extern long double __wcstold_internal(const wchar_t *, wchar_t * *,$/;"	p	signature:(const wchar_t *, wchar_t * *, int)
__wcstoul_internal	wchar.h	/^    extern unsigned long int __wcstoul_internal(const wchar_t *,$/;"	p	signature:(const wchar_t *, wchar_t * *, int, int)
__xmknod	sys/stat.h	/^    extern int __xmknod(int, const char *, mode_t, dev_t *);$/;"	p	signature:(int, const char *, mode_t, dev_t *)
__xpg_basename	libgen.h	/^    extern char *__xpg_basename(char *);$/;"	p	signature:(char *)
__xpg_sigpause	signal.h	/^    extern int __xpg_sigpause(int);$/;"	p	signature:(int)
__xpg_strerror_r	string.h	/^    extern char *__xpg_strerror_r(int, char *, size_t);$/;"	p	signature:(int, char *, size_t)
__xstat	sys/stat.h	/^    extern int __xstat(int, const char *, struct stat *);$/;"	p	signature:(int, const char *, struct stat *)
__xstat64	sys/stat.h	/^    extern int __xstat64(int, const char *, struct stat64 *);$/;"	p	signature:(int, const char *, struct stat64 *)
_addr	signal.h	/^		void *_addr;$/;"	m	struct:siginfo::__anon22::__anon27	access:public
_attribute	signal.h	/^		void *_attribute;$/;"	m	struct:sigevent::__anon20::__anon21	access:public
_attrs	curses.h	/^	attr_t _attrs;		\/* current attribute for non-space character *\/$/;"	m	struct:_win_st	access:public
_attrs	ncurses.h	/^	attr_t _attrs;		\/* current attribute for non-space character *\/$/;"	m	struct:_win_st	access:public
_band	signal.h	/^		int _band;$/;"	m	struct:siginfo::__anon22::__anon28	access:public
_begx	curses.h	/^	short _begx;$/;"	m	struct:_win_st	access:public
_begx	ncurses.h	/^	short _begx;$/;"	m	struct:_win_st	access:public
_begy	curses.h	/^	short _begy;		\/* screen coords of upper-left-hand corner *\/$/;"	m	struct:_win_st	access:public
_begy	ncurses.h	/^	short _begy;		\/* screen coords of upper-left-hand corner *\/$/;"	m	struct:_win_st	access:public
_bkgd	curses.h	/^	chtype _bkgd;		\/* current background char\/attribute pair *\/$/;"	m	struct:_win_st	access:public
_bkgd	ncurses.h	/^	chtype _bkgd;		\/* current background char\/attribute pair *\/$/;"	m	struct:_win_st	access:public
_bkgrnd	curses.h	/^	cchar_t _bkgrnd;	\/* current background char\/attribute pair *\/$/;"	m	struct:_win_st	access:public
_bkgrnd	ncurses.h	/^	cchar_t _bkgrnd;	\/* current background char\/attribute pair *\/$/;"	m	struct:_win_st	access:public
_clear	curses.h	/^	bool _clear;		\/* consider all data in the window invalid? *\/$/;"	m	struct:_win_st	access:public
_clear	ncurses.h	/^	bool _clear;		\/* consider all data in the window invalid? *\/$/;"	m	struct:_win_st	access:public
_curx	curses.h	/^	short _curx;$/;"	m	struct:_win_st	access:public
_curx	ncurses.h	/^	short _curx;$/;"	m	struct:_win_st	access:public
_cury	curses.h	/^	short _cury;		\/* current cursor position *\/$/;"	m	struct:_win_st	access:public
_cury	ncurses.h	/^	short _cury;		\/* current cursor position *\/$/;"	m	struct:_win_st	access:public
_delay	curses.h	/^	int _delay;		\/* 0 = nodelay, <0 = blocking, >0 = delay *\/$/;"	m	struct:_win_st	access:public
_delay	ncurses.h	/^	int _delay;		\/* 0 = nodelay, <0 = blocking, >0 = delay *\/$/;"	m	struct:_win_st	access:public
_exit	unistd.h	/^    extern void _exit(int);$/;"	p	signature:(int)
_fd	signal.h	/^		int _fd;$/;"	m	struct:siginfo::__anon22::__anon28	access:public
_flags	curses.h	/^	short _flags;		\/* window state flags *\/$/;"	m	struct:_win_st	access:public
_flags	ncurses.h	/^	short _flags;		\/* window state flags *\/$/;"	m	struct:_win_st	access:public
_fpreg	signal.h	/^    struct _fpreg {$/;"	s
_fpreg::exponent	signal.h	/^	unsigned short exponent;$/;"	m	struct:_fpreg	access:public
_fpreg::significand	signal.h	/^	unsigned short significand[4];$/;"	m	struct:_fpreg	access:public
_fpstate	signal.h	/^    struct _fpstate {$/;"	s
_fpstate::_fxsr_env	signal.h	/^	unsigned long int _fxsr_env[6];$/;"	m	struct:_fpstate	access:public
_fpstate::_fxsr_st	signal.h	/^	struct _fpxreg _fxsr_st[8];$/;"	m	struct:_fpstate	typeref:struct:_fpstate::_fpxreg	access:public
_fpstate::_st	signal.h	/^	struct _fpreg _st[8];$/;"	m	struct:_fpstate	typeref:struct:_fpstate::_fpreg	access:public
_fpstate::_st	signal.h	/^	struct _fpxreg _st[8];$/;"	m	struct:_fpstate	typeref:struct:_fpstate::_fpxreg	access:public
_fpstate::_xmm	signal.h	/^	struct _xmmreg _xmm[16];$/;"	m	struct:_fpstate	typeref:struct:_fpstate::_xmmreg	access:public
_fpstate::_xmm	signal.h	/^	struct _xmmreg _xmm[8];$/;"	m	struct:_fpstate	typeref:struct:_fpstate::_xmmreg	access:public
_fpstate::cssel	signal.h	/^	unsigned long int cssel;$/;"	m	struct:_fpstate	access:public
_fpstate::cw	signal.h	/^	unsigned long int cw;$/;"	m	struct:_fpstate	access:public
_fpstate::cwd	signal.h	/^	uint16_t cwd;$/;"	m	struct:_fpstate	access:public
_fpstate::dataoff	signal.h	/^	unsigned long int dataoff;$/;"	m	struct:_fpstate	access:public
_fpstate::datasel	signal.h	/^	unsigned long int datasel;$/;"	m	struct:_fpstate	access:public
_fpstate::fop	signal.h	/^	uint16_t fop;$/;"	m	struct:_fpstate	access:public
_fpstate::ftw	signal.h	/^	uint16_t ftw;$/;"	m	struct:_fpstate	access:public
_fpstate::ipoff	signal.h	/^	unsigned long int ipoff;$/;"	m	struct:_fpstate	access:public
_fpstate::magic	signal.h	/^	unsigned short magic;$/;"	m	struct:_fpstate	access:public
_fpstate::mxcr_mask	signal.h	/^	uint32_t mxcr_mask;$/;"	m	struct:_fpstate	access:public
_fpstate::mxcsr	signal.h	/^	uint32_t mxcsr;$/;"	m	struct:_fpstate	access:public
_fpstate::mxcsr	signal.h	/^	unsigned long int mxcsr;$/;"	m	struct:_fpstate	access:public
_fpstate::padding	signal.h	/^	uint32_t padding[24];$/;"	m	struct:_fpstate	access:public
_fpstate::padding	signal.h	/^	unsigned long int padding[56];$/;"	m	struct:_fpstate	access:public
_fpstate::rdp	signal.h	/^	uint64_t rdp;$/;"	m	struct:_fpstate	access:public
_fpstate::reserved	signal.h	/^	unsigned long int reserved;$/;"	m	struct:_fpstate	access:public
_fpstate::rip	signal.h	/^	uint64_t rip;$/;"	m	struct:_fpstate	access:public
_fpstate::status	signal.h	/^	unsigned short status;$/;"	m	struct:_fpstate	access:public
_fpstate::sw	signal.h	/^	unsigned long int sw;$/;"	m	struct:_fpstate	access:public
_fpstate::swd	signal.h	/^	uint16_t swd;$/;"	m	struct:_fpstate	access:public
_fpstate::tag	signal.h	/^	unsigned long int tag;$/;"	m	struct:_fpstate	access:public
_fpxreg	signal.h	/^    struct _fpxreg {$/;"	s
_fpxreg::exponent	signal.h	/^	unsigned short exponent;$/;"	m	struct:_fpxreg	access:public
_fpxreg::padding	signal.h	/^	unsigned short padding[3];$/;"	m	struct:_fpxreg	access:public
_fpxreg::significand	signal.h	/^	unsigned short significand[4];$/;"	m	struct:_fpxreg	access:public
_function	signal.h	/^		void (*_function) (sigval_t);$/;"	m	struct:sigevent::__anon20::__anon21	access:public
_fxsr_env	signal.h	/^	unsigned long int _fxsr_env[6];$/;"	m	struct:_fpstate	access:public
_fxsr_st	signal.h	/^	struct _fpxreg _fxsr_st[8];$/;"	m	struct:_fpstate	typeref:struct:_fpstate::_fpxreg	access:public
_idcok	curses.h	/^	bool _idcok;		\/* OK to use insert\/delete char? *\/$/;"	m	struct:_win_st	access:public
_idcok	ncurses.h	/^	bool _idcok;		\/* OK to use insert\/delete char? *\/$/;"	m	struct:_win_st	access:public
_idlok	curses.h	/^	bool _idlok;		\/* OK to use insert\/delete line? *\/$/;"	m	struct:_win_st	access:public
_idlok	ncurses.h	/^	bool _idlok;		\/* OK to use insert\/delete line? *\/$/;"	m	struct:_win_st	access:public
_immed	curses.h	/^	bool _immed;		\/* window in immed mode? (not yet used) *\/$/;"	m	struct:_win_st	access:public
_immed	ncurses.h	/^	bool _immed;		\/* window in immed mode? (not yet used) *\/$/;"	m	struct:_win_st	access:public
_kill	signal.h	/^	    } _kill;$/;"	m	union:siginfo::__anon22	typeref:struct:siginfo::__anon22::__anon23
_leaveok	curses.h	/^	bool _leaveok;		\/* OK to not reset cursor on exit? *\/$/;"	m	struct:_win_st	access:public
_leaveok	ncurses.h	/^	bool _leaveok;		\/* OK to not reset cursor on exit? *\/$/;"	m	struct:_win_st	access:public
_libc_fpreg	ucontext.h	/^    struct _libc_fpreg {$/;"	s
_libc_fpreg::exponent	ucontext.h	/^	unsigned short exponent;$/;"	m	struct:_libc_fpreg	access:public
_libc_fpreg::significand	ucontext.h	/^	unsigned short significand[4];$/;"	m	struct:_libc_fpreg	access:public
_libc_fpstate	ucontext.h	/^    struct _libc_fpstate {$/;"	s
_libc_fpstate::_pad	ucontext.h	/^	int _pad[2];$/;"	m	struct:_libc_fpstate	access:public
_libc_fpstate::_st	ucontext.h	/^	struct _libc_fpreg _st[8];$/;"	m	struct:_libc_fpstate	typeref:struct:_libc_fpstate::_libc_fpreg	access:public
_libc_fpstate::_st	ucontext.h	/^	struct _libc_fpxreg _st[8];$/;"	m	struct:_libc_fpstate	typeref:struct:_libc_fpstate::_libc_fpxreg	access:public
_libc_fpstate::_xmm	ucontext.h	/^	struct _libc_xmmreg _xmm[16];$/;"	m	struct:_libc_fpstate	typeref:struct:_libc_fpstate::_libc_xmmreg	access:public
_libc_fpstate::cssel	ucontext.h	/^	unsigned long int cssel;$/;"	m	struct:_libc_fpstate	access:public
_libc_fpstate::cw	ucontext.h	/^	unsigned long int cw;$/;"	m	struct:_libc_fpstate	access:public
_libc_fpstate::cwd	ucontext.h	/^	uint16_t cwd;$/;"	m	struct:_libc_fpstate	access:public
_libc_fpstate::dataoff	ucontext.h	/^	unsigned long int dataoff;$/;"	m	struct:_libc_fpstate	access:public
_libc_fpstate::datasel	ucontext.h	/^	unsigned long int datasel;$/;"	m	struct:_libc_fpstate	access:public
_libc_fpstate::fop	ucontext.h	/^	uint16_t fop;$/;"	m	struct:_libc_fpstate	access:public
_libc_fpstate::fpregs	ucontext.h	/^	double fpregs[32];$/;"	m	struct:_libc_fpstate	access:public
_libc_fpstate::fpscr	ucontext.h	/^	double fpscr;$/;"	m	struct:_libc_fpstate	access:public
_libc_fpstate::ftw	ucontext.h	/^	uint16_t ftw;$/;"	m	struct:_libc_fpstate	access:public
_libc_fpstate::ipoff	ucontext.h	/^	unsigned long int ipoff;$/;"	m	struct:_libc_fpstate	access:public
_libc_fpstate::mxcr_mask	ucontext.h	/^	uint32_t mxcr_mask;$/;"	m	struct:_libc_fpstate	access:public
_libc_fpstate::mxcsr	ucontext.h	/^	uint32_t mxcsr;$/;"	m	struct:_libc_fpstate	access:public
_libc_fpstate::padding	ucontext.h	/^	uint32_t padding[24];$/;"	m	struct:_libc_fpstate	access:public
_libc_fpstate::rdp	ucontext.h	/^	uint64_t rdp;$/;"	m	struct:_libc_fpstate	access:public
_libc_fpstate::rip	ucontext.h	/^	uint64_t rip;$/;"	m	struct:_libc_fpstate	access:public
_libc_fpstate::status	ucontext.h	/^	unsigned long int status;$/;"	m	struct:_libc_fpstate	access:public
_libc_fpstate::sw	ucontext.h	/^	unsigned long int sw;$/;"	m	struct:_libc_fpstate	access:public
_libc_fpstate::swd	ucontext.h	/^	uint16_t swd;$/;"	m	struct:_libc_fpstate	access:public
_libc_fpstate::tag	ucontext.h	/^	unsigned long int tag;$/;"	m	struct:_libc_fpstate	access:public
_libc_fpxreg	ucontext.h	/^    struct _libc_fpxreg {$/;"	s
_libc_fpxreg::exponent	ucontext.h	/^	unsigned short exponent;$/;"	m	struct:_libc_fpxreg	access:public
_libc_fpxreg::padding	ucontext.h	/^	unsigned short padding[3];$/;"	m	struct:_libc_fpxreg	access:public
_libc_fpxreg::significand	ucontext.h	/^	unsigned short significand[4];$/;"	m	struct:_libc_fpxreg	access:public
_libc_vrstate	ucontext.h	/^    struct _libc_vrstate {$/;"	s
_libc_vrstate::__pad	ucontext.h	/^	unsigned int __pad[3];$/;"	m	struct:_libc_vrstate	access:public
_libc_vrstate::_pad	ucontext.h	/^	unsigned int _pad[2];$/;"	m	struct:_libc_vrstate	access:public
_libc_vrstate::vrregs	ucontext.h	/^	unsigned int vrregs[128];$/;"	m	struct:_libc_vrstate	access:public
_libc_vrstate::vrsave	ucontext.h	/^	unsigned int vrsave;$/;"	m	struct:_libc_vrstate	access:public
_libc_vrstate::vscr	ucontext.h	/^	unsigned int vscr;$/;"	m	struct:_libc_vrstate	access:public
_libc_vrstate::vscr	ucontext.h	/^	vscr_t vscr;$/;"	m	struct:_libc_vrstate	access:public
_libc_vscr	ucontext.h	/^    struct _libc_vscr {$/;"	s
_libc_vscr::__pad	ucontext.h	/^	int __pad[3];$/;"	m	struct:_libc_vscr	access:public
_libc_vscr::vscr_word	ucontext.h	/^	int vscr_word;$/;"	m	struct:_libc_vscr	access:public
_libc_xmmreg	ucontext.h	/^    struct _libc_xmmreg {$/;"	s
_libc_xmmreg::element	ucontext.h	/^	uint32_t element[4];$/;"	m	struct:_libc_xmmreg	access:public
_line	curses.h	/^	struct ldat *_line;	\/* the actual line data *\/$/;"	m	struct:_win_st	typeref:struct:_win_st::ldat	access:public
_line	ncurses.h	/^	struct ldat *_line;	\/* the actual line data *\/$/;"	m	struct:_win_st	typeref:struct:_win_st::ldat	access:public
_link	ucontext.h	/^		struct ucontext *_link;$/;"	m	struct:ucontext::__anon132::__anon133	typeref:struct:ucontext::__anon132::__anon133::ucontext	access:public
_longjmp	setjmp.h	/^    extern void _longjmp(jmp_buf, int);$/;"	p	signature:(jmp_buf, int)
_maxx	curses.h	/^	short _maxx;$/;"	m	struct:_win_st	access:public
_maxx	ncurses.h	/^	short _maxx;$/;"	m	struct:_win_st	access:public
_maxy	curses.h	/^	short _maxy;		\/* maximums of x and y, NOT window size *\/$/;"	m	struct:_win_st	access:public
_maxy	ncurses.h	/^	short _maxy;		\/* maximums of x and y, NOT window size *\/$/;"	m	struct:_win_st	access:public
_mc	ucontext.h	/^	    mcontext_t _mc;$/;"	m	union:ucontext::__anon132
_notimeout	curses.h	/^	bool _notimeout;	\/* no time out on function-key entry? *\/$/;"	m	struct:_win_st	access:public
_notimeout	ncurses.h	/^	bool _notimeout;	\/* no time out on function-key entry? *\/$/;"	m	struct:_win_st	access:public
_pad	curses.h	/^	struct pdat _pad;$/;"	m	struct:_win_st	typeref:struct:_win_st::pdat	access:public
_pad	ncurses.h	/^	struct pdat _pad;$/;"	m	struct:_win_st	typeref:struct:_win_st::pdat	access:public
_pad	signal.h	/^	    int _pad[SIGEV_PAD_SIZE];$/;"	m	union:sigevent::__anon20
_pad	signal.h	/^	    int _pad[SI_PAD_SIZE];$/;"	m	union:siginfo::__anon22
_pad	ucontext.h	/^		unsigned long int _pad[_SC_GR0_OFFSET \/ 8];$/;"	m	struct:ucontext::__anon132::__anon133	access:public
_pad	ucontext.h	/^	int _pad[2];$/;"	m	struct:_libc_fpstate	access:public
_pad	ucontext.h	/^	unsigned int _pad[2];$/;"	m	struct:_libc_vrstate	access:public
_pad_bottom	curses.h	/^	short _pad_bottom;$/;"	m	struct:pdat	access:public
_pad_bottom	ncurses.h	/^	short _pad_bottom;$/;"	m	struct:pdat	access:public
_pad_left	curses.h	/^	short _pad_left;$/;"	m	struct:pdat	access:public
_pad_left	ncurses.h	/^	short _pad_left;$/;"	m	struct:pdat	access:public
_pad_right	curses.h	/^	short _pad_right;$/;"	m	struct:pdat	access:public
_pad_right	ncurses.h	/^	short _pad_right;$/;"	m	struct:pdat	access:public
_pad_top	curses.h	/^	short _pad_top;$/;"	m	struct:pdat	access:public
_pad_top	ncurses.h	/^	short _pad_top;$/;"	m	struct:pdat	access:public
_pad_x	curses.h	/^	short _pad_x;$/;"	m	struct:pdat	access:public
_pad_x	ncurses.h	/^	short _pad_x;$/;"	m	struct:pdat	access:public
_pad_y	curses.h	/^	short _pad_y;$/;"	m	struct:pdat	access:public
_pad_y	ncurses.h	/^	short _pad_y;$/;"	m	struct:pdat	access:public
_parent	curses.h	/^	WINDOW *_parent;	\/* pointer to parent if a sub-window *\/$/;"	m	struct:_win_st	access:public
_parent	ncurses.h	/^	WINDOW *_parent;	\/* pointer to parent if a sub-window *\/$/;"	m	struct:_win_st	access:public
_parx	curses.h	/^	int _parx;		\/* x coordinate of this window in parent *\/$/;"	m	struct:_win_st	access:public
_parx	ncurses.h	/^	int _parx;		\/* x coordinate of this window in parent *\/$/;"	m	struct:_win_st	access:public
_pary	curses.h	/^	int _pary;		\/* y coordinate of this window in parent *\/$/;"	m	struct:_win_st	access:public
_pary	ncurses.h	/^	int _pary;		\/* y coordinate of this window in parent *\/$/;"	m	struct:_win_st	access:public
_pid	signal.h	/^		pid_t _pid;$/;"	m	struct:siginfo::__anon22::__anon23	access:public
_pid	signal.h	/^		pid_t _pid;$/;"	m	struct:siginfo::__anon22::__anon25	access:public
_pid	signal.h	/^		pid_t _pid;$/;"	m	struct:siginfo::__anon22::__anon26	access:public
_psw_t	signal.h	/^    } __attribute__ ((aligned(8))) _psw_t;$/;"	t	typeref:struct:__anon16
_psw_t	signal.h	/^    } __attribute__ ((aligned(8))) _psw_t;$/;"	t	typeref:struct:__anon17
_pthread_cleanup_buffer	pthread.h	/^    struct _pthread_cleanup_buffer {$/;"	s
_pthread_cleanup_buffer::__arg	pthread.h	/^	void *__arg;$/;"	m	struct:_pthread_cleanup_buffer	access:public
_pthread_cleanup_buffer::__canceltype	pthread.h	/^	int __canceltype;$/;"	m	struct:_pthread_cleanup_buffer	access:public
_pthread_cleanup_buffer::__prev	pthread.h	/^	struct _pthread_cleanup_buffer *__prev;$/;"	m	struct:_pthread_cleanup_buffer	typeref:struct:_pthread_cleanup_buffer::_pthread_cleanup_buffer	access:public
_pthread_cleanup_buffer::__routine	pthread.h	/^	void (*__routine) (void *);$/;"	m	struct:_pthread_cleanup_buffer	access:public
_pthread_cleanup_pop	pthread.h	/^    extern void _pthread_cleanup_pop(struct _pthread_cleanup_buffer *,$/;"	p	signature:(struct _pthread_cleanup_buffer *, int)
_pthread_cleanup_push	pthread.h	/^    extern void _pthread_cleanup_push(struct _pthread_cleanup_buffer *,$/;"	p	signature:(struct _pthread_cleanup_buffer *, void (*)(void *) , void *)
_pthread_descr	pthread.h	/^    typedef struct _pthread_descr_struct *_pthread_descr;$/;"	t	typeref:struct:_pthread_descr_struct
_pthread_fastlock	pthread.h	/^    struct _pthread_fastlock {$/;"	s
_pthread_fastlock::__spinlock	pthread.h	/^	int __spinlock;$/;"	m	struct:_pthread_fastlock	access:public
_pthread_fastlock::__status	pthread.h	/^	long int __status;$/;"	m	struct:_pthread_fastlock	access:public
_pthread_rwlock_t	pthread.h	/^    struct _pthread_rwlock_t {$/;"	s
_pthread_rwlock_t::__rw_kind	pthread.h	/^	int __rw_kind;		\/* Reader\/Writer preference selection *\/$/;"	m	struct:_pthread_rwlock_t	access:public
_pthread_rwlock_t::__rw_lock	pthread.h	/^	struct _pthread_fastlock __rw_lock;	\/* Lock to guarantee mutual exclusion *\/$/;"	m	struct:_pthread_rwlock_t	typeref:struct:_pthread_rwlock_t::_pthread_fastlock	access:public
_pthread_rwlock_t::__rw_pshared	pthread.h	/^	int __rw_pshared;	\/* Shared between processes or not *\/$/;"	m	struct:_pthread_rwlock_t	access:public
_pthread_rwlock_t::__rw_read_waiting	pthread.h	/^	_pthread_descr __rw_read_waiting;	\/* Threads waiting for reading *\/$/;"	m	struct:_pthread_rwlock_t	access:public
_pthread_rwlock_t::__rw_readers	pthread.h	/^	int __rw_readers;	\/* Number of readers *\/$/;"	m	struct:_pthread_rwlock_t	access:public
_pthread_rwlock_t::__rw_write_waiting	pthread.h	/^	_pthread_descr __rw_write_waiting;	\/* Threads waiting for writing *\/$/;"	m	struct:_pthread_rwlock_t	access:public
_pthread_rwlock_t::__rw_writer	pthread.h	/^	_pthread_descr __rw_writer;	\/* Identity of writer, or NULL if none *\/$/;"	m	struct:_pthread_rwlock_t	access:public
_regbottom	curses.h	/^	short _regbottom;	\/* bottom line of scrolling region *\/$/;"	m	struct:_win_st	access:public
_regbottom	ncurses.h	/^	short _regbottom;	\/* bottom line of scrolling region *\/$/;"	m	struct:_win_st	access:public
_regtop	curses.h	/^	short _regtop;		\/* top line of scrolling region *\/$/;"	m	struct:_win_st	access:public
_regtop	ncurses.h	/^	short _regtop;		\/* top line of scrolling region *\/$/;"	m	struct:_win_st	access:public
_rt	signal.h	/^	    } _rt;$/;"	m	union:siginfo::__anon22	typeref:struct:siginfo::__anon22::__anon25
_s390_fp_regs	signal.h	/^    } _s390_fp_regs;$/;"	t	typeref:struct:__anon37
_s390_fp_regs	signal.h	/^    } _s390_fp_regs;$/;"	t	typeref:struct:__anon38
_s390_regs_common	signal.h	/^    } _s390_regs_common;$/;"	t	typeref:struct:__anon18
_s390_regs_common	signal.h	/^    } _s390_regs_common;$/;"	t	typeref:struct:__anon19
_sa_handler	signal.h	/^	    sighandler_t _sa_handler;$/;"	m	union:sigaction::__anon30
_sa_handler	signal.h	/^	    sighandler_t _sa_handler;$/;"	m	union:sigaction::__anon31
_sa_handler	signal.h	/^	    sighandler_t _sa_handler;$/;"	m	union:sigaction::__anon32
_sa_handler	signal.h	/^	    sighandler_t _sa_handler;$/;"	m	union:sigaction::__anon33
_sa_handler	signal.h	/^	    sighandler_t _sa_handler;$/;"	m	union:sigaction::__anon34
_sa_handler	signal.h	/^	    sighandler_t _sa_handler;$/;"	m	union:sigaction::__anon35
_sa_handler	signal.h	/^	    sighandler_t _sa_handler;$/;"	m	union:sigaction::__anon36
_sa_sigaction	signal.h	/^	    void (*_sa_sigaction) (int, siginfo_t *, void *);$/;"	m	union:sigaction::__anon30
_sa_sigaction	signal.h	/^	    void (*_sa_sigaction) (int, siginfo_t *, void *);$/;"	m	union:sigaction::__anon31
_sa_sigaction	signal.h	/^	    void (*_sa_sigaction) (int, siginfo_t *, void *);$/;"	m	union:sigaction::__anon32
_sa_sigaction	signal.h	/^	    void (*_sa_sigaction) (int, siginfo_t *, void *);$/;"	m	union:sigaction::__anon33
_sa_sigaction	signal.h	/^	    void (*_sa_sigaction) (int, siginfo_t *, void *);$/;"	m	union:sigaction::__anon34
_sa_sigaction	signal.h	/^	    void (*_sa_sigaction) (int, siginfo_t *, void *);$/;"	m	union:sigaction::__anon35
_sa_sigaction	signal.h	/^	    void (*_sa_sigaction) (int, siginfo_t *, void *);$/;"	m	union:sigaction::__anon36
_scroll	curses.h	/^	bool _scroll;		\/* OK to scroll this window? *\/$/;"	m	struct:_win_st	access:public
_scroll	ncurses.h	/^	bool _scroll;		\/* OK to scroll this window? *\/$/;"	m	struct:_win_st	access:public
_setjmp	setjmp.h	/^    extern int _setjmp(jmp_buf);$/;"	p	signature:(jmp_buf)
_sifields	signal.h	/^	} _sifields;$/;"	m	struct:siginfo	typeref:union:siginfo::__anon22	access:public
_sigchld	signal.h	/^	    } _sigchld;$/;"	m	union:siginfo::__anon22	typeref:struct:siginfo::__anon22::__anon26
_sigev_thread	signal.h	/^	    } _sigev_thread;$/;"	m	union:sigevent::__anon20	typeref:struct:sigevent::__anon20::__anon21
_sigev_un	signal.h	/^	} _sigev_un;$/;"	m	struct:sigevent	typeref:union:sigevent::__anon20	access:public
_sigfault	signal.h	/^	    } _sigfault;$/;"	m	union:siginfo::__anon22	typeref:struct:siginfo::__anon22::__anon27
_sigpoll	signal.h	/^	    } _sigpoll;$/;"	m	union:siginfo::__anon22	typeref:struct:siginfo::__anon22::__anon28
_sigregs	signal.h	/^    } _sigregs;$/;"	t	typeref:struct:__anon39
_sigregs	signal.h	/^    } _sigregs;$/;"	t	typeref:struct:__anon40
_sigval	signal.h	/^		sigval_t _sigval;$/;"	m	struct:siginfo::__anon22::__anon25	access:public
_sm_class_basic	alsa/mixer_abst.h	/^    struct _sm_class_basic {$/;"	s
_sm_class_basic::ctl	alsa/mixer_abst.h	/^	snd_ctl_t *ctl;$/;"	m	struct:_sm_class_basic	access:public
_sm_class_basic::device	alsa/mixer_abst.h	/^	char *device;$/;"	m	struct:_sm_class_basic	access:public
_sm_class_basic::hctl	alsa/mixer_abst.h	/^	snd_hctl_t *hctl;$/;"	m	struct:_sm_class_basic	access:public
_sm_class_basic::info	alsa/mixer_abst.h	/^	snd_ctl_card_info_t *info;$/;"	m	struct:_sm_class_basic	access:public
_snd_config_type	alsa/conf.h	/^    typedef enum _snd_config_type {$/;"	g
_snd_ctl_elem_iface	alsa/control.h	/^    typedef enum _snd_ctl_elem_iface {$/;"	g
_snd_ctl_elem_type	alsa/control.h	/^    typedef enum _snd_ctl_elem_type {$/;"	g
_snd_ctl_event_type	alsa/control.h	/^    typedef enum _snd_ctl_event_type {$/;"	g
_snd_ctl_type	alsa/control.h	/^    typedef enum _snd_ctl_type {$/;"	g
_snd_hwdep_iface	alsa/hwdep.h	/^    typedef enum _snd_hwdep_iface {$/;"	g
_snd_hwdep_type	alsa/hwdep.h	/^    typedef enum _snd_hwdep_type {$/;"	g
_snd_mixer_elem_type	alsa/mixer.h	/^    typedef enum _snd_mixer_elem_type {$/;"	g
_snd_mixer_selem_channel_id	alsa/mixer.h	/^    typedef enum _snd_mixer_selem_channel_id {$/;"	g
_snd_pcm_access	alsa/pcm.h	/^    typedef enum _snd_pcm_access {$/;"	g
_snd_pcm_channel_area	alsa/pcm.h	/^    struct _snd_pcm_channel_area {$/;"	s
_snd_pcm_channel_area::addr	alsa/pcm.h	/^	void *addr;$/;"	m	struct:_snd_pcm_channel_area	access:public
_snd_pcm_channel_area::first	alsa/pcm.h	/^	unsigned int first;$/;"	m	struct:_snd_pcm_channel_area	access:public
_snd_pcm_channel_area::step	alsa/pcm.h	/^	unsigned int step;$/;"	m	struct:_snd_pcm_channel_area	access:public
_snd_pcm_class	alsa/pcm.h	/^    typedef enum _snd_pcm_class {$/;"	g
_snd_pcm_format	alsa/pcm.h	/^    typedef enum _snd_pcm_format {$/;"	g
_snd_pcm_hook_type	alsa/pcm.h	/^    typedef enum _snd_pcm_hook_type {$/;"	g
_snd_pcm_scope_ops	alsa/pcm.h	/^    struct _snd_pcm_scope_ops {$/;"	s
_snd_pcm_scope_ops::close	alsa/pcm.h	/^	void (*close) (void);$/;"	m	struct:_snd_pcm_scope_ops	access:public
_snd_pcm_scope_ops::disable	alsa/pcm.h	/^	void (*disable) (void);$/;"	m	struct:_snd_pcm_scope_ops	access:public
_snd_pcm_scope_ops::enable	alsa/pcm.h	/^	int (*enable) (void);$/;"	m	struct:_snd_pcm_scope_ops	access:public
_snd_pcm_scope_ops::reset	alsa/pcm.h	/^	void (*reset) (void);$/;"	m	struct:_snd_pcm_scope_ops	access:public
_snd_pcm_scope_ops::start	alsa/pcm.h	/^	void (*start) (void);$/;"	m	struct:_snd_pcm_scope_ops	access:public
_snd_pcm_scope_ops::stop	alsa/pcm.h	/^	void (*stop) (void);$/;"	m	struct:_snd_pcm_scope_ops	access:public
_snd_pcm_scope_ops::update	alsa/pcm.h	/^	void (*update) (void);$/;"	m	struct:_snd_pcm_scope_ops	access:public
_snd_pcm_start	alsa/pcm.h	/^    typedef enum _snd_pcm_start {$/;"	g
_snd_pcm_state	alsa/pcm.h	/^    typedef enum _snd_pcm_state {$/;"	g
_snd_pcm_stream	alsa/pcm.h	/^    typedef enum _snd_pcm_stream {$/;"	g
_snd_pcm_subclass	alsa/pcm.h	/^    typedef enum _snd_pcm_subclass {$/;"	g
_snd_pcm_subformat	alsa/pcm.h	/^    typedef enum _snd_pcm_subformat {$/;"	g
_snd_pcm_sync_id	alsa/pcm.h	/^    union _snd_pcm_sync_id {$/;"	u
_snd_pcm_sync_id::id	alsa/pcm.h	/^	unsigned char id[16];$/;"	m	union:_snd_pcm_sync_id
_snd_pcm_sync_id::id16	alsa/pcm.h	/^	short unsigned int id16[8];$/;"	m	union:_snd_pcm_sync_id
_snd_pcm_sync_id::id32	alsa/pcm.h	/^	unsigned int id32[4];$/;"	m	union:_snd_pcm_sync_id
_snd_pcm_tstamp	alsa/pcm.h	/^    typedef enum _snd_pcm_tstamp {$/;"	g
_snd_pcm_type	alsa/pcm.h	/^    typedef enum _snd_pcm_type {$/;"	g
_snd_pcm_xrun	alsa/pcm.h	/^    typedef enum _snd_pcm_xrun {$/;"	g
_snd_rawmidi_stream	alsa/rawmidi.h	/^    typedef enum _snd_rawmidi_stream {$/;"	g
_snd_rawmidi_type	alsa/rawmidi.h	/^    typedef enum _snd_rawmidi_type {$/;"	g
_snd_seq_type	alsa/seq.h	/^    typedef enum _snd_seq_type {$/;"	g
_snd_spcm_duplex_type	alsa/pcm.h	/^    typedef enum _snd_spcm_duplex_type {$/;"	g
_snd_spcm_latency	alsa/pcm.h	/^    typedef enum _snd_spcm_latency {$/;"	g
_snd_spcm_xrun_type	alsa/pcm.h	/^    typedef enum _snd_spcm_xrun_type {$/;"	g
_snd_timer_type	alsa/timer.h	/^    typedef enum _snd_timer_type {$/;"	g
_st	signal.h	/^	struct _fpreg _st[8];$/;"	m	struct:_fpstate	typeref:struct:_fpstate::_fpreg	access:public
_st	signal.h	/^	struct _fpxreg _st[8];$/;"	m	struct:_fpstate	typeref:struct:_fpstate::_fpxreg	access:public
_st	ucontext.h	/^	struct _libc_fpreg _st[8];$/;"	m	struct:_libc_fpstate	typeref:struct:_libc_fpstate::_libc_fpreg	access:public
_st	ucontext.h	/^	struct _libc_fpxreg _st[8];$/;"	m	struct:_libc_fpstate	typeref:struct:_libc_fpstate::_libc_fpxreg	access:public
_status	signal.h	/^		int _status;$/;"	m	struct:siginfo::__anon22::__anon26	access:public
_stime	signal.h	/^		clock_t _stime;$/;"	m	struct:siginfo::__anon22::__anon26	access:public
_sync	curses.h	/^	bool _sync;		\/* window in sync mode? *\/$/;"	m	struct:_win_st	access:public
_sync	ncurses.h	/^	bool _sync;		\/* window in sync mode? *\/$/;"	m	struct:_win_st	access:public
_timer	signal.h	/^	    } _timer;$/;"	m	union:siginfo::__anon22	typeref:struct:siginfo::__anon22::__anon24
_timer1	signal.h	/^		unsigned int _timer1;$/;"	m	struct:siginfo::__anon22::__anon24	access:public
_timer2	signal.h	/^		unsigned int _timer2;$/;"	m	struct:siginfo::__anon22::__anon24	access:public
_tolower	ctype.h	/^    extern int _tolower(int);$/;"	p	signature:(int)
_toupper	ctype.h	/^    extern int _toupper(int);$/;"	p	signature:(int)
_u	ucontext.h	/^	} _u;$/;"	m	struct:ucontext	typeref:union:ucontext::__anon132	access:public
_uc	ucontext.h	/^	    } _uc;$/;"	m	union:ucontext::__anon132	typeref:struct:ucontext::__anon132::__anon133
_uid	signal.h	/^		uid_t _uid;$/;"	m	struct:siginfo::__anon22::__anon23	access:public
_uid	signal.h	/^		uid_t _uid;$/;"	m	struct:siginfo::__anon22::__anon25	access:public
_uid	signal.h	/^		uid_t _uid;$/;"	m	struct:siginfo::__anon22::__anon26	access:public
_unused	signal.h	/^	long int _unused[4];$/;"	m	struct:sigcontext	access:public
_unused	signal.h	/^	unsigned long int _unused[4];$/;"	m	struct:sigcontext	access:public
_use_keypad	curses.h	/^	bool _use_keypad;	\/* process function keys into KEY_ symbols? *\/$/;"	m	struct:_win_st	access:public
_use_keypad	ncurses.h	/^	bool _use_keypad;	\/* process function keys into KEY_ symbols? *\/$/;"	m	struct:_win_st	access:public
_utime	signal.h	/^		clock_t _utime;$/;"	m	struct:siginfo::__anon22::__anon26	access:public
_win_st	curses.h	/^    struct _win_st {$/;"	s
_win_st	ncurses.h	/^    struct _win_st {$/;"	s
_win_st::_attrs	curses.h	/^	attr_t _attrs;		\/* current attribute for non-space character *\/$/;"	m	struct:_win_st	access:public
_win_st::_attrs	ncurses.h	/^	attr_t _attrs;		\/* current attribute for non-space character *\/$/;"	m	struct:_win_st	access:public
_win_st::_begx	curses.h	/^	short _begx;$/;"	m	struct:_win_st	access:public
_win_st::_begx	ncurses.h	/^	short _begx;$/;"	m	struct:_win_st	access:public
_win_st::_begy	curses.h	/^	short _begy;		\/* screen coords of upper-left-hand corner *\/$/;"	m	struct:_win_st	access:public
_win_st::_begy	ncurses.h	/^	short _begy;		\/* screen coords of upper-left-hand corner *\/$/;"	m	struct:_win_st	access:public
_win_st::_bkgd	curses.h	/^	chtype _bkgd;		\/* current background char\/attribute pair *\/$/;"	m	struct:_win_st	access:public
_win_st::_bkgd	ncurses.h	/^	chtype _bkgd;		\/* current background char\/attribute pair *\/$/;"	m	struct:_win_st	access:public
_win_st::_bkgrnd	curses.h	/^	cchar_t _bkgrnd;	\/* current background char\/attribute pair *\/$/;"	m	struct:_win_st	access:public
_win_st::_bkgrnd	ncurses.h	/^	cchar_t _bkgrnd;	\/* current background char\/attribute pair *\/$/;"	m	struct:_win_st	access:public
_win_st::_clear	curses.h	/^	bool _clear;		\/* consider all data in the window invalid? *\/$/;"	m	struct:_win_st	access:public
_win_st::_clear	ncurses.h	/^	bool _clear;		\/* consider all data in the window invalid? *\/$/;"	m	struct:_win_st	access:public
_win_st::_curx	curses.h	/^	short _curx;$/;"	m	struct:_win_st	access:public
_win_st::_curx	ncurses.h	/^	short _curx;$/;"	m	struct:_win_st	access:public
_win_st::_cury	curses.h	/^	short _cury;		\/* current cursor position *\/$/;"	m	struct:_win_st	access:public
_win_st::_cury	ncurses.h	/^	short _cury;		\/* current cursor position *\/$/;"	m	struct:_win_st	access:public
_win_st::_delay	curses.h	/^	int _delay;		\/* 0 = nodelay, <0 = blocking, >0 = delay *\/$/;"	m	struct:_win_st	access:public
_win_st::_delay	ncurses.h	/^	int _delay;		\/* 0 = nodelay, <0 = blocking, >0 = delay *\/$/;"	m	struct:_win_st	access:public
_win_st::_flags	curses.h	/^	short _flags;		\/* window state flags *\/$/;"	m	struct:_win_st	access:public
_win_st::_flags	ncurses.h	/^	short _flags;		\/* window state flags *\/$/;"	m	struct:_win_st	access:public
_win_st::_idcok	curses.h	/^	bool _idcok;		\/* OK to use insert\/delete char? *\/$/;"	m	struct:_win_st	access:public
_win_st::_idcok	ncurses.h	/^	bool _idcok;		\/* OK to use insert\/delete char? *\/$/;"	m	struct:_win_st	access:public
_win_st::_idlok	curses.h	/^	bool _idlok;		\/* OK to use insert\/delete line? *\/$/;"	m	struct:_win_st	access:public
_win_st::_idlok	ncurses.h	/^	bool _idlok;		\/* OK to use insert\/delete line? *\/$/;"	m	struct:_win_st	access:public
_win_st::_immed	curses.h	/^	bool _immed;		\/* window in immed mode? (not yet used) *\/$/;"	m	struct:_win_st	access:public
_win_st::_immed	ncurses.h	/^	bool _immed;		\/* window in immed mode? (not yet used) *\/$/;"	m	struct:_win_st	access:public
_win_st::_leaveok	curses.h	/^	bool _leaveok;		\/* OK to not reset cursor on exit? *\/$/;"	m	struct:_win_st	access:public
_win_st::_leaveok	ncurses.h	/^	bool _leaveok;		\/* OK to not reset cursor on exit? *\/$/;"	m	struct:_win_st	access:public
_win_st::_line	curses.h	/^	struct ldat *_line;	\/* the actual line data *\/$/;"	m	struct:_win_st	typeref:struct:_win_st::ldat	access:public
_win_st::_line	ncurses.h	/^	struct ldat *_line;	\/* the actual line data *\/$/;"	m	struct:_win_st	typeref:struct:_win_st::ldat	access:public
_win_st::_maxx	curses.h	/^	short _maxx;$/;"	m	struct:_win_st	access:public
_win_st::_maxx	ncurses.h	/^	short _maxx;$/;"	m	struct:_win_st	access:public
_win_st::_maxy	curses.h	/^	short _maxy;		\/* maximums of x and y, NOT window size *\/$/;"	m	struct:_win_st	access:public
_win_st::_maxy	ncurses.h	/^	short _maxy;		\/* maximums of x and y, NOT window size *\/$/;"	m	struct:_win_st	access:public
_win_st::_notimeout	curses.h	/^	bool _notimeout;	\/* no time out on function-key entry? *\/$/;"	m	struct:_win_st	access:public
_win_st::_notimeout	ncurses.h	/^	bool _notimeout;	\/* no time out on function-key entry? *\/$/;"	m	struct:_win_st	access:public
_win_st::_pad	curses.h	/^	struct pdat _pad;$/;"	m	struct:_win_st	typeref:struct:_win_st::pdat	access:public
_win_st::_pad	ncurses.h	/^	struct pdat _pad;$/;"	m	struct:_win_st	typeref:struct:_win_st::pdat	access:public
_win_st::_parent	curses.h	/^	WINDOW *_parent;	\/* pointer to parent if a sub-window *\/$/;"	m	struct:_win_st	access:public
_win_st::_parent	ncurses.h	/^	WINDOW *_parent;	\/* pointer to parent if a sub-window *\/$/;"	m	struct:_win_st	access:public
_win_st::_parx	curses.h	/^	int _parx;		\/* x coordinate of this window in parent *\/$/;"	m	struct:_win_st	access:public
_win_st::_parx	ncurses.h	/^	int _parx;		\/* x coordinate of this window in parent *\/$/;"	m	struct:_win_st	access:public
_win_st::_pary	curses.h	/^	int _pary;		\/* y coordinate of this window in parent *\/$/;"	m	struct:_win_st	access:public
_win_st::_pary	ncurses.h	/^	int _pary;		\/* y coordinate of this window in parent *\/$/;"	m	struct:_win_st	access:public
_win_st::_regbottom	curses.h	/^	short _regbottom;	\/* bottom line of scrolling region *\/$/;"	m	struct:_win_st	access:public
_win_st::_regbottom	ncurses.h	/^	short _regbottom;	\/* bottom line of scrolling region *\/$/;"	m	struct:_win_st	access:public
_win_st::_regtop	curses.h	/^	short _regtop;		\/* top line of scrolling region *\/$/;"	m	struct:_win_st	access:public
_win_st::_regtop	ncurses.h	/^	short _regtop;		\/* top line of scrolling region *\/$/;"	m	struct:_win_st	access:public
_win_st::_scroll	curses.h	/^	bool _scroll;		\/* OK to scroll this window? *\/$/;"	m	struct:_win_st	access:public
_win_st::_scroll	ncurses.h	/^	bool _scroll;		\/* OK to scroll this window? *\/$/;"	m	struct:_win_st	access:public
_win_st::_sync	curses.h	/^	bool _sync;		\/* window in sync mode? *\/$/;"	m	struct:_win_st	access:public
_win_st::_sync	ncurses.h	/^	bool _sync;		\/* window in sync mode? *\/$/;"	m	struct:_win_st	access:public
_win_st::_use_keypad	curses.h	/^	bool _use_keypad;	\/* process function keys into KEY_ symbols? *\/$/;"	m	struct:_win_st	access:public
_win_st::_use_keypad	ncurses.h	/^	bool _use_keypad;	\/* process function keys into KEY_ symbols? *\/$/;"	m	struct:_win_st	access:public
_win_st::_yoffset	curses.h	/^	short _yoffset;		\/* real begy is _begy + _yoffset *\/$/;"	m	struct:_win_st	access:public
_win_st::_yoffset	ncurses.h	/^	short _yoffset;		\/* real begy is _begy + _yoffset *\/$/;"	m	struct:_win_st	access:public
_xmm	signal.h	/^	struct _xmmreg _xmm[16];$/;"	m	struct:_fpstate	typeref:struct:_fpstate::_xmmreg	access:public
_xmm	signal.h	/^	struct _xmmreg _xmm[8];$/;"	m	struct:_fpstate	typeref:struct:_fpstate::_xmmreg	access:public
_xmm	ucontext.h	/^	struct _libc_xmmreg _xmm[16];$/;"	m	struct:_libc_fpstate	typeref:struct:_libc_fpstate::_libc_xmmreg	access:public
_xmmreg	signal.h	/^    struct _xmmreg {$/;"	s
_xmmreg::element	signal.h	/^	uint32_t element[4];$/;"	m	struct:_xmmreg	access:public
_xmmreg::element	signal.h	/^	unsigned long int element[4];$/;"	m	struct:_xmmreg	access:public
_yoffset	curses.h	/^	short _yoffset;		\/* real begy is _begy + _yoffset *\/$/;"	m	struct:_win_st	access:public
_yoffset	ncurses.h	/^	short _yoffset;		\/* real begy is _begy + _yoffset *\/$/;"	m	struct:_win_st	access:public
a64l	stdlib.h	/^    extern long int a64l(const char *);$/;"	p	signature:(const char *)
abcd	cups/cups.h	/^	md5_word_t abcd[4];$/;"	m	struct:md5_state_s	access:public
abort	stdlib.h	/^    extern void abort(void);$/;"	p	signature:(void)
abs	stdlib.h	/^    extern int abs(int);$/;"	p	signature:(int)
abstract	alsa/mixer.h	/^	enum snd_mixer_selem_regopt_abstract abstract;$/;"	m	struct:snd_mixer_selem_regopt	typeref:enum:snd_mixer_selem_regopt::snd_mixer_selem_regopt_abstract	access:public
accept	sys/socket.h	/^    extern int accept(int, struct sockaddr *, socklen_t *);$/;"	p	signature:(int, struct sockaddr *, socklen_t *)
accept_stat	rpc/rpc_msg.h	/^    enum accept_stat {$/;"	g
accepted_reply	rpc/rpc_msg.h	/^    struct accepted_reply {$/;"	s
accepted_reply::__anon134::AR_results	rpc/rpc_msg.h	/^	    } AR_results;$/;"	m	union:accepted_reply::__anon134	typeref:struct:accepted_reply::__anon134::__anon136
accepted_reply::__anon134::AR_versions	rpc/rpc_msg.h	/^	    } AR_versions;$/;"	m	union:accepted_reply::__anon134	typeref:struct:accepted_reply::__anon134::__anon135
accepted_reply::__anon134::__anon135::high	rpc/rpc_msg.h	/^		unsigned long int high;$/;"	m	struct:accepted_reply::__anon134::__anon135	access:public
accepted_reply::__anon134::__anon135::low	rpc/rpc_msg.h	/^		unsigned long int low;$/;"	m	struct:accepted_reply::__anon134::__anon135	access:public
accepted_reply::__anon134::__anon136::proc	rpc/rpc_msg.h	/^		xdrproc_t proc;$/;"	m	struct:accepted_reply::__anon134::__anon136	access:public
accepted_reply::__anon134::__anon136::where	rpc/rpc_msg.h	/^		caddr_t where;$/;"	m	struct:accepted_reply::__anon134::__anon136	access:public
accepted_reply::ar_stat	rpc/rpc_msg.h	/^	enum accept_stat ar_stat;$/;"	m	struct:accepted_reply	typeref:enum:accepted_reply::accept_stat	access:public
accepted_reply::ar_verf	rpc/rpc_msg.h	/^	struct opaque_auth ar_verf;$/;"	m	struct:accepted_reply	typeref:struct:accepted_reply::opaque_auth	access:public
accepted_reply::ru	rpc/rpc_msg.h	/^	} ru;$/;"	m	struct:accepted_reply	typeref:union:accepted_reply::__anon134	access:public
access	unistd.h	/^    extern int access(const char *, int);$/;"	p	signature:(const char *, int)
acct	unistd.h	/^    extern int acct(const char *);$/;"	p	signature:(const char *)
accurate_screens	cups/ppd.h	/^	int accurate_screens;$/;"	m	struct:__anon111	access:public
acos	math.h	/^    extern double acos(double);$/;"	p	signature:(double)
acosf	math.h	/^    extern float acosf(float);$/;"	p	signature:(float)
acosh	math.h	/^    extern double acosh(double);$/;"	p	signature:(double)
acoshf	math.h	/^    extern float acoshf(float);$/;"	p	signature:(float)
acoshl	math.h	/^    extern long double acoshl(long double);$/;"	p	signature:(long double)
acosl	math.h	/^    extern long double acosl(long double);$/;"	p	signature:(long double)
acpted_rply	rpc/rpc_msg.h	113;"	d
acrs	signal.h	/^	unsigned int acrs[16];$/;"	m	struct:__anon19	access:public
acrs	signal.h	/^	unsigned int acrs[__NUM_ACRS];$/;"	m	struct:__anon18	access:public
actime	utime.h	/^	time_t actime;$/;"	m	struct:utimbuf	access:public
activity	cups/cups.h	/^	time_t activity;$/;"	m	struct:__anon100	access:public
addch	curses.h	/^    extern int addch(const chtype);$/;"	p	signature:(const chtype)
addch	ncurses.h	/^    extern int addch(const chtype);$/;"	p	signature:(const chtype)
addchnstr	curses.h	/^    extern int addchnstr(const chtype *, int);$/;"	p	signature:(const chtype *, int)
addchnstr	ncurses.h	/^    extern int addchnstr(const chtype *, int);$/;"	p	signature:(const chtype *, int)
addchstr	curses.h	/^    extern int addchstr(const chtype *);$/;"	p	signature:(const chtype *)
addchstr	ncurses.h	/^    extern int addchstr(const chtype *);$/;"	p	signature:(const chtype *)
addnstr	curses.h	/^    extern int addnstr(const char *, int);$/;"	p	signature:(const char *, int)
addnstr	ncurses.h	/^    extern int addnstr(const char *, int);$/;"	p	signature:(const char *, int)
addr	alsa/pcm.h	/^	void *addr;$/;"	m	struct:_snd_pcm_channel_area	access:public
addr	alsa/seq_event.h	/^	    snd_seq_addr_t addr;	\/* address *\/$/;"	m	union:snd_seq_event::__anon13
addr	signal.h	/^	unsigned long int addr;$/;"	m	struct:__anon16	access:public
addr	signal.h	/^	unsigned long int addr;$/;"	m	struct:__anon17	access:public
addrinfo	netdb.h	/^    struct addrinfo {$/;"	s
addrinfo::ai_addr	netdb.h	/^	struct sockaddr *ai_addr;$/;"	m	struct:addrinfo	typeref:struct:addrinfo::sockaddr	access:public
addrinfo::ai_addrlen	netdb.h	/^	socklen_t ai_addrlen;$/;"	m	struct:addrinfo	access:public
addrinfo::ai_canonname	netdb.h	/^	char *ai_canonname;$/;"	m	struct:addrinfo	access:public
addrinfo::ai_family	netdb.h	/^	int ai_family;$/;"	m	struct:addrinfo	access:public
addrinfo::ai_flags	netdb.h	/^	int ai_flags;$/;"	m	struct:addrinfo	access:public
addrinfo::ai_next	netdb.h	/^	struct addrinfo *ai_next;$/;"	m	struct:addrinfo	typeref:struct:addrinfo::addrinfo	access:public
addrinfo::ai_protocol	netdb.h	/^	int ai_protocol;$/;"	m	struct:addrinfo	access:public
addrinfo::ai_socktype	netdb.h	/^	int ai_socktype;$/;"	m	struct:addrinfo	access:public
addstr	curses.h	/^    extern int addstr(const char *);$/;"	p	signature:(const char *)
addstr	ncurses.h	/^    extern int addstr(const char *);$/;"	p	signature:(const char *)
adjtime	sys/time.h	/^    extern int adjtime(const struct timeval *, struct timeval *);$/;"	p	signature:(const struct timeval *, struct timeval *)
adler	zlib.h	/^	uLong adler;		\/* adler32 value of the uncompressed data *\/$/;"	m	struct:z_stream_s	access:public
adler32	zlib.h	/^    extern uLong adler32(uLong, const Bytef *, uInt);$/;"	p	signature:(uLong, const Bytef *, uInt)
ah_cred	rpc/auth.h	/^	struct opaque_auth ah_cred;$/;"	m	struct:AUTH	typeref:struct:AUTH::opaque_auth	access:public
ah_destroy	rpc/auth.h	/^	void (*ah_destroy) (struct AUTH *);	\/* Rpc calls return an enum clnt_stat. *\/$/;"	m	struct:auth_ops	access:public
ah_key	rpc/auth.h	/^	union des_block ah_key;$/;"	m	struct:AUTH	typeref:union:AUTH::des_block	access:public
ah_marshal	rpc/auth.h	/^	int (*ah_marshal) (struct AUTH *, XDR *);	\/* nextverf & serialize *\/$/;"	m	struct:auth_ops	access:public
ah_nextverf	rpc/auth.h	/^	void (*ah_nextverf) (struct AUTH *);$/;"	m	struct:auth_ops	access:public
ah_ops	rpc/auth.h	/^	struct auth_ops *ah_ops;$/;"	m	struct:AUTH	typeref:struct:AUTH::auth_ops	access:public
ah_private	rpc/auth.h	/^	caddr_t ah_private;$/;"	m	struct:AUTH	access:public
ah_refresh	rpc/auth.h	/^	int (*ah_refresh) (struct AUTH *);	\/* refresh credentials *\/$/;"	m	struct:auth_ops	access:public
ah_validate	rpc/auth.h	/^	int (*ah_validate) (struct AUTH *, struct opaque_auth *);	\/* validate verifier *\/$/;"	m	struct:auth_ops	access:public
ah_verf	rpc/auth.h	/^	struct opaque_auth ah_verf;$/;"	m	struct:AUTH	typeref:struct:AUTH::opaque_auth	access:public
ai_addr	netdb.h	/^	struct sockaddr *ai_addr;$/;"	m	struct:addrinfo	typeref:struct:addrinfo::sockaddr	access:public
ai_addrlen	netdb.h	/^	socklen_t ai_addrlen;$/;"	m	struct:addrinfo	access:public
ai_canonname	netdb.h	/^	char *ai_canonname;$/;"	m	struct:addrinfo	access:public
ai_family	netdb.h	/^	int ai_family;$/;"	m	struct:addrinfo	access:public
ai_flags	netdb.h	/^	int ai_flags;$/;"	m	struct:addrinfo	access:public
ai_next	netdb.h	/^	struct addrinfo *ai_next;$/;"	m	struct:addrinfo	typeref:struct:addrinfo::addrinfo	access:public
ai_protocol	netdb.h	/^	int ai_protocol;$/;"	m	struct:addrinfo	access:public
ai_socktype	netdb.h	/^	int ai_socktype;$/;"	m	struct:addrinfo	access:public
alarm	unistd.h	/^    extern unsigned int alarm(unsigned int);$/;"	p	signature:(unsigned int)
alloc_func	zlib.h	/^    typedef voidpf(*alloc_func) (voidpf opaque, uInt items, uInt size);$/;"	t
allocated	regex.h	/^	unsigned long int allocated;$/;"	m	struct:re_pattern_buffer	access:public
appdata_ptr	security/pam_appl.h	/^	void *appdata_ptr;$/;"	m	struct:pam_conv	access:public
ar_results	rpc/rpc_msg.h	46;"	d
ar_stat	rpc/rpc_msg.h	/^	enum accept_stat ar_stat;$/;"	m	struct:accepted_reply	typeref:enum:accepted_reply::accept_stat	access:public
ar_verf	rpc/rpc_msg.h	/^	struct opaque_auth ar_verf;$/;"	m	struct:accepted_reply	typeref:struct:accepted_reply::opaque_auth	access:public
ar_vers	rpc/rpc_msg.h	47;"	d
aregs	ucontext.h	/^	unsigned int aregs[16];$/;"	m	struct:__anon127	access:public
aregs	ucontext.h	/^	unsigned int aregs[16];$/;"	m	struct:__anon128	access:public
arg1	math.h	/^	double arg1;$/;"	m	struct:exception	access:public
arg2	math.h	/^	double arg2;$/;"	m	struct:exception	access:public
asctime	time.h	/^    extern char *asctime(const struct tm *);$/;"	p	signature:(const struct tm *)
asctime_r	time.h	/^    extern char *asctime_r(const struct tm *, char *);$/;"	p	signature:(const struct tm *, char *)
asin	math.h	/^    extern double asin(double);$/;"	p	signature:(double)
asinf	math.h	/^    extern float asinf(float);$/;"	p	signature:(float)
asinh	math.h	/^    extern double asinh(double);$/;"	p	signature:(double)
asinhf	math.h	/^    extern float asinhf(float);$/;"	p	signature:(float)
asinhl	math.h	/^    extern long double asinhl(long double);$/;"	p	signature:(long double)
asinl	math.h	/^    extern long double asinl(long double);$/;"	p	signature:(long double)
asprintf	stdio.h	/^    extern int asprintf(char **, const char *, ...);$/;"	p	signature:(char **, const char *, ...)
assert	assert.h	11;"	d
atan	math.h	/^    extern double atan(double);$/;"	p	signature:(double)
atan2	math.h	/^    extern double atan2(double, double);$/;"	p	signature:(double, double)
atan2f	math.h	/^    extern float atan2f(float, float);$/;"	p	signature:(float, float)
atan2l	math.h	/^    extern long double atan2l(long double, long double);$/;"	p	signature:(long double, long double)
atanf	math.h	/^    extern float atanf(float);$/;"	p	signature:(float)
atanh	math.h	/^    extern double atanh(double);$/;"	p	signature:(double)
atanhf	math.h	/^    extern float atanhf(float);$/;"	p	signature:(float)
atanhl	math.h	/^    extern long double atanhl(long double);$/;"	p	signature:(long double)
atanl	math.h	/^    extern long double atanl(long double);$/;"	p	signature:(long double)
atexit	stdlib.h	/^    extern int atexit(void (*)(void)$/;"	p	signature:(void (*)(void) )
atof	stdlib.h	/^    extern double atof(const char *);$/;"	p	signature:(const char *)
atoi	stdlib.h	/^    extern int atoi(const char *);$/;"	p	signature:(const char *)
atol	stdlib.h	/^    extern long int atol(const char *);$/;"	p	signature:(const char *)
atoll	stdlib.h	/^    extern long long int atoll(const char *);$/;"	p	signature:(const char *)
atomic_read	alsa/iatomic.h	12;"	d
atomic_set	alsa/iatomic.h	11;"	d
attr	curses.h	/^	attr_t attr;$/;"	m	struct:__anon51	access:public
attr	ncurses.h	/^	attr_t attr;$/;"	m	struct:__anon121	access:public
attr_get	curses.h	/^    extern int attr_get(attr_t *, short *, void *);$/;"	p	signature:(attr_t *, short *, void *)
attr_get	ncurses.h	/^    extern int attr_get(attr_t *, short *, void *);$/;"	p	signature:(attr_t *, short *, void *)
attr_off	curses.h	/^    extern int attr_off(attr_t, void *);$/;"	p	signature:(attr_t, void *)
attr_off	ncurses.h	/^    extern int attr_off(attr_t, void *);$/;"	p	signature:(attr_t, void *)
attr_on	curses.h	/^    extern int attr_on(attr_t, void *);$/;"	p	signature:(attr_t, void *)
attr_on	ncurses.h	/^    extern int attr_on(attr_t, void *);$/;"	p	signature:(attr_t, void *)
attr_set	curses.h	/^    extern int attr_set(attr_t, short, void *);$/;"	p	signature:(attr_t, short, void *)
attr_set	ncurses.h	/^    extern int attr_set(attr_t, short, void *);$/;"	p	signature:(attr_t, short, void *)
attr_t	curses.h	/^    typedef chtype attr_t;$/;"	t
attr_t	ncurses.h	/^    typedef chtype attr_t;$/;"	t
attroff	curses.h	/^    extern int attroff(int);$/;"	p	signature:(int)
attroff	ncurses.h	/^    extern int attroff(int);$/;"	p	signature:(int)
attron	curses.h	/^    extern int attron(int);$/;"	p	signature:(int)
attron	ncurses.h	/^    extern int attron(int);$/;"	p	signature:(int)
attrs	cups/ppd.h	/^	ppd_attr_t **attrs;$/;"	m	struct:__anon111	access:public
attrset	curses.h	/^    extern int attrset(int);$/;"	p	signature:(int)
attrset	ncurses.h	/^    extern int attrset(int);$/;"	p	signature:(int)
auth_destroy	rpc/auth.h	14;"	d
auth_ops	rpc/auth.h	/^    struct auth_ops {$/;"	s
auth_ops::ah_destroy	rpc/auth.h	/^	void (*ah_destroy) (struct AUTH *);	\/* Rpc calls return an enum clnt_stat. *\/$/;"	m	struct:auth_ops	access:public
auth_ops::ah_marshal	rpc/auth.h	/^	int (*ah_marshal) (struct AUTH *, XDR *);	\/* nextverf & serialize *\/$/;"	m	struct:auth_ops	access:public
auth_ops::ah_nextverf	rpc/auth.h	/^	void (*ah_nextverf) (struct AUTH *);$/;"	m	struct:auth_ops	access:public
auth_ops::ah_refresh	rpc/auth.h	/^	int (*ah_refresh) (struct AUTH *);	\/* refresh credentials *\/$/;"	m	struct:auth_ops	access:public
auth_ops::ah_validate	rpc/auth.h	/^	int (*ah_validate) (struct AUTH *, struct opaque_auth *);	\/* validate verifier *\/$/;"	m	struct:auth_ops	access:public
auth_stat	rpc/auth.h	/^    enum auth_stat {$/;"	g
auth_type	cups/cups.h	/^	int auth_type;$/;"	m	struct:__anon100	access:public
authnone_create	rpc/auth.h	/^    extern struct AUTH *authnone_create(void);$/;"	p	signature:(void)
authstring	cups/cups.h	/^	char authstring[256];$/;"	m	struct:__anon100	access:public
avail_in	zlib.h	/^	uInt avail_in;		\/* number of bytes available at next_in *\/$/;"	m	struct:z_stream_s	access:public
avail_out	zlib.h	/^	uInt avail_out;		\/* remaining free space at next_out *\/$/;"	m	struct:z_stream_s	access:public
bank	alsa/seq_event.h	/^	short unsigned int bank;$/;"	m	struct:snd_seq_ev_sample	access:public
bank	alsa/seq_event.h	/^	short unsigned int bank;$/;"	m	struct:snd_seq_instr	access:public
base	alsa/seq_event.h	/^	unsigned int base;$/;"	m	struct:snd_seq_queue_skew	access:public
base	ftw.h	/^	int base;$/;"	m	struct:FTW	access:public
base_addr	net/if.h	/^	unsigned short base_addr;$/;"	m	struct:ifmap	access:public
basename	libgen.h	10;"	d
baudrate	curses.h	/^    extern int baudrate(void);$/;"	p	signature:(void)
baudrate	ncurses.h	/^    extern int baudrate(void);$/;"	p	signature:(void)
bcmp	strings.h	/^    extern int bcmp(const void *, const void *, size_t);$/;"	p	signature:(const void *, const void *, size_t)
bcopy	strings.h	/^    extern void bcopy(const void *, void *, size_t);$/;"	p	signature:(const void *, void *, size_t)
beep	curses.h	/^    extern int beep(void);$/;"	p	signature:(void)
beep	ncurses.h	/^    extern int beep(void);$/;"	p	signature:(void)
begin	alsa/iatomic.h	/^	unsigned int begin;$/;"	m	struct:__anon14	access:public
bind	sys/socket.h	/^    extern int bind(int, const struct sockaddr *, socklen_t);$/;"	p	signature:(int, const struct sockaddr *, socklen_t)
bind_textdomain_codeset	libintl.h	/^    extern char *bind_textdomain_codeset(const char *, const char *);$/;"	p	signature:(const char *, const char *)
bindresvport	netinet/in.h	/^    extern int bindresvport(int, struct sockaddr_in *);$/;"	p	signature:(int, struct sockaddr_in *)
bindtextdomain	libintl.h	/^    extern char *bindtextdomain(const char *, const char *);$/;"	p	signature:(const char *, const char *)
bits	signal.h	/^	    unsigned long int bits[2];$/;"	m	union:ia64_fpreg::__anon41
bkgd	curses.h	/^    extern int bkgd(chtype);$/;"	p	signature:(chtype)
bkgd	ncurses.h	/^    extern int bkgd(chtype);$/;"	p	signature:(chtype)
bkgdset	curses.h	/^    extern void bkgdset(chtype);$/;"	p	signature:(chtype)
bkgdset	ncurses.h	/^    extern void bkgdset(chtype);$/;"	p	signature:(chtype)
blkcnt64_t	sys/types.h	/^    typedef long long int blkcnt64_t;$/;"	t
blkcnt_t	sys/types.h	/^    typedef long int blkcnt_t;$/;"	t
blksize_t	sys/types.h	/^    typedef long int blksize_t;$/;"	t
blocking	cups/cups.h	/^	int blocking;$/;"	m	struct:__anon100	access:public
bool	curses.h	/^    typedef unsigned char bool;$/;"	t
bool	ncurses.h	/^    typedef unsigned char bool;$/;"	t
bool_t	rpc/types.h	/^    typedef int bool_t;$/;"	t
border	curses.h	/^    extern int border(chtype, chtype, chtype, chtype, chtype, chtype,$/;"	p	signature:(chtype, chtype, chtype, chtype, chtype, chtype, chtype, chtype)
border	ncurses.h	/^    extern int border(chtype, chtype, chtype, chtype, chtype, chtype,$/;"	p	signature:(chtype, chtype, chtype, chtype, chtype, chtype, chtype, chtype)
bottom	cups/ppd.h	/^	float bottom;$/;"	m	struct:__anon107	access:public
box	curses.h	/^    extern int box(WINDOW *, chtype, chtype);$/;"	p	signature:(WINDOW *, chtype, chtype)
box	ncurses.h	/^    extern int box(WINDOW *, chtype, chtype);$/;"	p	signature:(WINDOW *, chtype, chtype)
brk	unistd.h	/^    extern int brk(void *);$/;"	p	signature:(void *)
bsd_signal	signal.h	/^    extern sighandler_t bsd_signal(int, sighandler_t);$/;"	p	signature:(int, sighandler_t)
bsearch	stdlib.h	/^    extern void *bsearch(const void *, const void *, size_t, size_t,$/;"	p	signature:(const void *, const void *, size_t, size_t, __compar_fn_t)
btowc	wchar.h	/^    extern wint_t btowc(int);$/;"	p	signature:(int)
buf	cups/cups.h	/^	md5_byte_t buf[64];$/;"	m	struct:md5_state_s	access:public
buffer	cups/cups.h	/^	char buffer[2048];$/;"	m	struct:__anon100	access:public
buffer	regex.h	/^	unsigned char *buffer;$/;"	m	struct:re_pattern_buffer	access:public
bzero	strings.h	/^    extern void bzero(void *, size_t);$/;"	p	signature:(void *, size_t)
c	rpc/auth.h	/^	char c[8];$/;"	m	union:des_block
c_cc	termios.h	/^	cc_t c_cc[NCCS];	\/* control characters *\/$/;"	m	struct:termios	access:public
c_cflag	termios.h	/^	tcflag_t c_cflag;	\/* control mode flags *\/$/;"	m	struct:termios	access:public
c_iflag	termios.h	/^	tcflag_t c_iflag;	\/* input mode flags *\/$/;"	m	struct:termios	access:public
c_ispeed	termios.h	/^	speed_t c_ispeed;	\/* input speed *\/$/;"	m	struct:termios	access:public
c_lflag	termios.h	/^	tcflag_t c_lflag;	\/* local mode flags *\/$/;"	m	struct:termios	access:public
c_line	termios.h	/^	cc_t c_line;		\/* line discipline *\/$/;"	m	struct:termios	access:public
c_oflag	termios.h	/^	tcflag_t c_oflag;	\/* output mode flags *\/$/;"	m	struct:termios	access:public
c_ospeed	termios.h	/^	speed_t c_ospeed;	\/* output speed *\/$/;"	m	struct:termios	access:public
cabs	complex.h	/^    extern double cabs(double complex);$/;"	p	signature:(double complex)
cabsf	complex.h	/^    extern float cabsf(float complex);$/;"	p	signature:(float complex)
cabsl	complex.h	/^    extern long double cabsl(long double complex);$/;"	p	signature:(long double complex)
cacos	complex.h	/^    extern double complex cacos(double complex);$/;"	p	signature:(double complex)
cacosf	complex.h	/^    extern float complex cacosf(float complex);$/;"	p	signature:(float complex)
cacosh	complex.h	/^    extern double complex cacosh(double complex);$/;"	p	signature:(double complex)
cacoshf	complex.h	/^    extern float complex cacoshf(float complex);$/;"	p	signature:(float complex)
cacoshl	complex.h	/^    extern long double complex cacoshl(long double complex);$/;"	p	signature:(long double complex)
cacosl	complex.h	/^    extern long double complex cacosl(long double complex);$/;"	p	signature:(long double complex)
caddr_t	sys/types.h	/^    typedef char *caddr_t;$/;"	t
call_body	rpc/rpc_msg.h	/^    struct call_body {$/;"	s
call_body::cb_cred	rpc/rpc_msg.h	/^	struct opaque_auth cb_cred;$/;"	m	struct:call_body	typeref:struct:call_body::opaque_auth	access:public
call_body::cb_proc	rpc/rpc_msg.h	/^	unsigned long int cb_proc;$/;"	m	struct:call_body	access:public
call_body::cb_prog	rpc/rpc_msg.h	/^	unsigned long int cb_prog;$/;"	m	struct:call_body	access:public
call_body::cb_rpcvers	rpc/rpc_msg.h	/^	unsigned long int cb_rpcvers;	\/* must be equal to two *\/$/;"	m	struct:call_body	access:public
call_body::cb_verf	rpc/rpc_msg.h	/^	struct opaque_auth cb_verf;	\/* protocol specific - provided by client *\/$/;"	m	struct:call_body	typeref:struct:call_body::opaque_auth	access:public
call_body::cb_vers	rpc/rpc_msg.h	/^	unsigned long int cb_vers;$/;"	m	struct:call_body	access:public
callback	alsa/control_external.h	/^	const snd_ctl_ext_callback_t *callback;$/;"	m	struct:snd_ctl_ext	access:public
callback	alsa/pcm_extplug.h	/^	const snd_pcm_extplug_callback_t *callback;$/;"	m	struct:snd_pcm_extplug	access:public
calloc	stdlib.h	/^    extern void *calloc(size_t, size_t);$/;"	p	signature:(size_t, size_t)
can_be_null	regex.h	/^	unsigned int can_be_null:1;$/;"	m	struct:re_pattern_buffer	access:public
can_change_color	curses.h	/^    extern bool can_change_color(void);$/;"	p	signature:(void)
can_change_color	ncurses.h	/^    extern bool can_change_color(void);$/;"	p	signature:(void)
capture_pcm	alsa/mixer.h	/^	snd_pcm_t *capture_pcm;$/;"	m	struct:snd_mixer_selem_regopt	access:public
card_idx	alsa/control_external.h	/^	int card_idx;$/;"	m	struct:snd_ctl_ext	access:public
carg	complex.h	/^    extern double carg(double complex);$/;"	p	signature:(double complex)
cargf	complex.h	/^    extern float cargf(float complex);$/;"	p	signature:(float complex)
cargl	complex.h	/^    extern long double cargl(long double complex);$/;"	p	signature:(long double complex)
casin	complex.h	/^    extern double complex casin(double complex);$/;"	p	signature:(double complex)
casinf	complex.h	/^    extern float complex casinf(float complex);$/;"	p	signature:(float complex)
casinh	complex.h	/^    extern double complex casinh(double complex);$/;"	p	signature:(double complex)
casinhf	complex.h	/^    extern float complex casinhf(float complex);$/;"	p	signature:(float complex)
casinhl	complex.h	/^    extern long double complex casinhl(long double complex);$/;"	p	signature:(long double complex)
casinl	complex.h	/^    extern long double complex casinl(long double complex);$/;"	p	signature:(long double complex)
catan	complex.h	/^    extern double complex catan(double complex);$/;"	p	signature:(double complex)
catanf	complex.h	/^    extern float complex catanf(float complex);$/;"	p	signature:(float complex)
catanh	complex.h	/^    extern double complex catanh(double complex);$/;"	p	signature:(double complex)
catanhf	complex.h	/^    extern float complex catanhf(float complex);$/;"	p	signature:(float complex)
catanhl	complex.h	/^    extern long double complex catanhl(long double complex);$/;"	p	signature:(long double complex)
catanl	complex.h	/^    extern long double complex catanl(long double complex);$/;"	p	signature:(long double complex)
catclose	nl_types.h	/^    extern int catclose(nl_catd);$/;"	p	signature:(nl_catd)
catgets	nl_types.h	/^    extern char *catgets(nl_catd, int, int, const char *);$/;"	p	signature:(nl_catd, int, int, const char *)
catopen	nl_types.h	/^    extern nl_catd catopen(const char *, int);$/;"	p	signature:(const char *, int)
cb_cred	rpc/rpc_msg.h	/^	struct opaque_auth cb_cred;$/;"	m	struct:call_body	typeref:struct:call_body::opaque_auth	access:public
cb_proc	rpc/rpc_msg.h	/^	unsigned long int cb_proc;$/;"	m	struct:call_body	access:public
cb_prog	rpc/rpc_msg.h	/^	unsigned long int cb_prog;$/;"	m	struct:call_body	access:public
cb_rpcvers	rpc/rpc_msg.h	/^	unsigned long int cb_rpcvers;	\/* must be equal to two *\/$/;"	m	struct:call_body	access:public
cb_verf	rpc/rpc_msg.h	/^	struct opaque_auth cb_verf;	\/* protocol specific - provided by client *\/$/;"	m	struct:call_body	typeref:struct:call_body::opaque_auth	access:public
cb_vers	rpc/rpc_msg.h	/^	unsigned long int cb_vers;$/;"	m	struct:call_body	access:public
cbreak	curses.h	/^    extern int cbreak(void);$/;"	p	signature:(void)
cbreak	ncurses.h	/^    extern int cbreak(void);$/;"	p	signature:(void)
cbrt	math.h	/^    extern double cbrt(double);$/;"	p	signature:(double)
cbrtf	math.h	/^    extern float cbrtf(float);$/;"	p	signature:(float)
cbrtl	math.h	/^    extern long double cbrtl(long double);$/;"	p	signature:(long double)
cc_t	termios.h	/^    typedef unsigned char cc_t;$/;"	t
cchar_t	curses.h	/^    } cchar_t;$/;"	t	typeref:struct:__anon51
cchar_t	ncurses.h	/^    } cchar_t;$/;"	t	typeref:struct:__anon121
ccos	complex.h	/^    extern double complex ccos(double complex);$/;"	p	signature:(double complex)
ccosf	complex.h	/^    extern float complex ccosf(float complex);$/;"	p	signature:(float complex)
ccosh	complex.h	/^    extern double complex ccosh(double complex);$/;"	p	signature:(double complex)
ccoshf	complex.h	/^    extern float complex ccoshf(float complex);$/;"	p	signature:(float complex)
ccoshl	complex.h	/^    extern long double complex ccoshl(long double complex);$/;"	p	signature:(long double complex)
ccosl	complex.h	/^    extern long double complex ccosl(long double complex);$/;"	p	signature:(long double complex)
ccr	signal.h	/^	unsigned long int ccr;$/;"	m	struct:pt_regs	access:public
ceil	math.h	/^    extern double ceil(double);$/;"	p	signature:(double)
ceilf	math.h	/^    extern float ceilf(float);$/;"	p	signature:(float)
ceill	math.h	/^    extern long double ceill(long double);$/;"	p	signature:(long double)
cexp	complex.h	/^    extern double complex cexp(double complex);$/;"	p	signature:(double complex)
cexpf	complex.h	/^    extern float complex cexpf(float complex);$/;"	p	signature:(float complex)
cexpl	complex.h	/^    extern long double complex cexpl(long double complex);$/;"	p	signature:(long double complex)
cfgetispeed	termios.h	/^    extern speed_t cfgetispeed(const struct termios *);$/;"	p	signature:(const struct termios *)
cfgetospeed	termios.h	/^    extern speed_t cfgetospeed(const struct termios *);$/;"	p	signature:(const struct termios *)
cfmakeraw	termios.h	/^    extern void cfmakeraw(struct termios *);$/;"	p	signature:(struct termios *)
cfsetispeed	termios.h	/^    extern int cfsetispeed(struct termios *, speed_t);$/;"	p	signature:(struct termios *, speed_t)
cfsetospeed	termios.h	/^    extern int cfsetospeed(struct termios *, speed_t);$/;"	p	signature:(struct termios *, speed_t)
cfsetspeed	termios.h	/^    extern int cfsetspeed(struct termios *, speed_t);$/;"	p	signature:(struct termios *, speed_t)
cgid	sys/ipc.h	/^	gid_t cgid;$/;"	m	struct:ipc_perm	access:public
cgid	sys/ipc.h	/^	uid_t cgid;		\/* Creator's group ID. *\/$/;"	m	struct:ipc_perm	access:public
cgid	sys/ipc.h	/^	uid_t cgid;$/;"	m	struct:ipc_perm	access:public
channel	alsa/seq_event.h	/^	unsigned char channel;$/;"	m	struct:snd_seq_ev_ctrl	access:public
channel	alsa/seq_event.h	/^	unsigned char channel;$/;"	m	struct:snd_seq_ev_note	access:public
channel	alsa/seq_event.h	/^	unsigned char channel;$/;"	m	struct:snd_seq_ev_sample_control	access:public
channels	alsa/pcm_extplug.h	/^	unsigned int channels;$/;"	m	struct:snd_pcm_extplug	access:public
charf	zlib.h	/^    typedef char charf;$/;"	t
chars	curses.h	/^	wchar_t chars[5];$/;"	m	struct:__anon51	access:public
chars	ncurses.h	/^	wchar_t chars[5];$/;"	m	struct:__anon121	access:public
chdir	unistd.h	/^    extern int chdir(const char *);$/;"	p	signature:(const char *)
chgat	curses.h	/^    extern int chgat(int, attr_t, short, const void *);$/;"	p	signature:(int, attr_t, short, const void *)
chgat	ncurses.h	/^    extern int chgat(int, attr_t, short, const void *);$/;"	p	signature:(int, attr_t, short, const void *)
chmod	sys/stat.h	/^    extern int chmod(const char *, mode_t);$/;"	p	signature:(const char *, mode_t)
choice	cups/ppd.h	/^	char choice[41];$/;"	m	struct:__anon105	access:public
choice1	cups/ppd.h	/^	char choice1[41];$/;"	m	struct:__anon108	access:public
choice2	cups/ppd.h	/^	char choice2[41];$/;"	m	struct:__anon108	access:public
choices	cups/ppd.h	/^	ppd_choice_t *choices;$/;"	m	struct:__anon106	access:public
chown	unistd.h	/^    extern int chown(const char *, uid_t, gid_t);$/;"	p	signature:(const char *, uid_t, gid_t)
chroot	unistd.h	/^    extern int chroot(const char *);$/;"	p	signature:(const char *)
chtype	curses.h	/^    typedef unsigned long int chtype;$/;"	t
chtype	ncurses.h	/^    typedef unsigned long int chtype;$/;"	t
cimag	complex.h	/^    extern double cimag(double complex);$/;"	p	signature:(double complex)
cimagf	complex.h	/^    extern float cimagf(float complex);$/;"	p	signature:(float complex)
cimagl	complex.h	/^    extern long double cimagl(long double complex);$/;"	p	signature:(long double complex)
cl_abort	rpc/clnt.h	/^	void (*cl_abort) (void);$/;"	m	struct:clnt_ops	access:public
cl_auth	rpc/clnt.h	/^	struct AUTH *cl_auth;$/;"	m	struct:CLIENT	typeref:struct:CLIENT::AUTH	access:public
cl_call	rpc/clnt.h	/^	enum clnt_stat (*cl_call) (struct CLIENT *, u_long, xdrproc_t,$/;"	m	struct:clnt_ops	typeref:enum:clnt_ops::cl_call	access:public
cl_control	rpc/clnt.h	/^	 bool_t(*cl_control) (struct CLIENT *, int, char *);$/;"	m	struct:clnt_ops	access:public
cl_destroy	rpc/clnt.h	/^	void (*cl_destroy) (struct CLIENT *);$/;"	m	struct:clnt_ops	access:public
cl_freeres	rpc/clnt.h	/^	 bool_t(*cl_freeres) (struct CLIENT *, xdrproc_t, caddr_t);$/;"	m	struct:clnt_ops	access:public
cl_geterr	rpc/clnt.h	/^	void (*cl_geterr) (struct CLIENT *, struct rpc_err *);$/;"	m	struct:clnt_ops	access:public
cl_ops	rpc/clnt.h	/^	struct clnt_ops *cl_ops;$/;"	m	struct:CLIENT	typeref:struct:CLIENT::clnt_ops	access:public
cl_private	rpc/clnt.h	/^	caddr_t cl_private;$/;"	m	struct:CLIENT	access:public
clear	curses.h	/^    extern int clear(void);$/;"	p	signature:(void)
clear	ncurses.h	/^    extern int clear(void);$/;"	p	signature:(void)
clearerr	stdio.h	/^    extern void clearerr(FILE *);$/;"	p	signature:(FILE *)
clearok	curses.h	/^    extern int clearok(WINDOW *, bool);$/;"	p	signature:(WINDOW *, bool)
clearok	ncurses.h	/^    extern int clearok(WINDOW *, bool);$/;"	p	signature:(WINDOW *, bool)
client	alsa/seq_event.h	/^	unsigned char client;$/;"	m	struct:snd_seq_addr	access:public
clnt_abort	rpc/clnt.h	17;"	d
clnt_call	rpc/clnt.h	37;"	d
clnt_control	rpc/clnt.h	16;"	d
clnt_create	rpc/clnt.h	/^    extern struct CLIENT *clnt_create(const char *, const u_long,$/;"	p	signature:(const char *, const u_long, const u_long, const char *)
clnt_destroy	rpc/clnt.h	18;"	d
clnt_freeres	rpc/clnt.h	19;"	d
clnt_geterr	rpc/clnt.h	20;"	d
clnt_ops	rpc/clnt.h	/^    struct clnt_ops {$/;"	s
clnt_ops::cl_abort	rpc/clnt.h	/^	void (*cl_abort) (void);$/;"	m	struct:clnt_ops	access:public
clnt_ops::cl_call	rpc/clnt.h	/^	enum clnt_stat (*cl_call) (struct CLIENT *, u_long, xdrproc_t,$/;"	m	struct:clnt_ops	typeref:enum:clnt_ops::cl_call	access:public
clnt_ops::cl_control	rpc/clnt.h	/^	 bool_t(*cl_control) (struct CLIENT *, int, char *);$/;"	m	struct:clnt_ops	access:public
clnt_ops::cl_destroy	rpc/clnt.h	/^	void (*cl_destroy) (struct CLIENT *);$/;"	m	struct:clnt_ops	access:public
clnt_ops::cl_freeres	rpc/clnt.h	/^	 bool_t(*cl_freeres) (struct CLIENT *, xdrproc_t, caddr_t);$/;"	m	struct:clnt_ops	access:public
clnt_ops::cl_geterr	rpc/clnt.h	/^	void (*cl_geterr) (struct CLIENT *, struct rpc_err *);$/;"	m	struct:clnt_ops	access:public
clnt_pcreateerror	rpc/clnt.h	/^    extern void clnt_pcreateerror(const char *);$/;"	p	signature:(const char *)
clnt_perrno	rpc/clnt.h	/^    extern void clnt_perrno(enum clnt_stat);$/;"	p	signature:(enum clnt_stat)
clnt_perror	rpc/clnt.h	/^    extern void clnt_perror(struct CLIENT *, const char *);$/;"	p	signature:(struct CLIENT *, const char *)
clnt_spcreateerror	rpc/clnt.h	/^    extern char *clnt_spcreateerror(const char *);$/;"	p	signature:(const char *)
clnt_sperrno	rpc/clnt.h	/^    extern char *clnt_sperrno(enum clnt_stat);$/;"	p	signature:(enum clnt_stat)
clnt_sperror	rpc/clnt.h	/^    extern char *clnt_sperror(struct CLIENT *, const char *);$/;"	p	signature:(struct CLIENT *, const char *)
clnt_stat	rpc/clnt.h	/^    enum clnt_stat {$/;"	g
clock	time.h	/^    extern clock_t clock(void);$/;"	p	signature:(void)
clock_getcpuclockid	time.h	/^    extern int clock_getcpuclockid(pid_t, clockid_t *);$/;"	p	signature:(pid_t, clockid_t *)
clock_getres	time.h	/^    extern int clock_getres(clockid_t, struct timespec *);$/;"	p	signature:(clockid_t, struct timespec *)
clock_gettime	time.h	/^    extern int clock_gettime(clockid_t, struct timespec *);$/;"	p	signature:(clockid_t, struct timespec *)
clock_nanosleep	time.h	/^    extern int clock_nanosleep(clockid_t, int, const struct timespec *,$/;"	p	signature:(clockid_t, int, const struct timespec *, struct timespec *)
clock_settime	time.h	/^    extern int clock_settime(clockid_t, const struct timespec *);$/;"	p	signature:(clockid_t, const struct timespec *)
clock_t	sys/types.h	/^    typedef long int clock_t;$/;"	t
clockid_t	sys/types.h	/^    typedef int clockid_t;$/;"	t
clog	complex.h	/^    extern double complex clog(double complex);$/;"	p	signature:(double complex)
clog10	complex.h	/^    extern double complex clog10(double complex);$/;"	p	signature:(double complex)
clog10f	complex.h	/^    extern float complex clog10f(float complex);$/;"	p	signature:(float complex)
clog10l	complex.h	/^    extern long double complex clog10l(long double complex);$/;"	p	signature:(long double complex)
clogf	complex.h	/^    extern float complex clogf(float complex);$/;"	p	signature:(float complex)
clogl	complex.h	/^    extern long double complex clogl(long double complex);$/;"	p	signature:(long double complex)
close	alsa/control_external.h	/^	void (*close) (void);$/;"	m	struct:snd_ctl_ext_callback	access:public
close	alsa/pcm.h	/^	void (*close) (void);$/;"	m	struct:_snd_pcm_scope_ops	access:public
close	alsa/pcm_extplug.h	/^	int (*close) (void);$/;"	m	struct:snd_pcm_extplug_callback	access:public
close	unistd.h	/^    extern int close(int);$/;"	p	signature:(int)
closedir	dirent.h	/^    extern int closedir(DIR *);$/;"	p	signature:(DIR *)
closelog	syslog.h	/^    extern void closelog(void);$/;"	p	signature:(void)
clrtobot	curses.h	/^    extern int clrtobot(void);$/;"	p	signature:(void)
clrtobot	ncurses.h	/^    extern int clrtobot(void);$/;"	p	signature:(void)
clrtoeol	curses.h	/^    extern int clrtoeol(void);$/;"	p	signature:(void)
clrtoeol	ncurses.h	/^    extern int clrtoeol(void);$/;"	p	signature:(void)
cluster	alsa/seq_event.h	/^	    snd_seq_ev_cluster_t cluster;	\/* cluster number *\/$/;"	m	union:snd_seq_ev_sample_control::__anon12
cluster	alsa/seq_event.h	/^	snd_seq_instr_cluster_t cluster;$/;"	m	struct:snd_seq_ev_cluster	access:public
cluster	alsa/seq_event.h	/^	snd_seq_instr_cluster_t cluster;$/;"	m	struct:snd_seq_instr	access:public
cmsg_len	sys/socket.h	/^	size_t cmsg_len;$/;"	m	struct:cmsghdr	access:public
cmsg_level	sys/socket.h	/^	int cmsg_level;$/;"	m	struct:cmsghdr	access:public
cmsg_type	sys/socket.h	/^	int cmsg_type;$/;"	m	struct:cmsghdr	access:public
cmsghdr	sys/socket.h	/^    struct cmsghdr {$/;"	s
cmsghdr::cmsg_len	sys/socket.h	/^	size_t cmsg_len;$/;"	m	struct:cmsghdr	access:public
cmsghdr::cmsg_level	sys/socket.h	/^	int cmsg_level;$/;"	m	struct:cmsghdr	access:public
cmsghdr::cmsg_type	sys/socket.h	/^	int cmsg_type;$/;"	m	struct:cmsghdr	access:public
code	cups/ppd.h	/^	char *code;$/;"	m	struct:__anon105	access:public
color_content	curses.h	/^    extern int color_content(short, short *, short *, short *);$/;"	p	signature:(short, short *, short *, short *)
color_content	ncurses.h	/^    extern int color_content(short, short *, short *, short *);$/;"	p	signature:(short, short *, short *, short *)
color_device	cups/ppd.h	/^	int color_device;$/;"	m	struct:__anon111	access:public
color_set	curses.h	/^    extern int color_set(short, void *);$/;"	p	signature:(short, void *)
color_set	ncurses.h	/^    extern int color_set(short, void *);$/;"	p	signature:(short, void *)
colorspace	cups/ppd.h	/^	ppd_cs_t colorspace;$/;"	m	struct:__anon111	access:public
comment	alsa/conf.h	/^	char *comment;$/;"	m	struct:snd_devname	access:public
completed_time	cups/cups.h	/^	time_t completed_time;$/;"	m	struct:__anon98	access:public
complex	complex.h	11;"	d
compress	zlib.h	/^    extern int compress(Bytef *, uLongf *, const Bytef *, uLong);$/;"	p	signature:(Bytef *, uLongf *, const Bytef *, uLong)
compress2	zlib.h	/^    extern int compress2(Bytef *, uLongf *, const Bytef *, uLong, int);$/;"	p	signature:(Bytef *, uLongf *, const Bytef *, uLong, int)
compressBound	zlib.h	/^    extern uLong compressBound(uLong);$/;"	p	signature:(uLong)
conflicted	cups/ppd.h	/^	char conflicted;$/;"	m	struct:__anon106	access:public
confstr	unistd.h	/^    extern size_t confstr(int, char *, size_t);$/;"	p	signature:(int, char *, size_t)
conj	complex.h	/^    extern double complex conj(double complex);$/;"	p	signature:(double complex)
conjf	complex.h	/^    extern float complex conjf(float complex);$/;"	p	signature:(float complex)
conjl	complex.h	/^    extern long double complex conjl(long double complex);$/;"	p	signature:(long double complex)
connect	alsa/seq_event.h	/^	    snd_seq_connect_t connect;	\/* connect information *\/$/;"	m	union:snd_seq_event::__anon13
connect	sys/socket.h	/^    extern int connect(int, const struct sockaddr *, socklen_t);$/;"	p	signature:(int, const struct sockaddr *, socklen_t)
consts	cups/ppd.h	/^	ppd_const_t *consts;$/;"	m	struct:__anon111	access:public
contone_only	cups/ppd.h	/^	int contone_only;$/;"	m	struct:__anon111	access:public
control	alsa/seq_event.h	/^	    snd_seq_ev_ctrl_t control;	\/* MIDI control information *\/$/;"	m	union:snd_seq_event::__anon13
conv	security/pam_appl.h	/^	int (*conv) (int num_msg, const struct pam_message * *msg,$/;"	m	struct:pam_conv	access:public
cookie	cups/cups.h	/^	char *cookie;$/;"	m	struct:__anon100	access:public
copysign	math.h	/^    extern double copysign(double, double);$/;"	p	signature:(double, double)
copysignf	math.h	/^    extern float copysignf(float, float);$/;"	p	signature:(float, float)
copysignl	math.h	/^    extern long double copysignl(long double, long double);$/;"	p	signature:(long double, long double)
copywin	curses.h	/^    extern int copywin(const WINDOW *, WINDOW *, int, int, int, int, int,$/;"	p	signature:(const WINDOW *, WINDOW *, int, int, int, int, int, int, int)
copywin	ncurses.h	/^    extern int copywin(const WINDOW *, WINDOW *, int, int, int, int, int,$/;"	p	signature:(const WINDOW *, WINDOW *, int, int, int, int, int, int, int)
cos	math.h	/^    extern double cos(double);$/;"	p	signature:(double)
cosf	math.h	/^    extern float cosf(float);$/;"	p	signature:(float)
cosh	math.h	/^    extern double cosh(double);$/;"	p	signature:(double)
coshf	math.h	/^    extern float coshf(float);$/;"	p	signature:(float)
coshl	math.h	/^    extern long double coshl(long double);$/;"	p	signature:(long double)
cosl	math.h	/^    extern long double cosl(long double);$/;"	p	signature:(long double)
count	cups/cups.h	/^	md5_word_t count[2];$/;"	m	struct:md5_state_s	access:public
count	wctype.h	/^	int count;$/;"	m	struct:__anon52	access:public
cpow	complex.h	/^    extern double complex cpow(double complex, double complex);$/;"	p	signature:(double complex, double complex)
cpowf	complex.h	/^    extern float complex cpowf(float complex, float complex);$/;"	p	signature:(float complex, float complex)
cpowl	complex.h	/^    extern long double complex cpowl(long double complex,$/;"	p	signature:(long double complex, long double complex)
cproj	complex.h	/^    extern double complex cproj(double complex);$/;"	p	signature:(double complex)
cprojf	complex.h	/^    extern float complex cprojf(float complex);$/;"	p	signature:(float complex)
cprojl	complex.h	/^    extern long double complex cprojl(long double complex);$/;"	p	signature:(long double complex)
cr2	signal.h	/^	unsigned long int cr2;$/;"	m	struct:sigcontext	access:public
cr2	ucontext.h	/^	unsigned long int cr2;$/;"	m	struct:__anon126	access:public
crc32	zlib.h	/^    extern uLong crc32(uLong, const Bytef *, uInt);$/;"	p	signature:(uLong, const Bytef *, uInt)
creal	complex.h	/^    extern double creal(double complex);$/;"	p	signature:(double complex)
crealf	complex.h	/^    extern float crealf(float complex);$/;"	p	signature:(float complex)
creall	complex.h	/^    extern long double creall(long double complex);$/;"	p	signature:(long double complex)
creat	fcntl.h	/^    extern int creat(const char *, mode_t);$/;"	p	signature:(const char *, mode_t)
creat64	fcntl.h	/^    extern int creat64(const char *, mode_t);$/;"	p	signature:(const char *, mode_t)
creation_time	cups/cups.h	/^	time_t creation_time;$/;"	m	struct:__anon98	access:public
crypt	unistd.h	/^    extern char *crypt(const char *, const char *);$/;"	p	signature:(const char *, const char *)
cs	signal.h	/^	unsigned short cs;$/;"	m	struct:sigcontext	access:public
csin	complex.h	/^    extern double complex csin(double complex);$/;"	p	signature:(double complex)
csinf	complex.h	/^    extern float complex csinf(float complex);$/;"	p	signature:(float complex)
csinh	complex.h	/^    extern double complex csinh(double complex);$/;"	p	signature:(double complex)
csinhf	complex.h	/^    extern float complex csinhf(float complex);$/;"	p	signature:(float complex)
csinhl	complex.h	/^    extern long double complex csinhl(long double complex);$/;"	p	signature:(long double complex)
csinl	complex.h	/^    extern long double complex csinl(long double complex);$/;"	p	signature:(long double complex)
csqrt	complex.h	/^    extern double complex csqrt(double complex);$/;"	p	signature:(double complex)
csqrtf	complex.h	/^    extern float complex csqrtf(float complex);$/;"	p	signature:(float complex)
csqrtl	complex.h	/^    extern long double complex csqrtl(long double complex);$/;"	p	signature:(long double complex)
cssel	signal.h	/^	unsigned long int cssel;$/;"	m	struct:_fpstate	access:public
cssel	ucontext.h	/^	unsigned long int cssel;$/;"	m	struct:_libc_fpstate	access:public
ctan	complex.h	/^    extern double complex ctan(double complex);$/;"	p	signature:(double complex)
ctanf	complex.h	/^    extern float complex ctanf(float complex);$/;"	p	signature:(float complex)
ctanh	complex.h	/^    extern double complex ctanh(double complex);$/;"	p	signature:(double complex)
ctanhf	complex.h	/^    extern float complex ctanhf(float complex);$/;"	p	signature:(float complex)
ctanhl	complex.h	/^    extern long double complex ctanhl(long double complex);$/;"	p	signature:(long double complex)
ctanl	complex.h	/^    extern long double complex ctanl(long double complex);$/;"	p	signature:(long double complex)
ctermid	unistd.h	/^    extern char *ctermid(char *);$/;"	p	signature:(char *)
ctime	time.h	/^    extern char *ctime(const time_t *);$/;"	p	signature:(const time_t *)
ctime_r	time.h	/^    extern char *ctime_r(const time_t *, char *);$/;"	p	signature:(const time_t *, char *)
ctl	alsa/mixer_abst.h	/^	snd_ctl_t *ctl;$/;"	m	struct:_sm_class_basic	access:public
ctr	signal.h	/^	unsigned long int ctr;$/;"	m	struct:pt_regs	access:public
cuid	sys/ipc.h	/^	uid_t cuid;		\/* Creator's user ID. *\/$/;"	m	struct:ipc_perm	access:public
cuid	sys/ipc.h	/^	uid_t cuid;$/;"	m	struct:ipc_perm	access:public
cupsAddDest	cups/cups.h	/^    extern int cupsAddDest(const char *, const char *, int,$/;"	p	signature:(const char *, const char *, int, cups_dest_t * *)
cupsAddOption	cups/cups.h	/^    extern int cupsAddOption(const char *, const char *, int,$/;"	p	signature:(const char *, const char *, int, cups_option_t * *)
cupsBitsPerColor	cups/raster.h	/^	unsigned int cupsBitsPerColor;$/;"	m	struct:__anon87	access:public
cupsBitsPerPixel	cups/raster.h	/^	unsigned int cupsBitsPerPixel;$/;"	m	struct:__anon87	access:public
cupsBytesPerLine	cups/raster.h	/^	unsigned int cupsBytesPerLine;$/;"	m	struct:__anon87	access:public
cupsCancelJob	cups/cups.h	/^    extern int cupsCancelJob(const char *, int);$/;"	p	signature:(const char *, int)
cupsColorOrder	cups/raster.h	/^	cups_order_t cupsColorOrder;$/;"	m	struct:__anon87	access:public
cupsColorSpace	cups/raster.h	/^	cups_cspace_t cupsColorSpace;$/;"	m	struct:__anon87	access:public
cupsCompression	cups/raster.h	/^	unsigned int cupsCompression;$/;"	m	struct:__anon87	access:public
cupsEncryption	cups/cups.h	/^    extern http_encryption_t cupsEncryption(void);$/;"	p	signature:(void)
cupsFreeDests	cups/cups.h	/^    extern void cupsFreeDests(int, cups_dest_t *);$/;"	p	signature:(int, cups_dest_t *)
cupsFreeJobs	cups/cups.h	/^    extern void cupsFreeJobs(int, cups_job_t *);$/;"	p	signature:(int, cups_job_t *)
cupsFreeOptions	cups/cups.h	/^    extern void cupsFreeOptions(int, cups_option_t *);$/;"	p	signature:(int, cups_option_t *)
cupsGetDefault	cups/cups.h	/^    extern const char *cupsGetDefault(void);$/;"	p	signature:(void)
cupsGetDest	cups/cups.h	/^    extern cups_dest_t *cupsGetDest(const char *, const char *, int,$/;"	p	signature:(const char *, const char *, int, cups_dest_t *)
cupsGetDests	cups/cups.h	/^    extern int cupsGetDests(cups_dest_t * *);$/;"	p	signature:(cups_dest_t * *)
cupsGetJobs	cups/cups.h	/^    extern int cupsGetJobs(cups_job_t * *, const char *, int, int);$/;"	p	signature:(cups_job_t * *, const char *, int, int)
cupsGetOption	cups/cups.h	/^    extern const char *cupsGetOption(const char *, int, cups_option_t *);$/;"	p	signature:(const char *, int, cups_option_t *)
cupsGetPPD	cups/cups.h	/^    extern const char *cupsGetPPD(const char *);$/;"	p	signature:(const char *)
cupsGetPassword	cups/cups.h	/^    extern const char *cupsGetPassword(const char *);$/;"	p	signature:(const char *)
cupsHeight	cups/raster.h	/^	unsigned int cupsHeight;$/;"	m	struct:__anon87	access:public
cupsLangDefault	cups/cups.h	21;"	d
cupsLangEncoding	cups/cups.h	/^    extern char *cupsLangEncoding(cups_lang_t *);$/;"	p	signature:(cups_lang_t *)
cupsLangFlush	cups/cups.h	/^    extern void cupsLangFlush(void);$/;"	p	signature:(void)
cupsLangFree	cups/cups.h	/^    extern void cupsLangFree(cups_lang_t *);$/;"	p	signature:(cups_lang_t *)
cupsLangGet	cups/cups.h	/^    extern cups_lang_t *cupsLangGet(const char *);$/;"	p	signature:(const char *)
cupsLastError	cups/cups.h	/^    extern ipp_status_t cupsLastError(void);$/;"	p	signature:(void)
cupsMarkOptions	cups/cups.h	/^    extern int cupsMarkOptions(ppd_file_t *, int, cups_option_t *);$/;"	p	signature:(ppd_file_t *, int, cups_option_t *)
cupsMediaType	cups/raster.h	/^	unsigned int cupsMediaType;$/;"	m	struct:__anon87	access:public
cupsParseOptions	cups/cups.h	/^    extern int cupsParseOptions(const char *, int, cups_option_t * *);$/;"	p	signature:(const char *, int, cups_option_t * *)
cupsPrintFile	cups/cups.h	/^    extern int cupsPrintFile(const char *, const char *, const char *, int,$/;"	p	signature:(const char *, const char *, const char *, int, cups_option_t *)
cupsPrintFiles	cups/cups.h	/^    extern int cupsPrintFiles(const char *, int, const char **,$/;"	p	signature:(const char *, int, const char **, const char *, int, cups_option_t *)
cupsRasterClose	cups/raster.h	/^    extern void cupsRasterClose(cups_raster_t *);$/;"	p	signature:(cups_raster_t *)
cupsRasterOpen	cups/raster.h	/^    extern cups_raster_t *cupsRasterOpen(int, cups_mode_t);$/;"	p	signature:(int, cups_mode_t)
cupsRasterReadHeader	cups/raster.h	/^    extern unsigned int cupsRasterReadHeader(cups_raster_t *,$/;"	p	signature:(cups_raster_t *, cups_page_header_t *)
cupsRasterReadPixels	cups/raster.h	/^    extern unsigned int cupsRasterReadPixels(cups_raster_t *,$/;"	p	signature:(cups_raster_t *, unsigned char *, unsigned int)
cupsRasterWriteHeader	cups/raster.h	/^    extern unsigned int cupsRasterWriteHeader(cups_raster_t *,$/;"	p	signature:(cups_raster_t *, cups_page_header_t *)
cupsRasterWritePixels	cups/raster.h	/^    extern unsigned int cupsRasterWritePixels(cups_raster_t *,$/;"	p	signature:(cups_raster_t *, unsigned char *, unsigned int)
cupsRowCount	cups/raster.h	/^	unsigned int cupsRowCount;$/;"	m	struct:__anon87	access:public
cupsRowFeed	cups/raster.h	/^	unsigned int cupsRowFeed;$/;"	m	struct:__anon87	access:public
cupsRowStep	cups/raster.h	/^	unsigned int cupsRowStep;$/;"	m	struct:__anon87	access:public
cupsServer	cups/cups.h	/^    extern const char *cupsServer(void);$/;"	p	signature:(void)
cupsSetDests	cups/cups.h	/^    extern void cupsSetDests(int, cups_dest_t *);$/;"	p	signature:(int, cups_dest_t *)
cupsSetEncryption	cups/cups.h	/^    extern void cupsSetEncryption(http_encryption_t);$/;"	p	signature:(http_encryption_t)
cupsSetPasswordCB	cups/cups.h	/^    extern void cupsSetPasswordCB(const char *(*)(const char *)$/;"	p	signature:(const char *(*)(const char *) )
cupsSetServer	cups/cups.h	/^    extern void cupsSetServer(const char *);$/;"	p	signature:(const char *)
cupsSetUser	cups/cups.h	/^    extern void cupsSetUser(const char *);$/;"	p	signature:(const char *)
cupsTempFd	cups/cups.h	/^    extern int cupsTempFd(char *, int);$/;"	p	signature:(char *, int)
cupsUser	cups/cups.h	/^    extern const char *cupsUser(void);$/;"	p	signature:(void)
cupsWidth	cups/raster.h	/^	unsigned int cupsWidth;$/;"	m	struct:__anon87	access:public
cups_adv_t	cups/raster.h	/^    } cups_adv_t;$/;"	t	typeref:enum:__anon79
cups_bool_t	cups/raster.h	/^    } cups_bool_t;$/;"	t	typeref:enum:__anon80
cups_cspace_t	cups/raster.h	/^    } cups_cspace_t;$/;"	t	typeref:enum:__anon86
cups_cut_t	cups/raster.h	/^    } cups_cut_t;$/;"	t	typeref:enum:__anon81
cups_dest_t	cups/cups.h	/^    } cups_dest_t;$/;"	t	typeref:struct:__anon91
cups_edge_t	cups/raster.h	/^    } cups_edge_t;$/;"	t	typeref:enum:__anon83
cups_encoding_t	cups/cups.h	/^    } cups_encoding_t;$/;"	t	typeref:enum:__anon88
cups_job_t	cups/cups.h	/^    } cups_job_t;$/;"	t	typeref:struct:__anon98
cups_jog_t	cups/raster.h	/^    } cups_jog_t;$/;"	t	typeref:enum:__anon82
cups_lang_str	cups/cups.h	/^    struct cups_lang_str {$/;"	s
cups_lang_str::encoding	cups/cups.h	/^	cups_encoding_t encoding;$/;"	m	struct:cups_lang_str	access:public
cups_lang_str::language	cups/cups.h	/^	char language[16];$/;"	m	struct:cups_lang_str	access:public
cups_lang_str::messages	cups/cups.h	/^	char *messages[506];$/;"	m	struct:cups_lang_str	access:public
cups_lang_str::next	cups/cups.h	/^	struct cups_lang_str *next;$/;"	m	struct:cups_lang_str	typeref:struct:cups_lang_str::cups_lang_str	access:public
cups_lang_str::used	cups/cups.h	/^	int used;$/;"	m	struct:cups_lang_str	access:public
cups_lang_t	cups/cups.h	/^    typedef struct cups_lang_str cups_lang_t;$/;"	t	typeref:struct:cups_lang_str
cups_mode_t	cups/raster.h	/^    } cups_mode_t;$/;"	t	typeref:enum:__anon77
cups_option_t	cups/cups.h	/^    } cups_option_t;$/;"	t	typeref:struct:__anon90
cups_order_t	cups/raster.h	/^    } cups_order_t;$/;"	t	typeref:enum:__anon85
cups_orient_t	cups/raster.h	/^    } cups_orient_t;$/;"	t	typeref:enum:__anon84
cups_page_header_t	cups/raster.h	/^    } cups_page_header_t;$/;"	t	typeref:struct:__anon87
cups_raster_t	cups/raster.h	/^    } cups_raster_t;$/;"	t	typeref:struct:__anon78
cur_attr	cups/ppd.h	/^	int cur_attr;$/;"	m	struct:__anon111	access:public
currency_symbol	locale.h	/^	char *currency_symbol;$/;"	m	struct:lconv	access:public
curs_set	curses.h	/^    extern int curs_set(int);$/;"	p	signature:(int)
curs_set	ncurses.h	/^    extern int curs_set(int);$/;"	p	signature:(int)
cuserid	unistd.h	/^    extern char *cuserid(char *);$/;"	p	signature:(char *)
custom_margins	cups/ppd.h	/^	float custom_margins[4];$/;"	m	struct:__anon111	access:public
custom_max	cups/ppd.h	/^	float custom_max[2];$/;"	m	struct:__anon111	access:public
custom_min	cups/ppd.h	/^	float custom_min[2];$/;"	m	struct:__anon111	access:public
cw	signal.h	/^	unsigned long int cw;$/;"	m	struct:_fpstate	access:public
cw	ucontext.h	/^	unsigned long int cw;$/;"	m	struct:_libc_fpstate	access:public
cwd	signal.h	/^	uint16_t cwd;$/;"	m	struct:_fpstate	access:public
cwd	ucontext.h	/^	uint16_t cwd;$/;"	m	struct:_libc_fpstate	access:public
d	alsa/seq_event.h	/^	unsigned char d[12];$/;"	m	struct:snd_seq_ev_raw8	access:public
d	alsa/seq_event.h	/^	unsigned int d[3];$/;"	m	struct:snd_seq_ev_raw32	access:public
d	ucontext.h	/^	double d;$/;"	m	union:__anon122
d	ucontext.h	/^	double d;$/;"	m	union:__anon123
d32	alsa/seq_event.h	/^	    unsigned int d32[2];	\/* any data *\/$/;"	m	union:snd_seq_ev_queue_control::__anon11
d8	alsa/seq_event.h	/^	    unsigned char d8[8];	\/* any data *\/$/;"	m	union:snd_seq_ev_queue_control::__anon11
d_ino	dirent.h	/^	long int d_ino;$/;"	m	struct:dirent	access:public
d_ino	dirent.h	/^	uint64_t d_ino;$/;"	m	struct:dirent64	access:public
d_name	dirent.h	/^	char d_name[256];$/;"	m	struct:dirent	access:public
d_name	dirent.h	/^	char d_name[256];$/;"	m	struct:dirent64	access:public
d_off	dirent.h	/^	int64_t d_off;$/;"	m	struct:dirent64	access:public
d_off	dirent.h	/^	off_t d_off;$/;"	m	struct:dirent	access:public
d_reclen	dirent.h	/^	unsigned short d_reclen;$/;"	m	struct:dirent	access:public
d_reclen	dirent.h	/^	unsigned short d_reclen;$/;"	m	struct:dirent64	access:public
d_type	dirent.h	/^	unsigned char d_type;$/;"	m	struct:dirent	access:public
d_type	dirent.h	/^	unsigned char d_type;$/;"	m	struct:dirent64	access:public
daemon	unistd.h	/^    extern int daemon(int, int);$/;"	p	signature:(int, int)
dar	signal.h	/^	unsigned long int dar;	\/* Fault registers *\/$/;"	m	struct:pt_regs	access:public
dar	signal.h	/^	unsigned long int dar;$/;"	m	struct:pt_regs	access:public
data	alsa/seq_event.h	/^	} data;$/;"	m	struct:snd_seq_event	typeref:union:snd_seq_event::__anon13	access:public
data	cups/cups.h	/^	char *data;$/;"	m	struct:__anon100	access:public
data	search.h	/^	void *data;$/;"	m	struct:entry	access:public
data_encoding	cups/cups.h	/^	http_encoding_t data_encoding;$/;"	m	struct:__anon100	access:public
data_remaining	cups/cups.h	/^	int data_remaining;$/;"	m	struct:__anon100	access:public
data_type	zlib.h	/^	int data_type;		\/* best guess about the data type: ascii or binary *\/$/;"	m	struct:z_stream_s	access:public
dataoff	signal.h	/^	unsigned long int dataoff;$/;"	m	struct:_fpstate	access:public
dataoff	ucontext.h	/^	unsigned long int dataoff;$/;"	m	struct:_libc_fpstate	access:public
datasel	signal.h	/^	unsigned long int datasel;$/;"	m	struct:_fpstate	access:public
datasel	ucontext.h	/^	unsigned long int datasel;$/;"	m	struct:_libc_fpstate	access:public
dcgettext	libintl.h	/^    extern char *dcgettext(const char *, const char *, int);$/;"	p	signature:(const char *, const char *, int)
dcngettext	libintl.h	/^    extern char *dcngettext(const char *, const char *, const char *,$/;"	p	signature:(const char *, const char *, const char *, unsigned long int, int)
decimal_point	locale.h	/^	char *decimal_point;$/;"	m	struct:lconv	access:public
def_prog_mode	curses.h	/^    extern int def_prog_mode(void);$/;"	p	signature:(void)
def_prog_mode	ncurses.h	/^    extern int def_prog_mode(void);$/;"	p	signature:(void)
def_shell_mode	curses.h	/^    extern int def_shell_mode(void);$/;"	p	signature:(void)
def_shell_mode	ncurses.h	/^    extern int def_shell_mode(void);$/;"	p	signature:(void)
defchoice	cups/ppd.h	/^	char defchoice[41];$/;"	m	struct:__anon106	access:public
deflate	zlib.h	/^    extern int deflate(z_streamp, int);$/;"	p	signature:(z_streamp, int)
deflateBound	zlib.h	/^    extern uLong deflateBound(z_streamp, uLong);$/;"	p	signature:(z_streamp, uLong)
deflateCopy	zlib.h	/^    extern int deflateCopy(z_streamp, z_streamp);$/;"	p	signature:(z_streamp, z_streamp)
deflateEnd	zlib.h	/^    extern int deflateEnd(z_streamp);$/;"	p	signature:(z_streamp)
deflateInit	zlib.h	18;"	d
deflateInit2	zlib.h	16;"	d
deflateInit2_	zlib.h	/^    extern int deflateInit2_(z_streamp, int, int, int, int, int,$/;"	p	signature:(z_streamp, int, int, int, int, int, const char *, int)
deflateInit_	zlib.h	/^    extern int deflateInit_(z_streamp, int, const char *, int);$/;"	p	signature:(z_streamp, int, const char *, int)
deflateParams	zlib.h	/^    extern int deflateParams(z_streamp, int, int);$/;"	p	signature:(z_streamp, int, int)
deflateReset	zlib.h	/^    extern int deflateReset(z_streamp);$/;"	p	signature:(z_streamp)
deflateSetDictionary	zlib.h	/^    extern int deflateSetDictionary(z_streamp, const Bytef *, uInt);$/;"	p	signature:(z_streamp, const Bytef *, uInt)
del_curterm	term.h	/^    extern int del_curterm(TERMINAL *);$/;"	p	signature:(TERMINAL *)
delay_output	curses.h	/^    extern int delay_output(int);$/;"	p	signature:(int)
delay_output	ncurses.h	/^    extern int delay_output(int);$/;"	p	signature:(int)
delch	curses.h	/^    extern int delch(void);$/;"	p	signature:(void)
delch	ncurses.h	/^    extern int delch(void);$/;"	p	signature:(void)
deleteln	curses.h	/^    extern int deleteln(void);$/;"	p	signature:(void)
deleteln	ncurses.h	/^    extern int deleteln(void);$/;"	p	signature:(void)
delscreen	curses.h	/^    extern void delscreen(SCREEN *);$/;"	p	signature:(SCREEN *)
delscreen	ncurses.h	/^    extern void delscreen(SCREEN *);$/;"	p	signature:(SCREEN *)
delwin	curses.h	/^    extern int delwin(WINDOW *);$/;"	p	signature:(WINDOW *)
delwin	ncurses.h	/^    extern int delwin(WINDOW *);$/;"	p	signature:(WINDOW *)
density	cups/ppd.h	/^	float density;$/;"	m	struct:__anon109	access:public
derwin	curses.h	/^    extern WINDOW *derwin(WINDOW *, int, int, int, int);$/;"	p	signature:(WINDOW *, int, int, int, int)
derwin	ncurses.h	/^    extern WINDOW *derwin(WINDOW *, int, int, int, int);$/;"	p	signature:(WINDOW *, int, int, int, int)
des_block	rpc/auth.h	/^    union des_block {$/;"	u
des_block::__anon141::high	rpc/auth.h	/^	    u_int32_t high;$/;"	m	struct:des_block::__anon141	access:public
des_block::__anon141::low	rpc/auth.h	/^	    u_int32_t low;$/;"	m	struct:des_block::__anon141	access:public
des_block::c	rpc/auth.h	/^	char c[8];$/;"	m	union:des_block
des_block::key	rpc/auth.h	/^	} key;$/;"	m	union:des_block	typeref:struct:des_block::__anon141
dest	alsa/seq_event.h	/^	snd_seq_addr_t dest;$/;"	m	struct:snd_seq_connect	access:public
dest	alsa/seq_event.h	/^	snd_seq_addr_t dest;$/;"	m	struct:snd_seq_event	access:public
dest	cups/cups.h	/^	char *dest;$/;"	m	struct:__anon98	access:public
dev_t	sys/types.h	/^    typedef unsigned long long int dev_t;$/;"	t
device	alsa/mixer.h	/^	const char *device;$/;"	m	struct:snd_mixer_selem_regopt	access:public
device	alsa/mixer_abst.h	/^	char *device;$/;"	m	struct:_sm_class_basic	access:public
dgettext	libintl.h	/^    extern char *dgettext(const char *, const char *);$/;"	p	signature:(const char *, const char *)
difftime	time.h	/^    extern double difftime(time_t, time_t);$/;"	p	signature:(time_t, time_t)
dig_subframe	alsa/control.h	/^	unsigned char dig_subframe[4];$/;"	m	struct:snd_aes_iec958	access:public
digest_tries	cups/cups.h	/^	int digest_tries;$/;"	m	struct:__anon100	access:public
dirent	dirent.h	/^    struct dirent {$/;"	s
dirent64	dirent.h	/^    struct dirent64 {$/;"	s
dirent64::d_ino	dirent.h	/^	uint64_t d_ino;$/;"	m	struct:dirent64	access:public
dirent64::d_name	dirent.h	/^	char d_name[256];$/;"	m	struct:dirent64	access:public
dirent64::d_off	dirent.h	/^	int64_t d_off;$/;"	m	struct:dirent64	access:public
dirent64::d_reclen	dirent.h	/^	unsigned short d_reclen;$/;"	m	struct:dirent64	access:public
dirent64::d_type	dirent.h	/^	unsigned char d_type;$/;"	m	struct:dirent64	access:public
dirent::d_ino	dirent.h	/^	long int d_ino;$/;"	m	struct:dirent	access:public
dirent::d_name	dirent.h	/^	char d_name[256];$/;"	m	struct:dirent	access:public
dirent::d_off	dirent.h	/^	off_t d_off;$/;"	m	struct:dirent	access:public
dirent::d_reclen	dirent.h	/^	unsigned short d_reclen;$/;"	m	struct:dirent	access:public
dirent::d_type	dirent.h	/^	unsigned char d_type;$/;"	m	struct:dirent	access:public
dirname	libgen.h	/^    extern char *dirname(char *);$/;"	p	signature:(char *)
disable	alsa/pcm.h	/^	void (*disable) (void);$/;"	m	struct:_snd_pcm_scope_ops	access:public
div	stdlib.h	/^    extern div_t div(int, int);$/;"	p	signature:(int, int)
div_t	stdlib.h	/^    } div_t;$/;"	t	typeref:struct:__anon117
dladdr	dlfcn.h	/^    extern int dladdr(const void *, Dl_info *);$/;"	p	signature:(const void *, Dl_info *)
dlclose	dlfcn.h	/^    extern int dlclose(void *);$/;"	p	signature:(void *)
dlerror	dlfcn.h	/^    extern char *dlerror(void);$/;"	p	signature:(void)
dli_fbase	dlfcn.h	/^	void *dli_fbase;$/;"	m	struct:__anon120	access:public
dli_fname	dlfcn.h	/^	char *dli_fname;$/;"	m	struct:__anon120	access:public
dli_saddr	dlfcn.h	/^	void *dli_saddr;$/;"	m	struct:__anon120	access:public
dli_sname	dlfcn.h	/^	char *dli_sname;$/;"	m	struct:__anon120	access:public
dlopen	dlfcn.h	/^    extern void *dlopen(const char *, int);$/;"	p	signature:(const char *, int)
dlsym	dlfcn.h	/^    extern void *dlsym(void *, const char *);$/;"	p	signature:(void *, const char *)
dma	net/if.h	/^	unsigned char dma;$/;"	m	struct:ifmap	access:public
dngettext	libintl.h	/^    extern char *dngettext(const char *, const char *, const char *,$/;"	p	signature:(const char *, const char *, const char *, unsigned long int)
domainname	sys/utsname.h	/^	char domainname[65];$/;"	m	struct:utsname	access:public
doupdate	curses.h	/^    extern int doupdate(void);$/;"	p	signature:(void)
doupdate	ncurses.h	/^    extern int doupdate(void);$/;"	p	signature:(void)
drand48	stdlib.h	/^    extern double drand48(void);$/;"	p	signature:(void)
drem	math.h	/^    extern double drem(double, double);$/;"	p	signature:(double, double)
dremf	math.h	/^    extern float dremf(float, float);$/;"	p	signature:(float, float)
dreml	math.h	/^    extern long double dreml(long double, long double);$/;"	p	signature:(long double, long double)
driver	alsa/control_external.h	/^	char driver[16];$/;"	m	struct:snd_ctl_ext	access:public
ds	signal.h	/^	unsigned short ds;$/;"	m	struct:sigcontext	access:public
dsisr	signal.h	/^	unsigned long int dsisr;$/;"	m	struct:pt_regs	access:public
dstflag	sys/timeb.h	/^	short dstflag;		\/* Nonzero if Daylight Savings Time used. *\/$/;"	m	struct:timeb	access:public
du	alsa/seq_event.h	/^	short int du;$/;"	m	struct:snd_seq_ev_volume	access:public
dummy	stdio.h	/^	char dummy[__IO_FILE_SIZE];$/;"	m	struct:_IO_FILE	access:public
dummy	zlib.h	/^	int dummy;$/;"	m	struct:internal_state	access:public
dump	alsa/pcm_extplug.h	/^	void (*dump) (void);$/;"	m	struct:snd_pcm_extplug_callback	access:public
dup	unistd.h	/^    extern int dup(int);$/;"	p	signature:(int)
dup2	unistd.h	/^    extern int dup2(int, int);$/;"	p	signature:(int, int)
duplocale	locale.h	/^    extern locale_t duplocale(locale_t);$/;"	p	signature:(locale_t)
dupwin	curses.h	/^    extern WINDOW *dupwin(WINDOW *);$/;"	p	signature:(WINDOW *)
dupwin	ncurses.h	/^    extern WINDOW *dupwin(WINDOW *);$/;"	p	signature:(WINDOW *)
duration	alsa/seq_event.h	/^	unsigned int duration;$/;"	m	struct:snd_seq_ev_note	access:public
e_exit	utmp.h	/^	short e_exit;		\/* Process exit status. *\/$/;"	m	struct:exit_status	access:public
e_termination	utmp.h	/^	short e_termination;	\/* Process termination status. *\/$/;"	m	struct:exit_status	access:public
eax	signal.h	/^	unsigned long int eax;$/;"	m	struct:sigcontext	access:public
ebp	signal.h	/^	unsigned long int ebp;$/;"	m	struct:sigcontext	access:public
ebx	signal.h	/^	unsigned long int ebx;$/;"	m	struct:sigcontext	access:public
echo	curses.h	/^    extern int echo(void);$/;"	p	signature:(void)
echo	ncurses.h	/^    extern int echo(void);$/;"	p	signature:(void)
echochar	curses.h	/^    extern int echochar(const chtype);$/;"	p	signature:(const chtype)
echochar	ncurses.h	/^    extern int echochar(const chtype);$/;"	p	signature:(const chtype)
ecvt	stdlib.h	/^    extern char *ecvt(double, int, int *, int *);$/;"	p	signature:(double, int, int *, int *)
ecx	signal.h	/^	unsigned long int ecx;$/;"	m	struct:sigcontext	access:public
edi	signal.h	/^	unsigned long int edi;$/;"	m	struct:sigcontext	access:public
edx	signal.h	/^	unsigned long int edx;$/;"	m	struct:sigcontext	access:public
eflags	signal.h	/^	unsigned long int eflags;$/;"	m	struct:sigcontext	access:public
eip	signal.h	/^	unsigned long int eip;$/;"	m	struct:sigcontext	access:public
elem_count	alsa/control_external.h	/^	int (*elem_count) (void);$/;"	m	struct:snd_ctl_ext_callback	access:public
elem_list	alsa/control_external.h	/^	int (*elem_list) (void);$/;"	m	struct:snd_ctl_ext_callback	access:public
element	signal.h	/^	uint32_t element[4];$/;"	m	struct:_xmmreg	access:public
element	signal.h	/^	unsigned long int element[4];$/;"	m	struct:_xmmreg	access:public
element	ucontext.h	/^	uint32_t element[4];$/;"	m	struct:_libc_xmmreg	access:public
emulations	cups/ppd.h	/^	ppd_emul_t *emulations;$/;"	m	struct:__anon111	access:public
enable	alsa/pcm.h	/^	int (*enable) (void);$/;"	m	struct:_snd_pcm_scope_ops	access:public
encoding	cups/cups.h	/^	cups_encoding_t encoding;$/;"	m	struct:cups_lang_str	access:public
encrypt	unistd.h	/^    extern void encrypt(char *, int);$/;"	p	signature:(char *, int)
encryption	cups/cups.h	/^	http_encryption_t encryption;$/;"	m	struct:__anon100	access:public
end	alsa/iatomic.h	/^	unsigned int end;$/;"	m	struct:__anon14	access:public
end	alsa/iatomic.h	/^	unsigned int end;$/;"	m	struct:__anon15	access:public
end	alsa/seq_event.h	/^	unsigned int end;$/;"	m	struct:snd_seq_ev_loop	access:public
end_ptr	stdlib.h	/^	int32_t *end_ptr;	\/* Pointer behind state table. *\/$/;"	m	struct:random_data	access:public
endgrent	grp.h	/^    extern void endgrent(void);$/;"	p	signature:(void)
endorder	search.h	/^	endorder,$/;"	e	enum:__anon54
endprotoent	netdb.h	/^    extern void endprotoent(void);$/;"	p	signature:(void)
endpwent	pwd.h	/^    extern void endpwent(void);$/;"	p	signature:(void)
endservent	netdb.h	/^    extern void endservent(void);$/;"	p	signature:(void)
endutent	utmp.h	/^    extern void endutent(void);$/;"	p	signature:(void)
endutxent	utmpx.h	/^    extern void endutxent(void);$/;"	p	signature:(void)
endwin	curses.h	/^    extern int endwin(void);$/;"	p	signature:(void)
endwin	ncurses.h	/^    extern int endwin(void);$/;"	p	signature:(void)
entry	search.h	/^    struct entry {$/;"	s
entry::data	search.h	/^	void *data;$/;"	m	struct:entry	access:public
entry::key	search.h	/^	char *key;$/;"	m	struct:entry	access:public
enum_t	rpc/types.h	/^    typedef int enum_t;$/;"	t
erand48	stdlib.h	/^    extern double erand48(unsigned short[3]);$/;"	p	signature:(unsigned short[3])
erase	curses.h	/^    extern int erase(void);$/;"	p	signature:(void)
erase	ncurses.h	/^    extern int erase(void);$/;"	p	signature:(void)
erasechar	curses.h	/^    extern char erasechar(void);$/;"	p	signature:(void)
erasechar	ncurses.h	/^    extern char erasechar(void);$/;"	p	signature:(void)
erf	math.h	/^    extern double erf(double);$/;"	p	signature:(double)
erfc	math.h	/^    extern double erfc(double);$/;"	p	signature:(double)
erfcf	math.h	/^    extern float erfcf(float);$/;"	p	signature:(float)
erfcl	math.h	/^    extern long double erfcl(long double);$/;"	p	signature:(long double)
erff	math.h	/^    extern float erff(float);$/;"	p	signature:(float)
erfl	math.h	/^    extern long double erfl(long double);$/;"	p	signature:(long double)
err	signal.h	/^	unsigned long int err;$/;"	m	struct:sigcontext	access:public
errno	errno.h	11;"	d
error	cups/cups.h	/^	int error;$/;"	m	struct:__anon100	access:public
es	signal.h	/^	unsigned short es;$/;"	m	struct:sigcontext	access:public
esi	signal.h	/^	unsigned long int esi;$/;"	m	struct:sigcontext	access:public
esp	signal.h	/^	unsigned long int esp;$/;"	m	struct:sigcontext	access:public
esp_at_signal	signal.h	/^	unsigned long int esp_at_signal;$/;"	m	struct:sigcontext	access:public
event	alsa/seq_event.h	/^	int event;$/;"	m	struct:snd_seq_result	access:public
events	sys/poll.h	/^	short events;		\/* Types of events poller cares about. *\/$/;"	m	struct:pollfd	access:public
exception	math.h	/^    struct exception {$/;"	s
exception::arg1	math.h	/^	double arg1;$/;"	m	struct:exception	access:public
exception::arg2	math.h	/^	double arg2;$/;"	m	struct:exception	access:public
exception::name	math.h	/^	char *name;$/;"	m	struct:exception	access:public
exception::retval	math.h	/^	double retval;$/;"	m	struct:exception	access:public
exception::type	math.h	/^	int type;$/;"	m	struct:exception	access:public
exception_class	unwind.h	/^	u_int64_t exception_class;$/;"	m	struct:_Unwind_Exception	access:public
exception_cleanup	unwind.h	/^	_Unwind_Exception_Cleanup_Fn exception_cleanup;$/;"	m	struct:_Unwind_Exception	access:public
execl	unistd.h	/^    extern int execl(const char *, const char *, ...);$/;"	p	signature:(const char *, const char *, ...)
execle	unistd.h	/^    extern int execle(const char *, const char *, ...);$/;"	p	signature:(const char *, const char *, ...)
execlp	unistd.h	/^    extern int execlp(const char *, const char *, ...);$/;"	p	signature:(const char *, const char *, ...)
execv	unistd.h	/^    extern int execv(const char *, char *const[]);$/;"	p	signature:(const char *, char *const[])
execve	unistd.h	/^    extern int execve(const char *, char *const[], char *const[]);$/;"	p	signature:(const char *, char *const[], char *const[])
execvp	unistd.h	/^    extern int execvp(const char *, char *const[]);$/;"	p	signature:(const char *, char *const[])
exit	stdlib.h	/^    extern void exit(int);$/;"	p	signature:(int)
exit_status	utmp.h	/^    struct exit_status {$/;"	s
exit_status::e_exit	utmp.h	/^	short e_exit;		\/* Process exit status. *\/$/;"	m	struct:exit_status	access:public
exit_status::e_termination	utmp.h	/^	short e_termination;	\/* Process termination status. *\/$/;"	m	struct:exit_status	access:public
exp	math.h	/^    extern double exp(double);$/;"	p	signature:(double)
exp10	math.h	/^    extern double exp10(double);$/;"	p	signature:(double)
exp10f	math.h	/^    extern float exp10f(float);$/;"	p	signature:(float)
exp10l	math.h	/^    extern long double exp10l(long double);$/;"	p	signature:(long double)
exp2	math.h	/^    extern double exp2(double);$/;"	p	signature:(double)
exp2f	math.h	/^    extern float exp2f(float);$/;"	p	signature:(float)
exp2l	math.h	/^    extern long double exp2l(long double);$/;"	p	signature:(long double)
expect	cups/cups.h	/^	http_status_t expect;$/;"	m	struct:__anon100	access:public
expf	math.h	/^    extern float expf(float);$/;"	p	signature:(float)
expl	math.h	/^    extern long double expl(long double);$/;"	p	signature:(long double)
expm1	math.h	/^    extern double expm1(double);$/;"	p	signature:(double)
expm1f	math.h	/^    extern float expm1f(float);$/;"	p	signature:(float)
expm1l	math.h	/^    extern long double expm1l(long double);$/;"	p	signature:(long double)
exponent	signal.h	/^	unsigned short exponent;$/;"	m	struct:_fpreg	access:public
exponent	signal.h	/^	unsigned short exponent;$/;"	m	struct:_fpxreg	access:public
exponent	ucontext.h	/^	unsigned short exponent;$/;"	m	struct:_libc_fpreg	access:public
exponent	ucontext.h	/^	unsigned short exponent;$/;"	m	struct:_libc_fpxreg	access:public
ext	alsa/seq_event.h	/^	    snd_seq_ev_ext_t ext;	\/* external data *\/$/;"	m	union:snd_seq_event::__anon13
f	ucontext.h	/^	float f;$/;"	m	union:__anon122
f	ucontext.h	/^	float f;$/;"	m	union:__anon123
f_bavail	sys/statfs.h	/^	fsblkcnt64_t f_bavail;	\/* free blocks avail to non-superuser *\/$/;"	m	struct:statfs64	access:public
f_bavail	sys/statfs.h	/^	fsblkcnt_t f_bavail;	\/* free blocks avail to non-superuser *\/$/;"	m	struct:statfs	access:public
f_bavail	sys/statvfs.h	/^	fsblkcnt64_t f_bavail;$/;"	m	struct:statvfs	access:public
f_bavail	sys/statvfs.h	/^	fsblkcnt64_t f_bavail;$/;"	m	struct:statvfs64	access:public
f_bavail	sys/statvfs.h	/^	fsblkcnt_t f_bavail;$/;"	m	struct:statvfs	access:public
f_bfree	sys/statfs.h	/^	fsblkcnt64_t f_bfree;	\/* free blocks in fs *\/$/;"	m	struct:statfs64	access:public
f_bfree	sys/statfs.h	/^	fsblkcnt_t f_bfree;	\/* free blocks in fs *\/$/;"	m	struct:statfs	access:public
f_bfree	sys/statvfs.h	/^	fsblkcnt64_t f_bfree;$/;"	m	struct:statvfs	access:public
f_bfree	sys/statvfs.h	/^	fsblkcnt64_t f_bfree;$/;"	m	struct:statvfs64	access:public
f_bfree	sys/statvfs.h	/^	fsblkcnt_t f_bfree;$/;"	m	struct:statvfs	access:public
f_blocks	sys/statfs.h	/^	fsblkcnt64_t f_blocks;	\/* total data blocks in file system *\/$/;"	m	struct:statfs64	access:public
f_blocks	sys/statfs.h	/^	fsblkcnt_t f_blocks;	\/* total data blocks in file system *\/$/;"	m	struct:statfs	access:public
f_blocks	sys/statvfs.h	/^	fsblkcnt64_t f_blocks;$/;"	m	struct:statvfs	access:public
f_blocks	sys/statvfs.h	/^	fsblkcnt64_t f_blocks;$/;"	m	struct:statvfs64	access:public
f_blocks	sys/statvfs.h	/^	fsblkcnt_t f_blocks;$/;"	m	struct:statvfs	access:public
f_bsize	sys/statfs.h	/^	int f_bsize;		\/* optimal transfer block size *\/$/;"	m	struct:statfs	access:public
f_bsize	sys/statfs.h	/^	int f_bsize;		\/* optimal transfer block size *\/$/;"	m	struct:statfs64	access:public
f_bsize	sys/statfs.h	/^	long int f_bsize;	\/* optimal transfer block size *\/$/;"	m	struct:statfs	access:public
f_bsize	sys/statfs.h	/^	long int f_bsize;	\/* optimal transfer block size *\/$/;"	m	struct:statfs64	access:public
f_bsize	sys/statvfs.h	/^	unsigned long int f_bsize;$/;"	m	struct:statvfs	access:public
f_bsize	sys/statvfs.h	/^	unsigned long int f_bsize;$/;"	m	struct:statvfs64	access:public
f_favail	sys/statvfs.h	/^	fsfilcnt64_t f_favail;$/;"	m	struct:statvfs	access:public
f_favail	sys/statvfs.h	/^	fsfilcnt64_t f_favail;$/;"	m	struct:statvfs64	access:public
f_favail	sys/statvfs.h	/^	fsfilcnt_t f_favail;$/;"	m	struct:statvfs	access:public
f_ffree	sys/statfs.h	/^	fsfilcnt64_t f_ffree;	\/* free file nodes in file system *\/$/;"	m	struct:statfs64	access:public
f_ffree	sys/statfs.h	/^	fsfilcnt_t f_ffree;	\/* free file nodes in file system *\/$/;"	m	struct:statfs	access:public
f_ffree	sys/statvfs.h	/^	fsfilcnt64_t f_ffree;$/;"	m	struct:statvfs	access:public
f_ffree	sys/statvfs.h	/^	fsfilcnt64_t f_ffree;$/;"	m	struct:statvfs64	access:public
f_ffree	sys/statvfs.h	/^	fsfilcnt_t f_ffree;$/;"	m	struct:statvfs	access:public
f_files	sys/statfs.h	/^	fsfilcnt64_t f_files;	\/* total file nodes in file system *\/$/;"	m	struct:statfs64	access:public
f_files	sys/statfs.h	/^	fsfilcnt_t f_files;	\/* total file nodes in file system *\/$/;"	m	struct:statfs	access:public
f_files	sys/statvfs.h	/^	fsfilcnt64_t f_files;$/;"	m	struct:statvfs	access:public
f_files	sys/statvfs.h	/^	fsfilcnt64_t f_files;$/;"	m	struct:statvfs64	access:public
f_files	sys/statvfs.h	/^	fsfilcnt_t f_files;$/;"	m	struct:statvfs	access:public
f_flag	sys/statvfs.h	/^	unsigned long int f_flag;$/;"	m	struct:statvfs	access:public
f_flag	sys/statvfs.h	/^	unsigned long int f_flag;$/;"	m	struct:statvfs64	access:public
f_frsize	sys/statfs.h	/^	int f_frsize;		\/* fragment size *\/$/;"	m	struct:statfs	access:public
f_frsize	sys/statfs.h	/^	int f_frsize;		\/* fragment size *\/$/;"	m	struct:statfs64	access:public
f_frsize	sys/statfs.h	/^	long int f_frsize;	\/* fragment size *\/$/;"	m	struct:statfs	access:public
f_frsize	sys/statfs.h	/^	long int f_frsize;	\/* fragment size *\/$/;"	m	struct:statfs64	access:public
f_frsize	sys/statvfs.h	/^	unsigned long int f_frsize;$/;"	m	struct:statvfs	access:public
f_frsize	sys/statvfs.h	/^	unsigned long int f_frsize;$/;"	m	struct:statvfs64	access:public
f_fsid	sys/statfs.h	/^	fsid_t f_fsid;		\/* file system id *\/$/;"	m	struct:statfs	access:public
f_fsid	sys/statfs.h	/^	fsid_t f_fsid;		\/* file system id *\/$/;"	m	struct:statfs64	access:public
f_fsid	sys/statvfs.h	/^	unsigned long int f_fsid;$/;"	m	struct:statvfs	access:public
f_fsid	sys/statvfs.h	/^	unsigned long int f_fsid;$/;"	m	struct:statvfs64	access:public
f_namelen	sys/statfs.h	/^	int f_namelen;		\/* maximum length of filenames *\/$/;"	m	struct:statfs	access:public
f_namelen	sys/statfs.h	/^	int f_namelen;		\/* maximum length of filenames *\/$/;"	m	struct:statfs64	access:public
f_namelen	sys/statfs.h	/^	long int f_namelen;	\/* maximum length of filenames *\/$/;"	m	struct:statfs	access:public
f_namelen	sys/statfs.h	/^	long int f_namelen;	\/* maximum length of filenames *\/$/;"	m	struct:statfs64	access:public
f_namemax	sys/statvfs.h	/^	unsigned long int f_namemax;$/;"	m	struct:statvfs	access:public
f_namemax	sys/statvfs.h	/^	unsigned long int f_namemax;$/;"	m	struct:statvfs64	access:public
f_spare	sys/statfs.h	/^	int f_spare[5];		\/* spare for later *\/$/;"	m	struct:statfs	access:public
f_spare	sys/statfs.h	/^	int f_spare[5];		\/* spare for later *\/$/;"	m	struct:statfs64	access:public
f_spare	sys/statfs.h	/^	long int f_spare[5];	\/* spare for later *\/$/;"	m	struct:statfs	access:public
f_spare	sys/statfs.h	/^	long int f_spare[5];	\/* spare for later *\/$/;"	m	struct:statfs64	access:public
f_type	sys/statfs.h	/^	int f_type;		\/* type of filesystem *\/$/;"	m	struct:statfs	access:public
f_type	sys/statfs.h	/^	int f_type;		\/* type of filesystem *\/$/;"	m	struct:statfs64	access:public
f_type	sys/statfs.h	/^	long int f_type;	\/* type of filesystem *\/$/;"	m	struct:statfs	access:public
f_type	sys/statfs.h	/^	long int f_type;	\/* type of filesystem *\/$/;"	m	struct:statfs64	access:public
fabs	math.h	/^    extern double fabs(double);$/;"	p	signature:(double)
fabsf	math.h	/^    extern float fabsf(float);$/;"	p	signature:(float)
fabsl	math.h	/^    extern long double fabsl(long double);$/;"	p	signature:(long double)
fastmap	regex.h	/^	char *fastmap;$/;"	m	struct:re_pattern_buffer	access:public
fastmap_accurate	regex.h	/^	unsigned int fastmap_accurate:1;$/;"	m	struct:re_pattern_buffer	access:public
fchdir	unistd.h	/^    extern int fchdir(int);$/;"	p	signature:(int)
fchmod	sys/stat.h	/^    extern int fchmod(int, mode_t);$/;"	p	signature:(int, mode_t)
fchown	unistd.h	/^    extern int fchown(int, uid_t, gid_t);$/;"	p	signature:(int, uid_t, gid_t)
fclose	stdio.h	/^    extern int fclose(FILE *);$/;"	p	signature:(FILE *)
fcntl	fcntl.h	/^    extern int fcntl(int, int, ...);$/;"	p	signature:(int, int, ...)
fcvt	stdlib.h	/^    extern char *fcvt(double, int, int *, int *);$/;"	p	signature:(double, int, int *, int *)
fd	cups/cups.h	/^	int fd;$/;"	m	struct:__anon100	access:public
fd	cups/raster.h	/^	int fd;$/;"	m	struct:__anon78	access:public
fd	sys/poll.h	/^	int fd;			\/* File descriptor to poll. *\/$/;"	m	struct:pollfd	access:public
fd_mask	sys/types.h	/^    typedef long int fd_mask;$/;"	t
fd_set	sys/types.h	/^    } fd_set;$/;"	t	typeref:struct:__anon48
fdatasync	unistd.h	/^    extern int fdatasync(int);$/;"	p	signature:(int)
fdim	math.h	/^    extern double fdim(double, double);$/;"	p	signature:(double, double)
fdimf	math.h	/^    extern float fdimf(float, float);$/;"	p	signature:(float, float)
fdiml	math.h	/^    extern long double fdiml(long double, long double);$/;"	p	signature:(long double, long double)
fdopen	stdio.h	/^    extern FILE *fdopen(int, const char *);$/;"	p	signature:(int, const char *)
fds_bits	sys/types.h	/^	unsigned long int fds_bits[__FDSET_LONGS];$/;"	m	struct:__anon48	access:public
feclearexcept	fenv.h	/^    extern int feclearexcept(int);$/;"	p	signature:(int)
fedisableexcept	fenv.h	/^    extern int fedisableexcept(int);$/;"	p	signature:(int)
feenableexcept	fenv.h	/^    extern int feenableexcept(int);$/;"	p	signature:(int)
fegetenv	fenv.h	/^    extern int fegetenv(fenv_t *);$/;"	p	signature:(fenv_t *)
fegetexcept	fenv.h	/^    extern int fegetexcept(void);$/;"	p	signature:(void)
fegetexceptflag	fenv.h	/^    extern int fegetexceptflag(fexcept_t *, int);$/;"	p	signature:(fexcept_t *, int)
fegetround	fenv.h	/^    extern int fegetround(void);$/;"	p	signature:(void)
feholdexcept	fenv.h	/^    extern int feholdexcept(fenv_t *);$/;"	p	signature:(fenv_t *)
fenv_t	fenv.h	/^    typedef double fenv_t;$/;"	t
fenv_t	fenv.h	/^    typedef unsigned long int fenv_t;$/;"	t
fenv_t	fenv.h	/^    } fenv_t;$/;"	t	typeref:struct:__anon145
fenv_t	fenv.h	/^    } fenv_t;$/;"	t	typeref:struct:__anon146
fenv_t	fenv.h	/^    } fenv_t;$/;"	t	typeref:struct:__anon147
fenv_t	fenv.h	/^    } fenv_t;$/;"	t	typeref:struct:__anon148
feof	stdio.h	/^    extern int feof(FILE *);$/;"	p	signature:(FILE *)
feraiseexcept	fenv.h	/^    extern int feraiseexcept(int);$/;"	p	signature:(int)
ferror	stdio.h	/^    extern int ferror(FILE *);$/;"	p	signature:(FILE *)
fesetenv	fenv.h	/^    extern int fesetenv(const fenv_t *);$/;"	p	signature:(const fenv_t *)
fesetexceptflag	fenv.h	/^    extern int fesetexceptflag(const fexcept_t *, int);$/;"	p	signature:(const fexcept_t *, int)
fesetround	fenv.h	/^    extern int fesetround(int);$/;"	p	signature:(int)
fetestexcept	fenv.h	/^    extern int fetestexcept(int);$/;"	p	signature:(int)
feupdateenv	fenv.h	/^    extern int feupdateenv(const fenv_t *);$/;"	p	signature:(const fenv_t *)
fexcept_t	fenv.h	/^    typedef unsigned int fexcept_t;$/;"	t
fexcept_t	fenv.h	/^    typedef unsigned long int fexcept_t;$/;"	t
fexcept_t	fenv.h	/^    typedef unsigned short fexcept_t;$/;"	t
fflush	stdio.h	/^    extern int fflush(FILE *);$/;"	p	signature:(FILE *)
fflush_unlocked	stdio.h	/^    extern int fflush_unlocked(FILE *);$/;"	p	signature:(FILE *)
ffs	strings.h	/^    extern int ffs(int);$/;"	p	signature:(int)
fgetc	stdio.h	/^    extern int fgetc(FILE *);$/;"	p	signature:(FILE *)
fgetpos	stdio.h	/^    extern int fgetpos(FILE *, fpos_t *);$/;"	p	signature:(FILE *, fpos_t *)
fgetpos64	stdio.h	/^    extern int fgetpos64(FILE *, fpos64_t *);$/;"	p	signature:(FILE *, fpos64_t *)
fgets	stdio.h	/^    extern char *fgets(char *, int, FILE *);$/;"	p	signature:(char *, int, FILE *)
fgetwc	wchar.h	/^    extern wint_t fgetwc(FILE *);$/;"	p	signature:(FILE *)
fgetwc_unlocked	wchar.h	/^    extern wint_t fgetwc_unlocked(FILE *);$/;"	p	signature:(FILE *)
fgetws	wchar.h	/^    extern wchar_t *fgetws(wchar_t *, int, FILE *);$/;"	p	signature:(wchar_t *, int, FILE *)
fields	cups/cups.h	/^	char fields[27][256];$/;"	m	struct:__anon100	access:public
fileno	stdio.h	/^    extern int fileno(FILE *);$/;"	p	signature:(FILE *)
filter	curses.h	/^    extern void filter(void);$/;"	p	signature:(void)
filter	ncurses.h	/^    extern void filter(void);$/;"	p	signature:(void)
filters	cups/ppd.h	/^	char **filters;$/;"	m	struct:__anon111	access:public
find_elem	alsa/control_external.h	/^	 snd_ctl_ext_key_t(*find_elem) (void);$/;"	m	struct:snd_ctl_ext_callback	access:public
finite	math.h	/^    extern int finite(double);$/;"	p	signature:(double)
finitef	math.h	/^    extern int finitef(float);$/;"	p	signature:(float)
finitel	math.h	/^    extern int finitel(long double);$/;"	p	signature:(long double)
first	alsa/pcm.h	/^	unsigned int first;$/;"	m	struct:_snd_pcm_channel_area	access:public
flag	getopt.h	/^	int *flag;$/;"	m	struct:option	access:public
flags	alsa/seq_event.h	/^	unsigned char flags;$/;"	m	struct:snd_seq_event	access:public
flash	curses.h	/^    extern int flash(void);$/;"	p	signature:(void)
flash	ncurses.h	/^    extern int flash(void);$/;"	p	signature:(void)
flip_duplex	cups/ppd.h	/^	int flip_duplex;$/;"	m	struct:__anon111	access:public
flock	fcntl.h	/^    struct flock {$/;"	s
flock	sys/file.h	/^    extern int flock(int, int);$/;"	p	signature:(int, int)
flock64	fcntl.h	/^    struct flock64 {$/;"	s
flock64::l_len	fcntl.h	/^	loff_t l_len;$/;"	m	struct:flock64	access:public
flock64::l_pid	fcntl.h	/^	pid_t l_pid;$/;"	m	struct:flock64	access:public
flock64::l_start	fcntl.h	/^	loff_t l_start;$/;"	m	struct:flock64	access:public
flock64::l_type	fcntl.h	/^	short l_type;$/;"	m	struct:flock64	access:public
flock64::l_whence	fcntl.h	/^	short l_whence;$/;"	m	struct:flock64	access:public
flock::l_len	fcntl.h	/^	off_t l_len;$/;"	m	struct:flock	access:public
flock::l_pid	fcntl.h	/^	pid_t l_pid;$/;"	m	struct:flock	access:public
flock::l_start	fcntl.h	/^	off_t l_start;$/;"	m	struct:flock	access:public
flock::l_type	fcntl.h	/^	short l_type;$/;"	m	struct:flock	access:public
flock::l_whence	fcntl.h	/^	short l_whence;$/;"	m	struct:flock	access:public
flockfile	stdio.h	/^    extern void flockfile(FILE *);$/;"	p	signature:(FILE *)
floor	math.h	/^    extern double floor(double);$/;"	p	signature:(double)
floorf	math.h	/^    extern float floorf(float);$/;"	p	signature:(float)
floorl	math.h	/^    extern long double floorl(long double);$/;"	p	signature:(long double)
flushinp	curses.h	/^    extern int flushinp(void);$/;"	p	signature:(void)
flushinp	ncurses.h	/^    extern int flushinp(void);$/;"	p	signature:(void)
fma	math.h	/^    extern double fma(double, double, double);$/;"	p	signature:(double, double, double)
fmaf	math.h	/^    extern float fmaf(float, float, float);$/;"	p	signature:(float, float, float)
fmal	math.h	/^    extern long double fmal(long double, long double, long double);$/;"	p	signature:(long double, long double, long double)
fmax	math.h	/^    extern double fmax(double, double);$/;"	p	signature:(double, double)
fmaxf	math.h	/^    extern float fmaxf(float, float);$/;"	p	signature:(float, float)
fmaxl	math.h	/^    extern long double fmaxl(long double, long double);$/;"	p	signature:(long double, long double)
fmin	math.h	/^    extern double fmin(double, double);$/;"	p	signature:(double, double)
fminf	math.h	/^    extern float fminf(float, float);$/;"	p	signature:(float, float)
fminl	math.h	/^    extern long double fminl(long double, long double);$/;"	p	signature:(long double, long double)
fmod	math.h	/^    extern double fmod(double, double);$/;"	p	signature:(double, double)
fmodf	math.h	/^    extern float fmodf(float, float);$/;"	p	signature:(float, float)
fmodl	math.h	/^    extern long double fmodl(long double, long double);$/;"	p	signature:(long double, long double)
fmtmsg	fmtmsg.h	/^    extern int fmtmsg(long int, const char *, int, const char *,$/;"	p	signature:(long int, const char *, int, const char *, const char *, const char *)
fnmatch	fnmatch.h	/^    extern int fnmatch(const char *, const char *, int);$/;"	p	signature:(const char *, const char *, int)
fonts	cups/ppd.h	/^	char **fonts;$/;"	m	struct:__anon111	access:public
fop	signal.h	/^	uint16_t fop;$/;"	m	struct:_fpstate	access:public
fop	ucontext.h	/^	uint16_t fop;$/;"	m	struct:_libc_fpstate	access:public
fopen	stdio.h	/^    extern FILE *fopen(const char *, const char *);$/;"	p	signature:(const char *, const char *)
fopen64	stdio.h	/^    extern FILE *fopen64(const char *, const char *);$/;"	p	signature:(const char *, const char *)
fork	unistd.h	/^    extern pid_t fork(void);$/;"	p	signature:(void)
forkpty	pty.h	/^    extern int forkpty(int *, char *, struct termios *, struct winsize *);$/;"	p	signature:(int *, char *, struct termios *, struct winsize *)
format	alsa/pcm_extplug.h	/^	snd_pcm_format_t format;$/;"	m	struct:snd_pcm_extplug	access:public
format	cups/cups.h	/^	char *format;$/;"	m	struct:__anon98	access:public
fp_regs	signal.h	/^	double fp_regs[33];$/;"	m	struct:sigcontext	access:public
fp_regs	ucontext.h	/^	fpregset_t fp_regs;$/;"	m	struct:__anon131	access:public
fpathconf	unistd.h	/^    extern long int fpathconf(int, int);$/;"	p	signature:(int, int)
fpc	fenv.h	/^	fexcept_t fpc;$/;"	m	struct:__anon145	access:public
fpc	fenv.h	/^	fexcept_t fpc;$/;"	m	struct:__anon146	access:public
fpc	signal.h	/^	unsigned int fpc;$/;"	m	struct:__anon37	access:public
fpc	signal.h	/^	unsigned int fpc;$/;"	m	struct:__anon38	access:public
fpc	ucontext.h	/^	unsigned int fpc;$/;"	m	struct:__anon124	access:public
fpc	ucontext.h	/^	unsigned int fpc;$/;"	m	struct:__anon125	access:public
fpclassify	math.h	36;"	d
fpclassify	math.h	40;"	d
fpclassify	math.h	44;"	d
fpclassify	math.h	48;"	d
fpclassify	math.h	52;"	d
fpclassify	math.h	56;"	d
fpclassify	math.h	60;"	d
fpos64_t	stdio.h	/^    } fpos64_t;$/;"	t	typeref:struct:__anon46
fpos_t	stdio.h	/^    } fpos_t;$/;"	t	typeref:struct:__anon45
fpreg_t	ucontext.h	/^    } fpreg_t;$/;"	t	typeref:union:__anon122
fpreg_t	ucontext.h	/^    } fpreg_t;$/;"	t	typeref:union:__anon123
fpregs	signal.h	/^	_s390_fp_regs fpregs;$/;"	m	struct:__anon39	access:public
fpregs	signal.h	/^	_s390_fp_regs fpregs;$/;"	m	struct:__anon40	access:public
fpregs	ucontext.h	/^	double fpregs[32];$/;"	m	struct:_libc_fpstate	access:public
fpregs	ucontext.h	/^	fpregset_t fpregs;$/;"	m	struct:__anon126	access:public
fpregs	ucontext.h	/^	fpregset_t fpregs;$/;"	m	struct:__anon127	access:public
fpregs	ucontext.h	/^	fpregset_t fpregs;$/;"	m	struct:__anon128	access:public
fpregs	ucontext.h	/^	fpregset_t fpregs;$/;"	m	struct:__anon129	access:public
fpregs	ucontext.h	/^	fpregset_t fpregs;$/;"	m	struct:__anon130	access:public
fpregset_t	ucontext.h	/^    typedef double fpregset_t[33];$/;"	t
fpregset_t	ucontext.h	/^    typedef struct _libc_fpstate *fpregset_t;$/;"	t	typeref:struct:_libc_fpstate
fpregset_t	ucontext.h	/^    typedef struct _libc_fpstate fpregset_t;$/;"	t	typeref:struct:_libc_fpstate
fpregset_t	ucontext.h	/^    } fpregset_t;$/;"	t	typeref:struct:__anon124
fpregset_t	ucontext.h	/^    } fpregset_t;$/;"	t	typeref:struct:__anon125
fprintf	stdio.h	/^    extern int fprintf(FILE *, const char *, ...);$/;"	p	signature:(FILE *, const char *, ...)
fprs	signal.h	/^	double fprs[__NUM_FPRS];$/;"	m	struct:__anon37	access:public
fprs	signal.h	/^	double fprs[__NUM_FPRS];$/;"	m	struct:__anon38	access:public
fprs	ucontext.h	/^	fpreg_t fprs[16];$/;"	m	struct:__anon124	access:public
fprs	ucontext.h	/^	fpreg_t fprs[16];$/;"	m	struct:__anon125	access:public
fpscr	ucontext.h	/^	double fpscr;$/;"	m	struct:_libc_fpstate	access:public
fpstate	signal.h	/^	struct _fpstate *fpstate;$/;"	m	struct:sigcontext	typeref:struct:sigcontext::_fpstate	access:public
fptr	stdlib.h	/^	int32_t *fptr;		\/* Front pointer. *\/$/;"	m	struct:random_data	access:public
fputc	stdio.h	/^    extern int fputc(int, FILE *);$/;"	p	signature:(int, FILE *)
fputs	stdio.h	/^    extern int fputs(const char *, FILE *);$/;"	p	signature:(const char *, FILE *)
fputwc	wchar.h	/^    extern wint_t fputwc(wchar_t, FILE *);$/;"	p	signature:(wchar_t, FILE *)
fputws	wchar.h	/^    extern int fputws(const wchar_t *, FILE *);$/;"	p	signature:(const wchar_t *, FILE *)
fr	alsa/seq_event.h	/^	short int fr;$/;"	m	struct:snd_seq_ev_volume	access:public
frac_digits	locale.h	/^	char frac_digits;$/;"	m	struct:lconv	access:public
fread	stdio.h	/^    extern size_t fread(void *, size_t, size_t, FILE *);$/;"	p	signature:(void *, size_t, size_t, FILE *)
free	stdlib.h	/^    extern void free(void *);$/;"	p	signature:(void *)
free_func	zlib.h	/^    typedef void (*free_func) (voidpf opaque, voidpf address);$/;"	t
free_key	alsa/control_external.h	/^	void (*free_key) (void);$/;"	m	struct:snd_ctl_ext_callback	access:public
freeaddrinfo	netdb.h	/^    extern void freeaddrinfo(struct addrinfo *);$/;"	p	signature:(struct addrinfo *)
freelocale	locale.h	/^    extern void freelocale(locale_t);$/;"	p	signature:(locale_t)
freopen	stdio.h	/^    extern FILE *freopen(const char *, const char *, FILE *);$/;"	p	signature:(const char *, const char *, FILE *)
freopen64	stdio.h	/^    extern FILE *freopen64(const char *, const char *, FILE *);$/;"	p	signature:(const char *, const char *, FILE *)
frequency	alsa/seq_event.h	/^	    snd_seq_frequency_t frequency;	\/* frequency *\/$/;"	m	union:snd_seq_ev_sample_control::__anon12
frexp	math.h	/^    extern double frexp(double, int *);$/;"	p	signature:(double, int *)
frexpf	math.h	/^    extern float frexpf(float, int *);$/;"	p	signature:(float, int *)
frexpl	math.h	/^    extern long double frexpl(long double, int *);$/;"	p	signature:(long double, int *)
fs	signal.h	/^	unsigned short fs;$/;"	m	struct:sigcontext	access:public
fsblkcnt64_t	sys/types.h	/^    typedef unsigned long long int fsblkcnt64_t;$/;"	t
fsblkcnt_t	sys/types.h	/^    typedef unsigned long int fsblkcnt_t;$/;"	t
fscanf	stdio.h	/^    extern int fscanf(FILE *, const char *, ...);$/;"	p	signature:(FILE *, const char *, ...)
fseek	stdio.h	/^    extern int fseek(FILE *, long int, int);$/;"	p	signature:(FILE *, long int, int)
fseeko	stdio.h	/^    extern int fseeko(FILE *, off_t, int);$/;"	p	signature:(FILE *, off_t, int)
fseeko64	stdio.h	/^    extern int fseeko64(FILE *, loff_t, int);$/;"	p	signature:(FILE *, loff_t, int)
fsetpos	stdio.h	/^    extern int fsetpos(FILE *, const fpos_t *);$/;"	p	signature:(FILE *, const fpos_t *)
fsetpos64	stdio.h	/^    extern int fsetpos64(FILE *, const fpos64_t *);$/;"	p	signature:(FILE *, const fpos64_t *)
fsfilcnt64_t	sys/types.h	/^    typedef unsigned long long int fsfilcnt64_t;$/;"	t
fsfilcnt_t	sys/types.h	/^    typedef unsigned long int fsfilcnt_t;$/;"	t
fsid_t	sys/types.h	/^    } fsid_t;$/;"	t	typeref:struct:__anon47
fstat	sys/stat.h	/^    extern int fstat(int, struct stat *);$/;"	p	signature:(int, struct stat *)
fstat64	sys/stat.h	/^    extern int fstat64(int, struct stat64 *);$/;"	p	signature:(int, struct stat64 *)
fstatfs	sys/statfs.h	/^    extern int fstatfs(int, struct statfs *);$/;"	p	signature:(int, struct statfs *)
fstatfs64	sys/statfs.h	/^    extern int fstatfs64(int, struct statfs64 *);$/;"	p	signature:(int, struct statfs64 *)
fstatvfs	sys/statvfs.h	/^    extern int fstatvfs(int, struct statvfs *);$/;"	p	signature:(int, struct statvfs *)
fstatvfs64	sys/statvfs.h	/^    extern int fstatvfs64(int, struct statvfs64 *);$/;"	p	signature:(int, struct statvfs64 *)
fsync	unistd.h	/^    extern int fsync(int);$/;"	p	signature:(int)
ftell	stdio.h	/^    extern long int ftell(FILE *);$/;"	p	signature:(FILE *)
ftello	stdio.h	/^    extern off_t ftello(FILE *);$/;"	p	signature:(FILE *)
ftello64	stdio.h	/^    extern loff_t ftello64(FILE *);$/;"	p	signature:(FILE *)
ftime	sys/timeb.h	/^    extern int ftime(struct timeb *);$/;"	p	signature:(struct timeb *)
ftok	sys/ipc.h	/^    extern key_t ftok(const char *, int);$/;"	p	signature:(const char *, int)
ftruncate	unistd.h	/^    extern int ftruncate(int, off_t);$/;"	p	signature:(int, off_t)
ftruncate64	unistd.h	/^    extern int ftruncate64(int, off64_t);$/;"	p	signature:(int, off64_t)
ftrylockfile	stdio.h	/^    extern int ftrylockfile(FILE *);$/;"	p	signature:(FILE *)
ftw	ftw.h	/^    extern int ftw(const char *, __ftw_func_t, int);$/;"	p	signature:(const char *, __ftw_func_t, int)
ftw	signal.h	/^	uint16_t ftw;$/;"	m	struct:_fpstate	access:public
ftw	ucontext.h	/^	uint16_t ftw;$/;"	m	struct:_libc_fpstate	access:public
ftw64	ftw.h	/^    extern int ftw64(const char *, __ftw64_func_t, int);$/;"	p	signature:(const char *, __ftw64_func_t, int)
funlockfile	stdio.h	/^    extern void funlockfile(FILE *);$/;"	p	signature:(FILE *)
fwide	wchar.h	/^    extern int fwide(FILE *, int);$/;"	p	signature:(FILE *, int)
fwprintf	wchar.h	/^    extern int fwprintf(FILE *, const wchar_t *, ...);$/;"	p	signature:(FILE *, const wchar_t *, ...)
fwrite	stdio.h	/^    extern size_t fwrite(const void *, size_t, size_t, FILE *);$/;"	p	signature:(const void *, size_t, size_t, FILE *)
fwscanf	wchar.h	/^    extern int fwscanf(FILE *, const wchar_t *, ...);$/;"	p	signature:(FILE *, const wchar_t *, ...)
gai_strerror	netdb.h	/^    extern const char *gai_strerror(int);$/;"	p	signature:(int)
gamma	cups/ppd.h	/^	float gamma;$/;"	m	struct:__anon109	access:public
gamma	math.h	/^    extern double gamma(double);$/;"	p	signature:(double)
gammaf	math.h	/^    extern float gammaf(float);$/;"	p	signature:(float)
gammal	math.h	/^    extern long double gammal(long double);$/;"	p	signature:(long double)
gcvt	stdlib.h	/^    extern char *gcvt(double, int, char *);$/;"	p	signature:(double, int, char *)
get_attribute	alsa/control_external.h	/^	int (*get_attribute) (void);$/;"	m	struct:snd_ctl_ext_callback	access:public
get_crc_table	zlib.h	/^    extern const uLongf *get_crc_table(void);$/;"	p	signature:(void)
get_enumerated_info	alsa/control_external.h	/^	int (*get_enumerated_info) (void);$/;"	m	struct:snd_ctl_ext_callback	access:public
get_enumerated_name	alsa/control_external.h	/^	int (*get_enumerated_name) (void);$/;"	m	struct:snd_ctl_ext_callback	access:public
get_integer64_info	alsa/control_external.h	/^	int (*get_integer64_info) (void);$/;"	m	struct:snd_ctl_ext_callback	access:public
get_integer_info	alsa/control_external.h	/^	int (*get_integer_info) (void);$/;"	m	struct:snd_ctl_ext_callback	access:public
getaddrinfo	netdb.h	/^    extern int getaddrinfo(const char *, const char *,$/;"	p	signature:(const char *, const char *, const struct addrinfo *, struct addrinfo **)
getbegyx	curses.h	43;"	d
getbegyx	ncurses.h	43;"	d
getbkgd	curses.h	/^    extern chtype getbkgd(WINDOW *);$/;"	p	signature:(WINDOW *)
getbkgd	ncurses.h	/^    extern chtype getbkgd(WINDOW *);$/;"	p	signature:(WINDOW *)
getc	stdio.h	/^    extern int getc(FILE *);$/;"	p	signature:(FILE *)
getc_unlocked	stdio.h	/^    extern int getc_unlocked(FILE *);$/;"	p	signature:(FILE *)
getch	curses.h	/^    extern int getch(void);$/;"	p	signature:(void)
getch	ncurses.h	/^    extern int getch(void);$/;"	p	signature:(void)
getchar	stdio.h	/^    extern int getchar(void);$/;"	p	signature:(void)
getchar_unlocked	stdio.h	/^    extern int getchar_unlocked(void);$/;"	p	signature:(void)
getcontext	ucontext.h	/^    extern int getcontext(ucontext_t *);$/;"	p	signature:(ucontext_t *)
getcwd	unistd.h	/^    extern char *getcwd(char *, size_t);$/;"	p	signature:(char *, size_t)
getdate	time.h	/^    extern struct tm *getdate(const char *);$/;"	p	signature:(const char *)
getdomainname	unistd.h	/^    extern int getdomainname(char *, size_t);$/;"	p	signature:(char *, size_t)
getdtablesize	unistd.h	/^    extern int getdtablesize(void);$/;"	p	signature:(void)
getegid	unistd.h	/^    extern gid_t getegid(void);$/;"	p	signature:(void)
getenv	stdlib.h	/^    extern char *getenv(const char *);$/;"	p	signature:(const char *)
geteuid	unistd.h	/^    extern uid_t geteuid(void);$/;"	p	signature:(void)
getgid	unistd.h	/^    extern gid_t getgid(void);$/;"	p	signature:(void)
getgrent	grp.h	/^    extern struct group *getgrent(void);$/;"	p	signature:(void)
getgrgid	grp.h	/^    extern struct group *getgrgid(gid_t);$/;"	p	signature:(gid_t)
getgrgid_r	grp.h	/^    extern int getgrgid_r(gid_t, struct group *, char *, size_t,$/;"	p	signature:(gid_t, struct group *, char *, size_t, struct group **)
getgrnam	grp.h	/^    extern struct group *getgrnam(const char *);$/;"	p	signature:(const char *)
getgrnam_r	grp.h	/^    extern int getgrnam_r(const char *, struct group *, char *, size_t,$/;"	p	signature:(const char *, struct group *, char *, size_t, struct group **)
getgrouplist	grp.h	/^    extern int getgrouplist(const char *, gid_t, gid_t *, int *);$/;"	p	signature:(const char *, gid_t, gid_t *, int *)
getgroups	unistd.h	/^    extern int getgroups(int, gid_t[]);$/;"	p	signature:(int, gid_t[])
gethostbyaddr	netdb.h	/^    extern struct hostent *gethostbyaddr(const void *, socklen_t, int);$/;"	p	signature:(const void *, socklen_t, int)
gethostbyaddr_r	netdb.h	/^    extern int gethostbyaddr_r(const void *, socklen_t, int,$/;"	p	signature:(const void *, socklen_t, int, struct hostent *, char *, size_t, struct hostent **, int *)
gethostbyname	netdb.h	/^    extern struct hostent *gethostbyname(const char *);$/;"	p	signature:(const char *)
gethostbyname2	netdb.h	/^    extern struct hostent *gethostbyname2(const char *, int);$/;"	p	signature:(const char *, int)
gethostbyname2_r	netdb.h	/^    extern int gethostbyname2_r(const char *, int, struct hostent *,$/;"	p	signature:(const char *, int, struct hostent *, char *, size_t, struct hostent **, int *)
gethostbyname_r	netdb.h	/^    extern int gethostbyname_r(const char *, struct hostent *, char *,$/;"	p	signature:(const char *, struct hostent *, char *, size_t, struct hostent **, int *)
gethostid	unistd.h	/^    extern long int gethostid(void);$/;"	p	signature:(void)
gethostname	unistd.h	/^    extern int gethostname(char *, size_t);$/;"	p	signature:(char *, size_t)
getitimer	sys/time.h	/^    extern int getitimer(__itimer_which_t, struct itimerval *);$/;"	p	signature:(__itimer_which_t, struct itimerval *)
getloadavg	stdlib.h	/^    extern int getloadavg(double[], int);$/;"	p	signature:(double[], int)
getlogin	unistd.h	/^    extern char *getlogin(void);$/;"	p	signature:(void)
getlogin_r	unistd.h	/^    extern int getlogin_r(char *, size_t);$/;"	p	signature:(char *, size_t)
getmaxyx	curses.h	41;"	d
getmaxyx	ncurses.h	41;"	d
getnameinfo	sys/socket.h	/^    extern int getnameinfo(const struct sockaddr *, socklen_t, char *,$/;"	p	signature:(const struct sockaddr *, socklen_t, char *, socklen_t, char *, socklen_t, unsigned int)
getnstr	curses.h	/^    extern int getnstr(char *, int);$/;"	p	signature:(char *, int)
getnstr	ncurses.h	/^    extern int getnstr(char *, int);$/;"	p	signature:(char *, int)
getopt	unistd.h	/^    extern int getopt(int, char *const[], const char *);$/;"	p	signature:(int, char *const[], const char *)
getopt_long	getopt.h	/^    extern int getopt_long(int, char *const[], const char *,$/;"	p	signature:(int, char *const[], const char *, const struct option *, int *)
getopt_long_only	getopt.h	/^    extern int getopt_long_only(int, char *const[], const char *,$/;"	p	signature:(int, char *const[], const char *, const struct option *, int *)
getpagesize	unistd.h	/^    extern int getpagesize(void);$/;"	p	signature:(void)
getparyx	curses.h	47;"	d
getparyx	ncurses.h	47;"	d
getpeername	sys/socket.h	/^    extern int getpeername(int, struct sockaddr *, socklen_t *);$/;"	p	signature:(int, struct sockaddr *, socklen_t *)
getpgid	unistd.h	/^    extern pid_t getpgid(pid_t);$/;"	p	signature:(pid_t)
getpgrp	unistd.h	/^    extern pid_t getpgrp(void);$/;"	p	signature:(void)
getpid	unistd.h	/^    extern pid_t getpid(void);$/;"	p	signature:(void)
getppid	unistd.h	/^    extern pid_t getppid(void);$/;"	p	signature:(void)
getpriority	sys/resource.h	/^    extern int getpriority(__priority_which_t, id_t);$/;"	p	signature:(__priority_which_t, id_t)
getprotobyname	netdb.h	/^    extern struct protoent *getprotobyname(const char *);$/;"	p	signature:(const char *)
getprotobynumber	netdb.h	/^    extern struct protoent *getprotobynumber(int);$/;"	p	signature:(int)
getprotoent	netdb.h	/^    extern struct protoent *getprotoent(void);$/;"	p	signature:(void)
getpwent	pwd.h	/^    extern struct passwd *getpwent(void);$/;"	p	signature:(void)
getpwnam	pwd.h	/^    extern struct passwd *getpwnam(const char *);$/;"	p	signature:(const char *)
getpwnam_r	pwd.h	/^    extern int getpwnam_r(const char *, struct passwd *, char *, size_t,$/;"	p	signature:(const char *, struct passwd *, char *, size_t, struct passwd **)
getpwuid	pwd.h	/^    extern struct passwd *getpwuid(uid_t);$/;"	p	signature:(uid_t)
getpwuid_r	pwd.h	/^    extern int getpwuid_r(uid_t, struct passwd *, char *, size_t,$/;"	p	signature:(uid_t, struct passwd *, char *, size_t, struct passwd **)
getrlimit	sys/resource.h	/^    extern int getrlimit(__rlimit_resource_t, struct rlimit *);$/;"	p	signature:(__rlimit_resource_t, struct rlimit *)
getrlimit64	sys/resource.h	/^    extern int getrlimit64(id_t, struct rlimit64 *);$/;"	p	signature:(id_t, struct rlimit64 *)
getrusage	sys/resource.h	/^    extern int getrusage(int, struct rusage *);$/;"	p	signature:(int, struct rusage *)
gets	stdio.h	/^    extern char *gets(char *);$/;"	p	signature:(char *)
getservbyname	netdb.h	/^    extern struct servent *getservbyname(const char *, const char *);$/;"	p	signature:(const char *, const char *)
getservbyport	netdb.h	/^    extern struct servent *getservbyport(int, const char *);$/;"	p	signature:(int, const char *)
getservent	netdb.h	/^    extern struct servent *getservent(void);$/;"	p	signature:(void)
getsid	unistd.h	/^    extern pid_t getsid(pid_t);$/;"	p	signature:(pid_t)
getsockname	sys/socket.h	/^    extern int getsockname(int, struct sockaddr *, socklen_t *);$/;"	p	signature:(int, struct sockaddr *, socklen_t *)
getsockopt	sys/socket.h	/^    extern int getsockopt(int, int, int, void *, socklen_t *);$/;"	p	signature:(int, int, int, void *, socklen_t *)
getstr	curses.h	/^    extern int getstr(char *);$/;"	p	signature:(char *)
getstr	ncurses.h	/^    extern int getstr(char *);$/;"	p	signature:(char *)
getsubopt	stdlib.h	/^    extern int getsubopt(char **, char *const *, char **);$/;"	p	signature:(char **, char *const *, char **)
gettext	libintl.h	/^    extern char *gettext(const char *);$/;"	p	signature:(const char *)
gettimeofday	sys/time.h	/^    extern int gettimeofday(struct timeval *, struct timezone *);$/;"	p	signature:(struct timeval *, struct timezone *)
getuid	unistd.h	/^    extern uid_t getuid(void);$/;"	p	signature:(void)
getutent	utmp.h	/^    extern struct utmp *getutent(void);$/;"	p	signature:(void)
getutent_r	utmp.h	/^    extern int getutent_r(struct utmp *, struct utmp **);$/;"	p	signature:(struct utmp *, struct utmp **)
getutxent	utmpx.h	/^    extern struct utmpx *getutxent(void);$/;"	p	signature:(void)
getutxid	utmpx.h	/^    extern struct utmpx *getutxid(const struct utmpx *);$/;"	p	signature:(const struct utmpx *)
getutxline	utmpx.h	/^    extern struct utmpx *getutxline(const struct utmpx *);$/;"	p	signature:(const struct utmpx *)
getw	stdio.h	/^    extern int getw(FILE *);$/;"	p	signature:(FILE *)
getwc	wchar.h	/^    extern wint_t getwc(FILE *);$/;"	p	signature:(FILE *)
getwchar	wchar.h	/^    extern wint_t getwchar(void);$/;"	p	signature:(void)
getwd	unistd.h	/^    extern char *getwd(char *);$/;"	p	signature:(char *)
getwin	curses.h	/^    extern WINDOW *getwin(FILE *);$/;"	p	signature:(FILE *)
getwin	ncurses.h	/^    extern WINDOW *getwin(FILE *);$/;"	p	signature:(FILE *)
getyx	curses.h	45;"	d
getyx	ncurses.h	45;"	d
gid	sys/ipc.h	/^	gid_t gid;		\/* Owner's group ID. *\/$/;"	m	struct:ipc_perm	access:public
gid	sys/ipc.h	/^	gid_t gid;$/;"	m	struct:ipc_perm	access:public
gid_t	sys/types.h	/^    typedef unsigned int gid_t;$/;"	t
gl_closedir	glob.h	/^	void (*gl_closedir) (void *);$/;"	m	struct:__anon115	access:public
gl_closedir	glob.h	/^	void (*gl_closedir) (void *);$/;"	m	struct:__anon116	access:public
gl_flags	glob.h	/^	int gl_flags;$/;"	m	struct:__anon115	access:public
gl_flags	glob.h	/^	int gl_flags;$/;"	m	struct:__anon116	access:public
gl_lstat	glob.h	/^	int (*gl_lstat) (const char *, struct stat *);$/;"	m	struct:__anon115	access:public
gl_lstat	glob.h	/^	int (*gl_lstat) (const char *, struct stat *);$/;"	m	struct:__anon116	access:public
gl_offs	glob.h	/^	size_t gl_offs;$/;"	m	struct:__anon115	access:public
gl_offs	glob.h	/^	size_t gl_offs;$/;"	m	struct:__anon116	access:public
gl_opendir	glob.h	/^	void *(*gl_opendir) (const char *);$/;"	m	struct:__anon115	access:public
gl_opendir	glob.h	/^	void *(*gl_opendir) (const char *);$/;"	m	struct:__anon116	access:public
gl_pathc	glob.h	/^	size_t gl_pathc;$/;"	m	struct:__anon115	access:public
gl_pathc	glob.h	/^	size_t gl_pathc;$/;"	m	struct:__anon116	access:public
gl_pathv	glob.h	/^	char **gl_pathv;$/;"	m	struct:__anon115	access:public
gl_pathv	glob.h	/^	char **gl_pathv;$/;"	m	struct:__anon116	access:public
gl_readdir	glob.h	/^	struct dirent *(*gl_readdir) (void *);$/;"	m	struct:__anon115	typeref:struct:__anon115::gl_readdir	access:public
gl_readdir	glob.h	/^	struct dirent64 *(*gl_readdir) (void *);$/;"	m	struct:__anon116	typeref:struct:__anon116::gl_readdir	access:public
gl_stat	glob.h	/^	int (*gl_stat) (const char *, struct stat *);$/;"	m	struct:__anon115	access:public
gl_stat	glob.h	/^	int (*gl_stat) (const char *, struct stat *);$/;"	m	struct:__anon116	access:public
glob	glob.h	/^    extern int glob(const char *, int, int (*)(const char *, int)$/;"	p	signature:(const char *, int, int (*)(const char *, int) , glob_t *)
glob64	glob.h	/^    extern int glob64(const char *, int, int (*)(const char *, int)$/;"	p	signature:(const char *, int, int (*)(const char *, int) , glob64_t *)
glob64_t	glob.h	/^    } glob64_t;$/;"	t	typeref:struct:__anon116
glob_t	glob.h	/^    } glob_t;$/;"	t	typeref:struct:__anon115
globfree	glob.h	/^    extern void globfree(glob_t *);$/;"	p	signature:(glob_t *)
globfree64	glob.h	/^    extern void globfree64(glob64_t *);$/;"	p	signature:(glob64_t *)
gmtime	time.h	/^    extern struct tm *gmtime(const time_t *);$/;"	p	signature:(const time_t *)
gmtime_r	time.h	/^    extern struct tm *gmtime_r(const time_t *, struct tm *);$/;"	p	signature:(const time_t *, struct tm *)
gp_regs	signal.h	/^	unsigned long int gp_regs[48];$/;"	m	struct:sigcontext	access:public
gp_regs	ucontext.h	/^	gregset_t gp_regs;$/;"	m	struct:__anon131	access:public
gpr	signal.h	/^	unsigned long int gpr[32];$/;"	m	struct:pt_regs	access:public
gprs	signal.h	/^	unsigned long int gprs[16];$/;"	m	struct:__anon19	access:public
gprs	signal.h	/^	unsigned long int gprs[__NUM_GPRS];$/;"	m	struct:__anon18	access:public
gr_gid	grp.h	/^	gid_t gr_gid;$/;"	m	struct:group	access:public
gr_mem	grp.h	/^	char **gr_mem;$/;"	m	struct:group	access:public
gr_name	grp.h	/^	char *gr_name;$/;"	m	struct:group	access:public
gr_passwd	grp.h	/^	char *gr_passwd;$/;"	m	struct:group	access:public
grantpt	stdlib.h	/^    extern int grantpt(int);$/;"	p	signature:(int)
greg_t	ucontext.h	/^    typedef int greg_t;$/;"	t
greg_t	ucontext.h	/^    typedef long int greg_t;$/;"	t
gregs	ucontext.h	/^	gregset_t gregs;$/;"	m	struct:__anon126	access:public
gregs	ucontext.h	/^	gregset_t gregs;$/;"	m	struct:__anon129	access:public
gregs	ucontext.h	/^	gregset_t gregs;$/;"	m	struct:__anon130	access:public
gregs	ucontext.h	/^	unsigned long int gregs[16];$/;"	m	struct:__anon127	access:public
gregs	ucontext.h	/^	unsigned long int gregs[16];$/;"	m	struct:__anon128	access:public
gregset_t	ucontext.h	/^    typedef greg_t gregset_t[19];$/;"	t
gregset_t	ucontext.h	/^    typedef greg_t gregset_t[23];$/;"	t
gregset_t	ucontext.h	/^    typedef unsigned long int gregset_t[48];$/;"	t
group	grp.h	/^    struct group {$/;"	s
group::gr_gid	grp.h	/^	gid_t gr_gid;$/;"	m	struct:group	access:public
group::gr_mem	grp.h	/^	char **gr_mem;$/;"	m	struct:group	access:public
group::gr_name	grp.h	/^	char *gr_name;$/;"	m	struct:group	access:public
group::gr_passwd	grp.h	/^	char *gr_passwd;$/;"	m	struct:group	access:public
grouping	locale.h	/^	char *grouping;$/;"	m	struct:lconv	access:public
groups	cups/ppd.h	/^	ppd_group_t *groups;$/;"	m	struct:__anon111	access:public
gs	signal.h	/^	unsigned short gs;$/;"	m	struct:sigcontext	access:public
gzFile	zlib.h	/^    typedef voidp gzFile;$/;"	t
gzclose	zlib.h	/^    extern int gzclose(gzFile);$/;"	p	signature:(gzFile)
gzdopen	zlib.h	/^    extern gzFile gzdopen(int, const char *);$/;"	p	signature:(int, const char *)
gzeof	zlib.h	/^    extern int gzeof(gzFile);$/;"	p	signature:(gzFile)
gzerror	zlib.h	/^    extern const char *gzerror(gzFile, int *);$/;"	p	signature:(gzFile, int *)
gzflush	zlib.h	/^    extern int gzflush(gzFile, int);$/;"	p	signature:(gzFile, int)
gzgetc	zlib.h	/^    extern int gzgetc(gzFile);$/;"	p	signature:(gzFile)
gzgets	zlib.h	/^    extern char *gzgets(gzFile, char *, int);$/;"	p	signature:(gzFile, char *, int)
gzopen	zlib.h	/^    extern gzFile gzopen(const char *, const char *);$/;"	p	signature:(const char *, const char *)
gzprintf	zlib.h	/^    extern int gzprintf(gzFile, const char *, ...);$/;"	p	signature:(gzFile, const char *, ...)
gzputc	zlib.h	/^    extern int gzputc(gzFile, int);$/;"	p	signature:(gzFile, int)
gzputs	zlib.h	/^    extern int gzputs(gzFile, const char *);$/;"	p	signature:(gzFile, const char *)
gzread	zlib.h	/^    extern int gzread(gzFile, voidp, unsigned int);$/;"	p	signature:(gzFile, voidp, unsigned int)
gzrewind	zlib.h	/^    extern int gzrewind(gzFile);$/;"	p	signature:(gzFile)
gzseek	zlib.h	/^    extern z_off_t gzseek(gzFile, z_off_t, int);$/;"	p	signature:(gzFile, z_off_t, int)
gzsetparams	zlib.h	/^    extern int gzsetparams(gzFile, int, int);$/;"	p	signature:(gzFile, int, int)
gztell	zlib.h	/^    extern z_off_t gztell(gzFile);$/;"	p	signature:(gzFile)
gzwrite	zlib.h	/^    extern int gzwrite(gzFile, voidpc, unsigned int);$/;"	p	signature:(gzFile, voidpc, unsigned int)
h_addr	netdb.h	23;"	d
h_addr_list	netdb.h	/^	char **h_addr_list;$/;"	m	struct:hostent	access:public
h_addrtype	netdb.h	/^	int h_addrtype;$/;"	m	struct:hostent	access:public
h_aliases	netdb.h	/^	char **h_aliases;$/;"	m	struct:hostent	access:public
h_errno	netdb.h	13;"	d
h_length	netdb.h	/^	int h_length;$/;"	m	struct:hostent	access:public
h_name	netdb.h	/^	char *h_name;$/;"	m	struct:hostent	access:public
halfdelay	curses.h	/^    extern int halfdelay(int);$/;"	p	signature:(int)
halfdelay	ncurses.h	/^    extern int halfdelay(int);$/;"	p	signature:(int)
handle	alsa/control_external.h	/^	snd_ctl_t *handle;$/;"	m	struct:snd_ctl_ext	access:public
handler	signal.h	/^	unsigned long int handler;$/;"	m	struct:sigcontext	access:public
handler	ucontext.h	/^	unsigned long int handler;$/;"	m	struct:__anon131	access:public
has_arg	getopt.h	/^	int has_arg;$/;"	m	struct:option	access:public
has_colors	curses.h	/^    extern bool has_colors(void);$/;"	p	signature:(void)
has_colors	ncurses.h	/^    extern bool has_colors(void);$/;"	p	signature:(void)
has_ic	curses.h	/^    extern bool has_ic(void);$/;"	p	signature:(void)
has_ic	ncurses.h	/^    extern bool has_ic(void);$/;"	p	signature:(void)
has_il	curses.h	/^    extern bool has_il(void);$/;"	p	signature:(void)
has_il	ncurses.h	/^    extern bool has_il(void);$/;"	p	signature:(void)
hcreate	search.h	/^    extern int hcreate(size_t);$/;"	p	signature:(size_t)
hctl	alsa/mixer_abst.h	/^	snd_hctl_t *hctl;$/;"	m	struct:_sm_class_basic	access:public
hdestroy	search.h	/^    extern void hdestroy(void);$/;"	p	signature:(void)
high	rpc/auth.h	/^	    u_int32_t high;$/;"	m	struct:des_block::__anon141	access:public
high	rpc/clnt.h	/^		u_long high;$/;"	m	struct:rpc_err::__anon142::__anon143	access:public
high	rpc/rpc_msg.h	/^		unsigned long int high;$/;"	m	struct:accepted_reply::__anon134::__anon135	access:public
high	rpc/rpc_msg.h	/^		unsigned long int high;$/;"	m	struct:rejected_reply::__anon137::__anon138	access:public
hline	curses.h	/^    extern int hline(chtype, int);$/;"	p	signature:(chtype, int)
hline	ncurses.h	/^    extern int hline(chtype, int);$/;"	p	signature:(chtype, int)
hostaddr	cups/cups.h	/^	struct sockaddr_in hostaddr;$/;"	m	struct:__anon100	typeref:struct:__anon100::sockaddr_in	access:public
hostent	netdb.h	/^    struct hostent {$/;"	s
hostent::h_addr_list	netdb.h	/^	char **h_addr_list;$/;"	m	struct:hostent	access:public
hostent::h_addrtype	netdb.h	/^	int h_addrtype;$/;"	m	struct:hostent	access:public
hostent::h_aliases	netdb.h	/^	char **h_aliases;$/;"	m	struct:hostent	access:public
hostent::h_length	netdb.h	/^	int h_length;$/;"	m	struct:hostent	access:public
hostent::h_name	netdb.h	/^	char *h_name;$/;"	m	struct:hostent	access:public
hostname	cups/cups.h	/^	char hostname[256];$/;"	m	struct:__anon100	access:public
hsearch	search.h	/^    extern ENTRY *hsearch(ENTRY, ACTION);$/;"	p	signature:(ENTRY, ACTION)
htonl	arpa/inet.h	/^    extern uint32_t htonl(uint32_t);$/;"	p	signature:(uint32_t)
htons	arpa/inet.h	/^    extern uint16_t htons(uint16_t);$/;"	p	signature:(uint16_t)
http_encoding_t	cups/cups.h	/^    } http_encoding_t;$/;"	t	typeref:enum:__anon96
http_encryption_t	cups/cups.h	/^    } http_encryption_t;$/;"	t	typeref:enum:__anon89
http_keepalive_t	cups/cups.h	/^    } http_keepalive_t;$/;"	t	typeref:enum:__anon95
http_state_t	cups/cups.h	/^    } http_state_t;$/;"	t	typeref:enum:__anon92
http_status_t	cups/cups.h	/^    } http_status_t;$/;"	t	typeref:enum:__anon93
http_t	cups/cups.h	/^    } http_t;$/;"	t	typeref:struct:__anon100
http_version_t	cups/cups.h	/^    } http_version_t;$/;"	t	typeref:enum:__anon94
hw_free	alsa/pcm_extplug.h	/^	int (*hw_free) (void);$/;"	m	struct:snd_pcm_extplug_callback	access:public
hw_params	alsa/pcm_extplug.h	/^	int (*hw_params) (void);$/;"	m	struct:snd_pcm_extplug_callback	access:public
hypot	math.h	/^    extern double hypot(double, double);$/;"	p	signature:(double, double)
hypotf	math.h	/^    extern float hypotf(float, float);$/;"	p	signature:(float, float)
hypotl	math.h	/^    extern long double hypotl(long double, long double);$/;"	p	signature:(long double, long double)
ia64_fpreg	signal.h	/^    struct ia64_fpreg {$/;"	s
ia64_fpreg::__anon41::__dummy	signal.h	/^	    long double __dummy;	\/* force 16-byte alignment *\/$/;"	m	union:ia64_fpreg::__anon41
ia64_fpreg::__anon41::bits	signal.h	/^	    unsigned long int bits[2];$/;"	m	union:ia64_fpreg::__anon41
ia64_fpreg::u	signal.h	/^	} u;$/;"	m	struct:ia64_fpreg	typeref:union:ia64_fpreg::__anon41	access:public
iconv	iconv.h	/^    extern size_t iconv(iconv_t, char **, size_t *, char **, size_t *);$/;"	p	signature:(iconv_t, char **, size_t *, char **, size_t *)
iconv_close	iconv.h	/^    extern int iconv_close(iconv_t);$/;"	p	signature:(iconv_t)
iconv_open	iconv.h	/^    extern iconv_t iconv_open(const char *, const char *);$/;"	p	signature:(const char *, const char *)
iconv_t	iconv.h	/^    typedef void *iconv_t;$/;"	t
id	alsa/control_external.h	/^	char id[16];$/;"	m	struct:snd_ctl_ext	access:public
id	alsa/pcm.h	/^	unsigned char id[16];$/;"	m	union:_snd_pcm_sync_id
id	cups/cups.h	/^	int id;$/;"	m	struct:__anon98	access:public
id16	alsa/pcm.h	/^	short unsigned int id16[8];$/;"	m	union:_snd_pcm_sync_id
id32	alsa/pcm.h	/^	unsigned int id32[4];$/;"	m	union:_snd_pcm_sync_id
id_t	sys/types.h	/^    typedef unsigned int id_t;$/;"	t
idcok	curses.h	/^    extern void idcok(WINDOW *, bool);$/;"	p	signature:(WINDOW *, bool)
idcok	ncurses.h	/^    extern void idcok(WINDOW *, bool);$/;"	p	signature:(WINDOW *, bool)
idlok	curses.h	/^    extern int idlok(WINDOW *, bool);$/;"	p	signature:(WINDOW *, bool)
idlok	ncurses.h	/^    extern int idlok(WINDOW *, bool);$/;"	p	signature:(WINDOW *, bool)
idtype_t	sys/wait.h	/^    } idtype_t;$/;"	t	typeref:enum:__anon49
ieee_instruction_pointer	fenv.h	/^	void *ieee_instruction_pointer;$/;"	m	struct:__anon145	access:public
ieee_instruction_pointer	fenv.h	/^	void *ieee_instruction_pointer;$/;"	m	struct:__anon146	access:public
if_freenameindex	net/if.h	/^    extern void if_freenameindex(struct if_nameindex *);$/;"	p	signature:(struct if_nameindex *)
if_index	net/if.h	/^	unsigned int if_index;	\/* 1, 2, ... *\/$/;"	m	struct:if_nameindex	access:public
if_indextoname	net/if.h	/^    extern char *if_indextoname(unsigned int, char *);$/;"	p	signature:(unsigned int, char *)
if_name	net/if.h	/^	char *if_name;		\/* null terminated name: *\/$/;"	m	struct:if_nameindex	access:public
if_nameindex	net/if.h	/^    extern struct if_nameindex *if_nameindex(void);$/;"	p	signature:(void)
if_nameindex	net/if.h	/^    struct if_nameindex {$/;"	s
if_nameindex::if_index	net/if.h	/^	unsigned int if_index;	\/* 1, 2, ... *\/$/;"	m	struct:if_nameindex	access:public
if_nameindex::if_name	net/if.h	/^	char *if_name;		\/* null terminated name: *\/$/;"	m	struct:if_nameindex	access:public
if_nametoindex	net/if.h	/^    extern unsigned int if_nametoindex(const char *);$/;"	p	signature:(const char *)
ifa_addr	net/if.h	/^	struct sockaddr ifa_addr;	\/* Address of interface. *\/$/;"	m	struct:ifaddr	typeref:struct:ifaddr::sockaddr	access:public
ifa_ifp	net/if.h	/^	void *ifa_ifp;$/;"	m	struct:ifaddr	access:public
ifa_ifu	net/if.h	/^	} ifa_ifu;$/;"	m	struct:ifaddr	typeref:union:ifaddr::__anon1	access:public
ifa_next	net/if.h	/^	void *ifa_next;$/;"	m	struct:ifaddr	access:public
ifaddr	net/if.h	/^    struct ifaddr {$/;"	s
ifaddr::__anon1::ifu_broadaddr	net/if.h	/^	    struct sockaddr ifu_broadaddr;$/;"	m	union:ifaddr::__anon1	typeref:struct:ifaddr::__anon1::sockaddr
ifaddr::__anon1::ifu_dstaddr	net/if.h	/^	    struct sockaddr ifu_dstaddr;$/;"	m	union:ifaddr::__anon1	typeref:struct:ifaddr::__anon1::sockaddr
ifaddr::ifa_addr	net/if.h	/^	struct sockaddr ifa_addr;	\/* Address of interface. *\/$/;"	m	struct:ifaddr	typeref:struct:ifaddr::sockaddr	access:public
ifaddr::ifa_ifp	net/if.h	/^	void *ifa_ifp;$/;"	m	struct:ifaddr	access:public
ifaddr::ifa_ifu	net/if.h	/^	} ifa_ifu;$/;"	m	struct:ifaddr	typeref:union:ifaddr::__anon1	access:public
ifaddr::ifa_next	net/if.h	/^	void *ifa_next;$/;"	m	struct:ifaddr	access:public
ifc_buf	net/if.h	112;"	d
ifc_ifcu	net/if.h	/^	} ifc_ifcu;$/;"	m	struct:ifconf	typeref:union:ifconf::__anon4	access:public
ifc_len	net/if.h	/^	int ifc_len;$/;"	m	struct:ifconf	access:public
ifc_req	net/if.h	113;"	d
ifconf	net/if.h	/^    struct ifconf {$/;"	s
ifconf::__anon4::ifcu_buf	net/if.h	/^	    caddr_t ifcu_buf;$/;"	m	union:ifconf::__anon4
ifconf::__anon4::ifcu_req	net/if.h	/^	    struct ifreq *ifcu_req;$/;"	m	union:ifconf::__anon4	typeref:struct:ifconf::__anon4::ifreq
ifconf::ifc_ifcu	net/if.h	/^	} ifc_ifcu;$/;"	m	struct:ifconf	typeref:union:ifconf::__anon4	access:public
ifconf::ifc_len	net/if.h	/^	int ifc_len;$/;"	m	struct:ifconf	access:public
ifcu_buf	net/if.h	/^	    caddr_t ifcu_buf;$/;"	m	union:ifconf::__anon4
ifcu_req	net/if.h	/^	    struct ifreq *ifcu_req;$/;"	m	union:ifconf::__anon4	typeref:struct:ifconf::__anon4::ifreq
ifmap	net/if.h	/^    struct ifmap {$/;"	s
ifmap::base_addr	net/if.h	/^	unsigned short base_addr;$/;"	m	struct:ifmap	access:public
ifmap::dma	net/if.h	/^	unsigned char dma;$/;"	m	struct:ifmap	access:public
ifmap::irq	net/if.h	/^	unsigned char irq;$/;"	m	struct:ifmap	access:public
ifmap::mem_end	net/if.h	/^	unsigned long int mem_end;$/;"	m	struct:ifmap	access:public
ifmap::mem_start	net/if.h	/^	unsigned long int mem_start;$/;"	m	struct:ifmap	access:public
ifmap::port	net/if.h	/^	unsigned char port;$/;"	m	struct:ifmap	access:public
ifr_addr	net/if.h	72;"	d
ifr_bandwidth	net/if.h	78;"	d
ifr_broadaddr	net/if.h	73;"	d
ifr_data	net/if.h	74;"	d
ifr_dstaddr	net/if.h	75;"	d
ifr_flags	net/if.h	76;"	d
ifr_hwaddr	net/if.h	77;"	d
ifr_ifindex	net/if.h	79;"	d
ifr_ifrn	net/if.h	/^	} ifr_ifrn;$/;"	m	struct:ifreq	typeref:union:ifreq::__anon2	access:public
ifr_ifru	net/if.h	/^	} ifr_ifru;$/;"	m	struct:ifreq	typeref:union:ifreq::__anon3	access:public
ifr_metric	net/if.h	80;"	d
ifr_mtu	net/if.h	82;"	d
ifr_name	net/if.h	71;"	d
ifr_netmask	net/if.h	83;"	d
ifr_qlen	net/if.h	81;"	d
ifr_slave	net/if.h	84;"	d
ifreq	net/if.h	/^    struct ifreq {$/;"	s
ifreq::__anon2::ifrn_name	net/if.h	/^	    char ifrn_name[IFNAMSIZ];$/;"	m	union:ifreq::__anon2
ifreq::__anon3::ifru_addr	net/if.h	/^	    struct sockaddr ifru_addr;$/;"	m	union:ifreq::__anon3	typeref:struct:ifreq::__anon3::sockaddr
ifreq::__anon3::ifru_broadaddr	net/if.h	/^	    struct sockaddr ifru_broadaddr;$/;"	m	union:ifreq::__anon3	typeref:struct:ifreq::__anon3::sockaddr
ifreq::__anon3::ifru_data	net/if.h	/^	    caddr_t ifru_data;$/;"	m	union:ifreq::__anon3
ifreq::__anon3::ifru_dstaddr	net/if.h	/^	    struct sockaddr ifru_dstaddr;$/;"	m	union:ifreq::__anon3	typeref:struct:ifreq::__anon3::sockaddr
ifreq::__anon3::ifru_flags	net/if.h	/^	    short ifru_flags;$/;"	m	union:ifreq::__anon3
ifreq::__anon3::ifru_hwaddr	net/if.h	/^	    struct sockaddr ifru_hwaddr;$/;"	m	union:ifreq::__anon3	typeref:struct:ifreq::__anon3::sockaddr
ifreq::__anon3::ifru_ivalue	net/if.h	/^	    int ifru_ivalue;$/;"	m	union:ifreq::__anon3
ifreq::__anon3::ifru_map	net/if.h	/^	    struct ifmap ifru_map;$/;"	m	union:ifreq::__anon3	typeref:struct:ifreq::__anon3::ifmap
ifreq::__anon3::ifru_mtu	net/if.h	/^	    int ifru_mtu;$/;"	m	union:ifreq::__anon3
ifreq::__anon3::ifru_netmask	net/if.h	/^	    struct sockaddr ifru_netmask;$/;"	m	union:ifreq::__anon3	typeref:struct:ifreq::__anon3::sockaddr
ifreq::__anon3::ifru_newname	net/if.h	/^	    char ifru_newname[IFNAMSIZ];$/;"	m	union:ifreq::__anon3
ifreq::__anon3::ifru_slave	net/if.h	/^	    char ifru_slave[IFNAMSIZ];$/;"	m	union:ifreq::__anon3
ifreq::ifr_ifrn	net/if.h	/^	} ifr_ifrn;$/;"	m	struct:ifreq	typeref:union:ifreq::__anon2	access:public
ifreq::ifr_ifru	net/if.h	/^	} ifr_ifru;$/;"	m	struct:ifreq	typeref:union:ifreq::__anon3	access:public
ifrn_name	net/if.h	/^	    char ifrn_name[IFNAMSIZ];$/;"	m	union:ifreq::__anon2
ifru_addr	net/if.h	/^	    struct sockaddr ifru_addr;$/;"	m	union:ifreq::__anon3	typeref:struct:ifreq::__anon3::sockaddr
ifru_broadaddr	net/if.h	/^	    struct sockaddr ifru_broadaddr;$/;"	m	union:ifreq::__anon3	typeref:struct:ifreq::__anon3::sockaddr
ifru_data	net/if.h	/^	    caddr_t ifru_data;$/;"	m	union:ifreq::__anon3
ifru_dstaddr	net/if.h	/^	    struct sockaddr ifru_dstaddr;$/;"	m	union:ifreq::__anon3	typeref:struct:ifreq::__anon3::sockaddr
ifru_flags	net/if.h	/^	    short ifru_flags;$/;"	m	union:ifreq::__anon3
ifru_hwaddr	net/if.h	/^	    struct sockaddr ifru_hwaddr;$/;"	m	union:ifreq::__anon3	typeref:struct:ifreq::__anon3::sockaddr
ifru_ivalue	net/if.h	/^	    int ifru_ivalue;$/;"	m	union:ifreq::__anon3
ifru_map	net/if.h	/^	    struct ifmap ifru_map;$/;"	m	union:ifreq::__anon3	typeref:struct:ifreq::__anon3::ifmap
ifru_mtu	net/if.h	/^	    int ifru_mtu;$/;"	m	union:ifreq::__anon3
ifru_netmask	net/if.h	/^	    struct sockaddr ifru_netmask;$/;"	m	union:ifreq::__anon3	typeref:struct:ifreq::__anon3::sockaddr
ifru_newname	net/if.h	/^	    char ifru_newname[IFNAMSIZ];$/;"	m	union:ifreq::__anon3
ifru_slave	net/if.h	/^	    char ifru_slave[IFNAMSIZ];$/;"	m	union:ifreq::__anon3
ifu_broadaddr	net/if.h	/^	    struct sockaddr ifu_broadaddr;$/;"	m	union:ifaddr::__anon1	typeref:struct:ifaddr::__anon1::sockaddr
ifu_dstaddr	net/if.h	/^	    struct sockaddr ifu_dstaddr;$/;"	m	union:ifaddr::__anon1	typeref:struct:ifaddr::__anon1::sockaddr
ilogb	math.h	/^    extern int ilogb(double);$/;"	p	signature:(double)
ilogbf	math.h	/^    extern int ilogbf(float);$/;"	p	signature:(float)
ilogbl	math.h	/^    extern int ilogbl(long double);$/;"	p	signature:(long double)
imaxabs	inttypes.h	/^    extern intmax_t imaxabs(intmax_t);$/;"	p	signature:(intmax_t)
imaxdiv	inttypes.h	/^    extern imaxdiv_t imaxdiv(intmax_t, intmax_t);$/;"	p	signature:(intmax_t, intmax_t)
imaxdiv_t	inttypes.h	/^    typedef lldiv_t imaxdiv_t;$/;"	t
immedok	curses.h	/^    extern void immedok(WINDOW *, bool);$/;"	p	signature:(WINDOW *, bool)
immedok	ncurses.h	/^    extern void immedok(WINDOW *, bool);$/;"	p	signature:(WINDOW *, bool)
imr_interface	netinet/in.h	/^	struct in_addr imr_interface;	\/* local IP address of interface *\/$/;"	m	struct:ip_mreq	typeref:struct:ip_mreq::in_addr	access:public
imr_multiaddr	netinet/in.h	/^	struct in_addr imr_multiaddr;	\/* IP multicast address of group *\/$/;"	m	struct:ip_mreq	typeref:struct:ip_mreq::in_addr	access:public
in6_addr	netinet/in.h	/^    struct in6_addr {$/;"	s
in6_addr::__anon50::u6_addr16	netinet/in.h	/^	    uint16_t u6_addr16[8];$/;"	m	union:in6_addr::__anon50
in6_addr::__anon50::u6_addr32	netinet/in.h	/^	    uint32_t u6_addr32[4];$/;"	m	union:in6_addr::__anon50
in6_addr::__anon50::u6_addr8	netinet/in.h	/^	    uint8_t u6_addr8[16];$/;"	m	union:in6_addr::__anon50
in6_addr::in6_u	netinet/in.h	/^	} in6_u;$/;"	m	struct:in6_addr	typeref:union:in6_addr::__anon50	access:public
in6_u	netinet/in.h	/^	} in6_u;$/;"	m	struct:in6_addr	typeref:union:in6_addr::__anon50	access:public
in_addr	netinet/in.h	/^    struct in_addr {$/;"	s
in_addr::s_addr	netinet/in.h	/^	uint32_t s_addr;$/;"	m	struct:in_addr	access:public
in_addr_t	netinet/in.h	/^    typedef uint32_t in_addr_t;$/;"	t
in_port_t	netinet/in.h	/^    typedef uint16_t in_port_t;$/;"	t
inch	curses.h	/^    extern chtype inch(void);$/;"	p	signature:(void)
inch	ncurses.h	/^    extern chtype inch(void);$/;"	p	signature:(void)
inchnstr	curses.h	/^    extern int inchnstr(chtype *, int);$/;"	p	signature:(chtype *, int)
inchnstr	ncurses.h	/^    extern int inchnstr(chtype *, int);$/;"	p	signature:(chtype *, int)
inchstr	curses.h	/^    extern int inchstr(chtype *);$/;"	p	signature:(chtype *)
inchstr	ncurses.h	/^    extern int inchstr(chtype *);$/;"	p	signature:(chtype *)
index	strings.h	/^    extern char *index(const char *, int);$/;"	p	signature:(const char *, int)
inet_addr	arpa/inet.h	/^    extern in_addr_t inet_addr(const char *);$/;"	p	signature:(const char *)
inet_aton	arpa/inet.h	/^    extern int inet_aton(const char *, struct in_addr *);$/;"	p	signature:(const char *, struct in_addr *)
inet_ntoa	arpa/inet.h	/^    extern char *inet_ntoa(struct in_addr);$/;"	p	signature:(struct in_addr)
inet_ntop	arpa/inet.h	/^    extern const char *inet_ntop(int, const void *, char *, socklen_t);$/;"	p	signature:(int, const void *, char *, socklen_t)
inet_pton	arpa/inet.h	/^    extern int inet_pton(int, const char *, void *);$/;"	p	signature:(int, const char *, void *)
inflate	zlib.h	/^    extern int inflate(z_streamp, int);$/;"	p	signature:(z_streamp, int)
inflateEnd	zlib.h	/^    extern int inflateEnd(z_streamp);$/;"	p	signature:(z_streamp)
inflateInit	zlib.h	22;"	d
inflateInit2	zlib.h	20;"	d
inflateInit2_	zlib.h	/^    extern int inflateInit2_(z_streamp, int, const char *, int);$/;"	p	signature:(z_streamp, int, const char *, int)
inflateInit_	zlib.h	/^    extern int inflateInit_(z_streamp, const char *, int);$/;"	p	signature:(z_streamp, const char *, int)
inflateReset	zlib.h	/^    extern int inflateReset(z_streamp);$/;"	p	signature:(z_streamp)
inflateSetDictionary	zlib.h	/^    extern int inflateSetDictionary(z_streamp, const Bytef *, uInt);$/;"	p	signature:(z_streamp, const Bytef *, uInt)
inflateSync	zlib.h	/^    extern int inflateSync(z_streamp);$/;"	p	signature:(z_streamp)
inflateSyncPoint	zlib.h	/^    extern int inflateSyncPoint(z_streamp);$/;"	p	signature:(z_streamp)
info	alsa/mixer_abst.h	/^	snd_ctl_card_info_t *info;$/;"	m	struct:_sm_class_basic	access:public
init	alsa/pcm_extplug.h	/^	int (*init) (void);$/;"	m	struct:snd_pcm_extplug_callback	access:public
init_color	curses.h	/^    extern int init_color(short, short, short, short);$/;"	p	signature:(short, short, short, short)
init_color	ncurses.h	/^    extern int init_color(short, short, short, short);$/;"	p	signature:(short, short, short, short)
init_pair	curses.h	/^    extern int init_pair(short, short, short);$/;"	p	signature:(short, short, short)
init_pair	ncurses.h	/^    extern int init_pair(short, short, short);$/;"	p	signature:(short, short, short)
initgroups	grp.h	/^    extern int initgroups(const char *, gid_t);$/;"	p	signature:(const char *, gid_t)
initscr	curses.h	/^    extern WINDOW *initscr(void);$/;"	p	signature:(void)
initscr	ncurses.h	/^    extern WINDOW *initscr(void);$/;"	p	signature:(void)
initstate	stdlib.h	/^    extern char *initstate(unsigned int, char *, size_t);$/;"	p	signature:(unsigned int, char *, size_t)
innstr	curses.h	/^    extern int innstr(char *, int);$/;"	p	signature:(char *, int)
innstr	ncurses.h	/^    extern int innstr(char *, int);$/;"	p	signature:(char *, int)
ino64_t	sys/types.h	/^    typedef unsigned long long int ino64_t;$/;"	t
ino_t	sys/types.h	/^    typedef unsigned long int ino_t;$/;"	t
input_set	cups/cups.h	/^	fd_set *input_set;$/;"	m	struct:__anon100	access:public
insch	curses.h	/^    extern int insch(chtype);$/;"	p	signature:(chtype)
insch	ncurses.h	/^    extern int insch(chtype);$/;"	p	signature:(chtype)
insdelln	curses.h	/^    extern int insdelln(int);$/;"	p	signature:(int)
insdelln	ncurses.h	/^    extern int insdelln(int);$/;"	p	signature:(int)
insertln	curses.h	/^    extern int insertln(void);$/;"	p	signature:(void)
insertln	ncurses.h	/^    extern int insertln(void);$/;"	p	signature:(void)
insnstr	curses.h	/^    extern int insnstr(const char *, int);$/;"	p	signature:(const char *, int)
insnstr	ncurses.h	/^    extern int insnstr(const char *, int);$/;"	p	signature:(const char *, int)
insque	search.h	/^    extern void insque(void *, void *);$/;"	p	signature:(void *, void *)
insstr	curses.h	/^    extern int insstr(const char *);$/;"	p	signature:(const char *)
insstr	ncurses.h	/^    extern int insstr(const char *);$/;"	p	signature:(const char *)
instance	cups/cups.h	/^	char *instance;$/;"	m	struct:__anon91	access:public
instr	curses.h	/^    extern int instr(char *);$/;"	p	signature:(char *)
instr	ncurses.h	/^    extern int instr(char *);$/;"	p	signature:(char *)
instr_begin	alsa/seq_event.h	/^	    snd_seq_ev_instr_begin_t instr_begin;	\/* instrument *\/$/;"	m	union:snd_seq_event::__anon13
int16_t	stdint.h	/^    typedef short int16_t;$/;"	t
int32_t	stdint.h	/^    typedef int int32_t;$/;"	t
int64_t	stdint.h	/^    typedef long int int64_t;$/;"	t
int64_t	stdint.h	/^    typedef long long int int64_t;$/;"	t
int8_t	stdint.h	/^    typedef signed char int8_t;$/;"	t
int_curr_symbol	locale.h	/^	char *int_curr_symbol;$/;"	m	struct:lconv	access:public
int_fast16_t	stdint.h	/^    typedef int int_fast16_t;$/;"	t
int_fast16_t	stdint.h	/^    typedef long int int_fast16_t;$/;"	t
int_fast32_t	stdint.h	/^    typedef int int_fast32_t;$/;"	t
int_fast32_t	stdint.h	/^    typedef long int int_fast32_t;$/;"	t
int_fast64_t	stdint.h	/^    typedef long int int_fast64_t;$/;"	t
int_fast64_t	stdint.h	/^    typedef long long int int_fast64_t;$/;"	t
int_fast8_t	stdint.h	/^    typedef signed char int_fast8_t;$/;"	t
int_frac_digits	locale.h	/^	char int_frac_digits;$/;"	m	struct:lconv	access:public
int_least16_t	stdint.h	/^    typedef short int int_least16_t;$/;"	t
int_least32_t	stdint.h	/^    typedef int int_least32_t;$/;"	t
int_least64_t	stdint.h	/^    typedef long int int_least64_t;$/;"	t
int_least64_t	stdint.h	/^    typedef long long int int_least64_t;$/;"	t
int_least8_t	stdint.h	/^    typedef signed char int_least8_t;$/;"	t
int_n_cs_precedes	locale.h	/^	char int_n_cs_precedes;$/;"	m	struct:lconv	access:public
int_n_sep_by_space	locale.h	/^	char int_n_sep_by_space;$/;"	m	struct:lconv	access:public
int_n_sign_posn	locale.h	/^	char int_n_sign_posn;$/;"	m	struct:lconv	access:public
int_p_cs_precedes	locale.h	/^	char int_p_cs_precedes;$/;"	m	struct:lconv	access:public
int_p_sep_by_space	locale.h	/^	char int_p_sep_by_space;$/;"	m	struct:lconv	access:public
int_p_sign_posn	locale.h	/^	char int_p_sign_posn;$/;"	m	struct:lconv	access:public
internal_state	zlib.h	/^    struct internal_state {$/;"	s
internal_state::dummy	zlib.h	/^	int dummy;$/;"	m	struct:internal_state	access:public
intf	zlib.h	/^    typedef int intf;$/;"	t
intmax_t	stdint.h	/^    typedef long int intmax_t;$/;"	t
intmax_t	stdint.h	/^    typedef long long int intmax_t;$/;"	t
intptr_t	stdint.h	/^    typedef int intptr_t;$/;"	t
intptr_t	stdint.h	/^    typedef long int intptr_t;$/;"	t
intrflush	curses.h	/^    extern int intrflush(WINDOW *, bool);$/;"	p	signature:(WINDOW *, bool)
intrflush	ncurses.h	/^    extern int intrflush(WINDOW *, bool);$/;"	p	signature:(WINDOW *, bool)
ioctl	sys/ioctl.h	/^    extern int ioctl(int, unsigned long int, ...);$/;"	p	signature:(int, unsigned long int, ...)
iov_base	sys/socket.h	/^	void *iov_base;$/;"	m	struct:iovec	access:public
iov_len	sys/socket.h	/^	size_t iov_len;$/;"	m	struct:iovec	access:public
iovec	sys/socket.h	/^    struct iovec {$/;"	s
iovec::iov_base	sys/socket.h	/^	void *iov_base;$/;"	m	struct:iovec	access:public
iovec::iov_len	sys/socket.h	/^	size_t iov_len;$/;"	m	struct:iovec	access:public
ip_mreq	netinet/in.h	/^    struct ip_mreq {$/;"	s
ip_mreq::imr_interface	netinet/in.h	/^	struct in_addr imr_interface;	\/* local IP address of interface *\/$/;"	m	struct:ip_mreq	typeref:struct:ip_mreq::in_addr	access:public
ip_mreq::imr_multiaddr	netinet/in.h	/^	struct in_addr imr_multiaddr;	\/* IP multicast address of group *\/$/;"	m	struct:ip_mreq	typeref:struct:ip_mreq::in_addr	access:public
ipc_perm	sys/ipc.h	/^    struct ipc_perm {$/;"	s
ipc_perm::__key	sys/ipc.h	/^	key_t __key;		\/* Key. *\/$/;"	m	struct:ipc_perm	access:public
ipc_perm::__key	sys/ipc.h	/^	key_t __key;$/;"	m	struct:ipc_perm	access:public
ipc_perm::__pad1	sys/ipc.h	/^	int __pad1;$/;"	m	struct:ipc_perm	access:public
ipc_perm::__pad1	sys/ipc.h	/^	unsigned int __pad1;$/;"	m	struct:ipc_perm	access:public
ipc_perm::__pad1	sys/ipc.h	/^	unsigned short __pad1;$/;"	m	struct:ipc_perm	access:public
ipc_perm::__pad2	sys/ipc.h	/^	unsigned short __pad2;$/;"	m	struct:ipc_perm	access:public
ipc_perm::__seq	sys/ipc.h	/^	long int __seq;$/;"	m	struct:ipc_perm	access:public
ipc_perm::__seq	sys/ipc.h	/^	unsigned int __seq;$/;"	m	struct:ipc_perm	access:public
ipc_perm::__seq	sys/ipc.h	/^	unsigned short __seq;	\/* Sequence number. *\/$/;"	m	struct:ipc_perm	access:public
ipc_perm::__seq	sys/ipc.h	/^	unsigned short __seq;$/;"	m	struct:ipc_perm	access:public
ipc_perm::__unused1	sys/ipc.h	/^	unsigned long int __unused1;$/;"	m	struct:ipc_perm	access:public
ipc_perm::__unused1	sys/ipc.h	/^	unsigned long long int __unused1;$/;"	m	struct:ipc_perm	access:public
ipc_perm::__unused2	sys/ipc.h	/^	unsigned long int __unused2;$/;"	m	struct:ipc_perm	access:public
ipc_perm::__unused2	sys/ipc.h	/^	unsigned long long int __unused2;$/;"	m	struct:ipc_perm	access:public
ipc_perm::cgid	sys/ipc.h	/^	gid_t cgid;$/;"	m	struct:ipc_perm	access:public
ipc_perm::cgid	sys/ipc.h	/^	uid_t cgid;		\/* Creator's group ID. *\/$/;"	m	struct:ipc_perm	access:public
ipc_perm::cgid	sys/ipc.h	/^	uid_t cgid;$/;"	m	struct:ipc_perm	access:public
ipc_perm::cuid	sys/ipc.h	/^	uid_t cuid;		\/* Creator's user ID. *\/$/;"	m	struct:ipc_perm	access:public
ipc_perm::cuid	sys/ipc.h	/^	uid_t cuid;$/;"	m	struct:ipc_perm	access:public
ipc_perm::gid	sys/ipc.h	/^	gid_t gid;		\/* Owner's group ID. *\/$/;"	m	struct:ipc_perm	access:public
ipc_perm::gid	sys/ipc.h	/^	gid_t gid;$/;"	m	struct:ipc_perm	access:public
ipc_perm::mode	sys/ipc.h	/^	mode_t mode;		\/* Read\/write permission. *\/$/;"	m	struct:ipc_perm	access:public
ipc_perm::mode	sys/ipc.h	/^	mode_t mode;$/;"	m	struct:ipc_perm	access:public
ipc_perm::mode	sys/ipc.h	/^	unsigned short mode;$/;"	m	struct:ipc_perm	access:public
ipc_perm::uid	sys/ipc.h	/^	uid_t uid;		\/* Owner's user ID. *\/$/;"	m	struct:ipc_perm	access:public
ipc_perm::uid	sys/ipc.h	/^	uid_t uid;$/;"	m	struct:ipc_perm	access:public
ipoff	signal.h	/^	unsigned long int ipoff;$/;"	m	struct:_fpstate	access:public
ipoff	ucontext.h	/^	unsigned long int ipoff;$/;"	m	struct:_libc_fpstate	access:public
ipp_jstate_t	cups/cups.h	/^    } ipp_jstate_t;$/;"	t	typeref:enum:__anon97
ipp_status_t	cups/cups.h	/^    } ipp_status_t;$/;"	t	typeref:enum:__anon99
ipv6_mreq	netinet/in.h	/^    struct ipv6_mreq {$/;"	s
ipv6_mreq::ipv6mr_interface	netinet/in.h	/^	int ipv6mr_interface;	\/* local IPv6 address of interface *\/$/;"	m	struct:ipv6_mreq	access:public
ipv6_mreq::ipv6mr_multiaddr	netinet/in.h	/^	struct in6_addr ipv6mr_multiaddr;	\/* IPv6 multicast address of group *\/$/;"	m	struct:ipv6_mreq	typeref:struct:ipv6_mreq::in6_addr	access:public
ipv6mr_interface	netinet/in.h	/^	int ipv6mr_interface;	\/* local IPv6 address of interface *\/$/;"	m	struct:ipv6_mreq	access:public
ipv6mr_multiaddr	netinet/in.h	/^	struct in6_addr ipv6mr_multiaddr;	\/* IPv6 multicast address of group *\/$/;"	m	struct:ipv6_mreq	typeref:struct:ipv6_mreq::in6_addr	access:public
irq	net/if.h	/^	unsigned char irq;$/;"	m	struct:ifmap	access:public
is_default	cups/cups.h	/^	int is_default;$/;"	m	struct:__anon91	access:public
is_linetouched	curses.h	/^    extern bool is_linetouched(WINDOW *, int);$/;"	p	signature:(WINDOW *, int)
is_linetouched	ncurses.h	/^    extern bool is_linetouched(WINDOW *, int);$/;"	p	signature:(WINDOW *, int)
is_wintouched	curses.h	/^    extern bool is_wintouched(WINDOW *);$/;"	p	signature:(WINDOW *)
is_wintouched	ncurses.h	/^    extern bool is_wintouched(WINDOW *);$/;"	p	signature:(WINDOW *)
isalnum	ctype.h	/^    extern int isalnum(int);$/;"	p	signature:(int)
isalpha	ctype.h	/^    extern int isalpha(int);$/;"	p	signature:(int)
isascii	ctype.h	/^    extern int isascii(int);$/;"	p	signature:(int)
isatty	unistd.h	/^    extern int isatty(int);$/;"	p	signature:(int)
isblank	ctype.h	/^    extern int isblank(int);$/;"	p	signature:(int)
iscntrl	ctype.h	/^    extern int iscntrl(int);$/;"	p	signature:(int)
isdigit	ctype.h	/^    extern int isdigit(int);$/;"	p	signature:(int)
isendwin	curses.h	/^    extern bool isendwin(void);$/;"	p	signature:(void)
isendwin	ncurses.h	/^    extern bool isendwin(void);$/;"	p	signature:(void)
isfinite	math.h	100;"	d
isfinite	math.h	104;"	d
isfinite	math.h	108;"	d
isfinite	math.h	112;"	d
isfinite	math.h	116;"	d
isfinite	math.h	92;"	d
isfinite	math.h	96;"	d
isgraph	ctype.h	/^    extern int isgraph(int);$/;"	p	signature:(int)
isgreater	math.h	285;"	d
isgreaterequal	math.h	287;"	d
isinf	math.h	120;"	d
isinf	math.h	124;"	d
isinf	math.h	128;"	d
isinf	math.h	132;"	d
isinf	math.h	136;"	d
isinf	math.h	140;"	d
isinf	math.h	144;"	d
isless	math.h	281;"	d
islessequal	math.h	283;"	d
islessgreater	math.h	279;"	d
islower	ctype.h	/^    extern int islower(int);$/;"	p	signature:(int)
isnan	math.h	148;"	d
isnan	math.h	152;"	d
isnan	math.h	156;"	d
isnan	math.h	160;"	d
isnan	math.h	164;"	d
isnan	math.h	168;"	d
isnan	math.h	172;"	d
isnormal	math.h	34;"	d
isprint	ctype.h	/^    extern int isprint(int);$/;"	p	signature:(int)
ispunct	ctype.h	/^    extern int ispunct(int);$/;"	p	signature:(int)
isspace	ctype.h	/^    extern int isspace(int);$/;"	p	signature:(int)
isunordered	math.h	277;"	d
isupper	ctype.h	/^    extern int isupper(int);$/;"	p	signature:(int)
iswalnum	wctype.h	/^    extern int iswalnum(wint_t);$/;"	p	signature:(wint_t)
iswalpha	wctype.h	/^    extern int iswalpha(wint_t);$/;"	p	signature:(wint_t)
iswblank	wctype.h	/^    extern int iswblank(wint_t);$/;"	p	signature:(wint_t)
iswcntrl	wctype.h	/^    extern int iswcntrl(wint_t);$/;"	p	signature:(wint_t)
iswctype	wctype.h	/^    extern int iswctype(wint_t, wctype_t);$/;"	p	signature:(wint_t, wctype_t)
iswdigit	wctype.h	/^    extern int iswdigit(wint_t);$/;"	p	signature:(wint_t)
iswgraph	wctype.h	/^    extern int iswgraph(wint_t);$/;"	p	signature:(wint_t)
iswlower	wctype.h	/^    extern int iswlower(wint_t);$/;"	p	signature:(wint_t)
iswprint	wctype.h	/^    extern int iswprint(wint_t);$/;"	p	signature:(wint_t)
iswpunct	wctype.h	/^    extern int iswpunct(wint_t);$/;"	p	signature:(wint_t)
iswspace	wctype.h	/^    extern int iswspace(wint_t);$/;"	p	signature:(wint_t)
iswupper	wctype.h	/^    extern int iswupper(wint_t);$/;"	p	signature:(wint_t)
iswxdigit	wctype.h	/^    extern int iswxdigit(wint_t);$/;"	p	signature:(wint_t)
isxdigit	ctype.h	/^    extern int isxdigit(int);$/;"	p	signature:(int)
it_interval	sys/time.h	/^	struct timeval it_interval;$/;"	m	struct:itimerval	typeref:struct:itimerval::timeval	access:public
it_interval	time.h	/^	struct timespec it_interval;$/;"	m	struct:itimerspec	typeref:struct:itimerspec::timespec	access:public
it_value	sys/time.h	/^	struct timeval it_value;$/;"	m	struct:itimerval	typeref:struct:itimerval::timeval	access:public
it_value	time.h	/^	struct timespec it_value;$/;"	m	struct:itimerspec	typeref:struct:itimerspec::timespec	access:public
itimerspec	time.h	/^    struct itimerspec {$/;"	s
itimerspec::it_interval	time.h	/^	struct timespec it_interval;$/;"	m	struct:itimerspec	typeref:struct:itimerspec::timespec	access:public
itimerspec::it_value	time.h	/^	struct timespec it_value;$/;"	m	struct:itimerspec	typeref:struct:itimerspec::timespec	access:public
itimerval	sys/time.h	/^    struct itimerval {$/;"	s
itimerval::it_interval	sys/time.h	/^	struct timeval it_interval;$/;"	m	struct:itimerval	typeref:struct:itimerval::timeval	access:public
itimerval::it_value	sys/time.h	/^	struct timeval it_value;$/;"	m	struct:itimerval	typeref:struct:itimerval::timeval	access:public
j0	math.h	/^    extern double j0(double);$/;"	p	signature:(double)
j0f	math.h	/^    extern float j0f(float);$/;"	p	signature:(float)
j0l	math.h	/^    extern long double j0l(long double);$/;"	p	signature:(long double)
j1	math.h	/^    extern double j1(double);$/;"	p	signature:(double)
j1f	math.h	/^    extern float j1f(float);$/;"	p	signature:(float)
j1l	math.h	/^    extern long double j1l(long double);$/;"	p	signature:(long double)
jcl_begin	cups/ppd.h	/^	char *jcl_begin;$/;"	m	struct:__anon111	access:public
jcl_end	cups/ppd.h	/^	char *jcl_end;$/;"	m	struct:__anon111	access:public
jcl_ps	cups/ppd.h	/^	char *jcl_ps;$/;"	m	struct:__anon111	access:public
jmp_buf	setjmp.h	/^    typedef struct __jmp_buf_tag jmp_buf[1];$/;"	t	typeref:struct:__jmp_buf_tag
jn	math.h	/^    extern double jn(int, double);$/;"	p	signature:(int, double)
jnf	math.h	/^    extern float jnf(int, float);$/;"	p	signature:(int, float)
jnl	math.h	/^    extern long double jnl(int, long double);$/;"	p	signature:(int, long double)
jrand48	stdlib.h	/^    extern long int jrand48(unsigned short[3]);$/;"	p	signature:(unsigned short[3])
keep_alive	cups/cups.h	/^	http_keepalive_t keep_alive;$/;"	m	struct:__anon100	access:public
key	rpc/auth.h	/^	} key;$/;"	m	union:des_block	typeref:struct:des_block::__anon141
key	search.h	/^	char *key;$/;"	m	struct:entry	access:public
key_decryptsession	rpc/auth.h	/^    extern int key_decryptsession(char *, union des_block *);$/;"	p	signature:(char *, union des_block *)
key_t	sys/types.h	/^    typedef int key_t;$/;"	t
keyname	curses.h	/^    extern const char *keyname(int);$/;"	p	signature:(int)
keyname	ncurses.h	/^    extern const char *keyname(int);$/;"	p	signature:(int)
keypad	curses.h	/^    extern int keypad(WINDOW *, bool);$/;"	p	signature:(WINDOW *, bool)
keypad	ncurses.h	/^    extern int keypad(WINDOW *, bool);$/;"	p	signature:(WINDOW *, bool)
keyword	cups/ppd.h	/^	char keyword[41];$/;"	m	struct:__anon106	access:public
kill	signal.h	/^    extern int kill(pid_t, int);$/;"	p	signature:(pid_t, int)
killchar	curses.h	/^    extern char killchar(void);$/;"	p	signature:(void)
killchar	ncurses.h	/^    extern char killchar(void);$/;"	p	signature:(void)
killpg	signal.h	/^    extern int killpg(pid_t, int);$/;"	p	signature:(pid_t, int)
l64a	stdlib.h	/^    extern char *l64a(long int);$/;"	p	signature:(long int)
l_len	fcntl.h	/^	loff_t l_len;$/;"	m	struct:flock64	access:public
l_len	fcntl.h	/^	off_t l_len;$/;"	m	struct:flock	access:public
l_linger	sys/socket.h	/^	int l_linger;$/;"	m	struct:linger	access:public
l_onoff	sys/socket.h	/^	int l_onoff;$/;"	m	struct:linger	access:public
l_pid	fcntl.h	/^	pid_t l_pid;$/;"	m	struct:flock	access:public
l_pid	fcntl.h	/^	pid_t l_pid;$/;"	m	struct:flock64	access:public
l_start	fcntl.h	/^	loff_t l_start;$/;"	m	struct:flock64	access:public
l_start	fcntl.h	/^	off_t l_start;$/;"	m	struct:flock	access:public
l_type	fcntl.h	/^	short l_type;$/;"	m	struct:flock	access:public
l_type	fcntl.h	/^	short l_type;$/;"	m	struct:flock64	access:public
l_whence	fcntl.h	/^	short l_whence;$/;"	m	struct:flock	access:public
l_whence	fcntl.h	/^	short l_whence;$/;"	m	struct:flock64	access:public
labs	stdlib.h	/^    extern long int labs(long int);$/;"	p	signature:(long int)
landscape	cups/ppd.h	/^	int landscape;$/;"	m	struct:__anon111	access:public
lang_encoding	cups/ppd.h	/^	char *lang_encoding;$/;"	m	struct:__anon111	access:public
lang_version	cups/ppd.h	/^	char *lang_version;$/;"	m	struct:__anon111	access:public
language	cups/cups.h	/^	char language[16];$/;"	m	struct:cups_lang_str	access:public
language_level	cups/ppd.h	/^	int language_level;$/;"	m	struct:__anon111	access:public
lastlog	utmp.h	/^    struct lastlog {$/;"	s
lastlog::ll_host	utmp.h	/^	char ll_host[UT_HOSTSIZE];$/;"	m	struct:lastlog	access:public
lastlog::ll_line	utmp.h	/^	char ll_line[UT_LINESIZE];$/;"	m	struct:lastlog	access:public
lastlog::ll_time	utmp.h	/^	int32_t ll_time;$/;"	m	struct:lastlog	access:public
lastlog::ll_time	utmp.h	/^	time_t ll_time;$/;"	m	struct:lastlog	access:public
lchown	unistd.h	/^    extern int lchown(const char *, uid_t, gid_t);$/;"	p	signature:(const char *, uid_t, gid_t)
lcong48	stdlib.h	/^    extern void lcong48(unsigned short[7]);$/;"	p	signature:(unsigned short[7])
lconv	locale.h	/^    struct lconv {$/;"	s
lconv::currency_symbol	locale.h	/^	char *currency_symbol;$/;"	m	struct:lconv	access:public
lconv::decimal_point	locale.h	/^	char *decimal_point;$/;"	m	struct:lconv	access:public
lconv::frac_digits	locale.h	/^	char frac_digits;$/;"	m	struct:lconv	access:public
lconv::grouping	locale.h	/^	char *grouping;$/;"	m	struct:lconv	access:public
lconv::int_curr_symbol	locale.h	/^	char *int_curr_symbol;$/;"	m	struct:lconv	access:public
lconv::int_frac_digits	locale.h	/^	char int_frac_digits;$/;"	m	struct:lconv	access:public
lconv::int_n_cs_precedes	locale.h	/^	char int_n_cs_precedes;$/;"	m	struct:lconv	access:public
lconv::int_n_sep_by_space	locale.h	/^	char int_n_sep_by_space;$/;"	m	struct:lconv	access:public
lconv::int_n_sign_posn	locale.h	/^	char int_n_sign_posn;$/;"	m	struct:lconv	access:public
lconv::int_p_cs_precedes	locale.h	/^	char int_p_cs_precedes;$/;"	m	struct:lconv	access:public
lconv::int_p_sep_by_space	locale.h	/^	char int_p_sep_by_space;$/;"	m	struct:lconv	access:public
lconv::int_p_sign_posn	locale.h	/^	char int_p_sign_posn;$/;"	m	struct:lconv	access:public
lconv::mon_decimal_point	locale.h	/^	char *mon_decimal_point;$/;"	m	struct:lconv	access:public
lconv::mon_grouping	locale.h	/^	char *mon_grouping;$/;"	m	struct:lconv	access:public
lconv::mon_thousands_sep	locale.h	/^	char *mon_thousands_sep;$/;"	m	struct:lconv	access:public
lconv::n_cs_precedes	locale.h	/^	char n_cs_precedes;$/;"	m	struct:lconv	access:public
lconv::n_sep_by_space	locale.h	/^	char n_sep_by_space;$/;"	m	struct:lconv	access:public
lconv::n_sign_posn	locale.h	/^	char n_sign_posn;$/;"	m	struct:lconv	access:public
lconv::negative_sign	locale.h	/^	char *negative_sign;$/;"	m	struct:lconv	access:public
lconv::p_cs_precedes	locale.h	/^	char p_cs_precedes;$/;"	m	struct:lconv	access:public
lconv::p_sep_by_space	locale.h	/^	char p_sep_by_space;$/;"	m	struct:lconv	access:public
lconv::p_sign_posn	locale.h	/^	char p_sign_posn;$/;"	m	struct:lconv	access:public
lconv::positive_sign	locale.h	/^	char *positive_sign;$/;"	m	struct:lconv	access:public
lconv::thousands_sep	locale.h	/^	char *thousands_sep;$/;"	m	struct:lconv	access:public
ldexp	math.h	/^    extern double ldexp(double, int);$/;"	p	signature:(double, int)
ldexpf	math.h	/^    extern float ldexpf(float, int);$/;"	p	signature:(float, int)
ldexpl	math.h	/^    extern long double ldexpl(long double, int);$/;"	p	signature:(long double, int)
ldiv	stdlib.h	/^    extern ldiv_t ldiv(long int, long int);$/;"	p	signature:(long int, long int)
ldiv_t	stdlib.h	/^    } ldiv_t;$/;"	t	typeref:struct:__anon118
leaf	search.h	/^	leaf$/;"	e	enum:__anon54
leaveok	curses.h	/^    extern int leaveok(WINDOW *, bool);$/;"	p	signature:(WINDOW *, bool)
leaveok	ncurses.h	/^    extern int leaveok(WINDOW *, bool);$/;"	p	signature:(WINDOW *, bool)
left	cups/ppd.h	/^	float left;$/;"	m	struct:__anon107	access:public
len	alsa/seq_event.h	/^	unsigned int len;$/;"	m	struct:snd_seq_ev_ext	access:public
length	cups/ppd.h	/^	float length;$/;"	m	struct:__anon107	access:public
level	ftw.h	/^	int level;$/;"	m	struct:FTW	access:public
lfind	search.h	/^    extern void *lfind(const void *, const void *, size_t *, size_t,$/;"	p	signature:(const void *, const void *, size_t *, size_t, __compar_fn_t)
lgamma	math.h	/^    extern double lgamma(double);$/;"	p	signature:(double)
lgamma_r	math.h	/^    extern double lgamma_r(double, int *);$/;"	p	signature:(double, int *)
lgammaf	math.h	/^    extern float lgammaf(float);$/;"	p	signature:(float)
lgammaf_r	math.h	/^    extern float lgammaf_r(float, int *);$/;"	p	signature:(float, int *)
lgammal	math.h	/^    extern long double lgammal(long double);$/;"	p	signature:(long double)
lgammal_r	math.h	/^    extern long double lgammal_r(long double, int *);$/;"	p	signature:(long double, int *)
linger	sys/socket.h	/^    struct linger {$/;"	s
linger::l_linger	sys/socket.h	/^	int l_linger;$/;"	m	struct:linger	access:public
linger::l_onoff	sys/socket.h	/^	int l_onoff;$/;"	m	struct:linger	access:public
link	signal.h	/^	unsigned long int link;$/;"	m	struct:pt_regs	access:public
link	unistd.h	/^    extern int link(const char *, const char *);$/;"	p	signature:(const char *, const char *)
listen	sys/socket.h	/^    extern int listen(int, int);$/;"	p	signature:(int, int)
ll_host	utmp.h	/^	char ll_host[UT_HOSTSIZE];$/;"	m	struct:lastlog	access:public
ll_line	utmp.h	/^	char ll_line[UT_LINESIZE];$/;"	m	struct:lastlog	access:public
ll_time	utmp.h	/^	int32_t ll_time;$/;"	m	struct:lastlog	access:public
ll_time	utmp.h	/^	time_t ll_time;$/;"	m	struct:lastlog	access:public
llabs	stdlib.h	/^    extern long long int llabs(long long int);$/;"	p	signature:(long long int)
lldiv	stdlib.h	/^    extern lldiv_t lldiv(long long int, long long int);$/;"	p	signature:(long long int, long long int)
lldiv_t	stdlib.h	/^    } lldiv_t;$/;"	t	typeref:struct:__anon119
llrint	math.h	/^    extern long long int llrint(double);$/;"	p	signature:(double)
llrintf	math.h	/^    extern long long int llrintf(float);$/;"	p	signature:(float)
llrintl	math.h	/^    extern long long int llrintl(long double);$/;"	p	signature:(long double)
llround	math.h	/^    extern long long int llround(double);$/;"	p	signature:(double)
llroundf	math.h	/^    extern long long int llroundf(float);$/;"	p	signature:(float)
llroundl	math.h	/^    extern long long int llroundl(long double);$/;"	p	signature:(long double)
locale_t	locale.h	/^    typedef struct __locale_struct *locale_t;$/;"	t	typeref:struct:__locale_struct
localeconv	locale.h	/^    extern struct lconv *localeconv(void);$/;"	p	signature:(void)
localtime	time.h	/^    extern struct tm *localtime(const time_t *);$/;"	p	signature:(const time_t *)
localtime_r	time.h	/^    extern struct tm *localtime_r(const time_t *, struct tm *);$/;"	p	signature:(const time_t *, struct tm *)
lockf	unistd.h	/^    extern int lockf(int, int, off_t);$/;"	p	signature:(int, int, off_t)
lockf64	unistd.h	/^    extern int lockf64(int, int, off64_t);$/;"	p	signature:(int, int, off64_t)
loff_t	sys/types.h	/^    typedef long long int loff_t;$/;"	t
log	math.h	/^    extern double log(double);$/;"	p	signature:(double)
log10	math.h	/^    extern double log10(double);$/;"	p	signature:(double)
log10f	math.h	/^    extern float log10f(float);$/;"	p	signature:(float)
log10l	math.h	/^    extern long double log10l(long double);$/;"	p	signature:(long double)
log1p	math.h	/^    extern double log1p(double);$/;"	p	signature:(double)
log1pf	math.h	/^    extern float log1pf(float);$/;"	p	signature:(float)
log1pl	math.h	/^    extern long double log1pl(long double);$/;"	p	signature:(long double)
log2	math.h	/^    extern double log2(double);$/;"	p	signature:(double)
log2f	math.h	/^    extern float log2f(float);$/;"	p	signature:(float)
log2l	math.h	/^    extern long double log2l(long double);$/;"	p	signature:(long double)
logb	math.h	/^    extern double logb(double);$/;"	p	signature:(double)
logbf	math.h	/^    extern float logbf(float);$/;"	p	signature:(float)
logbl	math.h	/^    extern long double logbl(long double);$/;"	p	signature:(long double)
logf	math.h	/^    extern float logf(float);$/;"	p	signature:(float)
login	utmp.h	/^    extern void login(const struct utmp *);$/;"	p	signature:(const struct utmp *)
login_tty	utmp.h	/^    extern int login_tty(int);$/;"	p	signature:(int)
logl	math.h	/^    extern long double logl(long double);$/;"	p	signature:(long double)
logout	utmp.h	/^    extern int logout(const char *);$/;"	p	signature:(const char *)
logwtmp	utmp.h	/^    extern void logwtmp(const char *, const char *, const char *);$/;"	p	signature:(const char *, const char *, const char *)
longjmp	setjmp.h	/^    extern void longjmp(jmp_buf, int);$/;"	p	signature:(jmp_buf, int)
longname	alsa/control_external.h	/^	char longname[80];$/;"	m	struct:snd_ctl_ext	access:public
longname	curses.h	/^    extern char *longname(void);$/;"	p	signature:(void)
longname	ncurses.h	/^    extern char *longname(void);$/;"	p	signature:(void)
loop	alsa/seq_event.h	/^	    snd_seq_ev_loop_t loop;	\/* loop control *\/$/;"	m	union:snd_seq_ev_sample_control::__anon12
low	rpc/auth.h	/^	    u_int32_t low;$/;"	m	struct:des_block::__anon141	access:public
low	rpc/clnt.h	/^		u_long low;$/;"	m	struct:rpc_err::__anon142::__anon143	access:public
low	rpc/rpc_msg.h	/^		unsigned long int low;$/;"	m	struct:accepted_reply::__anon134::__anon135	access:public
low	rpc/rpc_msg.h	/^		unsigned long int low;$/;"	m	struct:rejected_reply::__anon137::__anon138	access:public
lr	alsa/seq_event.h	/^	short int lr;$/;"	m	struct:snd_seq_ev_volume	access:public
lrand48	stdlib.h	/^    extern long int lrand48(void);$/;"	p	signature:(void)
lrint	math.h	/^    extern long int lrint(double);$/;"	p	signature:(double)
lrintf	math.h	/^    extern long int lrintf(float);$/;"	p	signature:(float)
lrintl	math.h	/^    extern long int lrintl(long double);$/;"	p	signature:(long double)
lround	math.h	/^    extern long int lround(double);$/;"	p	signature:(double)
lroundf	math.h	/^    extern long int lroundf(float);$/;"	p	signature:(float)
lroundl	math.h	/^    extern long int lroundl(long double);$/;"	p	signature:(long double)
lsearch	search.h	/^    extern void *lsearch(const void *, void *, size_t *, size_t,$/;"	p	signature:(const void *, void *, size_t *, size_t, __compar_fn_t)
lseek	unistd.h	/^    extern off_t lseek(int, off_t, int);$/;"	p	signature:(int, off_t, int)
lseek64	unistd.h	/^    extern loff_t lseek64(int, loff_t, int);$/;"	p	signature:(int, loff_t, int)
lstat	sys/stat.h	/^    extern int lstat(const char *, struct stat *);$/;"	p	signature:(const char *, struct stat *)
lstat64	sys/stat.h	/^    extern int lstat64(const char *, struct stat64 *);$/;"	p	signature:(const char *, struct stat64 *)
machine	sys/utsname.h	/^	char machine[65];$/;"	m	struct:utsname	access:public
magic	signal.h	/^	unsigned short magic;$/;"	m	struct:_fpstate	access:public
makecontext	ucontext.h	/^    extern void makecontext(ucontext_t *, void (*)(void)$/;"	p	signature:(ucontext_t *, void (*)(void) , int, ...)
malloc	stdlib.h	/^    extern void *malloc(size_t);$/;"	p	signature:(size_t)
manual_copies	cups/ppd.h	/^	int manual_copies;$/;"	m	struct:__anon111	access:public
manufacturer	cups/ppd.h	/^	char *manufacturer;$/;"	m	struct:__anon111	access:public
marked	cups/ppd.h	/^	char marked;$/;"	m	struct:__anon105	access:public
marked	cups/ppd.h	/^	int marked;$/;"	m	struct:__anon107	access:public
mask	signal.h	/^	unsigned long int mask;$/;"	m	struct:__anon16	access:public
mask	signal.h	/^	unsigned long int mask;$/;"	m	struct:__anon17	access:public
matrix	cups/ppd.h	/^	float matrix[3][3];$/;"	m	struct:__anon109	access:public
mblen	stdlib.h	/^    extern int mblen(const char *, size_t);$/;"	p	signature:(const char *, size_t)
mbrlen	wchar.h	/^    extern size_t mbrlen(const char *, size_t, mbstate_t *);$/;"	p	signature:(const char *, size_t, mbstate_t *)
mbrtowc	wchar.h	/^    extern size_t mbrtowc(wchar_t *, const char *, size_t, mbstate_t *);$/;"	p	signature:(wchar_t *, const char *, size_t, mbstate_t *)
mbsinit	wchar.h	/^    extern int mbsinit(const mbstate_t *);$/;"	p	signature:(const mbstate_t *)
mbsnrtowcs	wchar.h	/^    extern size_t mbsnrtowcs(wchar_t *, const char **, size_t, size_t,$/;"	p	signature:(wchar_t *, const char **, size_t, size_t, mbstate_t *)
mbsrtowcs	wchar.h	/^    extern size_t mbsrtowcs(wchar_t *, const char **, size_t, mbstate_t *);$/;"	p	signature:(wchar_t *, const char **, size_t, mbstate_t *)
mbstate_t	wctype.h	/^    typedef __mbstate_t mbstate_t;$/;"	t
mbstowcs	stdlib.h	/^    extern size_t mbstowcs(wchar_t *, const char *, size_t);$/;"	p	signature:(wchar_t *, const char *, size_t)
mbtowc	stdlib.h	/^    extern int mbtowc(wchar_t *, const char *, size_t);$/;"	p	signature:(wchar_t *, const char *, size_t)
mcontext_t	ucontext.h	/^    typedef struct sigcontext mcontext_t;$/;"	t	typeref:struct:sigcontext
mcontext_t	ucontext.h	/^    } mcontext_t;$/;"	t	typeref:struct:__anon126
mcontext_t	ucontext.h	/^    } mcontext_t;$/;"	t	typeref:struct:__anon127
mcontext_t	ucontext.h	/^    } mcontext_t;$/;"	t	typeref:struct:__anon128
mcontext_t	ucontext.h	/^    } mcontext_t;$/;"	t	typeref:struct:__anon129
mcontext_t	ucontext.h	/^    } mcontext_t;$/;"	t	typeref:struct:__anon130
mcontext_t	ucontext.h	/^    } mcontext_t;$/;"	t	typeref:struct:__anon131
md5_byte_t	cups/cups.h	/^    typedef unsigned char md5_byte_t;$/;"	t
md5_state	cups/cups.h	/^	md5_state_t md5_state;$/;"	m	struct:__anon100	access:public
md5_state_s	cups/cups.h	/^    struct md5_state_s {$/;"	s
md5_state_s::abcd	cups/cups.h	/^	md5_word_t abcd[4];$/;"	m	struct:md5_state_s	access:public
md5_state_s::buf	cups/cups.h	/^	md5_byte_t buf[64];$/;"	m	struct:md5_state_s	access:public
md5_state_s::count	cups/cups.h	/^	md5_word_t count[2];$/;"	m	struct:md5_state_s	access:public
md5_state_t	cups/cups.h	/^    typedef struct md5_state_s md5_state_t;$/;"	t	typeref:struct:md5_state_s
md5_word_t	cups/cups.h	/^    typedef unsigned int md5_word_t;$/;"	t
media_type	cups/ppd.h	/^	char media_type[41];$/;"	m	struct:__anon109	access:public
mem_end	net/if.h	/^	unsigned long int mem_end;$/;"	m	struct:ifmap	access:public
mem_start	net/if.h	/^	unsigned long int mem_start;$/;"	m	struct:ifmap	access:public
memccpy	string.h	/^    extern void *memccpy(void *, const void *, int, size_t);$/;"	p	signature:(void *, const void *, int, size_t)
memchr	string.h	/^    extern void *memchr(const void *, int, size_t);$/;"	p	signature:(const void *, int, size_t)
memcmp	string.h	/^    extern int memcmp(const void *, const void *, size_t);$/;"	p	signature:(const void *, const void *, size_t)
memcpy	string.h	/^    extern void *memcpy(void *, const void *, size_t);$/;"	p	signature:(void *, const void *, size_t)
memmem	string.h	/^    extern void *memmem(const void *, size_t, const void *, size_t);$/;"	p	signature:(const void *, size_t, const void *, size_t)
memmove	string.h	/^    extern void *memmove(void *, const void *, size_t);$/;"	p	signature:(void *, const void *, size_t)
memrchr	string.h	/^    extern void *memrchr(const void *, int, size_t);$/;"	p	signature:(const void *, int, size_t)
memset	string.h	/^    extern void *memset(void *, int, size_t);$/;"	p	signature:(void *, int, size_t)
messages	cups/cups.h	/^	char *messages[506];$/;"	m	struct:cups_lang_str	access:public
meta	curses.h	/^    extern int meta(WINDOW *, bool);$/;"	p	signature:(WINDOW *, bool)
meta	ncurses.h	/^    extern int meta(WINDOW *, bool);$/;"	p	signature:(WINDOW *, bool)
millitm	sys/timeb.h	/^	unsigned short millitm;	\/* Additional milliseconds. *\/$/;"	m	struct:timeb	access:public
mixername	alsa/control_external.h	/^	char mixername[80];$/;"	m	struct:snd_ctl_ext	access:public
mkdir	unistd.h	/^    extern int mkdir(const char *, mode_t);$/;"	p	signature:(const char *, mode_t)
mkfifo	sys/stat.h	/^    extern int mkfifo(const char *, mode_t);$/;"	p	signature:(const char *, mode_t)
mknod	unistd.h	/^    extern int mknod(const char *, mode_t, dev_t);$/;"	p	signature:(const char *, mode_t, dev_t)
mkstemp	unistd.h	/^    extern int mkstemp(char *);$/;"	p	signature:(char *)
mkstemp64	stdlib.h	/^    extern int mkstemp64(char *);$/;"	p	signature:(char *)
mktemp	stdlib.h	/^    extern char *mktemp(char *);$/;"	p	signature:(char *)
mktime	time.h	/^    extern time_t mktime(struct tm *);$/;"	p	signature:(struct tm *)
mlock	sys/mman.h	/^    extern int mlock(const void *, size_t);$/;"	p	signature:(const void *, size_t)
mlockall	sys/mman.h	/^    extern int mlockall(int);$/;"	p	signature:(int)
mmap	sys/mman.h	/^    extern void *mmap(void *, size_t, int, int, int, off_t);$/;"	p	signature:(void *, size_t, int, int, int, off_t)
mmap64	sys/mman.h	/^    extern void *mmap64(void *, size_t, int, int, int, off64_t);$/;"	p	signature:(void *, size_t, int, int, int, off64_t)
mode	cups/raster.h	/^	cups_mode_t mode;$/;"	m	struct:__anon78	access:public
mode	sys/ipc.h	/^	mode_t mode;		\/* Read\/write permission. *\/$/;"	m	struct:ipc_perm	access:public
mode	sys/ipc.h	/^	mode_t mode;$/;"	m	struct:ipc_perm	access:public
mode	sys/ipc.h	/^	unsigned short mode;$/;"	m	struct:ipc_perm	access:public
mode_t	sys/types.h	/^    typedef unsigned int mode_t;$/;"	t
model_number	cups/ppd.h	/^	int model_number;$/;"	m	struct:__anon111	access:public
modelname	cups/ppd.h	/^	char *modelname;$/;"	m	struct:__anon111	access:public
modf	math.h	/^    extern double modf(double, double *);$/;"	p	signature:(double, double *)
modff	math.h	/^    extern float modff(float, float *);$/;"	p	signature:(float, float *)
modfl	math.h	/^    extern long double modfl(long double, long double *);$/;"	p	signature:(long double, long double *)
modtime	utime.h	/^	time_t modtime;$/;"	m	struct:utimbuf	access:public
mon_decimal_point	locale.h	/^	char *mon_decimal_point;$/;"	m	struct:lconv	access:public
mon_grouping	locale.h	/^	char *mon_grouping;$/;"	m	struct:lconv	access:public
mon_thousands_sep	locale.h	/^	char *mon_thousands_sep;$/;"	m	struct:lconv	access:public
move	curses.h	/^    extern int move(int, int);$/;"	p	signature:(int, int)
move	ncurses.h	/^    extern int move(int, int);$/;"	p	signature:(int, int)
mprotect	sys/mman.h	/^    extern int mprotect(void *, size_t, int);$/;"	p	signature:(void *, size_t, int)
mq	signal.h	/^	unsigned long int mq;	\/* 601 only (not used at present). Used on APUS to hold IPL val *\/$/;"	m	struct:pt_regs	access:public
mq_attr	mqueue.h	/^    struct mq_attr {$/;"	s
mq_attr::__pad	mqueue.h	/^	long int __pad[4];$/;"	m	struct:mq_attr	access:public
mq_attr::mq_curmsgs	mqueue.h	/^	long int mq_curmsgs;$/;"	m	struct:mq_attr	access:public
mq_attr::mq_flags	mqueue.h	/^	long int mq_flags;$/;"	m	struct:mq_attr	access:public
mq_attr::mq_maxmsg	mqueue.h	/^	long int mq_maxmsg;$/;"	m	struct:mq_attr	access:public
mq_attr::mq_msgsize	mqueue.h	/^	long int mq_msgsize;$/;"	m	struct:mq_attr	access:public
mq_close	mqueue.h	/^    extern int mq_close(mqd_t);$/;"	p	signature:(mqd_t)
mq_curmsgs	mqueue.h	/^	long int mq_curmsgs;$/;"	m	struct:mq_attr	access:public
mq_flags	mqueue.h	/^	long int mq_flags;$/;"	m	struct:mq_attr	access:public
mq_getattr	mqueue.h	/^    extern int mq_getattr(mqd_t, struct mq_attr *);$/;"	p	signature:(mqd_t, struct mq_attr *)
mq_maxmsg	mqueue.h	/^	long int mq_maxmsg;$/;"	m	struct:mq_attr	access:public
mq_msgsize	mqueue.h	/^	long int mq_msgsize;$/;"	m	struct:mq_attr	access:public
mq_notify	mqueue.h	/^    extern int mq_notify(mqd_t, const struct sigevent *);$/;"	p	signature:(mqd_t, const struct sigevent *)
mq_open	mqueue.h	/^    extern mqd_t mq_open(const char *, int, ...);$/;"	p	signature:(const char *, int, ...)
mq_receive	mqueue.h	/^    extern ssize_t mq_receive(mqd_t, char *, size_t, unsigned int *);$/;"	p	signature:(mqd_t, char *, size_t, unsigned int *)
mq_send	mqueue.h	/^    extern int mq_send(mqd_t, const char *, size_t, unsigned int);$/;"	p	signature:(mqd_t, const char *, size_t, unsigned int)
mq_setattr	mqueue.h	/^    extern int mq_setattr(mqd_t, const struct mq_attr *, struct mq_attr *);$/;"	p	signature:(mqd_t, const struct mq_attr *, struct mq_attr *)
mq_timedreceive	mqueue.h	/^    extern ssize_t mq_timedreceive(mqd_t, char *, size_t, unsigned int *,$/;"	p	signature:(mqd_t, char *, size_t, unsigned int *, const struct timespec *)
mq_timedsend	mqueue.h	/^    extern int mq_timedsend(mqd_t, const char *, size_t, unsigned int,$/;"	p	signature:(mqd_t, const char *, size_t, unsigned int, const struct timespec *)
mq_unlink	mqueue.h	/^    extern int mq_unlink(const char *);$/;"	p	signature:(const char *)
mqd_t	mqueue.h	/^    typedef int mqd_t;$/;"	t
mrand48	stdlib.h	/^    extern long int mrand48(void);$/;"	p	signature:(void)
mremap	sys/mman.h	/^    extern void *mremap(void *, size_t, size_t, int);$/;"	p	signature:(void *, size_t, size_t, int)
msg	security/pam_appl.h	/^	const char *msg;$/;"	m	struct:pam_message	access:public
msg	zlib.h	/^	char *msg;		\/* last error message, NULL if no error *\/$/;"	m	struct:z_stream_s	access:public
msg_control	sys/socket.h	/^	void *msg_control;$/;"	m	struct:msghdr	access:public
msg_controllen	sys/socket.h	/^	size_t msg_controllen;$/;"	m	struct:msghdr	access:public
msg_ctime	sys/msg.h	/^	time_t msg_ctime;	\/* time of last change *\/$/;"	m	struct:msqid_ds	access:public
msg_ctime	sys/msg.h	/^	time_t msg_ctime;$/;"	m	struct:msqid_ds	access:public
msg_flags	sys/socket.h	/^	unsigned int msg_flags;$/;"	m	struct:msghdr	access:public
msg_iov	sys/socket.h	/^	struct iovec *msg_iov;$/;"	m	struct:msghdr	typeref:struct:msghdr::iovec	access:public
msg_iovlen	sys/socket.h	/^	size_t msg_iovlen;$/;"	m	struct:msghdr	access:public
msg_lrpid	sys/msg.h	/^	pid_t msg_lrpid;	\/* pid of last msgrcv() *\/$/;"	m	struct:msqid_ds	access:public
msg_lrpid	sys/msg.h	/^	pid_t msg_lrpid;$/;"	m	struct:msqid_ds	access:public
msg_lspid	sys/msg.h	/^	pid_t msg_lspid;	\/* pid of last msgsnd() *\/$/;"	m	struct:msqid_ds	access:public
msg_lspid	sys/msg.h	/^	pid_t msg_lspid;$/;"	m	struct:msqid_ds	access:public
msg_name	sys/socket.h	/^	void *msg_name;$/;"	m	struct:msghdr	access:public
msg_namelen	sys/socket.h	/^	int msg_namelen;$/;"	m	struct:msghdr	access:public
msg_perm	sys/msg.h	/^	struct ipc_perm msg_perm;	\/* structure describing operation permission *\/$/;"	m	struct:msqid_ds	typeref:struct:msqid_ds::ipc_perm	access:public
msg_perm	sys/msg.h	/^	struct ipc_perm msg_perm;$/;"	m	struct:msqid_ds	typeref:struct:msqid_ds::ipc_perm	access:public
msg_qbytes	sys/msg.h	/^	msglen_t msg_qbytes;	\/* max number of bytes allowed on queue *\/$/;"	m	struct:msqid_ds	access:public
msg_qbytes	sys/msg.h	/^	msglen_t msg_qbytes;$/;"	m	struct:msqid_ds	access:public
msg_qbytes	sys/msg.h	/^	unsigned long int msg_qbytes;	\/* max number of bytes allowed on queue *\/$/;"	m	struct:msqid_ds	access:public
msg_qnum	sys/msg.h	/^	msgqnum_t msg_qnum;	\/* number of messages currently on queue *\/$/;"	m	struct:msqid_ds	access:public
msg_qnum	sys/msg.h	/^	msgqnum_t msg_qnum;$/;"	m	struct:msqid_ds	access:public
msg_qnum	sys/msg.h	/^	unsigned long int msg_qnum;	\/* number of messages currently on queue *\/$/;"	m	struct:msqid_ds	access:public
msg_rtime	sys/msg.h	/^	time_t msg_rtime;	\/*  time of last msgrcv command *\/$/;"	m	struct:msqid_ds	access:public
msg_rtime	sys/msg.h	/^	time_t msg_rtime;	\/* time of last msgrcv command *\/$/;"	m	struct:msqid_ds	access:public
msg_rtime	sys/msg.h	/^	time_t msg_rtime;$/;"	m	struct:msqid_ds	access:public
msg_stime	sys/msg.h	/^	time_t msg_stime;	\/* time of last msgsnd command *\/$/;"	m	struct:msqid_ds	access:public
msg_stime	sys/msg.h	/^	time_t msg_stime;$/;"	m	struct:msqid_ds	access:public
msg_style	security/pam_appl.h	/^	int msg_style;$/;"	m	struct:pam_message	access:public
msg_type	rpc/rpc_msg.h	/^    enum msg_type {$/;"	g
msgctl	sys/msg.h	/^    extern int msgctl(int, int, struct msqid_ds *);$/;"	p	signature:(int, int, struct msqid_ds *)
msgget	sys/msg.h	/^    extern int msgget(key_t, int);$/;"	p	signature:(key_t, int)
msghdr	sys/socket.h	/^    struct msghdr {$/;"	s
msghdr::msg_control	sys/socket.h	/^	void *msg_control;$/;"	m	struct:msghdr	access:public
msghdr::msg_controllen	sys/socket.h	/^	size_t msg_controllen;$/;"	m	struct:msghdr	access:public
msghdr::msg_flags	sys/socket.h	/^	unsigned int msg_flags;$/;"	m	struct:msghdr	access:public
msghdr::msg_iov	sys/socket.h	/^	struct iovec *msg_iov;$/;"	m	struct:msghdr	typeref:struct:msghdr::iovec	access:public
msghdr::msg_iovlen	sys/socket.h	/^	size_t msg_iovlen;$/;"	m	struct:msghdr	access:public
msghdr::msg_name	sys/socket.h	/^	void *msg_name;$/;"	m	struct:msghdr	access:public
msghdr::msg_namelen	sys/socket.h	/^	int msg_namelen;$/;"	m	struct:msghdr	access:public
msglen_t	sys/msg.h	/^    typedef unsigned long int msglen_t;$/;"	t
msgqnum_t	sys/msg.h	/^    typedef unsigned long int msgqnum_t;$/;"	t
msgrcv	sys/msg.h	/^    extern ssize_t msgrcv(int, void *, size_t, long int, int);$/;"	p	signature:(int, void *, size_t, long int, int)
msgsnd	sys/msg.h	/^    extern int msgsnd(int, const void *, size_t, int);$/;"	p	signature:(int, const void *, size_t, int)
msqid_ds	sys/msg.h	/^    struct msqid_ds {$/;"	s
msqid_ds::__msg_cbytes	sys/msg.h	/^	unsigned long int __msg_cbytes;	\/* current number of bytes on queue *\/$/;"	m	struct:msqid_ds	access:public
msqid_ds::__msg_cbytes	sys/msg.h	/^	unsigned long int __msg_cbytes;$/;"	m	struct:msqid_ds	access:public
msqid_ds::__unused1	sys/msg.h	/^	unsigned int __unused1;$/;"	m	struct:msqid_ds	access:public
msqid_ds::__unused1	sys/msg.h	/^	unsigned long int __unused1;$/;"	m	struct:msqid_ds	access:public
msqid_ds::__unused2	sys/msg.h	/^	unsigned int __unused2;$/;"	m	struct:msqid_ds	access:public
msqid_ds::__unused2	sys/msg.h	/^	unsigned long int __unused2;$/;"	m	struct:msqid_ds	access:public
msqid_ds::__unused3	sys/msg.h	/^	unsigned int __unused3;$/;"	m	struct:msqid_ds	access:public
msqid_ds::__unused3	sys/msg.h	/^	unsigned long int __unused3;$/;"	m	struct:msqid_ds	access:public
msqid_ds::__unused4	sys/msg.h	/^	unsigned long int __unused4;$/;"	m	struct:msqid_ds	access:public
msqid_ds::__unused5	sys/msg.h	/^	unsigned long int __unused5;$/;"	m	struct:msqid_ds	access:public
msqid_ds::msg_ctime	sys/msg.h	/^	time_t msg_ctime;	\/* time of last change *\/$/;"	m	struct:msqid_ds	access:public
msqid_ds::msg_ctime	sys/msg.h	/^	time_t msg_ctime;$/;"	m	struct:msqid_ds	access:public
msqid_ds::msg_lrpid	sys/msg.h	/^	pid_t msg_lrpid;	\/* pid of last msgrcv() *\/$/;"	m	struct:msqid_ds	access:public
msqid_ds::msg_lrpid	sys/msg.h	/^	pid_t msg_lrpid;$/;"	m	struct:msqid_ds	access:public
msqid_ds::msg_lspid	sys/msg.h	/^	pid_t msg_lspid;	\/* pid of last msgsnd() *\/$/;"	m	struct:msqid_ds	access:public
msqid_ds::msg_lspid	sys/msg.h	/^	pid_t msg_lspid;$/;"	m	struct:msqid_ds	access:public
msqid_ds::msg_perm	sys/msg.h	/^	struct ipc_perm msg_perm;	\/* structure describing operation permission *\/$/;"	m	struct:msqid_ds	typeref:struct:msqid_ds::ipc_perm	access:public
msqid_ds::msg_perm	sys/msg.h	/^	struct ipc_perm msg_perm;$/;"	m	struct:msqid_ds	typeref:struct:msqid_ds::ipc_perm	access:public
msqid_ds::msg_qbytes	sys/msg.h	/^	msglen_t msg_qbytes;	\/* max number of bytes allowed on queue *\/$/;"	m	struct:msqid_ds	access:public
msqid_ds::msg_qbytes	sys/msg.h	/^	msglen_t msg_qbytes;$/;"	m	struct:msqid_ds	access:public
msqid_ds::msg_qbytes	sys/msg.h	/^	unsigned long int msg_qbytes;	\/* max number of bytes allowed on queue *\/$/;"	m	struct:msqid_ds	access:public
msqid_ds::msg_qnum	sys/msg.h	/^	msgqnum_t msg_qnum;	\/* number of messages currently on queue *\/$/;"	m	struct:msqid_ds	access:public
msqid_ds::msg_qnum	sys/msg.h	/^	msgqnum_t msg_qnum;$/;"	m	struct:msqid_ds	access:public
msqid_ds::msg_qnum	sys/msg.h	/^	unsigned long int msg_qnum;	\/* number of messages currently on queue *\/$/;"	m	struct:msqid_ds	access:public
msqid_ds::msg_rtime	sys/msg.h	/^	time_t msg_rtime;	\/*  time of last msgrcv command *\/$/;"	m	struct:msqid_ds	access:public
msqid_ds::msg_rtime	sys/msg.h	/^	time_t msg_rtime;	\/* time of last msgrcv command *\/$/;"	m	struct:msqid_ds	access:public
msqid_ds::msg_rtime	sys/msg.h	/^	time_t msg_rtime;$/;"	m	struct:msqid_ds	access:public
msqid_ds::msg_stime	sys/msg.h	/^	time_t msg_stime;	\/* time of last msgsnd command *\/$/;"	m	struct:msqid_ds	access:public
msqid_ds::msg_stime	sys/msg.h	/^	time_t msg_stime;$/;"	m	struct:msqid_ds	access:public
msr	signal.h	/^	unsigned long int msr;$/;"	m	struct:pt_regs	access:public
msync	sys/mman.h	/^    extern int msync(void *, size_t, int);$/;"	p	signature:(void *, size_t, int)
munlock	sys/mman.h	/^    extern int munlock(const void *, size_t);$/;"	p	signature:(const void *, size_t)
munlockall	sys/mman.h	/^    extern int munlockall(void);$/;"	p	signature:(void)
munmap	sys/mman.h	/^    extern int munmap(void *, size_t);$/;"	p	signature:(void *, size_t)
mvaddch	curses.h	/^    extern int mvaddch(int, int, const chtype);$/;"	p	signature:(int, int, const chtype)
mvaddch	ncurses.h	/^    extern int mvaddch(int, int, const chtype);$/;"	p	signature:(int, int, const chtype)
mvaddchnstr	curses.h	/^    extern int mvaddchnstr(int, int, const chtype *, int);$/;"	p	signature:(int, int, const chtype *, int)
mvaddchnstr	ncurses.h	/^    extern int mvaddchnstr(int, int, const chtype *, int);$/;"	p	signature:(int, int, const chtype *, int)
mvaddchstr	curses.h	/^    extern int mvaddchstr(int, int, const chtype *);$/;"	p	signature:(int, int, const chtype *)
mvaddchstr	ncurses.h	/^    extern int mvaddchstr(int, int, const chtype *);$/;"	p	signature:(int, int, const chtype *)
mvaddnstr	curses.h	/^    extern int mvaddnstr(int, int, const char *, int);$/;"	p	signature:(int, int, const char *, int)
mvaddnstr	ncurses.h	/^    extern int mvaddnstr(int, int, const char *, int);$/;"	p	signature:(int, int, const char *, int)
mvaddstr	curses.h	/^    extern int mvaddstr(int, int, const char *);$/;"	p	signature:(int, int, const char *)
mvaddstr	ncurses.h	/^    extern int mvaddstr(int, int, const char *);$/;"	p	signature:(int, int, const char *)
mvchgat	curses.h	/^    extern int mvchgat(int, int, int, attr_t, short, const void *);$/;"	p	signature:(int, int, int, attr_t, short, const void *)
mvchgat	ncurses.h	/^    extern int mvchgat(int, int, int, attr_t, short, const void *);$/;"	p	signature:(int, int, int, attr_t, short, const void *)
mvcur	curses.h	/^    extern int mvcur(int, int, int, int);$/;"	p	signature:(int, int, int, int)
mvcur	ncurses.h	/^    extern int mvcur(int, int, int, int);$/;"	p	signature:(int, int, int, int)
mvdelch	curses.h	/^    extern int mvdelch(int, int);$/;"	p	signature:(int, int)
mvdelch	ncurses.h	/^    extern int mvdelch(int, int);$/;"	p	signature:(int, int)
mvderwin	curses.h	/^    extern int mvderwin(WINDOW *, int, int);$/;"	p	signature:(WINDOW *, int, int)
mvderwin	ncurses.h	/^    extern int mvderwin(WINDOW *, int, int);$/;"	p	signature:(WINDOW *, int, int)
mvgetch	curses.h	/^    extern int mvgetch(int, int);$/;"	p	signature:(int, int)
mvgetch	ncurses.h	/^    extern int mvgetch(int, int);$/;"	p	signature:(int, int)
mvgetnstr	curses.h	/^    extern int mvgetnstr(int, int, char *, int);$/;"	p	signature:(int, int, char *, int)
mvgetnstr	ncurses.h	/^    extern int mvgetnstr(int, int, char *, int);$/;"	p	signature:(int, int, char *, int)
mvgetstr	curses.h	/^    extern int mvgetstr(int, int, char *);$/;"	p	signature:(int, int, char *)
mvgetstr	ncurses.h	/^    extern int mvgetstr(int, int, char *);$/;"	p	signature:(int, int, char *)
mvhline	curses.h	/^    extern int mvhline(int, int, chtype, int);$/;"	p	signature:(int, int, chtype, int)
mvhline	ncurses.h	/^    extern int mvhline(int, int, chtype, int);$/;"	p	signature:(int, int, chtype, int)
mvinch	curses.h	/^    extern chtype mvinch(int, int);$/;"	p	signature:(int, int)
mvinch	ncurses.h	/^    extern chtype mvinch(int, int);$/;"	p	signature:(int, int)
mvinchnstr	curses.h	/^    extern int mvinchnstr(int, int, chtype *, int);$/;"	p	signature:(int, int, chtype *, int)
mvinchnstr	ncurses.h	/^    extern int mvinchnstr(int, int, chtype *, int);$/;"	p	signature:(int, int, chtype *, int)
mvinchstr	curses.h	/^    extern int mvinchstr(int, int, chtype *);$/;"	p	signature:(int, int, chtype *)
mvinchstr	ncurses.h	/^    extern int mvinchstr(int, int, chtype *);$/;"	p	signature:(int, int, chtype *)
mvinnstr	curses.h	/^    extern int mvinnstr(int, int, char *, int);$/;"	p	signature:(int, int, char *, int)
mvinnstr	ncurses.h	/^    extern int mvinnstr(int, int, char *, int);$/;"	p	signature:(int, int, char *, int)
mvinsch	curses.h	/^    extern int mvinsch(int, int, chtype);$/;"	p	signature:(int, int, chtype)
mvinsch	ncurses.h	/^    extern int mvinsch(int, int, chtype);$/;"	p	signature:(int, int, chtype)
mvinsnstr	curses.h	/^    extern int mvinsnstr(int, int, const char *, int);$/;"	p	signature:(int, int, const char *, int)
mvinsnstr	ncurses.h	/^    extern int mvinsnstr(int, int, const char *, int);$/;"	p	signature:(int, int, const char *, int)
mvinsstr	curses.h	/^    extern int mvinsstr(int, int, const char *);$/;"	p	signature:(int, int, const char *)
mvinsstr	ncurses.h	/^    extern int mvinsstr(int, int, const char *);$/;"	p	signature:(int, int, const char *)
mvinstr	curses.h	/^    extern int mvinstr(int, int, char *);$/;"	p	signature:(int, int, char *)
mvinstr	ncurses.h	/^    extern int mvinstr(int, int, char *);$/;"	p	signature:(int, int, char *)
mvprintw	curses.h	/^    extern int mvprintw(int, int, char *, ...);$/;"	p	signature:(int, int, char *, ...)
mvprintw	ncurses.h	/^    extern int mvprintw(int, int, char *, ...);$/;"	p	signature:(int, int, char *, ...)
mvscanw	curses.h	/^    extern int mvscanw(int, int, const char *, ...);$/;"	p	signature:(int, int, const char *, ...)
mvscanw	ncurses.h	/^    extern int mvscanw(int, int, const char *, ...);$/;"	p	signature:(int, int, const char *, ...)
mvvline	curses.h	/^    extern int mvvline(int, int, chtype, int);$/;"	p	signature:(int, int, chtype, int)
mvvline	ncurses.h	/^    extern int mvvline(int, int, chtype, int);$/;"	p	signature:(int, int, chtype, int)
mvwaddch	curses.h	/^    extern int mvwaddch(WINDOW *, int, int, const chtype);$/;"	p	signature:(WINDOW *, int, int, const chtype)
mvwaddch	ncurses.h	/^    extern int mvwaddch(WINDOW *, int, int, const chtype);$/;"	p	signature:(WINDOW *, int, int, const chtype)
mvwaddchnstr	curses.h	/^    extern int mvwaddchnstr(WINDOW *, int, int, const chtype *, int);$/;"	p	signature:(WINDOW *, int, int, const chtype *, int)
mvwaddchnstr	ncurses.h	/^    extern int mvwaddchnstr(WINDOW *, int, int, const chtype *, int);$/;"	p	signature:(WINDOW *, int, int, const chtype *, int)
mvwaddchstr	curses.h	/^    extern int mvwaddchstr(WINDOW *, int, int, const chtype *);$/;"	p	signature:(WINDOW *, int, int, const chtype *)
mvwaddchstr	ncurses.h	/^    extern int mvwaddchstr(WINDOW *, int, int, const chtype *);$/;"	p	signature:(WINDOW *, int, int, const chtype *)
mvwaddnstr	curses.h	/^    extern int mvwaddnstr(WINDOW *, int, int, const char *, int);$/;"	p	signature:(WINDOW *, int, int, const char *, int)
mvwaddnstr	ncurses.h	/^    extern int mvwaddnstr(WINDOW *, int, int, const char *, int);$/;"	p	signature:(WINDOW *, int, int, const char *, int)
mvwaddstr	curses.h	/^    extern int mvwaddstr(WINDOW *, int, int, const char *);$/;"	p	signature:(WINDOW *, int, int, const char *)
mvwaddstr	ncurses.h	/^    extern int mvwaddstr(WINDOW *, int, int, const char *);$/;"	p	signature:(WINDOW *, int, int, const char *)
mvwchgat	curses.h	/^    extern int mvwchgat(WINDOW *, int, int, int, attr_t, short,$/;"	p	signature:(WINDOW *, int, int, int, attr_t, short, const void *)
mvwchgat	ncurses.h	/^    extern int mvwchgat(WINDOW *, int, int, int, attr_t, short,$/;"	p	signature:(WINDOW *, int, int, int, attr_t, short, const void *)
mvwdelch	curses.h	/^    extern int mvwdelch(WINDOW *, int, int);$/;"	p	signature:(WINDOW *, int, int)
mvwdelch	ncurses.h	/^    extern int mvwdelch(WINDOW *, int, int);$/;"	p	signature:(WINDOW *, int, int)
mvwgetch	curses.h	/^    extern int mvwgetch(WINDOW *, int, int);$/;"	p	signature:(WINDOW *, int, int)
mvwgetch	ncurses.h	/^    extern int mvwgetch(WINDOW *, int, int);$/;"	p	signature:(WINDOW *, int, int)
mvwgetnstr	curses.h	/^    extern int mvwgetnstr(WINDOW *, int, int, char *, int);$/;"	p	signature:(WINDOW *, int, int, char *, int)
mvwgetnstr	ncurses.h	/^    extern int mvwgetnstr(WINDOW *, int, int, char *, int);$/;"	p	signature:(WINDOW *, int, int, char *, int)
mvwgetstr	curses.h	/^    extern int mvwgetstr(WINDOW *, int, int, char *);$/;"	p	signature:(WINDOW *, int, int, char *)
mvwgetstr	ncurses.h	/^    extern int mvwgetstr(WINDOW *, int, int, char *);$/;"	p	signature:(WINDOW *, int, int, char *)
mvwhline	curses.h	/^    extern int mvwhline(WINDOW *, int, int, chtype, int);$/;"	p	signature:(WINDOW *, int, int, chtype, int)
mvwhline	ncurses.h	/^    extern int mvwhline(WINDOW *, int, int, chtype, int);$/;"	p	signature:(WINDOW *, int, int, chtype, int)
mvwin	curses.h	/^    extern int mvwin(WINDOW *, int, int);$/;"	p	signature:(WINDOW *, int, int)
mvwin	ncurses.h	/^    extern int mvwin(WINDOW *, int, int);$/;"	p	signature:(WINDOW *, int, int)
mvwinch	curses.h	/^    extern chtype mvwinch(WINDOW *, int, int);$/;"	p	signature:(WINDOW *, int, int)
mvwinch	ncurses.h	/^    extern chtype mvwinch(WINDOW *, int, int);$/;"	p	signature:(WINDOW *, int, int)
mvwinchnstr	curses.h	/^    extern int mvwinchnstr(WINDOW *, int, int, chtype *, int);$/;"	p	signature:(WINDOW *, int, int, chtype *, int)
mvwinchnstr	ncurses.h	/^    extern int mvwinchnstr(WINDOW *, int, int, chtype *, int);$/;"	p	signature:(WINDOW *, int, int, chtype *, int)
mvwinchstr	curses.h	/^    extern int mvwinchstr(WINDOW *, int, int, chtype *);$/;"	p	signature:(WINDOW *, int, int, chtype *)
mvwinchstr	ncurses.h	/^    extern int mvwinchstr(WINDOW *, int, int, chtype *);$/;"	p	signature:(WINDOW *, int, int, chtype *)
mvwinnstr	curses.h	/^    extern int mvwinnstr(WINDOW *, int, int, char *, int);$/;"	p	signature:(WINDOW *, int, int, char *, int)
mvwinnstr	ncurses.h	/^    extern int mvwinnstr(WINDOW *, int, int, char *, int);$/;"	p	signature:(WINDOW *, int, int, char *, int)
mvwinsch	curses.h	/^    extern int mvwinsch(WINDOW *, int, int, chtype);$/;"	p	signature:(WINDOW *, int, int, chtype)
mvwinsch	ncurses.h	/^    extern int mvwinsch(WINDOW *, int, int, chtype);$/;"	p	signature:(WINDOW *, int, int, chtype)
mvwinsnstr	curses.h	/^    extern int mvwinsnstr(WINDOW *, int, int, const char *, int);$/;"	p	signature:(WINDOW *, int, int, const char *, int)
mvwinsnstr	ncurses.h	/^    extern int mvwinsnstr(WINDOW *, int, int, const char *, int);$/;"	p	signature:(WINDOW *, int, int, const char *, int)
mvwinsstr	curses.h	/^    extern int mvwinsstr(WINDOW *, int, int, const char *);$/;"	p	signature:(WINDOW *, int, int, const char *)
mvwinsstr	ncurses.h	/^    extern int mvwinsstr(WINDOW *, int, int, const char *);$/;"	p	signature:(WINDOW *, int, int, const char *)
mvwinstr	curses.h	/^    extern int mvwinstr(WINDOW *, int, int, char *);$/;"	p	signature:(WINDOW *, int, int, char *)
mvwinstr	ncurses.h	/^    extern int mvwinstr(WINDOW *, int, int, char *);$/;"	p	signature:(WINDOW *, int, int, char *)
mvwprintw	curses.h	/^    extern int mvwprintw(WINDOW *, int, int, char *, ...);$/;"	p	signature:(WINDOW *, int, int, char *, ...)
mvwprintw	ncurses.h	/^    extern int mvwprintw(WINDOW *, int, int, char *, ...);$/;"	p	signature:(WINDOW *, int, int, char *, ...)
mvwscanw	curses.h	/^    extern int mvwscanw(WINDOW *, int, int, const char *, ...);$/;"	p	signature:(WINDOW *, int, int, const char *, ...)
mvwscanw	ncurses.h	/^    extern int mvwscanw(WINDOW *, int, int, const char *, ...);$/;"	p	signature:(WINDOW *, int, int, const char *, ...)
mvwvline	curses.h	/^    extern int mvwvline(WINDOW *, int, int, chtype, int);$/;"	p	signature:(WINDOW *, int, int, chtype, int)
mvwvline	ncurses.h	/^    extern int mvwvline(WINDOW *, int, int, chtype, int);$/;"	p	signature:(WINDOW *, int, int, chtype, int)
mxcr_mask	signal.h	/^	uint32_t mxcr_mask;$/;"	m	struct:_fpstate	access:public
mxcr_mask	ucontext.h	/^	uint32_t mxcr_mask;$/;"	m	struct:_libc_fpstate	access:public
mxcsr	signal.h	/^	uint32_t mxcsr;$/;"	m	struct:_fpstate	access:public
mxcsr	signal.h	/^	unsigned long int mxcsr;$/;"	m	struct:_fpstate	access:public
mxcsr	ucontext.h	/^	uint32_t mxcsr;$/;"	m	struct:_libc_fpstate	access:public
n_addrtype	netdb.h	/^	int n_addrtype;$/;"	m	struct:netent	access:public
n_aliases	netdb.h	/^	char **n_aliases;$/;"	m	struct:netent	access:public
n_cs_precedes	locale.h	/^	char n_cs_precedes;$/;"	m	struct:lconv	access:public
n_name	netdb.h	/^	char *n_name;$/;"	m	struct:netent	access:public
n_net	netdb.h	/^	unsigned int n_net;$/;"	m	struct:netent	access:public
n_sep_by_space	locale.h	/^	char n_sep_by_space;$/;"	m	struct:lconv	access:public
n_sign_posn	locale.h	/^	char n_sign_posn;$/;"	m	struct:lconv	access:public
name	alsa/conf.h	/^	char *name;$/;"	m	struct:snd_devname	access:public
name	alsa/control_external.h	/^	char name[32];$/;"	m	struct:snd_ctl_ext	access:public
name	alsa/pcm_extplug.h	/^	const char *name;$/;"	m	struct:snd_pcm_extplug	access:public
name	cups/cups.h	/^	char *name;$/;"	m	struct:__anon90	access:public
name	cups/cups.h	/^	char *name;$/;"	m	struct:__anon91	access:public
name	cups/ppd.h	/^	char name[41];$/;"	m	struct:__anon102	access:public
name	cups/ppd.h	/^	char name[41];$/;"	m	struct:__anon107	access:public
name	cups/ppd.h	/^	char name[41];$/;"	m	struct:__anon110	access:public
name	cups/ppd.h	/^	char name[41];$/;"	m	struct:ppd_group_str	access:public
name	getopt.h	/^	const char *name;$/;"	m	struct:option	access:public
name	math.h	/^	char *name;$/;"	m	struct:exception	access:public
nan	math.h	/^    extern double nan(const char *);$/;"	p	signature:(const char *)
nanf	math.h	/^    extern float nanf(const char *);$/;"	p	signature:(const char *)
nanl	math.h	/^    extern long double nanl(const char *);$/;"	p	signature:(const char *)
nanosleep	time.h	/^    extern int nanosleep(const struct timespec *, struct timespec *);$/;"	p	signature:(const struct timespec *, struct timespec *)
napms	curses.h	/^    extern int napms(int);$/;"	p	signature:(int)
napms	ncurses.h	/^    extern int napms(int);$/;"	p	signature:(int)
nearbyint	math.h	/^    extern double nearbyint(double);$/;"	p	signature:(double)
nearbyintf	math.h	/^    extern float nearbyintf(float);$/;"	p	signature:(float)
nearbyintl	math.h	/^    extern long double nearbyintl(long double);$/;"	p	signature:(long double)
negative_sign	locale.h	/^	char *negative_sign;$/;"	m	struct:lconv	access:public
netent	netdb.h	/^    struct netent {$/;"	s
netent::n_addrtype	netdb.h	/^	int n_addrtype;$/;"	m	struct:netent	access:public
netent::n_aliases	netdb.h	/^	char **n_aliases;$/;"	m	struct:netent	access:public
netent::n_name	netdb.h	/^	char *n_name;$/;"	m	struct:netent	access:public
netent::n_net	netdb.h	/^	unsigned int n_net;$/;"	m	struct:netent	access:public
newline_anchor	regex.h	/^	unsigned int newline_anchor:1;$/;"	m	struct:re_pattern_buffer	access:public
newlocale	locale.h	/^    extern locale_t newlocale(int, const char *, locale_t);$/;"	p	signature:(int, const char *, locale_t)
newpad	curses.h	/^    extern WINDOW *newpad(int, int);$/;"	p	signature:(int, int)
newpad	ncurses.h	/^    extern WINDOW *newpad(int, int);$/;"	p	signature:(int, int)
newterm	curses.h	/^    extern SCREEN *newterm(const char *, FILE *, FILE *);$/;"	p	signature:(const char *, FILE *, FILE *)
newterm	ncurses.h	/^    extern SCREEN *newterm(const char *, FILE *, FILE *);$/;"	p	signature:(const char *, FILE *, FILE *)
newwin	curses.h	/^    extern WINDOW *newwin(int, int, int, int);$/;"	p	signature:(int, int, int, int)
newwin	ncurses.h	/^    extern WINDOW *newwin(int, int, int, int);$/;"	p	signature:(int, int, int, int)
next	alsa/conf.h	/^	snd_devname_t *next;$/;"	m	struct:snd_devname	access:public
next	cups/cups.h	/^	struct cups_lang_str *next;$/;"	m	struct:cups_lang_str	typeref:struct:cups_lang_str::cups_lang_str	access:public
next_in	zlib.h	/^	Bytef *next_in;		\/* next input byte *\/$/;"	m	struct:z_stream_s	access:public
next_out	zlib.h	/^	Bytef *next_out;	\/* next output byte should be put there *\/$/;"	m	struct:z_stream_s	access:public
nextafter	math.h	/^    extern double nextafter(double, double);$/;"	p	signature:(double, double)
nextafterf	math.h	/^    extern float nextafterf(float, float);$/;"	p	signature:(float, float)
nextafterl	math.h	/^    extern long double nextafterl(long double, long double);$/;"	p	signature:(long double, long double)
nexttoward	math.h	/^    extern double nexttoward(double, long double);$/;"	p	signature:(double, long double)
nexttowardf	math.h	/^    extern float nexttowardf(float, long double);$/;"	p	signature:(float, long double)
nexttowardl	math.h	/^    extern long double nexttowardl(long double, long double);$/;"	p	signature:(long double, long double)
nfds_t	sys/poll.h	/^    typedef unsigned long int nfds_t;$/;"	t
nftw	ftw.h	/^    extern int nftw(const char *, __nftw_func_t, int, int);$/;"	p	signature:(const char *, __nftw_func_t, int, int)
nftw64	ftw.h	/^    extern int nftw64(const char *, __nftw64_func_t, int, int);$/;"	p	signature:(const char *, __nftw64_func_t, int, int)
ngettext	libintl.h	/^    extern char *ngettext(const char *, const char *, unsigned long int);$/;"	p	signature:(const char *, const char *, unsigned long int)
nice	unistd.h	/^    extern int nice(int);$/;"	p	signature:(int)
nickname	cups/ppd.h	/^	char *nickname;$/;"	m	struct:__anon111	access:public
nip	signal.h	/^	unsigned long int nip;$/;"	m	struct:pt_regs	access:public
nl	curses.h	/^    extern int nl(void);$/;"	p	signature:(void)
nl	ncurses.h	/^    extern int nl(void);$/;"	p	signature:(void)
nl_catd	nl_types.h	/^    typedef void *nl_catd;$/;"	t
nl_item	nl_types.h	/^    typedef int nl_item;$/;"	t
nl_langinfo	langinfo.h	/^    extern char *nl_langinfo(nl_item);$/;"	p	signature:(nl_item)
nlink_t	sys/types.h	/^    typedef unsigned long int nlink_t;$/;"	t
no_argument	getopt.h	11;"	d
no_sub	regex.h	/^	unsigned int no_sub:1;$/;"	m	struct:re_pattern_buffer	access:public
nocbreak	curses.h	/^    extern int nocbreak(void);$/;"	p	signature:(void)
nocbreak	ncurses.h	/^    extern int nocbreak(void);$/;"	p	signature:(void)
nodelay	curses.h	/^    extern int nodelay(WINDOW *, bool);$/;"	p	signature:(WINDOW *, bool)
nodelay	ncurses.h	/^    extern int nodelay(WINDOW *, bool);$/;"	p	signature:(WINDOW *, bool)
nodename	sys/utsname.h	/^	char nodename[65];$/;"	m	struct:utsname	access:public
noecho	curses.h	/^    extern int noecho(void);$/;"	p	signature:(void)
noecho	ncurses.h	/^    extern int noecho(void);$/;"	p	signature:(void)
nonblock	alsa/control_external.h	/^	int nonblock;$/;"	m	struct:snd_ctl_ext	access:public
nonce	cups/cups.h	/^	char nonce[256];$/;"	m	struct:__anon100	access:public
nonce_count	cups/cups.h	/^	int nonce_count;$/;"	m	struct:__anon100	access:public
nonl	curses.h	/^    extern int nonl(void);$/;"	p	signature:(void)
nonl	ncurses.h	/^    extern int nonl(void);$/;"	p	signature:(void)
noqiflush	curses.h	/^    extern void noqiflush(void);$/;"	p	signature:(void)
noqiflush	ncurses.h	/^    extern void noqiflush(void);$/;"	p	signature:(void)
noraw	curses.h	/^    extern int noraw(void);$/;"	p	signature:(void)
noraw	ncurses.h	/^    extern int noraw(void);$/;"	p	signature:(void)
not_bol	regex.h	/^	unsigned int not_bol:1;$/;"	m	struct:re_pattern_buffer	access:public
not_eol	regex.h	/^	unsigned int not_eol:1;$/;"	m	struct:re_pattern_buffer	access:public
note	alsa/seq_event.h	/^	    snd_seq_ev_note_t note;	\/* note information *\/$/;"	m	union:snd_seq_event::__anon13
note	alsa/seq_event.h	/^	unsigned char note;$/;"	m	struct:snd_seq_ev_note	access:public
notimeout	curses.h	/^    extern int notimeout(WINDOW *, bool);$/;"	p	signature:(WINDOW *, bool)
notimeout	ncurses.h	/^    extern int notimeout(WINDOW *, bool);$/;"	p	signature:(WINDOW *, bool)
nrand48	stdlib.h	/^    extern long int nrand48(unsigned short[3]);$/;"	p	signature:(unsigned short[3])
ntohl	arpa/inet.h	/^    extern uint32_t ntohl(uint32_t);$/;"	p	signature:(uint32_t)
ntohs	arpa/inet.h	/^    extern uint16_t ntohs(uint16_t);$/;"	p	signature:(uint16_t)
num_attrs	cups/ppd.h	/^	int num_attrs;$/;"	m	struct:__anon111	access:public
num_choices	cups/ppd.h	/^	int num_choices;$/;"	m	struct:__anon106	access:public
num_consts	cups/ppd.h	/^	int num_consts;$/;"	m	struct:__anon111	access:public
num_emulations	cups/ppd.h	/^	int num_emulations;$/;"	m	struct:__anon111	access:public
num_filters	cups/ppd.h	/^	int num_filters;$/;"	m	struct:__anon111	access:public
num_fonts	cups/ppd.h	/^	int num_fonts;$/;"	m	struct:__anon111	access:public
num_groups	cups/ppd.h	/^	int num_groups;$/;"	m	struct:__anon111	access:public
num_options	cups/cups.h	/^	int num_options;$/;"	m	struct:__anon91	access:public
num_options	cups/ppd.h	/^	int num_options;$/;"	m	struct:ppd_group_str	access:public
num_profiles	cups/ppd.h	/^	int num_profiles;$/;"	m	struct:__anon111	access:public
num_sizes	cups/ppd.h	/^	int num_sizes;$/;"	m	struct:__anon111	access:public
num_subgroups	cups/ppd.h	/^	int num_subgroups;$/;"	m	struct:ppd_group_str	access:public
oa_base	rpc/auth.h	/^	caddr_t oa_base;	\/* address of more auth stuff *\/$/;"	m	struct:opaque_auth	access:public
oa_flavor	rpc/auth.h	/^	enum_t oa_flavor;	\/* flavor of auth *\/$/;"	m	struct:opaque_auth	access:public
oa_length	rpc/auth.h	/^	u_int oa_length;	\/* not to exceed MAX_AUTH_BYTES *\/$/;"	m	struct:opaque_auth	access:public
off64_t	unistd.h	/^    typedef long long int off64_t;$/;"	t
off_t	sys/types.h	/^    typedef long int off_t;$/;"	t
off_velocity	alsa/seq_event.h	/^	unsigned char off_velocity;$/;"	m	struct:snd_seq_ev_note	access:public
offsetof	stddef.h	11;"	d
oldmask	signal.h	/^	unsigned long int oldmask;$/;"	m	struct:sigcontext	access:public
oldmask	signal.h	/^	unsigned long int oldmask[2];$/;"	m	struct:sigcontext	access:public
oldmask	ucontext.h	/^	unsigned long int oldmask;$/;"	m	struct:__anon126	access:public
oldmask	ucontext.h	/^	unsigned long int oldmask;$/;"	m	struct:__anon131	access:public
opaque	zlib.h	/^	voidpf opaque;		\/* private data object passed to zalloc and zfree *\/$/;"	m	struct:z_stream_s	access:public
opaque_auth	rpc/auth.h	/^    struct opaque_auth {$/;"	s
opaque_auth::oa_base	rpc/auth.h	/^	caddr_t oa_base;	\/* address of more auth stuff *\/$/;"	m	struct:opaque_auth	access:public
opaque_auth::oa_flavor	rpc/auth.h	/^	enum_t oa_flavor;	\/* flavor of auth *\/$/;"	m	struct:opaque_auth	access:public
opaque_auth::oa_length	rpc/auth.h	/^	u_int oa_length;	\/* not to exceed MAX_AUTH_BYTES *\/$/;"	m	struct:opaque_auth	access:public
open	fcntl.h	/^    extern int open(const char *, int, ...);$/;"	p	signature:(const char *, int, ...)
open64	fcntl.h	/^    extern int open64(const char *, int, ...);$/;"	p	signature:(const char *, int, ...)
opendir	dirent.h	/^    extern DIR *opendir(const char *);$/;"	p	signature:(const char *)
openlog	syslog.h	/^    extern void openlog(const char *, int, int);$/;"	p	signature:(const char *, int, int)
openpty	pty.h	/^    extern int openpty(int *, int *, char *, struct termios *,$/;"	p	signature:(int *, int *, char *, struct termios *, struct winsize *)
option	cups/ppd.h	/^	void *option;$/;"	m	struct:__anon105	access:public
option	getopt.h	/^    struct option {$/;"	s
option1	cups/ppd.h	/^	char option1[41];$/;"	m	struct:__anon108	access:public
option2	cups/ppd.h	/^	char option2[41];$/;"	m	struct:__anon108	access:public
option::flag	getopt.h	/^	int *flag;$/;"	m	struct:option	access:public
option::has_arg	getopt.h	/^	int has_arg;$/;"	m	struct:option	access:public
option::name	getopt.h	/^	const char *name;$/;"	m	struct:option	access:public
option::val	getopt.h	/^	int val;$/;"	m	struct:option	access:public
optional_argument	getopt.h	13;"	d
options	cups/cups.h	/^	cups_option_t *options;$/;"	m	struct:__anon91	access:public
options	cups/ppd.h	/^	ppd_option_t *options;$/;"	m	struct:ppd_group_str	access:public
order	cups/ppd.h	/^	float order;$/;"	m	struct:__anon106	access:public
orig_gpr3	signal.h	/^	unsigned long int orig_gpr3;	\/* Used for restarting system calls *\/$/;"	m	struct:pt_regs	access:public
orig_gpr3	signal.h	/^	unsigned long int orig_gpr3;$/;"	m	struct:pt_regs	access:public
overlay	curses.h	/^    extern int overlay(const WINDOW *, WINDOW *);$/;"	p	signature:(const WINDOW *, WINDOW *)
overlay	ncurses.h	/^    extern int overlay(const WINDOW *, WINDOW *);$/;"	p	signature:(const WINDOW *, WINDOW *)
overwrite	curses.h	/^    extern int overwrite(const WINDOW *, WINDOW *);$/;"	p	signature:(const WINDOW *, WINDOW *)
overwrite	ncurses.h	/^    extern int overwrite(const WINDOW *, WINDOW *);$/;"	p	signature:(const WINDOW *, WINDOW *)
p_aliases	netdb.h	/^	char **p_aliases;$/;"	m	struct:protoent	access:public
p_cs_precedes	locale.h	/^	char p_cs_precedes;$/;"	m	struct:lconv	access:public
p_name	netdb.h	/^	char *p_name;$/;"	m	struct:protoent	access:public
p_proto	netdb.h	/^	int p_proto;$/;"	m	struct:protoent	access:public
p_sep_by_space	locale.h	/^	char p_sep_by_space;$/;"	m	struct:lconv	access:public
p_sign_posn	locale.h	/^	char p_sign_posn;$/;"	m	struct:lconv	access:public
pad	alsa/control.h	/^	unsigned char pad;$/;"	m	struct:snd_aes_iec958	access:public
pad0	sys/stat.h	/^	int pad0;$/;"	m	struct:stat	access:public
pad0	sys/stat.h	/^	int pad0;$/;"	m	struct:stat64	access:public
pad0	sys/stat.h	/^	unsigned int pad0;$/;"	m	struct:stat	access:public
pad0	sys/stat.h	/^	unsigned int pad0;$/;"	m	struct:stat64	access:public
pad0	ucontext.h	/^	int pad0;$/;"	m	struct:__anon131	access:public
padding	signal.h	/^	uint32_t padding[24];$/;"	m	struct:_fpstate	access:public
padding	signal.h	/^	unsigned long int padding[56];$/;"	m	struct:_fpstate	access:public
padding	signal.h	/^	unsigned short padding[3];$/;"	m	struct:_fpxreg	access:public
padding	ucontext.h	/^	uint32_t padding[24];$/;"	m	struct:_libc_fpstate	access:public
padding	ucontext.h	/^	unsigned short padding[3];$/;"	m	struct:_libc_fpxreg	access:public
pair_content	curses.h	/^    extern int pair_content(short, short *, short *);$/;"	p	signature:(short, short *, short *)
pair_content	ncurses.h	/^    extern int pair_content(short, short *, short *);$/;"	p	signature:(short, short *, short *)
pam_acct_mgmt	security/pam_appl.h	/^    extern int pam_acct_mgmt(pam_handle_t *, int);$/;"	p	signature:(pam_handle_t *, int)
pam_authenticate	security/pam_appl.h	/^    extern int pam_authenticate(pam_handle_t *, int);$/;"	p	signature:(pam_handle_t *, int)
pam_chauthtok	security/pam_appl.h	/^    extern int pam_chauthtok(pam_handle_t *, int);$/;"	p	signature:(pam_handle_t *, int)
pam_close_session	security/pam_appl.h	/^    extern int pam_close_session(pam_handle_t *, int);$/;"	p	signature:(pam_handle_t *, int)
pam_conv	security/pam_appl.h	/^    struct pam_conv {$/;"	s
pam_conv::appdata_ptr	security/pam_appl.h	/^	void *appdata_ptr;$/;"	m	struct:pam_conv	access:public
pam_conv::conv	security/pam_appl.h	/^	int (*conv) (int num_msg, const struct pam_message * *msg,$/;"	m	struct:pam_conv	access:public
pam_end	security/pam_appl.h	/^    extern int pam_end(pam_handle_t *, int);$/;"	p	signature:(pam_handle_t *, int)
pam_fail_delay	security/pam_appl.h	/^    extern int pam_fail_delay(pam_handle_t *, unsigned int);$/;"	p	signature:(pam_handle_t *, unsigned int)
pam_get_item	security/pam_appl.h	/^    extern int pam_get_item(const pam_handle_t *, int, const void **);$/;"	p	signature:(const pam_handle_t *, int, const void **)
pam_getenv	security/pam_appl.h	/^    extern const char *pam_getenv(const pam_handle_t *, const char *);$/;"	p	signature:(const pam_handle_t *, const char *)
pam_getenvlist	security/pam_appl.h	/^    extern char **pam_getenvlist(pam_handle_t *);$/;"	p	signature:(pam_handle_t *)
pam_handle_t	security/pam_appl.h	/^    typedef struct pam_handle pam_handle_t;$/;"	t	typeref:struct:pam_handle
pam_message	security/pam_appl.h	/^    struct pam_message {$/;"	s
pam_message::msg	security/pam_appl.h	/^	const char *msg;$/;"	m	struct:pam_message	access:public
pam_message::msg_style	security/pam_appl.h	/^	int msg_style;$/;"	m	struct:pam_message	access:public
pam_open_session	security/pam_appl.h	/^    extern int pam_open_session(pam_handle_t *, int);$/;"	p	signature:(pam_handle_t *, int)
pam_putenv	security/pam_appl.h	/^    extern int pam_putenv(const pam_handle_t *, const char *);$/;"	p	signature:(const pam_handle_t *, const char *)
pam_response	security/pam_appl.h	/^    struct pam_response {$/;"	s
pam_response::resp	security/pam_appl.h	/^	char *resp;$/;"	m	struct:pam_response	access:public
pam_response::resp_retcode	security/pam_appl.h	/^	int resp_retcode;	\/* currently un-used, zero expected *\/$/;"	m	struct:pam_response	access:public
pam_set_item	security/pam_appl.h	/^    extern int pam_set_item(pam_handle_t *, int, const void *);$/;"	p	signature:(pam_handle_t *, int, const void *)
pam_setcred	security/pam_appl.h	/^    extern int pam_setcred(pam_handle_t *, int);$/;"	p	signature:(pam_handle_t *, int)
pam_start	security/pam_appl.h	/^    extern int pam_start(const char *, const char *,$/;"	p	signature:(const char *, const char *, const struct pam_conv *, pam_handle_t * *)
pam_strerror	security/pam_appl.h	/^    extern const char *pam_strerror(pam_handle_t *, int);$/;"	p	signature:(pam_handle_t *, int)
param	alsa/seq_event.h	/^	unsigned int param;$/;"	m	struct:snd_seq_ev_ctrl	access:public
param	alsa/seq_event.h	/^	} param;$/;"	m	struct:snd_seq_ev_queue_control	typeref:union:snd_seq_ev_queue_control::__anon11	access:public
param	alsa/seq_event.h	/^	} param;$/;"	m	struct:snd_seq_ev_sample_control	typeref:union:snd_seq_ev_sample_control::__anon12	access:public
passwd	pwd.h	/^    struct passwd {$/;"	s
passwd::pw_dir	pwd.h	/^	char *pw_dir;$/;"	m	struct:passwd	access:public
passwd::pw_gecos	pwd.h	/^	char *pw_gecos;$/;"	m	struct:passwd	access:public
passwd::pw_gid	pwd.h	/^	gid_t pw_gid;$/;"	m	struct:passwd	access:public
passwd::pw_name	pwd.h	/^	char *pw_name;$/;"	m	struct:passwd	access:public
passwd::pw_passwd	pwd.h	/^	char *pw_passwd;$/;"	m	struct:passwd	access:public
passwd::pw_shell	pwd.h	/^	char *pw_shell;$/;"	m	struct:passwd	access:public
passwd::pw_uid	pwd.h	/^	uid_t pw_uid;$/;"	m	struct:passwd	access:public
patches	cups/ppd.h	/^	char *patches;$/;"	m	struct:__anon111	access:public
pathconf	unistd.h	/^    extern long int pathconf(const char *, int);$/;"	p	signature:(const char *, int)
pause	unistd.h	/^    extern int pause(void);$/;"	p	signature:(void)
pcfilename	cups/ppd.h	/^	char *pcfilename;$/;"	m	struct:__anon111	access:public
pclose	stdio.h	/^    extern int pclose(FILE *);$/;"	p	signature:(FILE *)
pcm	alsa/pcm_extplug.h	/^	snd_pcm_t *pcm;$/;"	m	struct:snd_pcm_extplug	access:public
pdat	curses.h	/^    struct pdat {$/;"	s
pdat	ncurses.h	/^    struct pdat {$/;"	s
pdat::_pad_bottom	curses.h	/^	short _pad_bottom;$/;"	m	struct:pdat	access:public
pdat::_pad_bottom	ncurses.h	/^	short _pad_bottom;$/;"	m	struct:pdat	access:public
pdat::_pad_left	curses.h	/^	short _pad_left;$/;"	m	struct:pdat	access:public
pdat::_pad_left	ncurses.h	/^	short _pad_left;$/;"	m	struct:pdat	access:public
pdat::_pad_right	curses.h	/^	short _pad_right;$/;"	m	struct:pdat	access:public
pdat::_pad_right	ncurses.h	/^	short _pad_right;$/;"	m	struct:pdat	access:public
pdat::_pad_top	curses.h	/^	short _pad_top;$/;"	m	struct:pdat	access:public
pdat::_pad_top	ncurses.h	/^	short _pad_top;$/;"	m	struct:pdat	access:public
pdat::_pad_x	curses.h	/^	short _pad_x;$/;"	m	struct:pdat	access:public
pdat::_pad_x	ncurses.h	/^	short _pad_x;$/;"	m	struct:pdat	access:public
pdat::_pad_y	curses.h	/^	short _pad_y;$/;"	m	struct:pdat	access:public
pdat::_pad_y	ncurses.h	/^	short _pad_y;$/;"	m	struct:pdat	access:public
pechochar	curses.h	/^    extern int pechochar(WINDOW *, chtype);$/;"	p	signature:(WINDOW *, chtype)
pechochar	ncurses.h	/^    extern int pechochar(WINDOW *, chtype);$/;"	p	signature:(WINDOW *, chtype)
perror	stdio.h	/^    extern void perror(const char *);$/;"	p	signature:(const char *)
pid_t	sys/types.h	/^    typedef int pid_t;$/;"	t
pipe	unistd.h	/^    extern int pipe(int[2]);$/;"	p	signature:(int[2])
playback_pcm	alsa/mixer.h	/^	snd_pcm_t *playback_pcm;$/;"	m	struct:snd_mixer_selem_regopt	access:public
pnoutrefresh	curses.h	/^    extern int pnoutrefresh(WINDOW *, int, int, int, int, int, int);$/;"	p	signature:(WINDOW *, int, int, int, int, int, int)
pnoutrefresh	ncurses.h	/^    extern int pnoutrefresh(WINDOW *, int, int, int, int, int, int);$/;"	p	signature:(WINDOW *, int, int, int, int, int, int)
poll	poll.h	/^    extern int poll(struct pollfd *, nfds_t, int);$/;"	p	signature:(struct pollfd *, nfds_t, int)
poll_descriptors	alsa/control_external.h	/^	int (*poll_descriptors) (void);$/;"	m	struct:snd_ctl_ext_callback	access:public
poll_descriptors_count	alsa/control_external.h	/^	int (*poll_descriptors_count) (void);$/;"	m	struct:snd_ctl_ext_callback	access:public
poll_fd	alsa/control_external.h	/^	int poll_fd;$/;"	m	struct:snd_ctl_ext	access:public
poll_revents	alsa/control_external.h	/^	int (*poll_revents) (void);$/;"	m	struct:snd_ctl_ext_callback	access:public
pollfd	sys/poll.h	/^    struct pollfd {$/;"	s
pollfd::events	sys/poll.h	/^	short events;		\/* Types of events poller cares about. *\/$/;"	m	struct:pollfd	access:public
pollfd::fd	sys/poll.h	/^	int fd;			\/* File descriptor to poll. *\/$/;"	m	struct:pollfd	access:public
pollfd::revents	sys/poll.h	/^	short revents;		\/* Types of events that actually occurred. *\/$/;"	m	struct:pollfd	access:public
popen	stdio.h	/^    extern FILE *popen(const char *, const char *);$/;"	p	signature:(const char *, const char *)
port	alsa/seq_event.h	/^	unsigned char port;$/;"	m	struct:snd_seq_addr	access:public
port	net/if.h	/^	unsigned char port;$/;"	m	struct:ifmap	access:public
position	alsa/seq_event.h	/^	    snd_seq_position_t position;	\/* position *\/$/;"	m	union:snd_seq_ev_sample_control::__anon12
position	alsa/seq_event.h	/^	    unsigned int position;	\/* sync position *\/$/;"	m	union:snd_seq_ev_queue_control::__anon11
positive_sign	locale.h	/^	char *positive_sign;$/;"	m	struct:lconv	access:public
posix_fadvise	fcntl.h	/^    extern int posix_fadvise(int, off_t, off_t, int);$/;"	p	signature:(int, off_t, off_t, int)
posix_fadvise64	fcntl.h	/^    extern int posix_fadvise64(int, off64_t, off64_t, int);$/;"	p	signature:(int, off64_t, off64_t, int)
posix_fallocate	fcntl.h	/^    extern int posix_fallocate(int, off_t, off_t);$/;"	p	signature:(int, off_t, off_t)
posix_fallocate64	fcntl.h	/^    extern int posix_fallocate64(int, off64_t, off64_t);$/;"	p	signature:(int, off64_t, off64_t)
posix_madvise	sys/mman.h	/^    extern int posix_madvise(void *, size_t, int);$/;"	p	signature:(void *, size_t, int)
posix_memalign	stdlib.h	/^    extern int posix_memalign(void **, size_t, size_t);$/;"	p	signature:(void **, size_t, size_t)
posix_openpt	stdlib.h	/^    extern int posix_openpt(int);$/;"	p	signature:(int)
posix_spawn	spawn.h	/^    extern int posix_spawn(pid_t *, const char *,$/;"	p	signature:(pid_t *, const char *, const posix_spawn_file_actions_t *, const posix_spawnattr_t *, char *const[], char *const[])
posix_spawn_file_actions_addclose	spawn.h	/^    extern int posix_spawn_file_actions_addclose(posix_spawn_file_actions_t$/;"	p	signature:(posix_spawn_file_actions_t *, int)
posix_spawn_file_actions_adddup2	spawn.h	/^    extern int posix_spawn_file_actions_adddup2(posix_spawn_file_actions_t$/;"	p	signature:(posix_spawn_file_actions_t *, int, int)
posix_spawn_file_actions_addopen	spawn.h	/^    extern int posix_spawn_file_actions_addopen(posix_spawn_file_actions_t$/;"	p	signature:(posix_spawn_file_actions_t *, int, const char *, int, mode_t)
posix_spawn_file_actions_destroy	spawn.h	/^    extern int posix_spawn_file_actions_destroy(posix_spawn_file_actions_t$/;"	p	signature:(posix_spawn_file_actions_t *)
posix_spawn_file_actions_init	spawn.h	/^    extern int posix_spawn_file_actions_init(posix_spawn_file_actions_t *);$/;"	p	signature:(posix_spawn_file_actions_t *)
posix_spawn_file_actions_t	spawn.h	/^    } posix_spawn_file_actions_t;$/;"	t	typeref:struct:__anon7
posix_spawnattr_destroy	spawn.h	/^    extern int posix_spawnattr_destroy(posix_spawnattr_t *);$/;"	p	signature:(posix_spawnattr_t *)
posix_spawnattr_getflags	spawn.h	/^    extern int posix_spawnattr_getflags(const posix_spawnattr_t *,$/;"	p	signature:(const posix_spawnattr_t *, short int *)
posix_spawnattr_getpgroup	spawn.h	/^    extern int posix_spawnattr_getpgroup(const posix_spawnattr_t *,$/;"	p	signature:(const posix_spawnattr_t *, pid_t *)
posix_spawnattr_getschedparam	spawn.h	/^    extern int posix_spawnattr_getschedparam(const posix_spawnattr_t *,$/;"	p	signature:(const posix_spawnattr_t *, struct sched_param *)
posix_spawnattr_getschedpolicy	spawn.h	/^    extern int posix_spawnattr_getschedpolicy(const posix_spawnattr_t *,$/;"	p	signature:(const posix_spawnattr_t *, int *)
posix_spawnattr_getsigdefault	spawn.h	/^    extern int posix_spawnattr_getsigdefault(const posix_spawnattr_t *,$/;"	p	signature:(const posix_spawnattr_t *, sigset_t *)
posix_spawnattr_getsigmask	spawn.h	/^    extern int posix_spawnattr_getsigmask(const posix_spawnattr_t *,$/;"	p	signature:(const posix_spawnattr_t *, sigset_t *)
posix_spawnattr_init	spawn.h	/^    extern int posix_spawnattr_init(posix_spawnattr_t *);$/;"	p	signature:(posix_spawnattr_t *)
posix_spawnattr_setflags	spawn.h	/^    extern int posix_spawnattr_setflags(posix_spawnattr_t *, short int);$/;"	p	signature:(posix_spawnattr_t *, short int)
posix_spawnattr_setpgroup	spawn.h	/^    extern int posix_spawnattr_setpgroup(posix_spawnattr_t *, pid_t);$/;"	p	signature:(posix_spawnattr_t *, pid_t)
posix_spawnattr_setschedparam	spawn.h	/^    extern int posix_spawnattr_setschedparam(posix_spawnattr_t *,$/;"	p	signature:(posix_spawnattr_t *, const struct sched_param *)
posix_spawnattr_setschedpolicy	spawn.h	/^    extern int posix_spawnattr_setschedpolicy(posix_spawnattr_t *, int);$/;"	p	signature:(posix_spawnattr_t *, int)
posix_spawnattr_setsigdefault	spawn.h	/^    extern int posix_spawnattr_setsigdefault(posix_spawnattr_t *,$/;"	p	signature:(posix_spawnattr_t *, const sigset_t *)
posix_spawnattr_setsigmask	spawn.h	/^    extern int posix_spawnattr_setsigmask(posix_spawnattr_t *,$/;"	p	signature:(posix_spawnattr_t *, const sigset_t *)
posix_spawnattr_t	spawn.h	/^    } posix_spawnattr_t;$/;"	t	typeref:struct:__anon8
posix_spawnp	spawn.h	/^    extern int posix_spawnp(pid_t *, const char *,$/;"	p	signature:(pid_t *, const char *, const posix_spawn_file_actions_t *, const posix_spawnattr_t *, char *const[], char *const[])
postorder	search.h	/^	postorder,$/;"	e	enum:__anon54
pow	math.h	/^    extern double pow(double, double);$/;"	p	signature:(double, double)
pow10	math.h	/^    extern double pow10(double);$/;"	p	signature:(double)
pow10f	math.h	/^    extern float pow10f(float);$/;"	p	signature:(float)
pow10l	math.h	/^    extern long double pow10l(long double);$/;"	p	signature:(long double)
powf	math.h	/^    extern float powf(float, float);$/;"	p	signature:(float, float)
powl	math.h	/^    extern long double powl(long double, long double);$/;"	p	signature:(long double, long double)
ppdClose	cups/ppd.h	/^    extern void ppdClose(ppd_file_t *);$/;"	p	signature:(ppd_file_t *)
ppdCollect	cups/ppd.h	/^    extern int ppdCollect(ppd_file_t *, ppd_section_t, ppd_choice_t * **);$/;"	p	signature:(ppd_file_t *, ppd_section_t, ppd_choice_t * **)
ppdConflicts	cups/ppd.h	/^    extern int ppdConflicts(ppd_file_t *);$/;"	p	signature:(ppd_file_t *)
ppdEmit	cups/ppd.h	/^    extern int ppdEmit(ppd_file_t *, FILE *, ppd_section_t);$/;"	p	signature:(ppd_file_t *, FILE *, ppd_section_t)
ppdEmitFd	cups/ppd.h	/^    extern int ppdEmitFd(ppd_file_t *, int, ppd_section_t);$/;"	p	signature:(ppd_file_t *, int, ppd_section_t)
ppdEmitJCL	cups/ppd.h	/^    extern int ppdEmitJCL(ppd_file_t *, FILE *, int, const char *,$/;"	p	signature:(ppd_file_t *, FILE *, int, const char *, const char *)
ppdErrorString	cups/ppd.h	/^    extern const char *ppdErrorString(ppd_status_t);$/;"	p	signature:(ppd_status_t)
ppdFindAttr	cups/ppd.h	/^    extern ppd_attr_t *ppdFindAttr(ppd_file_t *, const char *,$/;"	p	signature:(ppd_file_t *, const char *, const char *)
ppdFindChoice	cups/ppd.h	/^    extern ppd_choice_t *ppdFindChoice(ppd_option_t *, const char *);$/;"	p	signature:(ppd_option_t *, const char *)
ppdFindMarkedChoice	cups/ppd.h	/^    extern ppd_choice_t *ppdFindMarkedChoice(ppd_file_t *, const char *);$/;"	p	signature:(ppd_file_t *, const char *)
ppdFindNextAttr	cups/ppd.h	/^    extern ppd_attr_t *ppdFindNextAttr(ppd_file_t *, const char *,$/;"	p	signature:(ppd_file_t *, const char *, const char *)
ppdFindOption	cups/ppd.h	/^    extern ppd_option_t *ppdFindOption(ppd_file_t *, const char *);$/;"	p	signature:(ppd_file_t *, const char *)
ppdIsMarked	cups/ppd.h	/^    extern int ppdIsMarked(ppd_file_t *, const char *, const char *);$/;"	p	signature:(ppd_file_t *, const char *, const char *)
ppdLastError	cups/ppd.h	/^    extern ppd_status_t ppdLastError(int *);$/;"	p	signature:(int *)
ppdMarkDefaults	cups/ppd.h	/^    extern void ppdMarkDefaults(ppd_file_t *);$/;"	p	signature:(ppd_file_t *)
ppdMarkOption	cups/ppd.h	/^    extern int ppdMarkOption(ppd_file_t *, const char *, const char *);$/;"	p	signature:(ppd_file_t *, const char *, const char *)
ppdOpen	cups/ppd.h	/^    extern ppd_file_t *ppdOpen(FILE *);$/;"	p	signature:(FILE *)
ppdOpenFd	cups/ppd.h	/^    extern ppd_file_t *ppdOpenFd(int);$/;"	p	signature:(int)
ppdOpenFile	cups/ppd.h	/^    extern ppd_file_t *ppdOpenFile(const char *);$/;"	p	signature:(const char *)
ppdPageLength	cups/ppd.h	/^    extern float ppdPageLength(ppd_file_t *, const char *);$/;"	p	signature:(ppd_file_t *, const char *)
ppdPageSize	cups/ppd.h	/^    extern ppd_size_t *ppdPageSize(ppd_file_t *, const char *);$/;"	p	signature:(ppd_file_t *, const char *)
ppdPageWidth	cups/ppd.h	/^    extern float ppdPageWidth(ppd_file_t *, const char *);$/;"	p	signature:(ppd_file_t *, const char *)
ppdSetConformance	cups/ppd.h	/^    extern void ppdSetConformance(ppd_conform_t);$/;"	p	signature:(ppd_conform_t)
ppd_attr_t	cups/ppd.h	/^    } ppd_attr_t;$/;"	t	typeref:struct:__anon110
ppd_choice_t	cups/ppd.h	/^    } ppd_choice_t;$/;"	t	typeref:struct:__anon105
ppd_conform_t	cups/ppd.h	/^    } ppd_conform_t;$/;"	t	typeref:enum:__anon113
ppd_const_t	cups/ppd.h	/^    } ppd_const_t;$/;"	t	typeref:struct:__anon108
ppd_cs_t	cups/ppd.h	/^    } ppd_cs_t;$/;"	t	typeref:enum:__anon101
ppd_emul_t	cups/ppd.h	/^    } ppd_emul_t;$/;"	t	typeref:struct:__anon102
ppd_file_t	cups/ppd.h	/^    } ppd_file_t;$/;"	t	typeref:struct:__anon111
ppd_group_str	cups/ppd.h	/^    struct ppd_group_str {$/;"	s
ppd_group_str::name	cups/ppd.h	/^	char name[41];$/;"	m	struct:ppd_group_str	access:public
ppd_group_str::num_options	cups/ppd.h	/^	int num_options;$/;"	m	struct:ppd_group_str	access:public
ppd_group_str::num_subgroups	cups/ppd.h	/^	int num_subgroups;$/;"	m	struct:ppd_group_str	access:public
ppd_group_str::options	cups/ppd.h	/^	ppd_option_t *options;$/;"	m	struct:ppd_group_str	access:public
ppd_group_str::subgroups	cups/ppd.h	/^	struct ppd_group_str *subgroups;$/;"	m	struct:ppd_group_str	typeref:struct:ppd_group_str::ppd_group_str	access:public
ppd_group_str::text	cups/ppd.h	/^	char text[40];$/;"	m	struct:ppd_group_str	access:public
ppd_group_t	cups/ppd.h	/^    typedef struct ppd_group_str ppd_group_t;$/;"	t	typeref:struct:ppd_group_str
ppd_option_t	cups/ppd.h	/^    } ppd_option_t;$/;"	t	typeref:struct:__anon106
ppd_profile_t	cups/ppd.h	/^    } ppd_profile_t;$/;"	t	typeref:struct:__anon109
ppd_section_t	cups/ppd.h	/^    } ppd_section_t;$/;"	t	typeref:enum:__anon104
ppd_size_t	cups/ppd.h	/^    } ppd_size_t;$/;"	t	typeref:struct:__anon107
ppd_status_t	cups/ppd.h	/^    } ppd_status_t;$/;"	t	typeref:enum:__anon112
ppd_ui_t	cups/ppd.h	/^    } ppd_ui_t;$/;"	t	typeref:enum:__anon103
pread	unistd.h	/^    extern ssize_t pread(int, void *, size_t, off_t);$/;"	p	signature:(int, void *, size_t, off_t)
pread64	unistd.h	/^    extern ssize_t pread64(int, void *, size_t, off64_t);$/;"	p	signature:(int, void *, size_t, off64_t)
prefresh	curses.h	/^    extern int prefresh(WINDOW *, int, int, int, int, int, int);$/;"	p	signature:(WINDOW *, int, int, int, int, int, int)
prefresh	ncurses.h	/^    extern int prefresh(WINDOW *, int, int, int, int, int, int);$/;"	p	signature:(WINDOW *, int, int, int, int, int, int)
preorder	search.h	/^	preorder,$/;"	e	enum:__anon54
prg	alsa/seq_event.h	/^	short unsigned int prg;$/;"	m	struct:snd_seq_ev_sample	access:public
prg	alsa/seq_event.h	/^	short unsigned int prg;$/;"	m	struct:snd_seq_instr	access:public
printf	stdio.h	/^    extern int printf(const char *, ...);$/;"	p	signature:(const char *, ...)
printw	curses.h	/^    extern int printw(char *, ...);$/;"	p	signature:(char *, ...)
printw	ncurses.h	/^    extern int printw(char *, ...);$/;"	p	signature:(char *, ...)
priority	cups/cups.h	/^	int priority;$/;"	m	struct:__anon98	access:public
private_1	unwind.h	/^	u_int64_t private_1;$/;"	m	struct:_Unwind_Exception	access:public
private_2	unwind.h	/^	u_int64_t private_2;$/;"	m	struct:_Unwind_Exception	access:public
private_data	alsa/control_external.h	/^	void *private_data;$/;"	m	struct:snd_ctl_ext	access:public
private_data	alsa/pcm_extplug.h	/^	void *private_data;$/;"	m	struct:snd_pcm_extplug	access:public
proc	rpc/rpc_msg.h	/^		xdrproc_t proc;$/;"	m	struct:accepted_reply::__anon134::__anon136	access:public
proc	rpc/xdr.h	/^	xdrproc_t proc;$/;"	m	struct:xdr_discrim	access:public
processing_time	cups/cups.h	/^	time_t processing_time;$/;"	m	struct:__anon98	access:public
product	cups/ppd.h	/^	char *product;$/;"	m	struct:__anon111	access:public
profiles	cups/ppd.h	/^	ppd_profile_t *profiles;$/;"	m	struct:__anon111	access:public
protocols	cups/ppd.h	/^	char *protocols;$/;"	m	struct:__anon111	access:public
protoent	netdb.h	/^    struct protoent {$/;"	s
protoent::p_aliases	netdb.h	/^	char **p_aliases;$/;"	m	struct:protoent	access:public
protoent::p_name	netdb.h	/^	char *p_name;$/;"	m	struct:protoent	access:public
protoent::p_proto	netdb.h	/^	int p_proto;$/;"	m	struct:protoent	access:public
pselect	sys/select.h	/^    extern int pselect(int, fd_set *, fd_set *, fd_set *,$/;"	p	signature:(int, fd_set *, fd_set *, fd_set *, const struct timespec *, const sigset_t *)
psignal	signal.h	/^    extern void psignal(int, const char *);$/;"	p	signature:(int, const char *)
psw	signal.h	/^	_psw_t psw;$/;"	m	struct:__anon18	access:public
psw	signal.h	/^	_psw_t psw;$/;"	m	struct:__anon19	access:public
psw	ucontext.h	/^	_psw_t psw;$/;"	m	struct:__anon127	access:public
psw	ucontext.h	/^	_psw_t psw;$/;"	m	struct:__anon128	access:public
pt_regs	signal.h	/^    struct pt_regs {$/;"	s
pt_regs::ccr	signal.h	/^	unsigned long int ccr;$/;"	m	struct:pt_regs	access:public
pt_regs::ctr	signal.h	/^	unsigned long int ctr;$/;"	m	struct:pt_regs	access:public
pt_regs::dar	signal.h	/^	unsigned long int dar;	\/* Fault registers *\/$/;"	m	struct:pt_regs	access:public
pt_regs::dar	signal.h	/^	unsigned long int dar;$/;"	m	struct:pt_regs	access:public
pt_regs::dsisr	signal.h	/^	unsigned long int dsisr;$/;"	m	struct:pt_regs	access:public
pt_regs::gpr	signal.h	/^	unsigned long int gpr[32];$/;"	m	struct:pt_regs	access:public
pt_regs::link	signal.h	/^	unsigned long int link;$/;"	m	struct:pt_regs	access:public
pt_regs::mq	signal.h	/^	unsigned long int mq;	\/* 601 only (not used at present). Used on APUS to hold IPL val *\/$/;"	m	struct:pt_regs	access:public
pt_regs::msr	signal.h	/^	unsigned long int msr;$/;"	m	struct:pt_regs	access:public
pt_regs::nip	signal.h	/^	unsigned long int nip;$/;"	m	struct:pt_regs	access:public
pt_regs::orig_gpr3	signal.h	/^	unsigned long int orig_gpr3;	\/* Used for restarting system calls *\/$/;"	m	struct:pt_regs	access:public
pt_regs::orig_gpr3	signal.h	/^	unsigned long int orig_gpr3;$/;"	m	struct:pt_regs	access:public
pt_regs::result	signal.h	/^	unsigned long int result;	\/* Result of a system call *\/$/;"	m	struct:pt_regs	access:public
pt_regs::result	signal.h	/^	unsigned long int result;$/;"	m	struct:pt_regs	access:public
pt_regs::softe	signal.h	/^	unsigned long int softe;$/;"	m	struct:pt_regs	access:public
pt_regs::trap	signal.h	/^	unsigned long int trap;	\/* Reason for being here *\/$/;"	m	struct:pt_regs	access:public
pt_regs::trap	signal.h	/^	unsigned long int trap;$/;"	m	struct:pt_regs	access:public
pt_regs::xer	signal.h	/^	unsigned long int xer;$/;"	m	struct:pt_regs	access:public
pthread_atfork	pthread.h	/^    extern int pthread_atfork(void (*)(void)$/;"	p	signature:(void (*)(void) , void (*)(void) , void (*)(void) )
pthread_attr_destroy	pthread.h	/^    extern int pthread_attr_destroy(pthread_attr_t *);$/;"	p	signature:(pthread_attr_t *)
pthread_attr_getdetachstate	pthread.h	/^    extern int pthread_attr_getdetachstate(const pthread_attr_t *, int *);$/;"	p	signature:(const pthread_attr_t *, int *)
pthread_attr_getguardsize	pthread.h	/^    extern int pthread_attr_getguardsize(const pthread_attr_t *, size_t *);$/;"	p	signature:(const pthread_attr_t *, size_t *)
pthread_attr_getinheritsched	pthread.h	/^    extern int pthread_attr_getinheritsched(const pthread_attr_t *, int *);$/;"	p	signature:(const pthread_attr_t *, int *)
pthread_attr_getschedparam	pthread.h	/^    extern int pthread_attr_getschedparam(const pthread_attr_t *,$/;"	p	signature:(const pthread_attr_t *, struct sched_param *)
pthread_attr_getschedpolicy	pthread.h	/^    extern int pthread_attr_getschedpolicy(const pthread_attr_t *, int *);$/;"	p	signature:(const pthread_attr_t *, int *)
pthread_attr_getscope	pthread.h	/^    extern int pthread_attr_getscope(const pthread_attr_t *, int *);$/;"	p	signature:(const pthread_attr_t *, int *)
pthread_attr_getstack	pthread.h	/^    extern int pthread_attr_getstack(const pthread_attr_t *, void **,$/;"	p	signature:(const pthread_attr_t *, void **, size_t *)
pthread_attr_getstackaddr	pthread.h	/^    extern int pthread_attr_getstackaddr(const pthread_attr_t *, void **);$/;"	p	signature:(const pthread_attr_t *, void **)
pthread_attr_getstacksize	pthread.h	/^    extern int pthread_attr_getstacksize(const pthread_attr_t *, size_t *);$/;"	p	signature:(const pthread_attr_t *, size_t *)
pthread_attr_init	pthread.h	/^    extern int pthread_attr_init(pthread_attr_t *);$/;"	p	signature:(pthread_attr_t *)
pthread_attr_setdetachstate	pthread.h	/^    extern int pthread_attr_setdetachstate(pthread_attr_t *, int);$/;"	p	signature:(pthread_attr_t *, int)
pthread_attr_setguardsize	pthread.h	/^    extern int pthread_attr_setguardsize(pthread_attr_t *, size_t);$/;"	p	signature:(pthread_attr_t *, size_t)
pthread_attr_setinheritsched	pthread.h	/^    extern int pthread_attr_setinheritsched(pthread_attr_t *, int);$/;"	p	signature:(pthread_attr_t *, int)
pthread_attr_setschedparam	pthread.h	/^    extern int pthread_attr_setschedparam(pthread_attr_t *,$/;"	p	signature:(pthread_attr_t *, const struct sched_param *)
pthread_attr_setschedpolicy	pthread.h	/^    extern int pthread_attr_setschedpolicy(pthread_attr_t *, int);$/;"	p	signature:(pthread_attr_t *, int)
pthread_attr_setscope	pthread.h	/^    extern int pthread_attr_setscope(pthread_attr_t *, int);$/;"	p	signature:(pthread_attr_t *, int)
pthread_attr_setstack	pthread.h	/^    extern int pthread_attr_setstack(pthread_attr_t *, void *, size_t);$/;"	p	signature:(pthread_attr_t *, void *, size_t)
pthread_attr_setstackaddr	pthread.h	/^    extern int pthread_attr_setstackaddr(pthread_attr_t *, void *);$/;"	p	signature:(pthread_attr_t *, void *)
pthread_attr_setstacksize	pthread.h	/^    extern int pthread_attr_setstacksize(pthread_attr_t *, size_t);$/;"	p	signature:(pthread_attr_t *, size_t)
pthread_attr_t	pthread.h	/^    } pthread_attr_t;$/;"	t	typeref:struct:__anon65
pthread_barrier_destroy	pthread.h	/^    extern int pthread_barrier_destroy(pthread_barrier_t *);$/;"	p	signature:(pthread_barrier_t *)
pthread_barrier_init	pthread.h	/^    extern int pthread_barrier_init(pthread_barrier_t *,$/;"	p	signature:(pthread_barrier_t *, const pthread_barrierattr_t *, unsigned int)
pthread_barrier_t	pthread.h	/^    } pthread_barrier_t;$/;"	t	typeref:union:__anon55
pthread_barrier_t	pthread.h	/^    } pthread_barrier_t;$/;"	t	typeref:union:__anon56
pthread_barrier_t	pthread.h	/^    } pthread_barrier_t;$/;"	t	typeref:union:__anon57
pthread_barrier_t	pthread.h	/^    } pthread_barrier_t;$/;"	t	typeref:union:__anon58
pthread_barrier_t	pthread.h	/^    } pthread_barrier_t;$/;"	t	typeref:union:__anon59
pthread_barrier_t	pthread.h	/^    } pthread_barrier_t;$/;"	t	typeref:union:__anon60
pthread_barrier_t	pthread.h	/^    } pthread_barrier_t;$/;"	t	typeref:union:__anon61
pthread_barrier_wait	pthread.h	/^    extern int pthread_barrier_wait(pthread_barrier_t *);$/;"	p	signature:(pthread_barrier_t *)
pthread_barrierattr_destroy	pthread.h	/^    extern int pthread_barrierattr_destroy(pthread_barrierattr_t *);$/;"	p	signature:(pthread_barrierattr_t *)
pthread_barrierattr_getpshared	pthread.h	/^    extern int pthread_barrierattr_getpshared(const pthread_barrierattr_t$/;"	p	signature:(const pthread_barrierattr_t *, int *)
pthread_barrierattr_init	pthread.h	/^    extern int pthread_barrierattr_init(pthread_barrierattr_t *);$/;"	p	signature:(pthread_barrierattr_t *)
pthread_barrierattr_setpshared	pthread.h	/^    extern int pthread_barrierattr_setpshared(pthread_barrierattr_t *,$/;"	p	signature:(pthread_barrierattr_t *, int)
pthread_barrierattr_t	pthread.h	/^    } pthread_barrierattr_t;$/;"	t	typeref:union:__anon62
pthread_cancel	pthread.h	/^    extern int pthread_cancel(pthread_t);$/;"	p	signature:(pthread_t)
pthread_cleanup_pop	pthread.h	52;"	d
pthread_cleanup_push	pthread.h	49;"	d
pthread_cond_broadcast	pthread.h	/^    extern int pthread_cond_broadcast(pthread_cond_t *);$/;"	p	signature:(pthread_cond_t *)
pthread_cond_destroy	pthread.h	/^    extern int pthread_cond_destroy(pthread_cond_t *);$/;"	p	signature:(pthread_cond_t *)
pthread_cond_init	pthread.h	/^    extern int pthread_cond_init(pthread_cond_t *,$/;"	p	signature:(pthread_cond_t *, const pthread_condattr_t *)
pthread_cond_signal	pthread.h	/^    extern int pthread_cond_signal(pthread_cond_t *);$/;"	p	signature:(pthread_cond_t *)
pthread_cond_t	pthread.h	/^    } pthread_cond_t;$/;"	t	typeref:struct:__anon66
pthread_cond_timedwait	pthread.h	/^    extern int pthread_cond_timedwait(pthread_cond_t *, pthread_mutex_t *,$/;"	p	signature:(pthread_cond_t *, pthread_mutex_t *, const struct timespec *)
pthread_cond_wait	pthread.h	/^    extern int pthread_cond_wait(pthread_cond_t *, pthread_mutex_t *);$/;"	p	signature:(pthread_cond_t *, pthread_mutex_t *)
pthread_condattr_destroy	pthread.h	/^    extern int pthread_condattr_destroy(pthread_condattr_t *);$/;"	p	signature:(pthread_condattr_t *)
pthread_condattr_getpshared	pthread.h	/^    extern int pthread_condattr_getpshared(const pthread_condattr_t *,$/;"	p	signature:(const pthread_condattr_t *, int *)
pthread_condattr_init	pthread.h	/^    extern int pthread_condattr_init(pthread_condattr_t *);$/;"	p	signature:(pthread_condattr_t *)
pthread_condattr_setpshared	pthread.h	/^    extern int pthread_condattr_setpshared(pthread_condattr_t *, int);$/;"	p	signature:(pthread_condattr_t *, int)
pthread_condattr_t	pthread.h	/^    } pthread_condattr_t;$/;"	t	typeref:struct:__anon67
pthread_create	pthread.h	/^    extern int pthread_create(pthread_t *, const pthread_attr_t *,$/;"	p	signature:(pthread_t *, const pthread_attr_t *, void *(*)(void *) , void *)
pthread_detach	pthread.h	/^    extern int pthread_detach(pthread_t);$/;"	p	signature:(pthread_t)
pthread_equal	pthread.h	/^    extern int pthread_equal(pthread_t, pthread_t);$/;"	p	signature:(pthread_t, pthread_t)
pthread_exit	pthread.h	/^    extern void pthread_exit(void *);$/;"	p	signature:(void *)
pthread_getconcurrency	pthread.h	/^    extern int pthread_getconcurrency(void);$/;"	p	signature:(void)
pthread_getcpuclockid	pthread.h	/^    extern int pthread_getcpuclockid(pthread_t, clockid_t *);$/;"	p	signature:(pthread_t, clockid_t *)
pthread_getschedparam	pthread.h	/^    extern int pthread_getschedparam(pthread_t, int *,$/;"	p	signature:(pthread_t, int *, struct sched_param *)
pthread_getspecific	pthread.h	/^    extern void *pthread_getspecific(pthread_key_t);$/;"	p	signature:(pthread_key_t)
pthread_join	pthread.h	/^    extern int pthread_join(pthread_t, void **);$/;"	p	signature:(pthread_t, void **)
pthread_key_create	pthread.h	/^    extern int pthread_key_create(pthread_key_t *, void (*)(void *)$/;"	p	signature:(pthread_key_t *, void (*)(void *) )
pthread_key_delete	pthread.h	/^    extern int pthread_key_delete(pthread_key_t);$/;"	p	signature:(pthread_key_t)
pthread_key_t	pthread.h	/^    typedef unsigned int pthread_key_t;$/;"	t
pthread_kill	signal.h	/^    extern int pthread_kill(pthread_t, int);$/;"	p	signature:(pthread_t, int)
pthread_mutex_destroy	pthread.h	/^    extern int pthread_mutex_destroy(pthread_mutex_t *);$/;"	p	signature:(pthread_mutex_t *)
pthread_mutex_init	pthread.h	/^    extern int pthread_mutex_init(pthread_mutex_t *,$/;"	p	signature:(pthread_mutex_t *, const pthread_mutexattr_t *)
pthread_mutex_lock	pthread.h	/^    extern int pthread_mutex_lock(pthread_mutex_t *);$/;"	p	signature:(pthread_mutex_t *)
pthread_mutex_t	pthread.h	/^    } pthread_mutex_t;$/;"	t	typeref:struct:__anon63
pthread_mutex_timedlock	pthread.h	/^    extern int pthread_mutex_timedlock(pthread_mutex_t *,$/;"	p	signature:(pthread_mutex_t *, const struct timespec *)
pthread_mutex_trylock	pthread.h	/^    extern int pthread_mutex_trylock(pthread_mutex_t *);$/;"	p	signature:(pthread_mutex_t *)
pthread_mutex_unlock	pthread.h	/^    extern int pthread_mutex_unlock(pthread_mutex_t *);$/;"	p	signature:(pthread_mutex_t *)
pthread_mutexattr_destroy	pthread.h	/^    extern int pthread_mutexattr_destroy(pthread_mutexattr_t *);$/;"	p	signature:(pthread_mutexattr_t *)
pthread_mutexattr_getpshared	pthread.h	/^    extern int pthread_mutexattr_getpshared(const pthread_mutexattr_t *,$/;"	p	signature:(const pthread_mutexattr_t *, int *)
pthread_mutexattr_gettype	pthread.h	/^    extern int pthread_mutexattr_gettype(const pthread_mutexattr_t *,$/;"	p	signature:(const pthread_mutexattr_t *, int *)
pthread_mutexattr_init	pthread.h	/^    extern int pthread_mutexattr_init(pthread_mutexattr_t *);$/;"	p	signature:(pthread_mutexattr_t *)
pthread_mutexattr_setpshared	pthread.h	/^    extern int pthread_mutexattr_setpshared(pthread_mutexattr_t *, int);$/;"	p	signature:(pthread_mutexattr_t *, int)
pthread_mutexattr_settype	pthread.h	/^    extern int pthread_mutexattr_settype(pthread_mutexattr_t *, int);$/;"	p	signature:(pthread_mutexattr_t *, int)
pthread_mutexattr_t	pthread.h	/^    } pthread_mutexattr_t;$/;"	t	typeref:struct:__anon64
pthread_once	pthread.h	/^    extern int pthread_once(pthread_once_t *, void (*)(void)$/;"	p	signature:(pthread_once_t *, void (*)(void) )
pthread_once_t	pthread.h	/^    typedef int pthread_once_t;$/;"	t
pthread_rwlock_destroy	pthread.h	/^    extern int pthread_rwlock_destroy(pthread_rwlock_t *);$/;"	p	signature:(pthread_rwlock_t *)
pthread_rwlock_init	pthread.h	/^    extern int pthread_rwlock_init(pthread_rwlock_t *,$/;"	p	signature:(pthread_rwlock_t *, const pthread_rwlockattr_t *)
pthread_rwlock_rdlock	pthread.h	/^    extern int pthread_rwlock_rdlock(pthread_rwlock_t *);$/;"	p	signature:(pthread_rwlock_t *)
pthread_rwlock_t	pthread.h	/^    typedef struct _pthread_rwlock_t pthread_rwlock_t;$/;"	t	typeref:struct:_pthread_rwlock_t
pthread_rwlock_timedrdlock	pthread.h	/^    extern int pthread_rwlock_timedrdlock(pthread_rwlock_t *,$/;"	p	signature:(pthread_rwlock_t *, const struct timespec *)
pthread_rwlock_timedwrlock	pthread.h	/^    extern int pthread_rwlock_timedwrlock(pthread_rwlock_t *,$/;"	p	signature:(pthread_rwlock_t *, const struct timespec *)
pthread_rwlock_tryrdlock	pthread.h	/^    extern int pthread_rwlock_tryrdlock(pthread_rwlock_t *);$/;"	p	signature:(pthread_rwlock_t *)
pthread_rwlock_trywrlock	pthread.h	/^    extern int pthread_rwlock_trywrlock(pthread_rwlock_t *);$/;"	p	signature:(pthread_rwlock_t *)
pthread_rwlock_unlock	pthread.h	/^    extern int pthread_rwlock_unlock(pthread_rwlock_t *);$/;"	p	signature:(pthread_rwlock_t *)
pthread_rwlock_wrlock	pthread.h	/^    extern int pthread_rwlock_wrlock(pthread_rwlock_t *);$/;"	p	signature:(pthread_rwlock_t *)
pthread_rwlockattr_destroy	pthread.h	/^    extern int pthread_rwlockattr_destroy(pthread_rwlockattr_t *);$/;"	p	signature:(pthread_rwlockattr_t *)
pthread_rwlockattr_getpshared	pthread.h	/^    extern int pthread_rwlockattr_getpshared(const pthread_rwlockattr_t *,$/;"	p	signature:(const pthread_rwlockattr_t *, int *)
pthread_rwlockattr_init	pthread.h	/^    extern int pthread_rwlockattr_init(pthread_rwlockattr_t *);$/;"	p	signature:(pthread_rwlockattr_t *)
pthread_rwlockattr_setpshared	pthread.h	/^    extern int pthread_rwlockattr_setpshared(pthread_rwlockattr_t *, int);$/;"	p	signature:(pthread_rwlockattr_t *, int)
pthread_rwlockattr_t	pthread.h	/^    } pthread_rwlockattr_t;$/;"	t	typeref:struct:__anon68
pthread_self	pthread.h	/^    extern pthread_t pthread_self(void);$/;"	p	signature:(void)
pthread_setcancelstate	pthread.h	/^    extern int pthread_setcancelstate(int, int *);$/;"	p	signature:(int, int *)
pthread_setcanceltype	pthread.h	/^    extern int pthread_setcanceltype(int, int *);$/;"	p	signature:(int, int *)
pthread_setconcurrency	pthread.h	/^    extern int pthread_setconcurrency(int);$/;"	p	signature:(int)
pthread_setschedparam	pthread.h	/^    extern int pthread_setschedparam(pthread_t, int,$/;"	p	signature:(pthread_t, int, const struct sched_param *)
pthread_setschedprio	pthread.h	/^    extern int pthread_setschedprio(pthread_t, int);$/;"	p	signature:(pthread_t, int)
pthread_setspecific	pthread.h	/^    extern int pthread_setspecific(pthread_key_t, const void *);$/;"	p	signature:(pthread_key_t, const void *)
pthread_sigmask	signal.h	/^    extern int pthread_sigmask(int, const sigset_t *, sigset_t *);$/;"	p	signature:(int, const sigset_t *, sigset_t *)
pthread_spin_destroy	pthread.h	/^    extern int pthread_spin_destroy(pthread_spinlock_t *);$/;"	p	signature:(pthread_spinlock_t *)
pthread_spin_init	pthread.h	/^    extern int pthread_spin_init(pthread_spinlock_t *, int);$/;"	p	signature:(pthread_spinlock_t *, int)
pthread_spin_lock	pthread.h	/^    extern int pthread_spin_lock(pthread_spinlock_t *);$/;"	p	signature:(pthread_spinlock_t *)
pthread_spin_trylock	pthread.h	/^    extern int pthread_spin_trylock(pthread_spinlock_t *);$/;"	p	signature:(pthread_spinlock_t *)
pthread_spin_unlock	pthread.h	/^    extern int pthread_spin_unlock(pthread_spinlock_t *);$/;"	p	signature:(pthread_spinlock_t *)
pthread_spinlock_t	pthread.h	/^    typedef volatile int pthread_spinlock_t;$/;"	t
pthread_t	pthread.h	/^    typedef unsigned long int pthread_t;$/;"	t
pthread_testcancel	pthread.h	/^    extern void pthread_testcancel(void);$/;"	p	signature:(void)
ptr	alsa/seq_event.h	/^	void *ptr;$/;"	m	struct:snd_seq_ev_ext	access:public
ptrdiff_t	stddef.h	/^    typedef int ptrdiff_t;$/;"	t
ptrdiff_t	stddef.h	/^    typedef long int ptrdiff_t;$/;"	t
ptsname	stdlib.h	/^    extern char *ptsname(int);$/;"	p	signature:(int)
putc	stdio.h	/^    extern int putc(int, FILE *);$/;"	p	signature:(int, FILE *)
putc_unlocked	stdio.h	/^    extern int putc_unlocked(int, FILE *);$/;"	p	signature:(int, FILE *)
putchar	stdio.h	/^    extern int putchar(int);$/;"	p	signature:(int)
putchar_unlocked	stdio.h	/^    extern int putchar_unlocked(int);$/;"	p	signature:(int)
putenv	stdlib.h	/^    extern int putenv(char *);$/;"	p	signature:(char *)
putp	term.h	/^    extern int putp(const char *);$/;"	p	signature:(const char *)
puts	stdio.h	/^    extern int puts(const char *);$/;"	p	signature:(const char *)
pututxline	utmpx.h	/^    extern struct utmpx *pututxline(const struct utmpx *);$/;"	p	signature:(const struct utmpx *)
putw	stdio.h	/^    extern int putw(int, FILE *);$/;"	p	signature:(int, FILE *)
putwc	wchar.h	/^    extern wint_t putwc(wchar_t, FILE *);$/;"	p	signature:(wchar_t, FILE *)
putwchar	wchar.h	/^    extern wint_t putwchar(wchar_t);$/;"	p	signature:(wchar_t)
putwin	curses.h	/^    extern int putwin(WINDOW *, FILE *);$/;"	p	signature:(WINDOW *, FILE *)
putwin	ncurses.h	/^    extern int putwin(WINDOW *, FILE *);$/;"	p	signature:(WINDOW *, FILE *)
pw_dir	pwd.h	/^	char *pw_dir;$/;"	m	struct:passwd	access:public
pw_gecos	pwd.h	/^	char *pw_gecos;$/;"	m	struct:passwd	access:public
pw_gid	pwd.h	/^	gid_t pw_gid;$/;"	m	struct:passwd	access:public
pw_name	pwd.h	/^	char *pw_name;$/;"	m	struct:passwd	access:public
pw_passwd	pwd.h	/^	char *pw_passwd;$/;"	m	struct:passwd	access:public
pw_shell	pwd.h	/^	char *pw_shell;$/;"	m	struct:passwd	access:public
pw_uid	pwd.h	/^	uid_t pw_uid;$/;"	m	struct:passwd	access:public
pwrite	unistd.h	/^    extern ssize_t pwrite(int, const void *, size_t, off_t);$/;"	p	signature:(int, const void *, size_t, off_t)
pwrite64	unistd.h	/^    extern ssize_t pwrite64(int, const void *, size_t, off64_t);$/;"	p	signature:(int, const void *, size_t, off64_t)
qiflush	curses.h	/^    extern void qiflush(void);$/;"	p	signature:(void)
qiflush	ncurses.h	/^    extern void qiflush(void);$/;"	p	signature:(void)
qsort	stdlib.h	/^    extern void qsort(void *, size_t, size_t, const __compar_fn_t);$/;"	p	signature:(void *, size_t, size_t, const __compar_fn_t)
queue	alsa/seq_event.h	/^	    snd_seq_ev_queue_control_t queue;	\/* queue control *\/$/;"	m	union:snd_seq_event::__anon13
queue	alsa/seq_event.h	/^	unsigned char queue;$/;"	m	struct:snd_seq_ev_queue_control	access:public
queue	alsa/seq_event.h	/^	unsigned char queue;$/;"	m	struct:snd_seq_event	access:public
quot	stdlib.h	/^	int quot;$/;"	m	struct:__anon117	access:public
quot	stdlib.h	/^	long int quot;$/;"	m	struct:__anon118	access:public
quot	stdlib.h	/^	long long int quot;$/;"	m	struct:__anon119	access:public
r10	signal.h	/^	unsigned long int r10;$/;"	m	struct:sigcontext	access:public
r11	signal.h	/^	unsigned long int r11;$/;"	m	struct:sigcontext	access:public
r12	signal.h	/^	unsigned long int r12;$/;"	m	struct:sigcontext	access:public
r13	signal.h	/^	unsigned long int r13;$/;"	m	struct:sigcontext	access:public
r14	signal.h	/^	unsigned long int r14;$/;"	m	struct:sigcontext	access:public
r15	signal.h	/^	unsigned long int r15;$/;"	m	struct:sigcontext	access:public
r8	signal.h	/^	unsigned long int r8;$/;"	m	struct:sigcontext	access:public
r9	signal.h	/^	unsigned long int r9;$/;"	m	struct:sigcontext	access:public
raise	signal.h	/^    extern int raise(int);$/;"	p	signature:(int)
rand	stdlib.h	/^    extern int rand(void);$/;"	p	signature:(void)
rand_deg	stdlib.h	/^	int rand_deg;		\/* Degree of random number generator. *\/$/;"	m	struct:random_data	access:public
rand_r	stdlib.h	/^    extern int rand_r(unsigned int *);$/;"	p	signature:(unsigned int *)
rand_sep	stdlib.h	/^	int rand_sep;		\/* Distance between front and rear. *\/$/;"	m	struct:random_data	access:public
rand_type	stdlib.h	/^	int rand_type;		\/* Type of random number generator. *\/$/;"	m	struct:random_data	access:public
random	stdlib.h	/^    extern long int random(void);$/;"	p	signature:(void)
random_data	stdlib.h	/^    struct random_data {$/;"	s
random_data::end_ptr	stdlib.h	/^	int32_t *end_ptr;	\/* Pointer behind state table. *\/$/;"	m	struct:random_data	access:public
random_data::fptr	stdlib.h	/^	int32_t *fptr;		\/* Front pointer. *\/$/;"	m	struct:random_data	access:public
random_data::rand_deg	stdlib.h	/^	int rand_deg;		\/* Degree of random number generator. *\/$/;"	m	struct:random_data	access:public
random_data::rand_sep	stdlib.h	/^	int rand_sep;		\/* Distance between front and rear. *\/$/;"	m	struct:random_data	access:public
random_data::rand_type	stdlib.h	/^	int rand_type;		\/* Type of random number generator. *\/$/;"	m	struct:random_data	access:public
random_data::rptr	stdlib.h	/^	int32_t *rptr;		\/* Rear pointer. *\/$/;"	m	struct:random_data	access:public
random_data::state	stdlib.h	/^	int32_t *state;		\/* Array of state values. *\/$/;"	m	struct:random_data	access:public
rate	alsa/pcm_extplug.h	/^	unsigned int rate;$/;"	m	struct:snd_pcm_extplug	access:public
raw	curses.h	/^    extern int raw(void);$/;"	p	signature:(void)
raw	ncurses.h	/^    extern int raw(void);$/;"	p	signature:(void)
raw32	alsa/seq_event.h	/^	    snd_seq_ev_raw32_t raw32;	\/* raw32 data *\/$/;"	m	union:snd_seq_event::__anon13
raw8	alsa/seq_event.h	/^	    snd_seq_ev_raw8_t raw8;	\/* raw8 data *\/$/;"	m	union:snd_seq_event::__anon13
raw8	alsa/seq_event.h	/^	    unsigned char raw8[8];	\/* raw 8-bit *\/$/;"	m	union:snd_seq_ev_sample_control::__anon12
rax	signal.h	/^	unsigned long int rax;$/;"	m	struct:sigcontext	access:public
rbp	signal.h	/^	unsigned long int rbp;$/;"	m	struct:sigcontext	access:public
rbx	signal.h	/^	unsigned long int rbx;$/;"	m	struct:sigcontext	access:public
rcx	signal.h	/^	unsigned long int rcx;$/;"	m	struct:sigcontext	access:public
rdi	signal.h	/^	unsigned long int rdi;$/;"	m	struct:sigcontext	access:public
rdp	signal.h	/^	uint64_t rdp;$/;"	m	struct:_fpstate	access:public
rdp	ucontext.h	/^	uint64_t rdp;$/;"	m	struct:_libc_fpstate	access:public
rdx	signal.h	/^	unsigned long int rdx;$/;"	m	struct:sigcontext	access:public
re_nsub	regex.h	/^	size_t re_nsub;$/;"	m	struct:re_pattern_buffer	access:public
re_pattern_buffer	regex.h	/^    struct re_pattern_buffer {$/;"	s
re_pattern_buffer::allocated	regex.h	/^	unsigned long int allocated;$/;"	m	struct:re_pattern_buffer	access:public
re_pattern_buffer::buffer	regex.h	/^	unsigned char *buffer;$/;"	m	struct:re_pattern_buffer	access:public
re_pattern_buffer::can_be_null	regex.h	/^	unsigned int can_be_null:1;$/;"	m	struct:re_pattern_buffer	access:public
re_pattern_buffer::fastmap	regex.h	/^	char *fastmap;$/;"	m	struct:re_pattern_buffer	access:public
re_pattern_buffer::fastmap_accurate	regex.h	/^	unsigned int fastmap_accurate:1;$/;"	m	struct:re_pattern_buffer	access:public
re_pattern_buffer::newline_anchor	regex.h	/^	unsigned int newline_anchor:1;$/;"	m	struct:re_pattern_buffer	access:public
re_pattern_buffer::no_sub	regex.h	/^	unsigned int no_sub:1;$/;"	m	struct:re_pattern_buffer	access:public
re_pattern_buffer::not_bol	regex.h	/^	unsigned int not_bol:1;$/;"	m	struct:re_pattern_buffer	access:public
re_pattern_buffer::not_eol	regex.h	/^	unsigned int not_eol:1;$/;"	m	struct:re_pattern_buffer	access:public
re_pattern_buffer::re_nsub	regex.h	/^	size_t re_nsub;$/;"	m	struct:re_pattern_buffer	access:public
re_pattern_buffer::regs_allocated	regex.h	/^	unsigned int regs_allocated:2;$/;"	m	struct:re_pattern_buffer	access:public
re_pattern_buffer::syntax	regex.h	/^	reg_syntax_t syntax;$/;"	m	struct:re_pattern_buffer	access:public
re_pattern_buffer::translate	regex.h	/^	char *translate;$/;"	m	struct:re_pattern_buffer	access:public
re_pattern_buffer::used	regex.h	/^	unsigned long int used;$/;"	m	struct:re_pattern_buffer	access:public
re_status	rpc/clnt.h	/^	enum clnt_stat re_status;$/;"	m	struct:rpc_err	typeref:enum:rpc_err::clnt_stat	access:public
read	unistd.h	/^    extern ssize_t read(int, void *, size_t);$/;"	p	signature:(int, void *, size_t)
read_bytes	alsa/control_external.h	/^	int (*read_bytes) (void);$/;"	m	struct:snd_ctl_ext_callback	access:public
read_enumerated	alsa/control_external.h	/^	int (*read_enumerated) (void);$/;"	m	struct:snd_ctl_ext_callback	access:public
read_event	alsa/control_external.h	/^	int (*read_event) (void);$/;"	m	struct:snd_ctl_ext_callback	access:public
read_iec958	alsa/control_external.h	/^	int (*read_iec958) (void);$/;"	m	struct:snd_ctl_ext_callback	access:public
read_integer	alsa/control_external.h	/^	int (*read_integer) (void);$/;"	m	struct:snd_ctl_ext_callback	access:public
read_integer64	alsa/control_external.h	/^	int (*read_integer64) (void);$/;"	m	struct:snd_ctl_ext_callback	access:public
readdir	dirent.h	/^    extern struct dirent *readdir(DIR *);$/;"	p	signature:(DIR *)
readdir64	dirent.h	/^    extern struct dirent64 *readdir64(DIR *);$/;"	p	signature:(DIR *)
readdir64_r	dirent.h	/^    extern int readdir64_r(DIR *, struct dirent64 *, struct dirent64 **);$/;"	p	signature:(DIR *, struct dirent64 *, struct dirent64 **)
readdir_r	dirent.h	/^    extern int readdir_r(DIR *, struct dirent *, struct dirent **);$/;"	p	signature:(DIR *, struct dirent *, struct dirent **)
readlink	unistd.h	/^    extern ssize_t readlink(const char *, char *, size_t);$/;"	p	signature:(const char *, char *, size_t)
readv	sys/uio.h	/^    extern ssize_t readv(int, const struct iovec *, int);$/;"	p	signature:(int, const struct iovec *, int)
realloc	stdlib.h	/^    extern void *realloc(void *, size_t);$/;"	p	signature:(void *, size_t)
realpath	stdlib.h	/^    extern char *realpath(const char *, char *);$/;"	p	signature:(const char *, char *)
recv	sys/socket.h	/^    extern ssize_t recv(int, void *, size_t, int);$/;"	p	signature:(int, void *, size_t, int)
recvfrom	sys/socket.h	/^    extern ssize_t recvfrom(int, void *, size_t, int, struct sockaddr *,$/;"	p	signature:(int, void *, size_t, int, struct sockaddr *, socklen_t *)
recvmsg	sys/socket.h	/^    extern ssize_t recvmsg(int, struct msghdr *, int);$/;"	p	signature:(int, struct msghdr *, int)
redrawwin	curses.h	/^    extern int redrawwin(WINDOW *);$/;"	p	signature:(WINDOW *)
redrawwin	ncurses.h	/^    extern int redrawwin(WINDOW *);$/;"	p	signature:(WINDOW *)
refresh	curses.h	/^    extern int refresh(void);$/;"	p	signature:(void)
refresh	ncurses.h	/^    extern int refresh(void);$/;"	p	signature:(void)
reg_errcode_t	regex.h	/^    } reg_errcode_t;$/;"	t	typeref:enum:__anon71
reg_syntax_t	regex.h	/^    typedef unsigned long int reg_syntax_t;$/;"	t
regcomp	regex.h	/^    extern int regcomp(regex_t *, const char *, int);$/;"	p	signature:(regex_t *, const char *, int)
regerror	regex.h	/^    extern size_t regerror(int, const regex_t *, char *, size_t);$/;"	p	signature:(int, const regex_t *, char *, size_t)
regex_t	regex.h	/^    typedef struct re_pattern_buffer regex_t;$/;"	t	typeref:struct:re_pattern_buffer
regexec	regex.h	/^    extern int regexec(const regex_t *, const char *, size_t, regmatch_t[],$/;"	p	signature:(const regex_t *, const char *, size_t, regmatch_t[], int)
regfree	regex.h	/^    extern void regfree(regex_t *);$/;"	p	signature:(regex_t *)
regmatch_t	regex.h	/^    } regmatch_t;$/;"	t	typeref:struct:__anon70
regoff_t	regex.h	/^    typedef int regoff_t;$/;"	t
regs	signal.h	/^	_s390_regs_common regs;$/;"	m	struct:__anon39	access:public
regs	signal.h	/^	_s390_regs_common regs;$/;"	m	struct:__anon40	access:public
regs	signal.h	/^	struct pt_regs *regs;$/;"	m	struct:sigcontext	typeref:struct:sigcontext::pt_regs	access:public
regs	ucontext.h	/^	struct pt_regs *regs;$/;"	m	struct:__anon131	typeref:struct:__anon131::pt_regs	access:public
regs	ucontext.h	/^	struct pt_regs *regs;$/;"	m	union:uc_regs_ptr	typeref:struct:uc_regs_ptr::pt_regs
regs_allocated	regex.h	/^	unsigned int regs_allocated:2;$/;"	m	struct:re_pattern_buffer	access:public
reject_stat	rpc/rpc_msg.h	/^    enum reject_stat {$/;"	g
rejected_reply	rpc/rpc_msg.h	/^    struct rejected_reply {$/;"	s
rejected_reply::__anon137::RJ_versions	rpc/rpc_msg.h	/^	    } RJ_versions;$/;"	m	union:rejected_reply::__anon137	typeref:struct:rejected_reply::__anon137::__anon138
rejected_reply::__anon137::RJ_why	rpc/rpc_msg.h	/^	    enum auth_stat RJ_why;	\/* why authentication did not work *\/$/;"	m	union:rejected_reply::__anon137	typeref:enum:rejected_reply::__anon137::auth_stat
rejected_reply::__anon137::__anon138::high	rpc/rpc_msg.h	/^		unsigned long int high;$/;"	m	struct:rejected_reply::__anon137::__anon138	access:public
rejected_reply::__anon137::__anon138::low	rpc/rpc_msg.h	/^		unsigned long int low;$/;"	m	struct:rejected_reply::__anon137::__anon138	access:public
rejected_reply::rj_stat	rpc/rpc_msg.h	/^	enum reject_stat rj_stat;$/;"	m	struct:rejected_reply	typeref:enum:rejected_reply::reject_stat	access:public
rejected_reply::ru	rpc/rpc_msg.h	/^	} ru;$/;"	m	struct:rejected_reply	typeref:union:rejected_reply::__anon137	access:public
release	sys/utsname.h	/^	char release[65];$/;"	m	struct:utsname	access:public
rem	stdlib.h	/^	int rem;$/;"	m	struct:__anon117	access:public
rem	stdlib.h	/^	long int rem;$/;"	m	struct:__anon118	access:public
rem	stdlib.h	/^	long long int rem;$/;"	m	struct:__anon119	access:public
remainder	math.h	/^    extern double remainder(double, double);$/;"	p	signature:(double, double)
remainderf	math.h	/^    extern float remainderf(float, float);$/;"	p	signature:(float, float)
remainderl	math.h	/^    extern long double remainderl(long double, long double);$/;"	p	signature:(long double, long double)
remove	stdio.h	/^    extern int remove(const char *);$/;"	p	signature:(const char *)
remque	search.h	/^    extern void remque(void *);$/;"	p	signature:(void *)
remquo	math.h	/^    extern double remquo(double, double, int *);$/;"	p	signature:(double, double, int *)
remquof	math.h	/^    extern float remquof(float, float, int *);$/;"	p	signature:(float, float, int *)
remquol	math.h	/^    extern long double remquol(long double, long double, int *);$/;"	p	signature:(long double, long double, int *)
rename	unistd.h	/^    extern int rename(const char *, const char *);$/;"	p	signature:(const char *, const char *)
reply_body	rpc/rpc_msg.h	/^    struct reply_body {$/;"	s
reply_body::__anon139::RP_ar	rpc/rpc_msg.h	/^	    struct accepted_reply RP_ar;$/;"	m	union:reply_body::__anon139	typeref:struct:reply_body::__anon139::accepted_reply
reply_body::__anon139::RP_dr	rpc/rpc_msg.h	/^	    struct rejected_reply RP_dr;$/;"	m	union:reply_body::__anon139	typeref:struct:reply_body::__anon139::rejected_reply
reply_body::rp_stat	rpc/rpc_msg.h	/^	enum reply_stat rp_stat;$/;"	m	struct:reply_body	typeref:enum:reply_body::reply_stat	access:public
reply_body::ru	rpc/rpc_msg.h	/^	} ru;$/;"	m	struct:reply_body	typeref:union:reply_body::__anon139	access:public
reply_stat	rpc/rpc_msg.h	/^    enum reply_stat {$/;"	g
required_argument	getopt.h	12;"	d
reserved	signal.h	/^	unsigned long int reserved;$/;"	m	struct:_fpstate	access:public
reserved	zlib.h	/^	uLong reserved;		\/* reserved for future use *\/$/;"	m	struct:z_stream_s	access:public
reset	alsa/pcm.h	/^	void (*reset) (void);$/;"	m	struct:_snd_pcm_scope_ops	access:public
reset_prog_mode	curses.h	/^    extern int reset_prog_mode(void);$/;"	p	signature:(void)
reset_prog_mode	ncurses.h	/^    extern int reset_prog_mode(void);$/;"	p	signature:(void)
reset_shell_mode	curses.h	/^    extern int reset_shell_mode(void);$/;"	p	signature:(void)
reset_shell_mode	ncurses.h	/^    extern int reset_shell_mode(void);$/;"	p	signature:(void)
resetty	curses.h	/^    extern int resetty(void);$/;"	p	signature:(void)
resetty	ncurses.h	/^    extern int resetty(void);$/;"	p	signature:(void)
resolution	cups/ppd.h	/^	char resolution[41];$/;"	m	struct:__anon109	access:public
resp	security/pam_appl.h	/^	char *resp;$/;"	m	struct:pam_response	access:public
resp_retcode	security/pam_appl.h	/^	int resp_retcode;	\/* currently un-used, zero expected *\/$/;"	m	struct:pam_response	access:public
restartterm	term.h	/^    extern int restartterm(char *, int, int *);$/;"	p	signature:(char *, int, int *)
result	alsa/seq_event.h	/^	    snd_seq_result_t result;	\/* operation result code *\/$/;"	m	union:snd_seq_event::__anon13
result	alsa/seq_event.h	/^	int result;$/;"	m	struct:snd_seq_result	access:public
result	signal.h	/^	unsigned long int result;	\/* Result of a system call *\/$/;"	m	struct:pt_regs	access:public
result	signal.h	/^	unsigned long int result;$/;"	m	struct:pt_regs	access:public
retval	math.h	/^	double retval;$/;"	m	struct:exception	access:public
revents	sys/poll.h	/^	short revents;		\/* Types of events that actually occurred. *\/$/;"	m	struct:pollfd	access:public
rewind	stdio.h	/^    extern void rewind(FILE *);$/;"	p	signature:(FILE *)
rewinddir	dirent.h	/^    extern void rewinddir(DIR *);$/;"	p	signature:(DIR *)
right	cups/ppd.h	/^	float right;$/;"	m	struct:__anon107	access:public
rindex	strings.h	/^    extern char *rindex(const char *, int);$/;"	p	signature:(const char *, int)
rint	math.h	/^    extern double rint(double);$/;"	p	signature:(double)
rintf	math.h	/^    extern float rintf(float);$/;"	p	signature:(float)
rintl	math.h	/^    extern long double rintl(long double);$/;"	p	signature:(long double)
rip	signal.h	/^	uint64_t rip;$/;"	m	struct:_fpstate	access:public
rip	signal.h	/^	unsigned long int rip;$/;"	m	struct:sigcontext	access:public
rip	ucontext.h	/^	uint64_t rip;$/;"	m	struct:_libc_fpstate	access:public
ripoffline	curses.h	/^    extern int ripoffline(int, int (*)(WINDOW *, int)$/;"	p	signature:(int, int (*)(WINDOW *, int) )
ripoffline	ncurses.h	/^    extern int ripoffline(int, int (*)(WINDOW *, int)$/;"	p	signature:(int, int (*)(WINDOW *, int) )
rj_stat	rpc/rpc_msg.h	/^	enum reject_stat rj_stat;$/;"	m	struct:rejected_reply	typeref:enum:rejected_reply::reject_stat	access:public
rj_vers	rpc/rpc_msg.h	67;"	d
rj_why	rpc/rpc_msg.h	68;"	d
rjcted_rply	rpc/rpc_msg.h	114;"	d
rlim64_t	sys/resource.h	/^    typedef unsigned long long int rlim64_t;$/;"	t
rlim_cur	sys/resource.h	/^	rlim64_t rlim_cur;	\/* The current (soft) limit. *\/$/;"	m	struct:rlimit64	access:public
rlim_cur	sys/resource.h	/^	rlim_t rlim_cur;	\/* The current (soft) limit. *\/$/;"	m	struct:rlimit	access:public
rlim_max	sys/resource.h	/^	rlim64_t rlim_max;	\/* The hard limit. *\/$/;"	m	struct:rlimit64	access:public
rlim_max	sys/resource.h	/^	rlim_t rlim_max;	\/* The hard limit. *\/$/;"	m	struct:rlimit	access:public
rlim_t	sys/resource.h	/^    typedef unsigned long int rlim_t;$/;"	t
rlimit	sys/resource.h	/^    struct rlimit {$/;"	s
rlimit64	sys/resource.h	/^    struct rlimit64 {$/;"	s
rlimit64::rlim_cur	sys/resource.h	/^	rlim64_t rlim_cur;	\/* The current (soft) limit. *\/$/;"	m	struct:rlimit64	access:public
rlimit64::rlim_max	sys/resource.h	/^	rlim64_t rlim_max;	\/* The hard limit. *\/$/;"	m	struct:rlimit64	access:public
rlimit::rlim_cur	sys/resource.h	/^	rlim_t rlim_cur;	\/* The current (soft) limit. *\/$/;"	m	struct:rlimit	access:public
rlimit::rlim_max	sys/resource.h	/^	rlim_t rlim_max;	\/* The hard limit. *\/$/;"	m	struct:rlimit	access:public
rm_call	rpc/rpc_msg.h	111;"	d
rm_direction	rpc/rpc_msg.h	/^	enum msg_type rm_direction;$/;"	m	struct:rpc_msg	typeref:enum:rpc_msg::msg_type	access:public
rm_eo	regex.h	/^	regoff_t rm_eo;$/;"	m	struct:__anon70	access:public
rm_reply	rpc/rpc_msg.h	112;"	d
rm_so	regex.h	/^	regoff_t rm_so;$/;"	m	struct:__anon70	access:public
rm_xid	rpc/rpc_msg.h	/^	unsigned long int rm_xid;$/;"	m	struct:rpc_msg	access:public
rmdir	unistd.h	/^    extern int rmdir(const char *);$/;"	p	signature:(const char *)
round	math.h	/^    extern double round(double);$/;"	p	signature:(double)
roundf	math.h	/^    extern float roundf(float);$/;"	p	signature:(float)
roundl	math.h	/^    extern long double roundl(long double);$/;"	p	signature:(long double)
rp_acpt	rpc/rpc_msg.h	84;"	d
rp_rjct	rpc/rpc_msg.h	85;"	d
rp_stat	rpc/rpc_msg.h	/^	enum reply_stat rp_stat;$/;"	m	struct:reply_body	typeref:enum:reply_body::reply_stat	access:public
rpc_err	rpc/clnt.h	/^    struct rpc_err {$/;"	s
rpc_err::__anon142::RE_errno	rpc/clnt.h	/^	    int RE_errno;$/;"	m	union:rpc_err::__anon142
rpc_err::__anon142::RE_lb	rpc/clnt.h	/^	    } RE_lb;$/;"	m	union:rpc_err::__anon142	typeref:struct:rpc_err::__anon142::__anon144
rpc_err::__anon142::RE_vers	rpc/clnt.h	/^	    } RE_vers;$/;"	m	union:rpc_err::__anon142	typeref:struct:rpc_err::__anon142::__anon143
rpc_err::__anon142::RE_why	rpc/clnt.h	/^	    enum auth_stat RE_why;$/;"	m	union:rpc_err::__anon142	typeref:enum:rpc_err::__anon142::auth_stat
rpc_err::__anon142::__anon143::high	rpc/clnt.h	/^		u_long high;$/;"	m	struct:rpc_err::__anon142::__anon143	access:public
rpc_err::__anon142::__anon143::low	rpc/clnt.h	/^		u_long low;$/;"	m	struct:rpc_err::__anon142::__anon143	access:public
rpc_err::__anon142::__anon144::s1	rpc/clnt.h	/^		long int s1;$/;"	m	struct:rpc_err::__anon142::__anon144	access:public
rpc_err::__anon142::__anon144::s2	rpc/clnt.h	/^		long int s2;$/;"	m	struct:rpc_err::__anon142::__anon144	access:public
rpc_err::re_status	rpc/clnt.h	/^	enum clnt_stat re_status;$/;"	m	struct:rpc_err	typeref:enum:rpc_err::clnt_stat	access:public
rpc_err::ru	rpc/clnt.h	/^	} ru;$/;"	m	struct:rpc_err	typeref:union:rpc_err::__anon142	access:public
rpc_msg	rpc/rpc_msg.h	/^    struct rpc_msg {$/;"	s
rpc_msg::__anon140::RM_cmb	rpc/rpc_msg.h	/^	    struct call_body RM_cmb;$/;"	m	union:rpc_msg::__anon140	typeref:struct:rpc_msg::__anon140::call_body
rpc_msg::__anon140::RM_rmb	rpc/rpc_msg.h	/^	    struct reply_body RM_rmb;$/;"	m	union:rpc_msg::__anon140	typeref:struct:rpc_msg::__anon140::reply_body
rpc_msg::rm_direction	rpc/rpc_msg.h	/^	enum msg_type rm_direction;$/;"	m	struct:rpc_msg	typeref:enum:rpc_msg::msg_type	access:public
rpc_msg::rm_xid	rpc/rpc_msg.h	/^	unsigned long int rm_xid;$/;"	m	struct:rpc_msg	access:public
rpc_msg::ru	rpc/rpc_msg.h	/^	} ru;$/;"	m	struct:rpc_msg	typeref:union:rpc_msg::__anon140	access:public
rpcproc_t	rpc/types.h	/^    typedef unsigned long int rpcproc_t;$/;"	t
rpcprog_t	rpc/types.h	/^    typedef unsigned long int rpcprog_t;$/;"	t
rpcprot_t	rpc/types.h	/^    typedef unsigned long int rpcprot_t;$/;"	t
rpcvers_t	rpc/types.h	/^    typedef unsigned long int rpcvers_t;$/;"	t
rptr	stdlib.h	/^	int32_t *rptr;		\/* Rear pointer. *\/$/;"	m	struct:random_data	access:public
rq_clntcred	rpc/svc.h	/^	caddr_t rq_clntcred;$/;"	m	struct:svc_req	access:public
rq_cred	rpc/svc.h	/^	struct opaque_auth rq_cred;$/;"	m	struct:svc_req	typeref:struct:svc_req::opaque_auth	access:public
rq_proc	rpc/svc.h	/^	rpcproc_t rq_proc;$/;"	m	struct:svc_req	access:public
rq_prog	rpc/svc.h	/^	rpcprog_t rq_prog;$/;"	m	struct:svc_req	access:public
rq_vers	rpc/svc.h	/^	rpcvers_t rq_vers;$/;"	m	struct:svc_req	access:public
rq_xprt	rpc/svc.h	/^	SVCXPRT *rq_xprt;$/;"	m	struct:svc_req	access:public
rsi	signal.h	/^	unsigned long int rsi;$/;"	m	struct:sigcontext	access:public
rsp	signal.h	/^	unsigned long int rsp;$/;"	m	struct:sigcontext	access:public
ru	rpc/clnt.h	/^	} ru;$/;"	m	struct:rpc_err	typeref:union:rpc_err::__anon142	access:public
ru	rpc/rpc_msg.h	/^	} ru;$/;"	m	struct:accepted_reply	typeref:union:accepted_reply::__anon134	access:public
ru	rpc/rpc_msg.h	/^	} ru;$/;"	m	struct:rejected_reply	typeref:union:rejected_reply::__anon137	access:public
ru	rpc/rpc_msg.h	/^	} ru;$/;"	m	struct:reply_body	typeref:union:reply_body::__anon139	access:public
ru	rpc/rpc_msg.h	/^	} ru;$/;"	m	struct:rpc_msg	typeref:union:rpc_msg::__anon140	access:public
ru_idrss	sys/resource.h	/^	long int ru_idrss;	\/* Amount of data segment memory used (kilobyte-seconds). *\/$/;"	m	struct:rusage	access:public
ru_inblock	sys/resource.h	/^	long int ru_inblock;	\/* Number of input operations via the file system.  Note: This *\/$/;"	m	struct:rusage	access:public
ru_isrss	sys/resource.h	/^	long int ru_isrss;	\/* Amount of stack memory used (kilobyte-seconds). *\/$/;"	m	struct:rusage	access:public
ru_ixrss	sys/resource.h	/^	long int ru_ixrss;	\/* Amount of sharing of text segment memory        with other p *\/$/;"	m	struct:rusage	access:public
ru_majflt	sys/resource.h	/^	long int ru_majflt;	\/* Number of hard page faults (i.e. those that required I\/O). *\/$/;"	m	struct:rusage	access:public
ru_maxrss	sys/resource.h	/^	long int ru_maxrss;	\/* Maximum resident set size (in kilobytes). *\/$/;"	m	struct:rusage	access:public
ru_minflt	sys/resource.h	/^	long int ru_minflt;	\/* Number of soft page faults (i.e. those serviced by reclaimin *\/$/;"	m	struct:rusage	access:public
ru_msgrcv	sys/resource.h	/^	long int ru_msgrcv;	\/* Number of IPC messages received. *\/$/;"	m	struct:rusage	access:public
ru_msgsnd	sys/resource.h	/^	long int ru_msgsnd;	\/* Number of IPC messages sent. *\/$/;"	m	struct:rusage	access:public
ru_nivcsw	sys/resource.h	/^	long int ru_nivcsw;	\/* Number of involuntary context switches, i.e. a higher priori *\/$/;"	m	struct:rusage	access:public
ru_nsignals	sys/resource.h	/^	long int ru_nsignals;	\/* Number of signals delivered. *\/$/;"	m	struct:rusage	access:public
ru_nswap	sys/resource.h	/^	long int ru_nswap;	\/* Number of times a process was swapped out of physical memory *\/$/;"	m	struct:rusage	access:public
ru_nvcsw	sys/resource.h	/^	long int ru_nvcsw;	\/* Number of voluntary context switches, i.e. because the proce *\/$/;"	m	struct:rusage	access:public
ru_oublock	sys/resource.h	/^	long int ru_oublock;	\/* Number of output operations via the file system. *\/$/;"	m	struct:rusage	access:public
ru_stime	sys/resource.h	/^	struct timeval ru_stime;	\/* Total amount of system time used. *\/$/;"	m	struct:rusage	typeref:struct:rusage::timeval	access:public
ru_utime	sys/resource.h	/^	struct timeval ru_utime;	\/* Total amount of user time used. *\/$/;"	m	struct:rusage	typeref:struct:rusage::timeval	access:public
rusage	sys/resource.h	/^    struct rusage {$/;"	s
rusage::ru_idrss	sys/resource.h	/^	long int ru_idrss;	\/* Amount of data segment memory used (kilobyte-seconds). *\/$/;"	m	struct:rusage	access:public
rusage::ru_inblock	sys/resource.h	/^	long int ru_inblock;	\/* Number of input operations via the file system.  Note: This *\/$/;"	m	struct:rusage	access:public
rusage::ru_isrss	sys/resource.h	/^	long int ru_isrss;	\/* Amount of stack memory used (kilobyte-seconds). *\/$/;"	m	struct:rusage	access:public
rusage::ru_ixrss	sys/resource.h	/^	long int ru_ixrss;	\/* Amount of sharing of text segment memory        with other p *\/$/;"	m	struct:rusage	access:public
rusage::ru_majflt	sys/resource.h	/^	long int ru_majflt;	\/* Number of hard page faults (i.e. those that required I\/O). *\/$/;"	m	struct:rusage	access:public
rusage::ru_maxrss	sys/resource.h	/^	long int ru_maxrss;	\/* Maximum resident set size (in kilobytes). *\/$/;"	m	struct:rusage	access:public
rusage::ru_minflt	sys/resource.h	/^	long int ru_minflt;	\/* Number of soft page faults (i.e. those serviced by reclaimin *\/$/;"	m	struct:rusage	access:public
rusage::ru_msgrcv	sys/resource.h	/^	long int ru_msgrcv;	\/* Number of IPC messages received. *\/$/;"	m	struct:rusage	access:public
rusage::ru_msgsnd	sys/resource.h	/^	long int ru_msgsnd;	\/* Number of IPC messages sent. *\/$/;"	m	struct:rusage	access:public
rusage::ru_nivcsw	sys/resource.h	/^	long int ru_nivcsw;	\/* Number of involuntary context switches, i.e. a higher priori *\/$/;"	m	struct:rusage	access:public
rusage::ru_nsignals	sys/resource.h	/^	long int ru_nsignals;	\/* Number of signals delivered. *\/$/;"	m	struct:rusage	access:public
rusage::ru_nswap	sys/resource.h	/^	long int ru_nswap;	\/* Number of times a process was swapped out of physical memory *\/$/;"	m	struct:rusage	access:public
rusage::ru_nvcsw	sys/resource.h	/^	long int ru_nvcsw;	\/* Number of voluntary context switches, i.e. because the proce *\/$/;"	m	struct:rusage	access:public
rusage::ru_oublock	sys/resource.h	/^	long int ru_oublock;	\/* Number of output operations via the file system. *\/$/;"	m	struct:rusage	access:public
rusage::ru_stime	sys/resource.h	/^	struct timeval ru_stime;	\/* Total amount of system time used. *\/$/;"	m	struct:rusage	typeref:struct:rusage::timeval	access:public
rusage::ru_utime	sys/resource.h	/^	struct timeval ru_utime;	\/* Total amount of user time used. *\/$/;"	m	struct:rusage	typeref:struct:rusage::timeval	access:public
s1	rpc/clnt.h	/^		long int s1;$/;"	m	struct:rpc_err::__anon142::__anon144	access:public
s2	rpc/clnt.h	/^		long int s2;$/;"	m	struct:rpc_err::__anon142::__anon144	access:public
s6_addr	netinet/in.h	60;"	d
s6_addr16	netinet/in.h	58;"	d
s6_addr32	netinet/in.h	59;"	d
s_addr	netinet/in.h	/^	uint32_t s_addr;$/;"	m	struct:in_addr	access:public
s_aliases	netdb.h	/^	char **s_aliases;$/;"	m	struct:servent	access:public
s_name	netdb.h	/^	char *s_name;$/;"	m	struct:servent	access:public
s_port	netdb.h	/^	int s_port;$/;"	m	struct:servent	access:public
s_proto	netdb.h	/^	char *s_proto;$/;"	m	struct:servent	access:public
sa_data	sys/socket.h	/^	char sa_data[14];$/;"	m	struct:sockaddr	access:public
sa_family	sys/socket.h	/^	sa_family_t sa_family;$/;"	m	struct:sockaddr	access:public
sa_family_t	sys/socket.h	/^    typedef unsigned short sa_family_t;$/;"	t
sa_flags	signal.h	/^	int sa_flags;$/;"	m	struct:sigaction	access:public
sa_flags	signal.h	/^	unsigned long int sa_flags;$/;"	m	struct:sigaction	access:public
sa_handler	signal.h	420;"	d
sa_mask	signal.h	/^	sigset_t sa_mask;	\/* mask last for extensibility *\/$/;"	m	struct:sigaction	access:public
sa_mask	signal.h	/^	sigset_t sa_mask;$/;"	m	struct:sigaction	access:public
sa_restorer	signal.h	/^	void (*sa_restorer) (void);$/;"	m	struct:sigaction	access:public
sa_sigaction	signal.h	421;"	d
sample	alsa/seq_event.h	/^	    snd_seq_ev_sample_control_t sample;$/;"	m	union:snd_seq_event::__anon13
sample	alsa/seq_event.h	/^	    snd_seq_ev_sample_t sample;	\/* sample number *\/$/;"	m	union:snd_seq_ev_sample_control::__anon12
savetty	curses.h	/^    extern int savetty(void);$/;"	p	signature:(void)
savetty	ncurses.h	/^    extern int savetty(void);$/;"	p	signature:(void)
sbrk	unistd.h	/^    extern void *sbrk(intptr_t);$/;"	p	signature:(intptr_t)
sc_ar25	signal.h	/^	unsigned long int sc_ar25;	\/* cmp8xchg16 uses this *\/$/;"	m	struct:sigcontext	access:public
sc_ar26	signal.h	/^	unsigned long int sc_ar26;	\/*  rsvd for scratch use *\/$/;"	m	struct:sigcontext	access:public
sc_ar_bsp	signal.h	/^	unsigned long int sc_ar_bsp;$/;"	m	struct:sigcontext	access:public
sc_ar_ccv	signal.h	/^	unsigned long int sc_ar_ccv;$/;"	m	struct:sigcontext	access:public
sc_ar_fpsr	signal.h	/^	unsigned long int sc_ar_fpsr;$/;"	m	struct:sigcontext	access:public
sc_ar_lc	signal.h	/^	unsigned long int sc_ar_lc;$/;"	m	struct:sigcontext	access:public
sc_ar_pfs	signal.h	/^	unsigned long int sc_ar_pfs;$/;"	m	struct:sigcontext	access:public
sc_ar_rnat	signal.h	/^	unsigned long int sc_ar_rnat;$/;"	m	struct:sigcontext	access:public
sc_ar_rsc	signal.h	/^	unsigned long int sc_ar_rsc;$/;"	m	struct:sigcontext	access:public
sc_ar_unat	signal.h	/^	unsigned long int sc_ar_unat;$/;"	m	struct:sigcontext	access:public
sc_br	signal.h	/^	unsigned long int sc_br[8];$/;"	m	struct:sigcontext	access:public
sc_cfm	signal.h	/^	unsigned long int sc_cfm;$/;"	m	struct:sigcontext	access:public
sc_flags	signal.h	/^	unsigned long int sc_flags;$/;"	m	struct:sigcontext	access:public
sc_fr	signal.h	/^	struct ia64_fpreg sc_fr[128];$/;"	m	struct:sigcontext	typeref:struct:sigcontext::ia64_fpreg	access:public
sc_gr	signal.h	/^	unsigned long int sc_gr[32];$/;"	m	struct:sigcontext	access:public
sc_ip	signal.h	/^	unsigned long int sc_ip;$/;"	m	struct:sigcontext	access:public
sc_loadrs	signal.h	/^	unsigned long int sc_loadrs;	\/* see description above *\/$/;"	m	struct:sigcontext	access:public
sc_mask	signal.h	/^	unsigned long int sc_mask;	\/* really sigset_t, but unsigned long for convenience at the us *\/$/;"	m	struct:sigcontext	access:public
sc_nat	signal.h	/^	unsigned long int sc_nat;$/;"	m	struct:sigcontext	access:public
sc_pr	signal.h	/^	unsigned long int sc_pr;$/;"	m	struct:sigcontext	access:public
sc_rbs_base	signal.h	/^	unsigned long int sc_rbs_base;	\/* NULL or new base of sighandler's rbs *\/$/;"	m	struct:sigcontext	access:public
sc_rsvd	signal.h	/^	unsigned long int sc_rsvd[12];$/;"	m	struct:sigcontext	access:public
sc_stack	signal.h	/^	stack_t sc_stack;$/;"	m	struct:sigcontext	access:public
sc_um	signal.h	/^	unsigned long int sc_um;$/;"	m	struct:sigcontext	access:public
scalb	math.h	/^    extern double scalb(double, double);$/;"	p	signature:(double, double)
scalbf	math.h	/^    extern float scalbf(float, float);$/;"	p	signature:(float, float)
scalbl	math.h	/^    extern long double scalbl(long double, long double);$/;"	p	signature:(long double, long double)
scalbln	math.h	/^    extern double scalbln(double, long int);$/;"	p	signature:(double, long int)
scalblnf	math.h	/^    extern float scalblnf(float, long int);$/;"	p	signature:(float, long int)
scalblnl	math.h	/^    extern long double scalblnl(long double, long int);$/;"	p	signature:(long double, long int)
scalbn	math.h	/^    extern double scalbn(double, int);$/;"	p	signature:(double, int)
scalbnf	math.h	/^    extern float scalbnf(float, int);$/;"	p	signature:(float, int)
scalbnl	math.h	/^    extern long double scalbnl(long double, int);$/;"	p	signature:(long double, int)
scanf	stdio.h	/^    extern int scanf(const char *, ...);$/;"	p	signature:(const char *, ...)
scanw	curses.h	/^    extern int scanw(const char *, ...);$/;"	p	signature:(const char *, ...)
scanw	ncurses.h	/^    extern int scanw(const char *, ...);$/;"	p	signature:(const char *, ...)
sched_get_priority_max	sched.h	/^    extern int sched_get_priority_max(int);$/;"	p	signature:(int)
sched_get_priority_min	sched.h	/^    extern int sched_get_priority_min(int);$/;"	p	signature:(int)
sched_getparam	sched.h	/^    extern int sched_getparam(pid_t, struct sched_param *);$/;"	p	signature:(pid_t, struct sched_param *)
sched_getscheduler	sched.h	/^    extern int sched_getscheduler(pid_t);$/;"	p	signature:(pid_t)
sched_param	sched.h	/^    struct sched_param {$/;"	s
sched_param::sched_priority	sched.h	/^	int sched_priority;$/;"	m	struct:sched_param	access:public
sched_priority	sched.h	/^	int sched_priority;$/;"	m	struct:sched_param	access:public
sched_rr_get_interval	sched.h	/^    extern int sched_rr_get_interval(pid_t, struct timespec *);$/;"	p	signature:(pid_t, struct timespec *)
sched_setparam	sched.h	/^    extern int sched_setparam(pid_t, const struct sched_param *);$/;"	p	signature:(pid_t, const struct sched_param *)
sched_setscheduler	sched.h	/^    extern int sched_setscheduler(pid_t, int, const struct sched_param *);$/;"	p	signature:(pid_t, int, const struct sched_param *)
sched_yield	sched.h	/^    extern int sched_yield(void);$/;"	p	signature:(void)
scr_dump	curses.h	/^    extern int scr_dump(const char *);$/;"	p	signature:(const char *)
scr_dump	ncurses.h	/^    extern int scr_dump(const char *);$/;"	p	signature:(const char *)
scr_init	curses.h	/^    extern int scr_init(const char *);$/;"	p	signature:(const char *)
scr_init	ncurses.h	/^    extern int scr_init(const char *);$/;"	p	signature:(const char *)
scr_restore	curses.h	/^    extern int scr_restore(const char *);$/;"	p	signature:(const char *)
scr_restore	ncurses.h	/^    extern int scr_restore(const char *);$/;"	p	signature:(const char *)
scr_set	curses.h	/^    extern int scr_set(const char *);$/;"	p	signature:(const char *)
scr_set	ncurses.h	/^    extern int scr_set(const char *);$/;"	p	signature:(const char *)
scrl	curses.h	/^    extern int scrl(int);$/;"	p	signature:(int)
scrl	ncurses.h	/^    extern int scrl(int);$/;"	p	signature:(int)
scroll	curses.h	/^    extern int scroll(WINDOW *);$/;"	p	signature:(WINDOW *)
scroll	ncurses.h	/^    extern int scroll(WINDOW *);$/;"	p	signature:(WINDOW *)
scrollok	curses.h	/^    extern int scrollok(WINDOW *, bool);$/;"	p	signature:(WINDOW *, bool)
scrollok	ncurses.h	/^    extern int scrollok(WINDOW *, bool);$/;"	p	signature:(WINDOW *, bool)
section	cups/ppd.h	/^	ppd_section_t section;$/;"	m	struct:__anon106	access:public
seed48	stdlib.h	/^    extern unsigned short *seed48(unsigned short[]);$/;"	p	signature:(unsigned short[])
seekdir	dirent.h	/^    extern void seekdir(DIR *, long int);$/;"	p	signature:(DIR *, long int)
select	unistd.h	/^    extern int select(int, fd_set *, fd_set *, fd_set *, struct timeval *);$/;"	p	signature:(int, fd_set *, fd_set *, fd_set *, struct timeval *)
sem_close	semaphore.h	/^    extern int sem_close(sem_t *);$/;"	p	signature:(sem_t *)
sem_ctime	sys/sem.h	/^	time_t sem_ctime;	\/* last time changed by semctl() *\/$/;"	m	struct:semid_ds	access:public
sem_ctime	sys/sem.h	/^	time_t sem_ctime;$/;"	m	struct:semid_ds	access:public
sem_destroy	semaphore.h	/^    extern int sem_destroy(sem_t *);$/;"	p	signature:(sem_t *)
sem_flg	sys/sem.h	/^	short sem_flg;$/;"	m	struct:sembuf	access:public
sem_getvalue	semaphore.h	/^    extern int sem_getvalue(sem_t *, int *);$/;"	p	signature:(sem_t *, int *)
sem_init	semaphore.h	/^    extern int sem_init(sem_t *, int, unsigned int);$/;"	p	signature:(sem_t *, int, unsigned int)
sem_nsems	sys/sem.h	/^	unsigned long int sem_nsems;	\/* number of semaphores in set *\/$/;"	m	struct:semid_ds	access:public
sem_nsems	sys/sem.h	/^	unsigned long int sem_nsems;$/;"	m	struct:semid_ds	access:public
sem_num	sys/sem.h	/^	short sem_num;$/;"	m	struct:sembuf	access:public
sem_op	sys/sem.h	/^	short sem_op;$/;"	m	struct:sembuf	access:public
sem_open	semaphore.h	/^    extern sem_t *sem_open(const char *, int, ...);$/;"	p	signature:(const char *, int, ...)
sem_otime	sys/sem.h	/^	time_t sem_otime;	\/* last semop() time *\/$/;"	m	struct:semid_ds	access:public
sem_otime	sys/sem.h	/^	time_t sem_otime;$/;"	m	struct:semid_ds	access:public
sem_perm	sys/sem.h	/^	struct ipc_perm sem_perm;	\/* operation permission struct *\/$/;"	m	struct:semid_ds	typeref:struct:semid_ds::ipc_perm	access:public
sem_perm	sys/sem.h	/^	struct ipc_perm sem_perm;$/;"	m	struct:semid_ds	typeref:struct:semid_ds::ipc_perm	access:public
sem_post	semaphore.h	/^    extern int sem_post(sem_t *);$/;"	p	signature:(sem_t *)
sem_t	semaphore.h	/^    } sem_t;$/;"	t	typeref:struct:__anon69
sem_timedwait	semaphore.h	/^    extern int sem_timedwait(sem_t *, const struct timespec *);$/;"	p	signature:(sem_t *, const struct timespec *)
sem_trywait	semaphore.h	/^    extern int sem_trywait(sem_t *);$/;"	p	signature:(sem_t *)
sem_unlink	semaphore.h	/^    extern int sem_unlink(const char *);$/;"	p	signature:(const char *)
sem_wait	semaphore.h	/^    extern int sem_wait(sem_t *);$/;"	p	signature:(sem_t *)
sembuf	sys/sem.h	/^    struct sembuf {$/;"	s
sembuf::sem_flg	sys/sem.h	/^	short sem_flg;$/;"	m	struct:sembuf	access:public
sembuf::sem_num	sys/sem.h	/^	short sem_num;$/;"	m	struct:sembuf	access:public
sembuf::sem_op	sys/sem.h	/^	short sem_op;$/;"	m	struct:sembuf	access:public
semctl	sys/sem.h	/^    extern int semctl(int, int, int, ...);$/;"	p	signature:(int, int, int, ...)
semget	sys/sem.h	/^    extern int semget(key_t, int, int);$/;"	p	signature:(key_t, int, int)
semid_ds	sys/sem.h	/^    struct semid_ds {$/;"	s
semid_ds::__unused1	sys/sem.h	/^	unsigned int __unused1;$/;"	m	struct:semid_ds	access:public
semid_ds::__unused1	sys/sem.h	/^	unsigned long int __unused1;$/;"	m	struct:semid_ds	access:public
semid_ds::__unused2	sys/sem.h	/^	unsigned int __unused2;$/;"	m	struct:semid_ds	access:public
semid_ds::__unused2	sys/sem.h	/^	unsigned long int __unused2;$/;"	m	struct:semid_ds	access:public
semid_ds::__unused3	sys/sem.h	/^	unsigned long int __unused3;$/;"	m	struct:semid_ds	access:public
semid_ds::__unused4	sys/sem.h	/^	unsigned long int __unused4;$/;"	m	struct:semid_ds	access:public
semid_ds::sem_ctime	sys/sem.h	/^	time_t sem_ctime;	\/* last time changed by semctl() *\/$/;"	m	struct:semid_ds	access:public
semid_ds::sem_ctime	sys/sem.h	/^	time_t sem_ctime;$/;"	m	struct:semid_ds	access:public
semid_ds::sem_nsems	sys/sem.h	/^	unsigned long int sem_nsems;	\/* number of semaphores in set *\/$/;"	m	struct:semid_ds	access:public
semid_ds::sem_nsems	sys/sem.h	/^	unsigned long int sem_nsems;$/;"	m	struct:semid_ds	access:public
semid_ds::sem_otime	sys/sem.h	/^	time_t sem_otime;	\/* last semop() time *\/$/;"	m	struct:semid_ds	access:public
semid_ds::sem_otime	sys/sem.h	/^	time_t sem_otime;$/;"	m	struct:semid_ds	access:public
semid_ds::sem_perm	sys/sem.h	/^	struct ipc_perm sem_perm;	\/* operation permission struct *\/$/;"	m	struct:semid_ds	typeref:struct:semid_ds::ipc_perm	access:public
semid_ds::sem_perm	sys/sem.h	/^	struct ipc_perm sem_perm;$/;"	m	struct:semid_ds	typeref:struct:semid_ds::ipc_perm	access:public
semop	sys/sem.h	/^    extern int semop(int, struct sembuf *, size_t);$/;"	p	signature:(int, struct sembuf *, size_t)
send	sys/socket.h	/^    extern ssize_t send(int, const void *, size_t, int);$/;"	p	signature:(int, const void *, size_t, int)
sender	alsa/seq_event.h	/^	snd_seq_addr_t sender;$/;"	m	struct:snd_seq_connect	access:public
sendmsg	sys/socket.h	/^    extern ssize_t sendmsg(int, const struct msghdr *, int);$/;"	p	signature:(int, const struct msghdr *, int)
sendto	sys/socket.h	/^    extern ssize_t sendto(int, const void *, size_t, int,$/;"	p	signature:(int, const void *, size_t, int, const struct sockaddr *, socklen_t)
servent	netdb.h	/^    struct servent {$/;"	s
servent::s_aliases	netdb.h	/^	char **s_aliases;$/;"	m	struct:servent	access:public
servent::s_name	netdb.h	/^	char *s_name;$/;"	m	struct:servent	access:public
servent::s_port	netdb.h	/^	int s_port;$/;"	m	struct:servent	access:public
servent::s_proto	netdb.h	/^	char *s_proto;$/;"	m	struct:servent	access:public
set_curterm	term.h	/^    extern TERMINAL *set_curterm(TERMINAL *);$/;"	p	signature:(TERMINAL *)
set_term	curses.h	/^    extern SCREEN *set_term(SCREEN *);$/;"	p	signature:(SCREEN *)
set_term	ncurses.h	/^    extern SCREEN *set_term(SCREEN *);$/;"	p	signature:(SCREEN *)
setbuf	stdio.h	/^    extern void setbuf(FILE *, char *);$/;"	p	signature:(FILE *, char *)
setbuffer	stdio.h	/^    extern void setbuffer(FILE *, char *, size_t);$/;"	p	signature:(FILE *, char *, size_t)
setcontext	ucontext.h	/^    extern int setcontext(const struct ucontext *);$/;"	p	signature:(const struct ucontext *)
setegid	unistd.h	/^    extern int setegid(gid_t);$/;"	p	signature:(gid_t)
setenv	stdlib.h	/^    extern int setenv(const char *, const char *, int);$/;"	p	signature:(const char *, const char *, int)
seteuid	unistd.h	/^    extern int seteuid(uid_t);$/;"	p	signature:(uid_t)
setgid	unistd.h	/^    extern int setgid(gid_t);$/;"	p	signature:(gid_t)
setgrent	grp.h	/^    extern void setgrent(void);$/;"	p	signature:(void)
setgroups	grp.h	/^    extern int setgroups(size_t, const gid_t *);$/;"	p	signature:(size_t, const gid_t *)
sethostname	unistd.h	/^    extern int sethostname(const char *, size_t);$/;"	p	signature:(const char *, size_t)
setitimer	sys/time.h	/^    extern int setitimer(__itimer_which_t, const struct itimerval *,$/;"	p	signature:(__itimer_which_t, const struct itimerval *, struct itimerval *)
setjmp	setjmp.h	12;"	d
setkey	unistd.h	/^    extern void setkey(const char *);$/;"	p	signature:(const char *)
setlocale	locale.h	/^    extern char *setlocale(int, const char *);$/;"	p	signature:(int, const char *)
setlogmask	syslog.h	/^    extern int setlogmask(int);$/;"	p	signature:(int)
setpgid	unistd.h	/^    extern int setpgid(pid_t, pid_t);$/;"	p	signature:(pid_t, pid_t)
setpgrp	unistd.h	/^    extern int setpgrp(void);$/;"	p	signature:(void)
setpriority	sys/resource.h	/^    extern int setpriority(__priority_which_t, id_t, int);$/;"	p	signature:(__priority_which_t, id_t, int)
setprotoent	netdb.h	/^    extern void setprotoent(int);$/;"	p	signature:(int)
setpwent	pwd.h	/^    extern void setpwent(void);$/;"	p	signature:(void)
setregid	unistd.h	/^    extern int setregid(gid_t, gid_t);$/;"	p	signature:(gid_t, gid_t)
setreuid	unistd.h	/^    extern int setreuid(uid_t, uid_t);$/;"	p	signature:(uid_t, uid_t)
setrlimit	sys/resource.h	/^    extern int setrlimit(__rlimit_resource_t, const struct rlimit *);$/;"	p	signature:(__rlimit_resource_t, const struct rlimit *)
setrlimit64	sys/resource.h	/^    extern int setrlimit64(__rlimit_resource_t, const struct rlimit64 *);$/;"	p	signature:(__rlimit_resource_t, const struct rlimit64 *)
setscrreg	curses.h	/^    extern int setscrreg(int, int);$/;"	p	signature:(int, int)
setscrreg	ncurses.h	/^    extern int setscrreg(int, int);$/;"	p	signature:(int, int)
setservent	netdb.h	/^    extern void setservent(int);$/;"	p	signature:(int)
setsid	unistd.h	/^    extern pid_t setsid(void);$/;"	p	signature:(void)
setsockopt	sys/socket.h	/^    extern int setsockopt(int, int, int, const void *, socklen_t);$/;"	p	signature:(int, int, int, const void *, socklen_t)
setstate	stdlib.h	/^    extern char *setstate(char *);$/;"	p	signature:(char *)
setuid	unistd.h	/^    extern int setuid(uid_t);$/;"	p	signature:(uid_t)
setupterm	term.h	/^    extern int setupterm(char *, int, int *);$/;"	p	signature:(char *, int, int *)
setutent	utmp.h	/^    extern void setutent(void);$/;"	p	signature:(void)
setutxent	utmpx.h	/^    extern void setutxent(void);$/;"	p	signature:(void)
setvbuf	stdio.h	/^    extern int setvbuf(FILE *, char *, int, size_t);$/;"	p	signature:(FILE *, char *, int, size_t)
shm_atime	sys/shm.h	/^	time_t shm_atime;	\/* time of last shmat() *\/$/;"	m	struct:shmid_ds	access:public
shm_atime	sys/shm.h	/^	time_t shm_atime;$/;"	m	struct:shmid_ds	access:public
shm_cpid	sys/shm.h	/^	pid_t shm_cpid;		\/* pid of creator *\/$/;"	m	struct:shmid_ds	access:public
shm_cpid	sys/shm.h	/^	pid_t shm_cpid;$/;"	m	struct:shmid_ds	access:public
shm_ctime	sys/shm.h	/^	time_t shm_ctime;	\/* time of last change by shmctl() *\/$/;"	m	struct:shmid_ds	access:public
shm_ctime	sys/shm.h	/^	time_t shm_ctime;$/;"	m	struct:shmid_ds	access:public
shm_dtime	sys/shm.h	/^	time_t shm_dtime;	\/* time of last shmdt() *\/$/;"	m	struct:shmid_ds	access:public
shm_dtime	sys/shm.h	/^	time_t shm_dtime;$/;"	m	struct:shmid_ds	access:public
shm_lpid	sys/shm.h	/^	pid_t shm_lpid;		\/* pid of last shmop *\/$/;"	m	struct:shmid_ds	access:public
shm_lpid	sys/shm.h	/^	pid_t shm_lpid;$/;"	m	struct:shmid_ds	access:public
shm_nattch	sys/shm.h	/^	shmatt_t shm_nattch;	\/* number of current attaches *\/$/;"	m	struct:shmid_ds	access:public
shm_nattch	sys/shm.h	/^	shmatt_t shm_nattch;$/;"	m	struct:shmid_ds	access:public
shm_nattch	sys/shm.h	/^	unsigned long int shm_nattch;	\/* number of current attaches *\/$/;"	m	struct:shmid_ds	access:public
shm_open	sys/mman.h	/^    extern int shm_open(const char *, int, mode_t);$/;"	p	signature:(const char *, int, mode_t)
shm_perm	sys/shm.h	/^	struct ipc_perm shm_perm;	\/* operation permission struct *\/$/;"	m	struct:shmid_ds	typeref:struct:shmid_ds::ipc_perm	access:public
shm_perm	sys/shm.h	/^	struct ipc_perm shm_perm;$/;"	m	struct:shmid_ds	typeref:struct:shmid_ds::ipc_perm	access:public
shm_segsz	sys/shm.h	/^	int shm_segsz;$/;"	m	struct:shmid_ds	access:public
shm_segsz	sys/shm.h	/^	size_t shm_segsz;	\/* size of segment in bytes *\/$/;"	m	struct:shmid_ds	access:public
shm_segsz	sys/shm.h	/^	size_t shm_segsz;$/;"	m	struct:shmid_ds	access:public
shm_unlink	sys/mman.h	/^    extern int shm_unlink(const char *);$/;"	p	signature:(const char *)
shmat	sys/shm.h	/^    extern void *shmat(int, const void *, int);$/;"	p	signature:(int, const void *, int)
shmatt_t	sys/shm.h	/^    typedef unsigned long int shmatt_t;$/;"	t
shmctl	sys/shm.h	/^    extern int shmctl(int, int, struct shmid_ds *);$/;"	p	signature:(int, int, struct shmid_ds *)
shmdt	sys/shm.h	/^    extern int shmdt(const void *);$/;"	p	signature:(const void *)
shmget	sys/shm.h	/^    extern int shmget(key_t, size_t, int);$/;"	p	signature:(key_t, size_t, int)
shmid_ds	sys/shm.h	/^    struct shmid_ds {$/;"	s
shmid_ds::__unused1	sys/shm.h	/^	unsigned int __unused1;$/;"	m	struct:shmid_ds	access:public
shmid_ds::__unused1	sys/shm.h	/^	unsigned long int __unused1;$/;"	m	struct:shmid_ds	access:public
shmid_ds::__unused2	sys/shm.h	/^	unsigned int __unused2;$/;"	m	struct:shmid_ds	access:public
shmid_ds::__unused2	sys/shm.h	/^	unsigned long int __unused2;$/;"	m	struct:shmid_ds	access:public
shmid_ds::__unused3	sys/shm.h	/^	unsigned int __unused3;$/;"	m	struct:shmid_ds	access:public
shmid_ds::__unused3	sys/shm.h	/^	unsigned long int __unused3;$/;"	m	struct:shmid_ds	access:public
shmid_ds::__unused4	sys/shm.h	/^	unsigned int __unused4;$/;"	m	struct:shmid_ds	access:public
shmid_ds::__unused4	sys/shm.h	/^	unsigned long int __unused4;$/;"	m	struct:shmid_ds	access:public
shmid_ds::__unused5	sys/shm.h	/^	unsigned long int __unused5;$/;"	m	struct:shmid_ds	access:public
shmid_ds::__unused6	sys/shm.h	/^	unsigned long int __unused6;$/;"	m	struct:shmid_ds	access:public
shmid_ds::shm_atime	sys/shm.h	/^	time_t shm_atime;	\/* time of last shmat() *\/$/;"	m	struct:shmid_ds	access:public
shmid_ds::shm_atime	sys/shm.h	/^	time_t shm_atime;$/;"	m	struct:shmid_ds	access:public
shmid_ds::shm_cpid	sys/shm.h	/^	pid_t shm_cpid;		\/* pid of creator *\/$/;"	m	struct:shmid_ds	access:public
shmid_ds::shm_cpid	sys/shm.h	/^	pid_t shm_cpid;$/;"	m	struct:shmid_ds	access:public
shmid_ds::shm_ctime	sys/shm.h	/^	time_t shm_ctime;	\/* time of last change by shmctl() *\/$/;"	m	struct:shmid_ds	access:public
shmid_ds::shm_ctime	sys/shm.h	/^	time_t shm_ctime;$/;"	m	struct:shmid_ds	access:public
shmid_ds::shm_dtime	sys/shm.h	/^	time_t shm_dtime;	\/* time of last shmdt() *\/$/;"	m	struct:shmid_ds	access:public
shmid_ds::shm_dtime	sys/shm.h	/^	time_t shm_dtime;$/;"	m	struct:shmid_ds	access:public
shmid_ds::shm_lpid	sys/shm.h	/^	pid_t shm_lpid;		\/* pid of last shmop *\/$/;"	m	struct:shmid_ds	access:public
shmid_ds::shm_lpid	sys/shm.h	/^	pid_t shm_lpid;$/;"	m	struct:shmid_ds	access:public
shmid_ds::shm_nattch	sys/shm.h	/^	shmatt_t shm_nattch;	\/* number of current attaches *\/$/;"	m	struct:shmid_ds	access:public
shmid_ds::shm_nattch	sys/shm.h	/^	shmatt_t shm_nattch;$/;"	m	struct:shmid_ds	access:public
shmid_ds::shm_nattch	sys/shm.h	/^	unsigned long int shm_nattch;	\/* number of current attaches *\/$/;"	m	struct:shmid_ds	access:public
shmid_ds::shm_perm	sys/shm.h	/^	struct ipc_perm shm_perm;	\/* operation permission struct *\/$/;"	m	struct:shmid_ds	typeref:struct:shmid_ds::ipc_perm	access:public
shmid_ds::shm_perm	sys/shm.h	/^	struct ipc_perm shm_perm;$/;"	m	struct:shmid_ds	typeref:struct:shmid_ds::ipc_perm	access:public
shmid_ds::shm_segsz	sys/shm.h	/^	int shm_segsz;$/;"	m	struct:shmid_ds	access:public
shmid_ds::shm_segsz	sys/shm.h	/^	size_t shm_segsz;	\/* size of segment in bytes *\/$/;"	m	struct:shmid_ds	access:public
shmid_ds::shm_segsz	sys/shm.h	/^	size_t shm_segsz;$/;"	m	struct:shmid_ds	access:public
shortnickname	cups/ppd.h	/^	char *shortnickname;$/;"	m	struct:__anon111	access:public
shutdown	sys/socket.h	/^    extern int shutdown(int, int);$/;"	p	signature:(int, int)
si_addr	signal.h	277;"	d
si_band	signal.h	278;"	d
si_code	signal.h	/^	int si_code;		\/* Signal code. *\/$/;"	m	struct:siginfo	access:public
si_errno	signal.h	/^	int si_errno;$/;"	m	struct:siginfo	access:public
si_fd	signal.h	279;"	d
si_int	signal.h	272;"	d
si_pid	signal.h	269;"	d
si_ptr	signal.h	273;"	d
si_signo	signal.h	/^	int si_signo;		\/* Signal number. *\/$/;"	m	struct:siginfo	access:public
si_status	signal.h	274;"	d
si_stime	signal.h	275;"	d
si_timer1	signal.h	280;"	d
si_timer2	signal.h	281;"	d
si_uid	signal.h	270;"	d
si_utime	signal.h	276;"	d
si_value	signal.h	271;"	d
sig	signal.h	/^	unsigned long int sig[_SIGSET_NWORDS];$/;"	m	struct:__anon29	access:public
sig_atomic_t	signal.h	/^    typedef int sig_atomic_t;$/;"	t
sigaction	signal.h	/^    extern int sigaction(int, const struct sigaction *,$/;"	p	signature:(int, const struct sigaction *, struct sigaction *)
sigaction	signal.h	/^    struct sigaction {$/;"	s
sigaction::__anon30::_sa_handler	signal.h	/^	    sighandler_t _sa_handler;$/;"	m	union:sigaction::__anon30
sigaction::__anon30::_sa_sigaction	signal.h	/^	    void (*_sa_sigaction) (int, siginfo_t *, void *);$/;"	m	union:sigaction::__anon30
sigaction::__anon31::_sa_handler	signal.h	/^	    sighandler_t _sa_handler;$/;"	m	union:sigaction::__anon31
sigaction::__anon31::_sa_sigaction	signal.h	/^	    void (*_sa_sigaction) (int, siginfo_t *, void *);$/;"	m	union:sigaction::__anon31
sigaction::__anon32::_sa_handler	signal.h	/^	    sighandler_t _sa_handler;$/;"	m	union:sigaction::__anon32
sigaction::__anon32::_sa_sigaction	signal.h	/^	    void (*_sa_sigaction) (int, siginfo_t *, void *);$/;"	m	union:sigaction::__anon32
sigaction::__anon33::_sa_handler	signal.h	/^	    sighandler_t _sa_handler;$/;"	m	union:sigaction::__anon33
sigaction::__anon33::_sa_sigaction	signal.h	/^	    void (*_sa_sigaction) (int, siginfo_t *, void *);$/;"	m	union:sigaction::__anon33
sigaction::__anon34::_sa_handler	signal.h	/^	    sighandler_t _sa_handler;$/;"	m	union:sigaction::__anon34
sigaction::__anon34::_sa_sigaction	signal.h	/^	    void (*_sa_sigaction) (int, siginfo_t *, void *);$/;"	m	union:sigaction::__anon34
sigaction::__anon35::_sa_handler	signal.h	/^	    sighandler_t _sa_handler;$/;"	m	union:sigaction::__anon35
sigaction::__anon35::_sa_sigaction	signal.h	/^	    void (*_sa_sigaction) (int, siginfo_t *, void *);$/;"	m	union:sigaction::__anon35
sigaction::__anon36::_sa_handler	signal.h	/^	    sighandler_t _sa_handler;$/;"	m	union:sigaction::__anon36
sigaction::__anon36::_sa_sigaction	signal.h	/^	    void (*_sa_sigaction) (int, siginfo_t *, void *);$/;"	m	union:sigaction::__anon36
sigaction::__sigaction_handler	signal.h	/^	} __sigaction_handler;$/;"	m	struct:sigaction	typeref:union:sigaction::__anon30	access:public
sigaction::__sigaction_handler	signal.h	/^	} __sigaction_handler;$/;"	m	struct:sigaction	typeref:union:sigaction::__anon31	access:public
sigaction::__sigaction_handler	signal.h	/^	} __sigaction_handler;$/;"	m	struct:sigaction	typeref:union:sigaction::__anon32	access:public
sigaction::__sigaction_handler	signal.h	/^	} __sigaction_handler;$/;"	m	struct:sigaction	typeref:union:sigaction::__anon33	access:public
sigaction::__sigaction_handler	signal.h	/^	} __sigaction_handler;$/;"	m	struct:sigaction	typeref:union:sigaction::__anon34	access:public
sigaction::__sigaction_handler	signal.h	/^	} __sigaction_handler;$/;"	m	struct:sigaction	typeref:union:sigaction::__anon35	access:public
sigaction::__sigaction_handler	signal.h	/^	} __sigaction_handler;$/;"	m	struct:sigaction	typeref:union:sigaction::__anon36	access:public
sigaction::sa_flags	signal.h	/^	int sa_flags;$/;"	m	struct:sigaction	access:public
sigaction::sa_flags	signal.h	/^	unsigned long int sa_flags;$/;"	m	struct:sigaction	access:public
sigaction::sa_mask	signal.h	/^	sigset_t sa_mask;	\/* mask last for extensibility *\/$/;"	m	struct:sigaction	access:public
sigaction::sa_mask	signal.h	/^	sigset_t sa_mask;$/;"	m	struct:sigaction	access:public
sigaction::sa_restorer	signal.h	/^	void (*sa_restorer) (void);$/;"	m	struct:sigaction	access:public
sigaddset	signal.h	/^    extern int sigaddset(sigset_t *, int);$/;"	p	signature:(sigset_t *, int)
sigaltstack	signal.h	/^    extern int sigaltstack(const struct sigaltstack *,$/;"	p	signature:(const struct sigaltstack *, struct sigaltstack *)
sigaltstack	signal.h	/^    struct sigaltstack {$/;"	s
sigaltstack::ss_flags	signal.h	/^	int ss_flags;$/;"	m	struct:sigaltstack	access:public
sigaltstack::ss_size	signal.h	/^	size_t ss_size;$/;"	m	struct:sigaltstack	access:public
sigaltstack::ss_sp	signal.h	/^	void *ss_sp;$/;"	m	struct:sigaltstack	access:public
sigandset	signal.h	/^    extern int sigandset(sigset_t *, const sigset_t *, const sigset_t *);$/;"	p	signature:(sigset_t *, const sigset_t *, const sigset_t *)
sigcontext	signal.h	/^    struct sigcontext {$/;"	s
sigcontext::__csh	signal.h	/^	unsigned short __csh;$/;"	m	struct:sigcontext	access:public
sigcontext::__dsh	signal.h	/^	unsigned short __dsh;$/;"	m	struct:sigcontext	access:public
sigcontext::__esh	signal.h	/^	unsigned short __esh;$/;"	m	struct:sigcontext	access:public
sigcontext::__fsh	signal.h	/^	unsigned short __fsh;$/;"	m	struct:sigcontext	access:public
sigcontext::__gsh	signal.h	/^	unsigned short __gsh;$/;"	m	struct:sigcontext	access:public
sigcontext::__pad0	signal.h	/^	unsigned short __pad0;$/;"	m	struct:sigcontext	access:public
sigcontext::__reserved1	signal.h	/^	unsigned long int __reserved1[8];$/;"	m	struct:sigcontext	access:public
sigcontext::__ssh	signal.h	/^	unsigned short __ssh;$/;"	m	struct:sigcontext	access:public
sigcontext::_unused	signal.h	/^	long int _unused[4];$/;"	m	struct:sigcontext	access:public
sigcontext::_unused	signal.h	/^	unsigned long int _unused[4];$/;"	m	struct:sigcontext	access:public
sigcontext::cr2	signal.h	/^	unsigned long int cr2;$/;"	m	struct:sigcontext	access:public
sigcontext::cs	signal.h	/^	unsigned short cs;$/;"	m	struct:sigcontext	access:public
sigcontext::ds	signal.h	/^	unsigned short ds;$/;"	m	struct:sigcontext	access:public
sigcontext::eax	signal.h	/^	unsigned long int eax;$/;"	m	struct:sigcontext	access:public
sigcontext::ebp	signal.h	/^	unsigned long int ebp;$/;"	m	struct:sigcontext	access:public
sigcontext::ebx	signal.h	/^	unsigned long int ebx;$/;"	m	struct:sigcontext	access:public
sigcontext::ecx	signal.h	/^	unsigned long int ecx;$/;"	m	struct:sigcontext	access:public
sigcontext::edi	signal.h	/^	unsigned long int edi;$/;"	m	struct:sigcontext	access:public
sigcontext::edx	signal.h	/^	unsigned long int edx;$/;"	m	struct:sigcontext	access:public
sigcontext::eflags	signal.h	/^	unsigned long int eflags;$/;"	m	struct:sigcontext	access:public
sigcontext::eip	signal.h	/^	unsigned long int eip;$/;"	m	struct:sigcontext	access:public
sigcontext::err	signal.h	/^	unsigned long int err;$/;"	m	struct:sigcontext	access:public
sigcontext::es	signal.h	/^	unsigned short es;$/;"	m	struct:sigcontext	access:public
sigcontext::esi	signal.h	/^	unsigned long int esi;$/;"	m	struct:sigcontext	access:public
sigcontext::esp	signal.h	/^	unsigned long int esp;$/;"	m	struct:sigcontext	access:public
sigcontext::esp_at_signal	signal.h	/^	unsigned long int esp_at_signal;$/;"	m	struct:sigcontext	access:public
sigcontext::fp_regs	signal.h	/^	double fp_regs[33];$/;"	m	struct:sigcontext	access:public
sigcontext::fpstate	signal.h	/^	struct _fpstate *fpstate;$/;"	m	struct:sigcontext	typeref:struct:sigcontext::_fpstate	access:public
sigcontext::fs	signal.h	/^	unsigned short fs;$/;"	m	struct:sigcontext	access:public
sigcontext::gp_regs	signal.h	/^	unsigned long int gp_regs[48];$/;"	m	struct:sigcontext	access:public
sigcontext::gs	signal.h	/^	unsigned short gs;$/;"	m	struct:sigcontext	access:public
sigcontext::handler	signal.h	/^	unsigned long int handler;$/;"	m	struct:sigcontext	access:public
sigcontext::oldmask	signal.h	/^	unsigned long int oldmask;$/;"	m	struct:sigcontext	access:public
sigcontext::oldmask	signal.h	/^	unsigned long int oldmask[2];$/;"	m	struct:sigcontext	access:public
sigcontext::r10	signal.h	/^	unsigned long int r10;$/;"	m	struct:sigcontext	access:public
sigcontext::r11	signal.h	/^	unsigned long int r11;$/;"	m	struct:sigcontext	access:public
sigcontext::r12	signal.h	/^	unsigned long int r12;$/;"	m	struct:sigcontext	access:public
sigcontext::r13	signal.h	/^	unsigned long int r13;$/;"	m	struct:sigcontext	access:public
sigcontext::r14	signal.h	/^	unsigned long int r14;$/;"	m	struct:sigcontext	access:public
sigcontext::r15	signal.h	/^	unsigned long int r15;$/;"	m	struct:sigcontext	access:public
sigcontext::r8	signal.h	/^	unsigned long int r8;$/;"	m	struct:sigcontext	access:public
sigcontext::r9	signal.h	/^	unsigned long int r9;$/;"	m	struct:sigcontext	access:public
sigcontext::rax	signal.h	/^	unsigned long int rax;$/;"	m	struct:sigcontext	access:public
sigcontext::rbp	signal.h	/^	unsigned long int rbp;$/;"	m	struct:sigcontext	access:public
sigcontext::rbx	signal.h	/^	unsigned long int rbx;$/;"	m	struct:sigcontext	access:public
sigcontext::rcx	signal.h	/^	unsigned long int rcx;$/;"	m	struct:sigcontext	access:public
sigcontext::rdi	signal.h	/^	unsigned long int rdi;$/;"	m	struct:sigcontext	access:public
sigcontext::rdx	signal.h	/^	unsigned long int rdx;$/;"	m	struct:sigcontext	access:public
sigcontext::regs	signal.h	/^	struct pt_regs *regs;$/;"	m	struct:sigcontext	typeref:struct:sigcontext::pt_regs	access:public
sigcontext::rip	signal.h	/^	unsigned long int rip;$/;"	m	struct:sigcontext	access:public
sigcontext::rsi	signal.h	/^	unsigned long int rsi;$/;"	m	struct:sigcontext	access:public
sigcontext::rsp	signal.h	/^	unsigned long int rsp;$/;"	m	struct:sigcontext	access:public
sigcontext::sc_ar25	signal.h	/^	unsigned long int sc_ar25;	\/* cmp8xchg16 uses this *\/$/;"	m	struct:sigcontext	access:public
sigcontext::sc_ar26	signal.h	/^	unsigned long int sc_ar26;	\/*  rsvd for scratch use *\/$/;"	m	struct:sigcontext	access:public
sigcontext::sc_ar_bsp	signal.h	/^	unsigned long int sc_ar_bsp;$/;"	m	struct:sigcontext	access:public
sigcontext::sc_ar_ccv	signal.h	/^	unsigned long int sc_ar_ccv;$/;"	m	struct:sigcontext	access:public
sigcontext::sc_ar_fpsr	signal.h	/^	unsigned long int sc_ar_fpsr;$/;"	m	struct:sigcontext	access:public
sigcontext::sc_ar_lc	signal.h	/^	unsigned long int sc_ar_lc;$/;"	m	struct:sigcontext	access:public
sigcontext::sc_ar_pfs	signal.h	/^	unsigned long int sc_ar_pfs;$/;"	m	struct:sigcontext	access:public
sigcontext::sc_ar_rnat	signal.h	/^	unsigned long int sc_ar_rnat;$/;"	m	struct:sigcontext	access:public
sigcontext::sc_ar_rsc	signal.h	/^	unsigned long int sc_ar_rsc;$/;"	m	struct:sigcontext	access:public
sigcontext::sc_ar_unat	signal.h	/^	unsigned long int sc_ar_unat;$/;"	m	struct:sigcontext	access:public
sigcontext::sc_br	signal.h	/^	unsigned long int sc_br[8];$/;"	m	struct:sigcontext	access:public
sigcontext::sc_cfm	signal.h	/^	unsigned long int sc_cfm;$/;"	m	struct:sigcontext	access:public
sigcontext::sc_flags	signal.h	/^	unsigned long int sc_flags;$/;"	m	struct:sigcontext	access:public
sigcontext::sc_fr	signal.h	/^	struct ia64_fpreg sc_fr[128];$/;"	m	struct:sigcontext	typeref:struct:sigcontext::ia64_fpreg	access:public
sigcontext::sc_gr	signal.h	/^	unsigned long int sc_gr[32];$/;"	m	struct:sigcontext	access:public
sigcontext::sc_ip	signal.h	/^	unsigned long int sc_ip;$/;"	m	struct:sigcontext	access:public
sigcontext::sc_loadrs	signal.h	/^	unsigned long int sc_loadrs;	\/* see description above *\/$/;"	m	struct:sigcontext	access:public
sigcontext::sc_mask	signal.h	/^	unsigned long int sc_mask;	\/* really sigset_t, but unsigned long for convenience at the us *\/$/;"	m	struct:sigcontext	access:public
sigcontext::sc_nat	signal.h	/^	unsigned long int sc_nat;$/;"	m	struct:sigcontext	access:public
sigcontext::sc_pr	signal.h	/^	unsigned long int sc_pr;$/;"	m	struct:sigcontext	access:public
sigcontext::sc_rbs_base	signal.h	/^	unsigned long int sc_rbs_base;	\/* NULL or new base of sighandler's rbs *\/$/;"	m	struct:sigcontext	access:public
sigcontext::sc_rsvd	signal.h	/^	unsigned long int sc_rsvd[12];$/;"	m	struct:sigcontext	access:public
sigcontext::sc_stack	signal.h	/^	stack_t sc_stack;$/;"	m	struct:sigcontext	access:public
sigcontext::sc_um	signal.h	/^	unsigned long int sc_um;$/;"	m	struct:sigcontext	access:public
sigcontext::signal	signal.h	/^	int signal;$/;"	m	struct:sigcontext	access:public
sigcontext::sregs	signal.h	/^	_sigregs *sregs;$/;"	m	struct:sigcontext	access:public
sigcontext::ss	signal.h	/^	unsigned short ss;$/;"	m	struct:sigcontext	access:public
sigcontext::trapno	signal.h	/^	unsigned long int trapno;$/;"	m	struct:sigcontext	access:public
sigdelset	signal.h	/^    extern int sigdelset(sigset_t *, int);$/;"	p	signature:(sigset_t *, int)
sigemptyset	signal.h	/^    extern int sigemptyset(sigset_t *);$/;"	p	signature:(sigset_t *)
sigev_notify	signal.h	/^	int sigev_notify;$/;"	m	struct:sigevent	access:public
sigev_signo	signal.h	/^	int sigev_signo;$/;"	m	struct:sigevent	access:public
sigev_value	signal.h	/^	sigval_t sigev_value;$/;"	m	struct:sigevent	access:public
sigevent	signal.h	/^    struct sigevent {$/;"	s
sigevent::__anon20::__anon21::_attribute	signal.h	/^		void *_attribute;$/;"	m	struct:sigevent::__anon20::__anon21	access:public
sigevent::__anon20::__anon21::_function	signal.h	/^		void (*_function) (sigval_t);$/;"	m	struct:sigevent::__anon20::__anon21	access:public
sigevent::__anon20::_pad	signal.h	/^	    int _pad[SIGEV_PAD_SIZE];$/;"	m	union:sigevent::__anon20
sigevent::__anon20::_sigev_thread	signal.h	/^	    } _sigev_thread;$/;"	m	union:sigevent::__anon20	typeref:struct:sigevent::__anon20::__anon21
sigevent::_sigev_un	signal.h	/^	} _sigev_un;$/;"	m	struct:sigevent	typeref:union:sigevent::__anon20	access:public
sigevent::sigev_notify	signal.h	/^	int sigev_notify;$/;"	m	struct:sigevent	access:public
sigevent::sigev_signo	signal.h	/^	int sigev_signo;$/;"	m	struct:sigevent	access:public
sigevent::sigev_value	signal.h	/^	sigval_t sigev_value;$/;"	m	struct:sigevent	access:public
sigevent_t	signal.h	/^    typedef struct sigevent sigevent_t;$/;"	t	typeref:struct:sigevent
sigfillset	signal.h	/^    extern int sigfillset(sigset_t *);$/;"	p	signature:(sigset_t *)
sighandler_t	signal.h	/^    typedef void (*sighandler_t) (int);$/;"	t
sighold	signal.h	/^    extern int sighold(int);$/;"	p	signature:(int)
sigignore	signal.h	/^    extern int sigignore(int);$/;"	p	signature:(int)
siginfo	signal.h	/^    struct siginfo {$/;"	s
siginfo::__anon22::__anon23::_pid	signal.h	/^		pid_t _pid;$/;"	m	struct:siginfo::__anon22::__anon23	access:public
siginfo::__anon22::__anon23::_uid	signal.h	/^		uid_t _uid;$/;"	m	struct:siginfo::__anon22::__anon23	access:public
siginfo::__anon22::__anon24::_timer1	signal.h	/^		unsigned int _timer1;$/;"	m	struct:siginfo::__anon22::__anon24	access:public
siginfo::__anon22::__anon24::_timer2	signal.h	/^		unsigned int _timer2;$/;"	m	struct:siginfo::__anon22::__anon24	access:public
siginfo::__anon22::__anon25::_pid	signal.h	/^		pid_t _pid;$/;"	m	struct:siginfo::__anon22::__anon25	access:public
siginfo::__anon22::__anon25::_sigval	signal.h	/^		sigval_t _sigval;$/;"	m	struct:siginfo::__anon22::__anon25	access:public
siginfo::__anon22::__anon25::_uid	signal.h	/^		uid_t _uid;$/;"	m	struct:siginfo::__anon22::__anon25	access:public
siginfo::__anon22::__anon26::_pid	signal.h	/^		pid_t _pid;$/;"	m	struct:siginfo::__anon22::__anon26	access:public
siginfo::__anon22::__anon26::_status	signal.h	/^		int _status;$/;"	m	struct:siginfo::__anon22::__anon26	access:public
siginfo::__anon22::__anon26::_stime	signal.h	/^		clock_t _stime;$/;"	m	struct:siginfo::__anon22::__anon26	access:public
siginfo::__anon22::__anon26::_uid	signal.h	/^		uid_t _uid;$/;"	m	struct:siginfo::__anon22::__anon26	access:public
siginfo::__anon22::__anon26::_utime	signal.h	/^		clock_t _utime;$/;"	m	struct:siginfo::__anon22::__anon26	access:public
siginfo::__anon22::__anon27::_addr	signal.h	/^		void *_addr;$/;"	m	struct:siginfo::__anon22::__anon27	access:public
siginfo::__anon22::__anon28::_band	signal.h	/^		int _band;$/;"	m	struct:siginfo::__anon22::__anon28	access:public
siginfo::__anon22::__anon28::_fd	signal.h	/^		int _fd;$/;"	m	struct:siginfo::__anon22::__anon28	access:public
siginfo::__anon22::_kill	signal.h	/^	    } _kill;$/;"	m	union:siginfo::__anon22	typeref:struct:siginfo::__anon22::__anon23
siginfo::__anon22::_pad	signal.h	/^	    int _pad[SI_PAD_SIZE];$/;"	m	union:siginfo::__anon22
siginfo::__anon22::_rt	signal.h	/^	    } _rt;$/;"	m	union:siginfo::__anon22	typeref:struct:siginfo::__anon22::__anon25
siginfo::__anon22::_sigchld	signal.h	/^	    } _sigchld;$/;"	m	union:siginfo::__anon22	typeref:struct:siginfo::__anon22::__anon26
siginfo::__anon22::_sigfault	signal.h	/^	    } _sigfault;$/;"	m	union:siginfo::__anon22	typeref:struct:siginfo::__anon22::__anon27
siginfo::__anon22::_sigpoll	signal.h	/^	    } _sigpoll;$/;"	m	union:siginfo::__anon22	typeref:struct:siginfo::__anon22::__anon28
siginfo::__anon22::_timer	signal.h	/^	    } _timer;$/;"	m	union:siginfo::__anon22	typeref:struct:siginfo::__anon22::__anon24
siginfo::_sifields	signal.h	/^	} _sifields;$/;"	m	struct:siginfo	typeref:union:siginfo::__anon22	access:public
siginfo::si_code	signal.h	/^	int si_code;		\/* Signal code. *\/$/;"	m	struct:siginfo	access:public
siginfo::si_errno	signal.h	/^	int si_errno;$/;"	m	struct:siginfo	access:public
siginfo::si_signo	signal.h	/^	int si_signo;		\/* Signal number. *\/$/;"	m	struct:siginfo	access:public
siginfo_t	signal.h	/^    typedef struct siginfo siginfo_t;$/;"	t	typeref:struct:siginfo
siginterrupt	signal.h	/^    extern int siginterrupt(int, int);$/;"	p	signature:(int, int)
sigisemptyset	signal.h	/^    extern int sigisemptyset(const sigset_t *);$/;"	p	signature:(const sigset_t *)
sigismember	signal.h	/^    extern int sigismember(const sigset_t *, int);$/;"	p	signature:(const sigset_t *, int)
sigjmp_buf	setjmp.h	/^    typedef jmp_buf sigjmp_buf;$/;"	t
siglongjmp	setjmp.h	/^    extern void siglongjmp(sigjmp_buf, int);$/;"	p	signature:(sigjmp_buf, int)
signal	signal.h	/^	int signal;$/;"	m	struct:sigcontext	access:public
signal	signal.h	/^    extern sighandler_t signal(int, sighandler_t);$/;"	p	signature:(int, sighandler_t)
signal	ucontext.h	/^	int signal;$/;"	m	struct:__anon131	access:public
signbit	math.h	64;"	d
signbit	math.h	68;"	d
signbit	math.h	72;"	d
signbit	math.h	76;"	d
signbit	math.h	80;"	d
signbit	math.h	84;"	d
signbit	math.h	88;"	d
significand	math.h	/^    extern double significand(double);$/;"	p	signature:(double)
significand	signal.h	/^	unsigned short significand[4];$/;"	m	struct:_fpreg	access:public
significand	signal.h	/^	unsigned short significand[4];$/;"	m	struct:_fpxreg	access:public
significand	ucontext.h	/^	unsigned short significand[4];$/;"	m	struct:_libc_fpreg	access:public
significand	ucontext.h	/^	unsigned short significand[4];$/;"	m	struct:_libc_fpxreg	access:public
significandf	math.h	/^    extern float significandf(float);$/;"	p	signature:(float)
significandl	math.h	/^    extern long double significandl(long double);$/;"	p	signature:(long double)
sigorset	signal.h	/^    extern int sigorset(sigset_t *, const sigset_t *, const sigset_t *);$/;"	p	signature:(sigset_t *, const sigset_t *, const sigset_t *)
sigpause	signal.h	15;"	d
sigpending	signal.h	/^    extern int sigpending(sigset_t *);$/;"	p	signature:(sigset_t *)
sigprocmask	signal.h	/^    extern int sigprocmask(int, const sigset_t *, sigset_t *);$/;"	p	signature:(int, const sigset_t *, sigset_t *)
sigqueue	signal.h	/^    extern int sigqueue(pid_t, int, const union sigval);$/;"	p	signature:(pid_t, int, const union sigval)
sigrelse	signal.h	/^    extern int sigrelse(int);$/;"	p	signature:(int)
sigreturn	signal.h	/^    extern int sigreturn(struct sigcontext *);$/;"	p	signature:(struct sigcontext *)
sigset	signal.h	/^    extern sighandler_t sigset(int, sighandler_t);$/;"	p	signature:(int, sighandler_t)
sigset_t	signal.h	/^    } sigset_t;$/;"	t	typeref:struct:__anon29
sigsetjmp	setjmp.h	13;"	d
sigsuspend	signal.h	/^    extern int sigsuspend(const sigset_t *);$/;"	p	signature:(const sigset_t *)
sigtimedwait	signal.h	/^    extern int sigtimedwait(const sigset_t *, siginfo_t *,$/;"	p	signature:(const sigset_t *, siginfo_t *, const struct timespec *)
sigval	signal.h	/^    union sigval {$/;"	u
sigval::sival_int	signal.h	/^	int sival_int;$/;"	m	union:sigval
sigval::sival_ptr	signal.h	/^	void *sival_ptr;$/;"	m	union:sigval
sigval_t	signal.h	/^    typedef union sigval sigval_t;$/;"	t	typeref:union:sigval
sigwait	signal.h	/^    extern int sigwait(const sigset_t *, int *);$/;"	p	signature:(const sigset_t *, int *)
sigwaitinfo	signal.h	/^    extern int sigwaitinfo(const sigset_t *, siginfo_t *);$/;"	p	signature:(const sigset_t *, siginfo_t *)
sin	math.h	/^    extern double sin(double);$/;"	p	signature:(double)
sin6_addr	netinet/in.h	/^	struct in6_addr sin6_addr;	\/* IPv6 address *\/$/;"	m	struct:sockaddr_in6	typeref:struct:sockaddr_in6::in6_addr	access:public
sin6_family	netinet/in.h	/^	unsigned short sin6_family;	\/* AF_INET6 *\/$/;"	m	struct:sockaddr_in6	access:public
sin6_flowinfo	netinet/in.h	/^	uint32_t sin6_flowinfo;	\/* IPv6 flow information *\/$/;"	m	struct:sockaddr_in6	access:public
sin6_port	netinet/in.h	/^	uint16_t sin6_port;	\/* Transport layer port # *\/$/;"	m	struct:sockaddr_in6	access:public
sin6_scope_id	netinet/in.h	/^	uint32_t sin6_scope_id;	\/* scope id (new in RFC2553) *\/$/;"	m	struct:sockaddr_in6	access:public
sin_addr	netinet/in.h	/^	struct in_addr sin_addr;$/;"	m	struct:sockaddr_in	typeref:struct:sockaddr_in::in_addr	access:public
sin_family	netinet/in.h	/^	sa_family_t sin_family;$/;"	m	struct:sockaddr_in	access:public
sin_port	netinet/in.h	/^	unsigned short sin_port;$/;"	m	struct:sockaddr_in	access:public
sin_zero	netinet/in.h	/^	unsigned char sin_zero[8];$/;"	m	struct:sockaddr_in	access:public
sincos	math.h	/^    extern void sincos(double, double *, double *);$/;"	p	signature:(double, double *, double *)
sincosf	math.h	/^    extern void sincosf(float, float *, float *);$/;"	p	signature:(float, float *, float *)
sincosl	math.h	/^    extern void sincosl(long double, long double *, long double *);$/;"	p	signature:(long double, long double *, long double *)
sinf	math.h	/^    extern float sinf(float);$/;"	p	signature:(float)
sinh	math.h	/^    extern double sinh(double);$/;"	p	signature:(double)
sinhf	math.h	/^    extern float sinhf(float);$/;"	p	signature:(float)
sinhl	math.h	/^    extern long double sinhl(long double);$/;"	p	signature:(long double)
sinl	math.h	/^    extern long double sinl(long double);$/;"	p	signature:(long double)
sival_int	signal.h	/^	int sival_int;$/;"	m	union:sigval
sival_ptr	signal.h	/^	void *sival_ptr;$/;"	m	union:sigval
size	cups/cups.h	/^	int size;$/;"	m	struct:__anon98	access:public
size_t	stddef.h	/^    typedef unsigned int size_t;$/;"	t
size_t	stddef.h	/^    typedef unsigned long int size_t;$/;"	t
sizes	cups/ppd.h	/^	ppd_size_t *sizes;$/;"	m	struct:__anon111	access:public
skew	alsa/seq_event.h	/^	    snd_seq_queue_skew_t skew;	\/* queue skew *\/$/;"	m	union:snd_seq_ev_queue_control::__anon11
slave_channels	alsa/pcm_extplug.h	/^	unsigned int slave_channels;$/;"	m	struct:snd_pcm_extplug	access:public
slave_format	alsa/pcm_extplug.h	/^	snd_pcm_format_t slave_format;$/;"	m	struct:snd_pcm_extplug	access:public
slave_subformat	alsa/pcm_extplug.h	/^	snd_pcm_subformat_t slave_subformat;$/;"	m	struct:snd_pcm_extplug	access:public
sleep	unistd.h	/^    extern unsigned int sleep(unsigned int);$/;"	p	signature:(unsigned int)
slk_attr_set	curses.h	/^    extern int slk_attr_set(const attr_t, short, void *);$/;"	p	signature:(const attr_t, short, void *)
slk_attr_set	ncurses.h	/^    extern int slk_attr_set(const attr_t, short, void *);$/;"	p	signature:(const attr_t, short, void *)
slk_attroff	curses.h	/^    extern int slk_attroff(const chtype);$/;"	p	signature:(const chtype)
slk_attroff	ncurses.h	/^    extern int slk_attroff(const chtype);$/;"	p	signature:(const chtype)
slk_attron	curses.h	/^    extern int slk_attron(const chtype);$/;"	p	signature:(const chtype)
slk_attron	ncurses.h	/^    extern int slk_attron(const chtype);$/;"	p	signature:(const chtype)
slk_attrset	curses.h	/^    extern int slk_attrset(const chtype);$/;"	p	signature:(const chtype)
slk_attrset	ncurses.h	/^    extern int slk_attrset(const chtype);$/;"	p	signature:(const chtype)
slk_clear	curses.h	/^    extern int slk_clear(void);$/;"	p	signature:(void)
slk_clear	ncurses.h	/^    extern int slk_clear(void);$/;"	p	signature:(void)
slk_color	curses.h	/^    extern int slk_color(short);$/;"	p	signature:(short)
slk_color	ncurses.h	/^    extern int slk_color(short);$/;"	p	signature:(short)
slk_init	curses.h	/^    extern int slk_init(int);$/;"	p	signature:(int)
slk_init	ncurses.h	/^    extern int slk_init(int);$/;"	p	signature:(int)
slk_label	curses.h	/^    extern char *slk_label(int);$/;"	p	signature:(int)
slk_label	ncurses.h	/^    extern char *slk_label(int);$/;"	p	signature:(int)
slk_noutrefresh	curses.h	/^    extern int slk_noutrefresh(void);$/;"	p	signature:(void)
slk_noutrefresh	ncurses.h	/^    extern int slk_noutrefresh(void);$/;"	p	signature:(void)
slk_refresh	curses.h	/^    extern int slk_refresh(void);$/;"	p	signature:(void)
slk_refresh	ncurses.h	/^    extern int slk_refresh(void);$/;"	p	signature:(void)
slk_restore	curses.h	/^    extern int slk_restore(void);$/;"	p	signature:(void)
slk_restore	ncurses.h	/^    extern int slk_restore(void);$/;"	p	signature:(void)
slk_set	curses.h	/^    extern int slk_set(int, const char *, int);$/;"	p	signature:(int, const char *, int)
slk_set	ncurses.h	/^    extern int slk_set(int, const char *, int);$/;"	p	signature:(int, const char *, int)
slk_touch	curses.h	/^    extern int slk_touch(void);$/;"	p	signature:(void)
slk_touch	ncurses.h	/^    extern int slk_touch(void);$/;"	p	signature:(void)
sm_class_basic_t	alsa/mixer_abst.h	/^    typedef struct _sm_class_basic sm_class_basic_t;$/;"	t	typeref:struct:_sm_class_basic
sm_selem	alsa/mixer_abst.h	12;"	d
sm_selem_ops	alsa/mixer_abst.h	13;"	d
snd_aes_iec958	alsa/control.h	/^    struct snd_aes_iec958 {$/;"	s
snd_aes_iec958::dig_subframe	alsa/control.h	/^	unsigned char dig_subframe[4];$/;"	m	struct:snd_aes_iec958	access:public
snd_aes_iec958::pad	alsa/control.h	/^	unsigned char pad;$/;"	m	struct:snd_aes_iec958	access:public
snd_aes_iec958::status	alsa/control.h	/^	unsigned char status[24];$/;"	m	struct:snd_aes_iec958	access:public
snd_aes_iec958::subcode	alsa/control.h	/^	unsigned char subcode[147];$/;"	m	struct:snd_aes_iec958	access:public
snd_aes_iec958_t	alsa/control.h	/^    typedef struct snd_aes_iec958 snd_aes_iec958_t;$/;"	t	typeref:struct:snd_aes_iec958
snd_asoundlib_version	alsa/global.h	/^    extern const char *snd_asoundlib_version(void);$/;"	p	signature:(void)
snd_async_add_ctl_handler	alsa/control.h	/^    extern int snd_async_add_ctl_handler(snd_async_handler_t * *,$/;"	p	signature:(snd_async_handler_t * *, snd_ctl_t *, snd_async_callback_t, void *)
snd_async_add_handler	alsa/global.h	/^    extern int snd_async_add_handler(snd_async_handler_t * *, int,$/;"	p	signature:(snd_async_handler_t * *, int, snd_async_callback_t, void *)
snd_async_add_pcm_handler	alsa/pcm.h	/^    extern int snd_async_add_pcm_handler(snd_async_handler_t * *,$/;"	p	signature:(snd_async_handler_t * *, snd_pcm_t *, snd_async_callback_t, void *)
snd_async_callback_t	alsa/global.h	/^    typedef void (*snd_async_callback_t) (void);$/;"	t
snd_async_del_handler	alsa/global.h	/^    extern int snd_async_del_handler(snd_async_handler_t *);$/;"	p	signature:(snd_async_handler_t *)
snd_async_handler_get_callback_private	alsa/global.h	/^    extern void *snd_async_handler_get_callback_private(snd_async_handler_t$/;"	p	signature:(snd_async_handler_t *)
snd_async_handler_get_ctl	alsa/control.h	/^    extern snd_ctl_t *snd_async_handler_get_ctl(snd_async_handler_t *);$/;"	p	signature:(snd_async_handler_t *)
snd_async_handler_get_pcm	alsa/pcm.h	/^    extern snd_pcm_t *snd_async_handler_get_pcm(snd_async_handler_t *);$/;"	p	signature:(snd_async_handler_t *)
snd_async_handler_t	alsa/global.h	/^    typedef struct _snd_async_handler snd_async_handler_t;$/;"	t	typeref:struct:_snd_async_handler
snd_atomic_read_t	alsa/iatomic.h	/^    } snd_atomic_read_t;$/;"	t	typeref:struct:__anon15
snd_atomic_write_t	alsa/iatomic.h	/^    } snd_atomic_write_t;$/;"	t	typeref:struct:__anon14
snd_card_get_index	alsa/control.h	/^    extern int snd_card_get_index(const char *);$/;"	p	signature:(const char *)
snd_card_get_longname	alsa/control.h	/^    extern int snd_card_get_longname(int, char **);$/;"	p	signature:(int, char **)
snd_card_get_name	alsa/control.h	/^    extern int snd_card_get_name(int, char **);$/;"	p	signature:(int, char **)
snd_card_load	alsa/control.h	/^    extern int snd_card_load(int);$/;"	p	signature:(int)
snd_card_next	alsa/control.h	/^    extern int snd_card_next(int *);$/;"	p	signature:(int *)
snd_config_add	alsa/conf.h	/^    extern int snd_config_add(snd_config_t *, snd_config_t *);$/;"	p	signature:(snd_config_t *, snd_config_t *)
snd_config_copy	alsa/conf.h	/^    extern int snd_config_copy(snd_config_t * *, snd_config_t *);$/;"	p	signature:(snd_config_t * *, snd_config_t *)
snd_config_delete	alsa/conf.h	/^    extern int snd_config_delete(snd_config_t *);$/;"	p	signature:(snd_config_t *)
snd_config_get_ascii	alsa/conf.h	/^    extern int snd_config_get_ascii(const snd_config_t *, char **);$/;"	p	signature:(const snd_config_t *, char **)
snd_config_get_id	alsa/conf.h	/^    extern int snd_config_get_id(const snd_config_t *, const char **);$/;"	p	signature:(const snd_config_t *, const char **)
snd_config_get_integer	alsa/conf.h	/^    extern int snd_config_get_integer(const snd_config_t *, long int *);$/;"	p	signature:(const snd_config_t *, long int *)
snd_config_get_integer64	alsa/conf.h	/^    extern int snd_config_get_integer64(const snd_config_t *,$/;"	p	signature:(const snd_config_t *, long long int *)
snd_config_get_string	alsa/conf.h	/^    extern int snd_config_get_string(const snd_config_t *, const char **);$/;"	p	signature:(const snd_config_t *, const char **)
snd_config_get_type	alsa/conf.h	/^    extern snd_config_type_t snd_config_get_type(const snd_config_t *);$/;"	p	signature:(const snd_config_t *)
snd_config_imake_integer	alsa/conf.h	/^    extern int snd_config_imake_integer(snd_config_t * *, const char *,$/;"	p	signature:(snd_config_t * *, const char *, const long int)
snd_config_imake_integer64	alsa/conf.h	/^    extern int snd_config_imake_integer64(snd_config_t * *, const char *,$/;"	p	signature:(snd_config_t * *, const char *, const long long int)
snd_config_imake_string	alsa/conf.h	/^    extern int snd_config_imake_string(snd_config_t * *, const char *,$/;"	p	signature:(snd_config_t * *, const char *, const char *)
snd_config_iterator_end	alsa/conf.h	/^    extern snd_config_iterator_t snd_config_iterator_end(const snd_config_t$/;"	p	signature:(const snd_config_t *)
snd_config_iterator_entry	alsa/conf.h	/^    extern snd_config_t *snd_config_iterator_entry(const$/;"	p	signature:(const snd_config_iterator_t)
snd_config_iterator_first	alsa/conf.h	/^    extern snd_config_iterator_t snd_config_iterator_first(const$/;"	p	signature:(const snd_config_t *)
snd_config_iterator_next	alsa/conf.h	/^    extern snd_config_iterator_t snd_config_iterator_next(const$/;"	p	signature:(const snd_config_iterator_t)
snd_config_iterator_t	alsa/conf.h	/^    typedef struct _snd_config_iterator *snd_config_iterator_t;$/;"	t	typeref:struct:_snd_config_iterator
snd_config_load	alsa/conf.h	/^    extern int snd_config_load(snd_config_t *, snd_input_t *);$/;"	p	signature:(snd_config_t *, snd_input_t *)
snd_config_make_compound	alsa/conf.h	/^    extern int snd_config_make_compound(snd_config_t * *, const char *,$/;"	p	signature:(snd_config_t * *, const char *, int)
snd_config_make_integer	alsa/conf.h	/^    extern int snd_config_make_integer(snd_config_t * *, const char *);$/;"	p	signature:(snd_config_t * *, const char *)
snd_config_make_integer64	alsa/conf.h	/^    extern int snd_config_make_integer64(snd_config_t * *, const char *);$/;"	p	signature:(snd_config_t * *, const char *)
snd_config_make_string	alsa/conf.h	/^    extern int snd_config_make_string(snd_config_t * *, const char *);$/;"	p	signature:(snd_config_t * *, const char *)
snd_config_save	alsa/conf.h	/^    extern int snd_config_save(snd_config_t *, snd_output_t *);$/;"	p	signature:(snd_config_t *, snd_output_t *)
snd_config_search	alsa/conf.h	/^    extern int snd_config_search(snd_config_t *, const char *,$/;"	p	signature:(snd_config_t *, const char *, snd_config_t * *)
snd_config_searchv	alsa/conf.h	/^    extern int snd_config_searchv(snd_config_t *, snd_config_t * *, ...);$/;"	p	signature:(snd_config_t *, snd_config_t * *, ...)
snd_config_set_ascii	alsa/conf.h	/^    extern int snd_config_set_ascii(snd_config_t *, const char *);$/;"	p	signature:(snd_config_t *, const char *)
snd_config_set_integer	alsa/conf.h	/^    extern int snd_config_set_integer(snd_config_t *, long int);$/;"	p	signature:(snd_config_t *, long int)
snd_config_set_integer64	alsa/conf.h	/^    extern int snd_config_set_integer64(snd_config_t *, long long int);$/;"	p	signature:(snd_config_t *, long long int)
snd_config_set_string	alsa/conf.h	/^    extern int snd_config_set_string(snd_config_t *, const char *);$/;"	p	signature:(snd_config_t *, const char *)
snd_config_t	alsa/conf.h	/^    typedef struct _snd_config snd_config_t;$/;"	t	typeref:struct:_snd_config
snd_config_top	alsa/conf.h	/^    extern int snd_config_top(snd_config_t * *);$/;"	p	signature:(snd_config_t * *)
snd_config_type_t	alsa/conf.h	/^    } snd_config_type_t;$/;"	t	typeref:enum:_snd_config_type
snd_config_update	alsa/conf.h	/^    extern int snd_config_update(void);$/;"	p	signature:(void)
snd_config_update_free_global	alsa/conf.h	/^    extern int snd_config_update_free_global(void);$/;"	p	signature:(void)
snd_config_update_t	alsa/conf.h	/^    typedef struct _snd_config_update snd_config_update_t;$/;"	t	typeref:struct:_snd_config_update
snd_ctl_card_info	alsa/control.h	/^    extern int snd_ctl_card_info(snd_ctl_t *, snd_ctl_card_info_t *);$/;"	p	signature:(snd_ctl_t *, snd_ctl_card_info_t *)
snd_ctl_card_info_clear	alsa/control.h	/^    extern void snd_ctl_card_info_clear(snd_ctl_card_info_t *);$/;"	p	signature:(snd_ctl_card_info_t *)
snd_ctl_card_info_copy	alsa/control.h	/^    extern void snd_ctl_card_info_copy(snd_ctl_card_info_t *,$/;"	p	signature:(snd_ctl_card_info_t *, const snd_ctl_card_info_t *)
snd_ctl_card_info_free	alsa/control.h	/^    extern void snd_ctl_card_info_free(snd_ctl_card_info_t *);$/;"	p	signature:(snd_ctl_card_info_t *)
snd_ctl_card_info_get_components	alsa/control.h	/^    extern const char *snd_ctl_card_info_get_components(const$/;"	p	signature:(const snd_ctl_card_info_t *)
snd_ctl_card_info_get_driver	alsa/control.h	/^    extern const char *snd_ctl_card_info_get_driver(const$/;"	p	signature:(const snd_ctl_card_info_t *)
snd_ctl_card_info_get_id	alsa/control.h	/^    extern const char *snd_ctl_card_info_get_id(const snd_ctl_card_info_t$/;"	p	signature:(const snd_ctl_card_info_t *)
snd_ctl_card_info_get_longname	alsa/control.h	/^    extern const char *snd_ctl_card_info_get_longname(const$/;"	p	signature:(const snd_ctl_card_info_t *)
snd_ctl_card_info_get_mixername	alsa/control.h	/^    extern const char *snd_ctl_card_info_get_mixername(const$/;"	p	signature:(const snd_ctl_card_info_t *)
snd_ctl_card_info_get_name	alsa/control.h	/^    extern const char *snd_ctl_card_info_get_name(const snd_ctl_card_info_t$/;"	p	signature:(const snd_ctl_card_info_t *)
snd_ctl_card_info_malloc	alsa/control.h	/^    extern int snd_ctl_card_info_malloc(snd_ctl_card_info_t * *);$/;"	p	signature:(snd_ctl_card_info_t * *)
snd_ctl_card_info_sizeof	alsa/control.h	/^    extern size_t snd_ctl_card_info_sizeof(void);$/;"	p	signature:(void)
snd_ctl_card_info_t	alsa/control.h	/^    typedef struct _snd_ctl_card_info snd_ctl_card_info_t;$/;"	t	typeref:struct:_snd_ctl_card_info
snd_ctl_close	alsa/control.h	/^    extern int snd_ctl_close(snd_ctl_t *);$/;"	p	signature:(snd_ctl_t *)
snd_ctl_elem_add_boolean	alsa/control.h	/^    extern int snd_ctl_elem_add_boolean(snd_ctl_t *,$/;"	p	signature:(snd_ctl_t *, const snd_ctl_elem_id_t *, unsigned int)
snd_ctl_elem_add_iec958	alsa/control.h	/^    extern int snd_ctl_elem_add_iec958(snd_ctl_t *,$/;"	p	signature:(snd_ctl_t *, const snd_ctl_elem_id_t *)
snd_ctl_elem_add_integer	alsa/control.h	/^    extern int snd_ctl_elem_add_integer(snd_ctl_t *,$/;"	p	signature:(snd_ctl_t *, const snd_ctl_elem_id_t *, unsigned int, long int, long int, long int)
snd_ctl_elem_id_clear	alsa/control.h	/^    extern void snd_ctl_elem_id_clear(snd_ctl_elem_id_t *);$/;"	p	signature:(snd_ctl_elem_id_t *)
snd_ctl_elem_id_copy	alsa/control.h	/^    extern void snd_ctl_elem_id_copy(snd_ctl_elem_id_t *,$/;"	p	signature:(snd_ctl_elem_id_t *, const snd_ctl_elem_id_t *)
snd_ctl_elem_id_free	alsa/control.h	/^    extern void snd_ctl_elem_id_free(snd_ctl_elem_id_t *);$/;"	p	signature:(snd_ctl_elem_id_t *)
snd_ctl_elem_id_get_device	alsa/control.h	/^    extern unsigned int snd_ctl_elem_id_get_device(const snd_ctl_elem_id_t$/;"	p	signature:(const snd_ctl_elem_id_t *)
snd_ctl_elem_id_get_index	alsa/control.h	/^    extern unsigned int snd_ctl_elem_id_get_index(const snd_ctl_elem_id_t$/;"	p	signature:(const snd_ctl_elem_id_t *)
snd_ctl_elem_id_get_interface	alsa/control.h	/^    extern snd_ctl_elem_iface_t snd_ctl_elem_id_get_interface(const$/;"	p	signature:(const snd_ctl_elem_id_t *)
snd_ctl_elem_id_get_name	alsa/control.h	/^    extern const char *snd_ctl_elem_id_get_name(const snd_ctl_elem_id_t *);$/;"	p	signature:(const snd_ctl_elem_id_t *)
snd_ctl_elem_id_get_numid	alsa/control.h	/^    extern unsigned int snd_ctl_elem_id_get_numid(const snd_ctl_elem_id_t$/;"	p	signature:(const snd_ctl_elem_id_t *)
snd_ctl_elem_id_get_subdevice	alsa/control.h	/^    extern unsigned int snd_ctl_elem_id_get_subdevice(const$/;"	p	signature:(const snd_ctl_elem_id_t *)
snd_ctl_elem_id_malloc	alsa/control.h	/^    extern int snd_ctl_elem_id_malloc(snd_ctl_elem_id_t * *);$/;"	p	signature:(snd_ctl_elem_id_t * *)
snd_ctl_elem_id_set_device	alsa/control.h	/^    extern void snd_ctl_elem_id_set_device(snd_ctl_elem_id_t *,$/;"	p	signature:(snd_ctl_elem_id_t *, unsigned int)
snd_ctl_elem_id_set_index	alsa/control.h	/^    extern void snd_ctl_elem_id_set_index(snd_ctl_elem_id_t *,$/;"	p	signature:(snd_ctl_elem_id_t *, unsigned int)
snd_ctl_elem_id_set_interface	alsa/control.h	/^    extern void snd_ctl_elem_id_set_interface(snd_ctl_elem_id_t *,$/;"	p	signature:(snd_ctl_elem_id_t *, snd_ctl_elem_iface_t)
snd_ctl_elem_id_set_name	alsa/control.h	/^    extern void snd_ctl_elem_id_set_name(snd_ctl_elem_id_t *,$/;"	p	signature:(snd_ctl_elem_id_t *, const char *)
snd_ctl_elem_id_set_numid	alsa/control.h	/^    extern void snd_ctl_elem_id_set_numid(snd_ctl_elem_id_t *,$/;"	p	signature:(snd_ctl_elem_id_t *, unsigned int)
snd_ctl_elem_id_set_subdevice	alsa/control.h	/^    extern void snd_ctl_elem_id_set_subdevice(snd_ctl_elem_id_t *,$/;"	p	signature:(snd_ctl_elem_id_t *, unsigned int)
snd_ctl_elem_id_sizeof	alsa/control.h	/^    extern size_t snd_ctl_elem_id_sizeof(void);$/;"	p	signature:(void)
snd_ctl_elem_id_t	alsa/control.h	/^    typedef struct sndrv_ctl_elem_id snd_ctl_elem_id_t;$/;"	t	typeref:struct:sndrv_ctl_elem_id
snd_ctl_elem_iface_name	alsa/control.h	/^    extern const char *snd_ctl_elem_iface_name(snd_ctl_elem_iface_t);$/;"	p	signature:(snd_ctl_elem_iface_t)
snd_ctl_elem_iface_t	alsa/control.h	/^    } snd_ctl_elem_iface_t;$/;"	t	typeref:enum:_snd_ctl_elem_iface
snd_ctl_elem_info	alsa/control.h	/^    extern int snd_ctl_elem_info(snd_ctl_t *, snd_ctl_elem_info_t *);$/;"	p	signature:(snd_ctl_t *, snd_ctl_elem_info_t *)
snd_ctl_elem_info_clear	alsa/control.h	/^    extern void snd_ctl_elem_info_clear(snd_ctl_elem_info_t *);$/;"	p	signature:(snd_ctl_elem_info_t *)
snd_ctl_elem_info_copy	alsa/control.h	/^    extern void snd_ctl_elem_info_copy(snd_ctl_elem_info_t *,$/;"	p	signature:(snd_ctl_elem_info_t *, const snd_ctl_elem_info_t *)
snd_ctl_elem_info_free	alsa/control.h	/^    extern void snd_ctl_elem_info_free(snd_ctl_elem_info_t *);$/;"	p	signature:(snd_ctl_elem_info_t *)
snd_ctl_elem_info_get_count	alsa/control.h	/^    extern unsigned int snd_ctl_elem_info_get_count(const$/;"	p	signature:(const snd_ctl_elem_info_t *)
snd_ctl_elem_info_get_id	alsa/control.h	/^    extern void snd_ctl_elem_info_get_id(const snd_ctl_elem_info_t *,$/;"	p	signature:(const snd_ctl_elem_info_t *, snd_ctl_elem_id_t *)
snd_ctl_elem_info_get_item_name	alsa/control.h	/^    extern const char *snd_ctl_elem_info_get_item_name(const$/;"	p	signature:(const snd_ctl_elem_info_t *)
snd_ctl_elem_info_get_items	alsa/control.h	/^    extern unsigned int snd_ctl_elem_info_get_items(const$/;"	p	signature:(const snd_ctl_elem_info_t *)
snd_ctl_elem_info_get_max	alsa/control.h	/^    extern long int snd_ctl_elem_info_get_max(const snd_ctl_elem_info_t *);$/;"	p	signature:(const snd_ctl_elem_info_t *)
snd_ctl_elem_info_get_max64	alsa/control.h	/^    extern long long int snd_ctl_elem_info_get_max64(const$/;"	p	signature:(const snd_ctl_elem_info_t *)
snd_ctl_elem_info_get_min	alsa/control.h	/^    extern long int snd_ctl_elem_info_get_min(const snd_ctl_elem_info_t *);$/;"	p	signature:(const snd_ctl_elem_info_t *)
snd_ctl_elem_info_get_min64	alsa/control.h	/^    extern long long int snd_ctl_elem_info_get_min64(const$/;"	p	signature:(const snd_ctl_elem_info_t *)
snd_ctl_elem_info_get_name	alsa/control.h	/^    extern const char *snd_ctl_elem_info_get_name(const snd_ctl_elem_info_t$/;"	p	signature:(const snd_ctl_elem_info_t *)
snd_ctl_elem_info_get_numid	alsa/control.h	/^    extern unsigned int snd_ctl_elem_info_get_numid(const$/;"	p	signature:(const snd_ctl_elem_info_t *)
snd_ctl_elem_info_get_step	alsa/control.h	/^    extern long int snd_ctl_elem_info_get_step(const snd_ctl_elem_info_t$/;"	p	signature:(const snd_ctl_elem_info_t *)
snd_ctl_elem_info_get_step64	alsa/control.h	/^    extern long long int snd_ctl_elem_info_get_step64(const$/;"	p	signature:(const snd_ctl_elem_info_t *)
snd_ctl_elem_info_get_type	alsa/control.h	/^    extern snd_ctl_elem_type_t snd_ctl_elem_info_get_type(const$/;"	p	signature:(const snd_ctl_elem_info_t *)
snd_ctl_elem_info_is_inactive	alsa/control.h	/^    extern int snd_ctl_elem_info_is_inactive(const snd_ctl_elem_info_t *);$/;"	p	signature:(const snd_ctl_elem_info_t *)
snd_ctl_elem_info_is_locked	alsa/control.h	/^    extern int snd_ctl_elem_info_is_locked(const snd_ctl_elem_info_t *);$/;"	p	signature:(const snd_ctl_elem_info_t *)
snd_ctl_elem_info_is_readable	alsa/control.h	/^    extern int snd_ctl_elem_info_is_readable(const snd_ctl_elem_info_t *);$/;"	p	signature:(const snd_ctl_elem_info_t *)
snd_ctl_elem_info_is_user	alsa/control.h	/^    extern int snd_ctl_elem_info_is_user(const snd_ctl_elem_info_t *);$/;"	p	signature:(const snd_ctl_elem_info_t *)
snd_ctl_elem_info_is_volatile	alsa/control.h	/^    extern int snd_ctl_elem_info_is_volatile(const snd_ctl_elem_info_t *);$/;"	p	signature:(const snd_ctl_elem_info_t *)
snd_ctl_elem_info_is_writable	alsa/control.h	/^    extern int snd_ctl_elem_info_is_writable(const snd_ctl_elem_info_t *);$/;"	p	signature:(const snd_ctl_elem_info_t *)
snd_ctl_elem_info_malloc	alsa/control.h	/^    extern int snd_ctl_elem_info_malloc(snd_ctl_elem_info_t * *);$/;"	p	signature:(snd_ctl_elem_info_t * *)
snd_ctl_elem_info_set_id	alsa/control.h	/^    extern void snd_ctl_elem_info_set_id(snd_ctl_elem_info_t *,$/;"	p	signature:(snd_ctl_elem_info_t *, const snd_ctl_elem_id_t *)
snd_ctl_elem_info_set_item	alsa/control.h	/^    extern void snd_ctl_elem_info_set_item(snd_ctl_elem_info_t *,$/;"	p	signature:(snd_ctl_elem_info_t *, unsigned int)
snd_ctl_elem_info_sizeof	alsa/control.h	/^    extern size_t snd_ctl_elem_info_sizeof(void);$/;"	p	signature:(void)
snd_ctl_elem_info_t	alsa/control.h	/^    typedef struct _snd_ctl_elem_info snd_ctl_elem_info_t;$/;"	t	typeref:struct:_snd_ctl_elem_info
snd_ctl_elem_list	alsa/control.h	/^    extern int snd_ctl_elem_list(snd_ctl_t *, snd_ctl_elem_list_t *);$/;"	p	signature:(snd_ctl_t *, snd_ctl_elem_list_t *)
snd_ctl_elem_list_alloc_space	alsa/control.h	/^    extern int snd_ctl_elem_list_alloc_space(snd_ctl_elem_list_t *,$/;"	p	signature:(snd_ctl_elem_list_t *, unsigned int)
snd_ctl_elem_list_clear	alsa/control.h	/^    extern void snd_ctl_elem_list_clear(snd_ctl_elem_list_t *);$/;"	p	signature:(snd_ctl_elem_list_t *)
snd_ctl_elem_list_copy	alsa/control.h	/^    extern void snd_ctl_elem_list_copy(snd_ctl_elem_list_t *,$/;"	p	signature:(snd_ctl_elem_list_t *, const snd_ctl_elem_list_t *)
snd_ctl_elem_list_free	alsa/control.h	/^    extern void snd_ctl_elem_list_free(snd_ctl_elem_list_t *);$/;"	p	signature:(snd_ctl_elem_list_t *)
snd_ctl_elem_list_free_space	alsa/control.h	/^    extern void snd_ctl_elem_list_free_space(snd_ctl_elem_list_t *);$/;"	p	signature:(snd_ctl_elem_list_t *)
snd_ctl_elem_list_get_count	alsa/control.h	/^    extern unsigned int snd_ctl_elem_list_get_count(const$/;"	p	signature:(const snd_ctl_elem_list_t *)
snd_ctl_elem_list_get_id	alsa/control.h	/^    extern void snd_ctl_elem_list_get_id(const snd_ctl_elem_list_t *,$/;"	p	signature:(const snd_ctl_elem_list_t *, unsigned int, snd_ctl_elem_id_t *)
snd_ctl_elem_list_get_name	alsa/control.h	/^    extern const char *snd_ctl_elem_list_get_name(const snd_ctl_elem_list_t$/;"	p	signature:(const snd_ctl_elem_list_t *, unsigned int)
snd_ctl_elem_list_get_used	alsa/control.h	/^    extern unsigned int snd_ctl_elem_list_get_used(const$/;"	p	signature:(const snd_ctl_elem_list_t *)
snd_ctl_elem_list_malloc	alsa/control.h	/^    extern int snd_ctl_elem_list_malloc(snd_ctl_elem_list_t * *);$/;"	p	signature:(snd_ctl_elem_list_t * *)
snd_ctl_elem_list_set_offset	alsa/control.h	/^    extern void snd_ctl_elem_list_set_offset(snd_ctl_elem_list_t *,$/;"	p	signature:(snd_ctl_elem_list_t *, unsigned int)
snd_ctl_elem_list_sizeof	alsa/control.h	/^    extern size_t snd_ctl_elem_list_sizeof(void);$/;"	p	signature:(void)
snd_ctl_elem_list_t	alsa/control.h	/^    typedef struct sndrv_ctl_elem_list snd_ctl_elem_list_t;$/;"	t	typeref:struct:sndrv_ctl_elem_list
snd_ctl_elem_read	alsa/control.h	/^    extern int snd_ctl_elem_read(snd_ctl_t *, snd_ctl_elem_value_t *);$/;"	p	signature:(snd_ctl_t *, snd_ctl_elem_value_t *)
snd_ctl_elem_remove	alsa/control.h	/^    extern int snd_ctl_elem_remove(snd_ctl_t *, snd_ctl_elem_id_t *);$/;"	p	signature:(snd_ctl_t *, snd_ctl_elem_id_t *)
snd_ctl_elem_type_name	alsa/control.h	/^    extern const char *snd_ctl_elem_type_name(snd_ctl_elem_type_t);$/;"	p	signature:(snd_ctl_elem_type_t)
snd_ctl_elem_type_t	alsa/control.h	/^    } snd_ctl_elem_type_t;$/;"	t	typeref:enum:_snd_ctl_elem_type
snd_ctl_elem_value_clear	alsa/control.h	/^    extern void snd_ctl_elem_value_clear(snd_ctl_elem_value_t *);$/;"	p	signature:(snd_ctl_elem_value_t *)
snd_ctl_elem_value_copy	alsa/control.h	/^    extern void snd_ctl_elem_value_copy(snd_ctl_elem_value_t *,$/;"	p	signature:(snd_ctl_elem_value_t *, const snd_ctl_elem_value_t *)
snd_ctl_elem_value_free	alsa/control.h	/^    extern void snd_ctl_elem_value_free(snd_ctl_elem_value_t *);$/;"	p	signature:(snd_ctl_elem_value_t *)
snd_ctl_elem_value_get_boolean	alsa/control.h	/^    extern int snd_ctl_elem_value_get_boolean(const snd_ctl_elem_value_t *,$/;"	p	signature:(const snd_ctl_elem_value_t *, unsigned int)
snd_ctl_elem_value_get_byte	alsa/control.h	/^    extern unsigned char snd_ctl_elem_value_get_byte(const$/;"	p	signature:(const snd_ctl_elem_value_t *, unsigned int)
snd_ctl_elem_value_get_bytes	alsa/control.h	/^    extern const void *snd_ctl_elem_value_get_bytes(const$/;"	p	signature:(const snd_ctl_elem_value_t *)
snd_ctl_elem_value_get_enumerated	alsa/control.h	/^    extern unsigned int snd_ctl_elem_value_get_enumerated(const$/;"	p	signature:(const snd_ctl_elem_value_t *, unsigned int)
snd_ctl_elem_value_get_id	alsa/control.h	/^    extern void snd_ctl_elem_value_get_id(const snd_ctl_elem_value_t *,$/;"	p	signature:(const snd_ctl_elem_value_t *, snd_ctl_elem_id_t *)
snd_ctl_elem_value_get_iec958	alsa/control.h	/^    extern void snd_ctl_elem_value_get_iec958(const snd_ctl_elem_value_t *,$/;"	p	signature:(const snd_ctl_elem_value_t *, snd_aes_iec958_t *)
snd_ctl_elem_value_get_integer	alsa/control.h	/^    extern long int snd_ctl_elem_value_get_integer(const$/;"	p	signature:(const snd_ctl_elem_value_t *, unsigned int)
snd_ctl_elem_value_get_integer64	alsa/control.h	/^    extern long long int snd_ctl_elem_value_get_integer64(const$/;"	p	signature:(const snd_ctl_elem_value_t *, unsigned int)
snd_ctl_elem_value_malloc	alsa/control.h	/^    extern int snd_ctl_elem_value_malloc(snd_ctl_elem_value_t * *);$/;"	p	signature:(snd_ctl_elem_value_t * *)
snd_ctl_elem_value_set_boolean	alsa/control.h	/^    extern void snd_ctl_elem_value_set_boolean(snd_ctl_elem_value_t *,$/;"	p	signature:(snd_ctl_elem_value_t *, unsigned int, long int)
snd_ctl_elem_value_set_byte	alsa/control.h	/^    extern void snd_ctl_elem_value_set_byte(snd_ctl_elem_value_t *,$/;"	p	signature:(snd_ctl_elem_value_t *, unsigned int, unsigned char)
snd_ctl_elem_value_set_enumerated	alsa/control.h	/^    extern void snd_ctl_elem_value_set_enumerated(snd_ctl_elem_value_t *,$/;"	p	signature:(snd_ctl_elem_value_t *, unsigned int, unsigned int)
snd_ctl_elem_value_set_id	alsa/control.h	/^    extern void snd_ctl_elem_value_set_id(snd_ctl_elem_value_t *,$/;"	p	signature:(snd_ctl_elem_value_t *, const snd_ctl_elem_id_t *)
snd_ctl_elem_value_set_iec958	alsa/control.h	/^    extern void snd_ctl_elem_value_set_iec958(snd_ctl_elem_value_t *,$/;"	p	signature:(snd_ctl_elem_value_t *, const snd_aes_iec958_t *)
snd_ctl_elem_value_set_integer	alsa/control.h	/^    extern void snd_ctl_elem_value_set_integer(snd_ctl_elem_value_t *,$/;"	p	signature:(snd_ctl_elem_value_t *, unsigned int, long int)
snd_ctl_elem_value_set_integer64	alsa/control.h	/^    extern void snd_ctl_elem_value_set_integer64(snd_ctl_elem_value_t *,$/;"	p	signature:(snd_ctl_elem_value_t *, unsigned int, long long int)
snd_ctl_elem_value_sizeof	alsa/control.h	/^    extern size_t snd_ctl_elem_value_sizeof(void);$/;"	p	signature:(void)
snd_ctl_elem_value_t	alsa/control.h	/^    typedef struct _snd_ctl_elem_value snd_ctl_elem_value_t;$/;"	t	typeref:struct:_snd_ctl_elem_value
snd_ctl_elem_write	alsa/control.h	/^    extern int snd_ctl_elem_write(snd_ctl_t *, snd_ctl_elem_value_t *);$/;"	p	signature:(snd_ctl_t *, snd_ctl_elem_value_t *)
snd_ctl_event_clear	alsa/control.h	/^    extern void snd_ctl_event_clear(snd_ctl_event_t *);$/;"	p	signature:(snd_ctl_event_t *)
snd_ctl_event_copy	alsa/control.h	/^    extern void snd_ctl_event_copy(snd_ctl_event_t *,$/;"	p	signature:(snd_ctl_event_t *, const snd_ctl_event_t *)
snd_ctl_event_elem_get_id	alsa/control.h	/^    extern void snd_ctl_event_elem_get_id(const snd_ctl_event_t *,$/;"	p	signature:(const snd_ctl_event_t *, snd_ctl_elem_id_t *)
snd_ctl_event_elem_get_mask	alsa/control.h	/^    extern unsigned int snd_ctl_event_elem_get_mask(const snd_ctl_event_t$/;"	p	signature:(const snd_ctl_event_t *)
snd_ctl_event_free	alsa/control.h	/^    extern void snd_ctl_event_free(snd_ctl_event_t *);$/;"	p	signature:(snd_ctl_event_t *)
snd_ctl_event_malloc	alsa/control.h	/^    extern int snd_ctl_event_malloc(snd_ctl_event_t * *);$/;"	p	signature:(snd_ctl_event_t * *)
snd_ctl_event_sizeof	alsa/control.h	/^    extern size_t snd_ctl_event_sizeof(void);$/;"	p	signature:(void)
snd_ctl_event_t	alsa/control.h	/^    typedef struct sndrv_ctl_event snd_ctl_event_t;$/;"	t	typeref:struct:sndrv_ctl_event
snd_ctl_event_type_t	alsa/control.h	/^    } snd_ctl_event_type_t;$/;"	t	typeref:enum:_snd_ctl_event_type
snd_ctl_ext	alsa/control_external.h	/^    struct snd_ctl_ext {$/;"	s
snd_ctl_ext::callback	alsa/control_external.h	/^	const snd_ctl_ext_callback_t *callback;$/;"	m	struct:snd_ctl_ext	access:public
snd_ctl_ext::card_idx	alsa/control_external.h	/^	int card_idx;$/;"	m	struct:snd_ctl_ext	access:public
snd_ctl_ext::driver	alsa/control_external.h	/^	char driver[16];$/;"	m	struct:snd_ctl_ext	access:public
snd_ctl_ext::handle	alsa/control_external.h	/^	snd_ctl_t *handle;$/;"	m	struct:snd_ctl_ext	access:public
snd_ctl_ext::id	alsa/control_external.h	/^	char id[16];$/;"	m	struct:snd_ctl_ext	access:public
snd_ctl_ext::longname	alsa/control_external.h	/^	char longname[80];$/;"	m	struct:snd_ctl_ext	access:public
snd_ctl_ext::mixername	alsa/control_external.h	/^	char mixername[80];$/;"	m	struct:snd_ctl_ext	access:public
snd_ctl_ext::name	alsa/control_external.h	/^	char name[32];$/;"	m	struct:snd_ctl_ext	access:public
snd_ctl_ext::nonblock	alsa/control_external.h	/^	int nonblock;$/;"	m	struct:snd_ctl_ext	access:public
snd_ctl_ext::poll_fd	alsa/control_external.h	/^	int poll_fd;$/;"	m	struct:snd_ctl_ext	access:public
snd_ctl_ext::private_data	alsa/control_external.h	/^	void *private_data;$/;"	m	struct:snd_ctl_ext	access:public
snd_ctl_ext::subscribed	alsa/control_external.h	/^	int subscribed;$/;"	m	struct:snd_ctl_ext	access:public
snd_ctl_ext::version	alsa/control_external.h	/^	unsigned int version;$/;"	m	struct:snd_ctl_ext	access:public
snd_ctl_ext_callback	alsa/control_external.h	/^    struct snd_ctl_ext_callback {$/;"	s
snd_ctl_ext_callback::close	alsa/control_external.h	/^	void (*close) (void);$/;"	m	struct:snd_ctl_ext_callback	access:public
snd_ctl_ext_callback::elem_count	alsa/control_external.h	/^	int (*elem_count) (void);$/;"	m	struct:snd_ctl_ext_callback	access:public
snd_ctl_ext_callback::elem_list	alsa/control_external.h	/^	int (*elem_list) (void);$/;"	m	struct:snd_ctl_ext_callback	access:public
snd_ctl_ext_callback::find_elem	alsa/control_external.h	/^	 snd_ctl_ext_key_t(*find_elem) (void);$/;"	m	struct:snd_ctl_ext_callback	access:public
snd_ctl_ext_callback::free_key	alsa/control_external.h	/^	void (*free_key) (void);$/;"	m	struct:snd_ctl_ext_callback	access:public
snd_ctl_ext_callback::get_attribute	alsa/control_external.h	/^	int (*get_attribute) (void);$/;"	m	struct:snd_ctl_ext_callback	access:public
snd_ctl_ext_callback::get_enumerated_info	alsa/control_external.h	/^	int (*get_enumerated_info) (void);$/;"	m	struct:snd_ctl_ext_callback	access:public
snd_ctl_ext_callback::get_enumerated_name	alsa/control_external.h	/^	int (*get_enumerated_name) (void);$/;"	m	struct:snd_ctl_ext_callback	access:public
snd_ctl_ext_callback::get_integer64_info	alsa/control_external.h	/^	int (*get_integer64_info) (void);$/;"	m	struct:snd_ctl_ext_callback	access:public
snd_ctl_ext_callback::get_integer_info	alsa/control_external.h	/^	int (*get_integer_info) (void);$/;"	m	struct:snd_ctl_ext_callback	access:public
snd_ctl_ext_callback::poll_descriptors	alsa/control_external.h	/^	int (*poll_descriptors) (void);$/;"	m	struct:snd_ctl_ext_callback	access:public
snd_ctl_ext_callback::poll_descriptors_count	alsa/control_external.h	/^	int (*poll_descriptors_count) (void);$/;"	m	struct:snd_ctl_ext_callback	access:public
snd_ctl_ext_callback::poll_revents	alsa/control_external.h	/^	int (*poll_revents) (void);$/;"	m	struct:snd_ctl_ext_callback	access:public
snd_ctl_ext_callback::read_bytes	alsa/control_external.h	/^	int (*read_bytes) (void);$/;"	m	struct:snd_ctl_ext_callback	access:public
snd_ctl_ext_callback::read_enumerated	alsa/control_external.h	/^	int (*read_enumerated) (void);$/;"	m	struct:snd_ctl_ext_callback	access:public
snd_ctl_ext_callback::read_event	alsa/control_external.h	/^	int (*read_event) (void);$/;"	m	struct:snd_ctl_ext_callback	access:public
snd_ctl_ext_callback::read_iec958	alsa/control_external.h	/^	int (*read_iec958) (void);$/;"	m	struct:snd_ctl_ext_callback	access:public
snd_ctl_ext_callback::read_integer	alsa/control_external.h	/^	int (*read_integer) (void);$/;"	m	struct:snd_ctl_ext_callback	access:public
snd_ctl_ext_callback::read_integer64	alsa/control_external.h	/^	int (*read_integer64) (void);$/;"	m	struct:snd_ctl_ext_callback	access:public
snd_ctl_ext_callback::subscribe_events	alsa/control_external.h	/^	void (*subscribe_events) (void);$/;"	m	struct:snd_ctl_ext_callback	access:public
snd_ctl_ext_callback::write_bytes	alsa/control_external.h	/^	int (*write_bytes) (void);$/;"	m	struct:snd_ctl_ext_callback	access:public
snd_ctl_ext_callback::write_enumerated	alsa/control_external.h	/^	int (*write_enumerated) (void);$/;"	m	struct:snd_ctl_ext_callback	access:public
snd_ctl_ext_callback::write_iec958	alsa/control_external.h	/^	int (*write_iec958) (void);$/;"	m	struct:snd_ctl_ext_callback	access:public
snd_ctl_ext_callback::write_integer	alsa/control_external.h	/^	int (*write_integer) (void);$/;"	m	struct:snd_ctl_ext_callback	access:public
snd_ctl_ext_callback::write_integer64	alsa/control_external.h	/^	int (*write_integer64) (void);$/;"	m	struct:snd_ctl_ext_callback	access:public
snd_ctl_ext_callback_t	alsa/control_external.h	/^    typedef struct snd_ctl_ext_callback snd_ctl_ext_callback_t;$/;"	t	typeref:struct:snd_ctl_ext_callback
snd_ctl_ext_key_t	alsa/control_external.h	/^    typedef long unsigned int snd_ctl_ext_key_t;$/;"	t
snd_ctl_ext_t	alsa/control_external.h	/^    typedef struct snd_ctl_ext snd_ctl_ext_t;$/;"	t	typeref:struct:snd_ctl_ext
snd_ctl_hwdep_info	alsa/control.h	/^    extern int snd_ctl_hwdep_info(snd_ctl_t *, snd_hwdep_info_t *);$/;"	p	signature:(snd_ctl_t *, snd_hwdep_info_t *)
snd_ctl_hwdep_next_device	alsa/control.h	/^    extern int snd_ctl_hwdep_next_device(snd_ctl_t *, int *);$/;"	p	signature:(snd_ctl_t *, int *)
snd_ctl_name	alsa/control.h	/^    extern const char *snd_ctl_name(snd_ctl_t *);$/;"	p	signature:(snd_ctl_t *)
snd_ctl_nonblock	alsa/control.h	/^    extern int snd_ctl_nonblock(snd_ctl_t *, int);$/;"	p	signature:(snd_ctl_t *, int)
snd_ctl_open	alsa/control.h	/^    extern int snd_ctl_open(snd_ctl_t * *, const char *, int);$/;"	p	signature:(snd_ctl_t * *, const char *, int)
snd_ctl_pcm_info	alsa/control.h	/^    extern int snd_ctl_pcm_info(snd_ctl_t *, snd_pcm_info_t *);$/;"	p	signature:(snd_ctl_t *, snd_pcm_info_t *)
snd_ctl_pcm_next_device	alsa/control.h	/^    extern int snd_ctl_pcm_next_device(snd_ctl_t *, int *);$/;"	p	signature:(snd_ctl_t *, int *)
snd_ctl_poll_descriptors	alsa/control.h	/^    extern int snd_ctl_poll_descriptors(snd_ctl_t *, struct pollfd *,$/;"	p	signature:(snd_ctl_t *, struct pollfd *, unsigned int)
snd_ctl_poll_descriptors_count	alsa/control.h	/^    extern int snd_ctl_poll_descriptors_count(snd_ctl_t *);$/;"	p	signature:(snd_ctl_t *)
snd_ctl_rawmidi_info	alsa/control.h	/^    extern int snd_ctl_rawmidi_info(snd_ctl_t *, snd_rawmidi_info_t *);$/;"	p	signature:(snd_ctl_t *, snd_rawmidi_info_t *)
snd_ctl_rawmidi_next_device	alsa/control.h	/^    extern int snd_ctl_rawmidi_next_device(snd_ctl_t *, int *);$/;"	p	signature:(snd_ctl_t *, int *)
snd_ctl_read	alsa/control.h	/^    extern int snd_ctl_read(snd_ctl_t *, snd_ctl_event_t *);$/;"	p	signature:(snd_ctl_t *, snd_ctl_event_t *)
snd_ctl_subscribe_events	alsa/control.h	/^    extern int snd_ctl_subscribe_events(snd_ctl_t *, int);$/;"	p	signature:(snd_ctl_t *, int)
snd_ctl_t	alsa/control.h	/^    typedef struct _snd_ctl snd_ctl_t;$/;"	t	typeref:struct:_snd_ctl
snd_ctl_type_t	alsa/control.h	/^    } snd_ctl_type_t;$/;"	t	typeref:enum:_snd_ctl_type
snd_devname	alsa/conf.h	/^    struct snd_devname {$/;"	s
snd_devname::comment	alsa/conf.h	/^	char *comment;$/;"	m	struct:snd_devname	access:public
snd_devname::name	alsa/conf.h	/^	char *name;$/;"	m	struct:snd_devname	access:public
snd_devname::next	alsa/conf.h	/^	snd_devname_t *next;$/;"	m	struct:snd_devname	access:public
snd_devname_t	alsa/conf.h	/^    typedef struct snd_devname snd_devname_t;$/;"	t	typeref:struct:snd_devname
snd_hctl_callback_t	alsa/control.h	/^    typedef int (*snd_hctl_callback_t) (void);$/;"	t
snd_hctl_close	alsa/control.h	/^    extern int snd_hctl_close(snd_hctl_t *);$/;"	p	signature:(snd_hctl_t *)
snd_hctl_compare_t	alsa/control.h	/^    typedef int (*snd_hctl_compare_t) (void);$/;"	t
snd_hctl_elem_callback_t	alsa/control.h	/^    typedef int (*snd_hctl_elem_callback_t) (void);$/;"	t
snd_hctl_elem_get_callback_private	alsa/control.h	/^    extern void *snd_hctl_elem_get_callback_private(const snd_hctl_elem_t$/;"	p	signature:(const snd_hctl_elem_t *)
snd_hctl_elem_get_id	alsa/control.h	/^    extern void snd_hctl_elem_get_id(const snd_hctl_elem_t *,$/;"	p	signature:(const snd_hctl_elem_t *, snd_ctl_elem_id_t *)
snd_hctl_elem_info	alsa/control.h	/^    extern int snd_hctl_elem_info(snd_hctl_elem_t *,$/;"	p	signature:(snd_hctl_elem_t *, snd_ctl_elem_info_t *)
snd_hctl_elem_next	alsa/control.h	/^    extern snd_hctl_elem_t *snd_hctl_elem_next(snd_hctl_elem_t *);$/;"	p	signature:(snd_hctl_elem_t *)
snd_hctl_elem_prev	alsa/control.h	/^    extern snd_hctl_elem_t *snd_hctl_elem_prev(snd_hctl_elem_t *);$/;"	p	signature:(snd_hctl_elem_t *)
snd_hctl_elem_read	alsa/control.h	/^    extern int snd_hctl_elem_read(snd_hctl_elem_t *,$/;"	p	signature:(snd_hctl_elem_t *, snd_ctl_elem_value_t *)
snd_hctl_elem_set_callback	alsa/control.h	/^    extern void snd_hctl_elem_set_callback(snd_hctl_elem_t *,$/;"	p	signature:(snd_hctl_elem_t *, snd_hctl_elem_callback_t)
snd_hctl_elem_set_callback_private	alsa/control.h	/^    extern void snd_hctl_elem_set_callback_private(snd_hctl_elem_t *,$/;"	p	signature:(snd_hctl_elem_t *, void *)
snd_hctl_elem_t	alsa/control.h	/^    typedef struct _snd_hctl_elem snd_hctl_elem_t;$/;"	t	typeref:struct:_snd_hctl_elem
snd_hctl_elem_write	alsa/control.h	/^    extern int snd_hctl_elem_write(snd_hctl_elem_t *,$/;"	p	signature:(snd_hctl_elem_t *, snd_ctl_elem_value_t *)
snd_hctl_find_elem	alsa/control.h	/^    extern snd_hctl_elem_t *snd_hctl_find_elem(snd_hctl_t *,$/;"	p	signature:(snd_hctl_t *, const snd_ctl_elem_id_t *)
snd_hctl_first_elem	alsa/control.h	/^    extern snd_hctl_elem_t *snd_hctl_first_elem(snd_hctl_t *);$/;"	p	signature:(snd_hctl_t *)
snd_hctl_free	alsa/control.h	/^    extern int snd_hctl_free(snd_hctl_t *);$/;"	p	signature:(snd_hctl_t *)
snd_hctl_get_callback_private	alsa/control.h	/^    extern void *snd_hctl_get_callback_private(snd_hctl_t *);$/;"	p	signature:(snd_hctl_t *)
snd_hctl_last_elem	alsa/control.h	/^    extern snd_hctl_elem_t *snd_hctl_last_elem(snd_hctl_t *);$/;"	p	signature:(snd_hctl_t *)
snd_hctl_load	alsa/control.h	/^    extern int snd_hctl_load(snd_hctl_t *);$/;"	p	signature:(snd_hctl_t *)
snd_hctl_open	alsa/control.h	/^    extern int snd_hctl_open(snd_hctl_t * *, const char *, int);$/;"	p	signature:(snd_hctl_t * *, const char *, int)
snd_hctl_set_callback	alsa/control.h	/^    extern void snd_hctl_set_callback(snd_hctl_t *, snd_hctl_callback_t);$/;"	p	signature:(snd_hctl_t *, snd_hctl_callback_t)
snd_hctl_set_callback_private	alsa/control.h	/^    extern void snd_hctl_set_callback_private(snd_hctl_t *, void *);$/;"	p	signature:(snd_hctl_t *, void *)
snd_hctl_t	alsa/control.h	/^    typedef struct _snd_hctl snd_hctl_t;$/;"	t	typeref:struct:_snd_hctl
snd_htimestamp_t	alsa/global.h	/^    typedef struct timespec snd_htimestamp_t;$/;"	t	typeref:struct:timespec
snd_hwdep_close	alsa/hwdep.h	/^    extern int snd_hwdep_close(snd_hwdep_t *);$/;"	p	signature:(snd_hwdep_t *)
snd_hwdep_dsp_image_copy	alsa/hwdep.h	/^    extern void snd_hwdep_dsp_image_copy(snd_hwdep_dsp_image_t *,$/;"	p	signature:(snd_hwdep_dsp_image_t *, const snd_hwdep_dsp_image_t *)
snd_hwdep_dsp_image_free	alsa/hwdep.h	/^    extern void snd_hwdep_dsp_image_free(snd_hwdep_dsp_image_t *);$/;"	p	signature:(snd_hwdep_dsp_image_t *)
snd_hwdep_dsp_image_get_image	alsa/hwdep.h	/^    extern const void *snd_hwdep_dsp_image_get_image(const$/;"	p	signature:(const snd_hwdep_dsp_image_t *)
snd_hwdep_dsp_image_get_index	alsa/hwdep.h	/^    extern unsigned int snd_hwdep_dsp_image_get_index(const$/;"	p	signature:(const snd_hwdep_dsp_image_t *)
snd_hwdep_dsp_image_get_length	alsa/hwdep.h	/^    extern size_t snd_hwdep_dsp_image_get_length(const$/;"	p	signature:(const snd_hwdep_dsp_image_t *)
snd_hwdep_dsp_image_get_name	alsa/hwdep.h	/^    extern const char *snd_hwdep_dsp_image_get_name(const$/;"	p	signature:(const snd_hwdep_dsp_image_t *)
snd_hwdep_dsp_image_malloc	alsa/hwdep.h	/^    extern int snd_hwdep_dsp_image_malloc(snd_hwdep_dsp_image_t * *);$/;"	p	signature:(snd_hwdep_dsp_image_t * *)
snd_hwdep_dsp_image_set_image	alsa/hwdep.h	/^    extern void snd_hwdep_dsp_image_set_image(snd_hwdep_dsp_image_t *,$/;"	p	signature:(snd_hwdep_dsp_image_t *, void *)
snd_hwdep_dsp_image_set_index	alsa/hwdep.h	/^    extern void snd_hwdep_dsp_image_set_index(snd_hwdep_dsp_image_t *,$/;"	p	signature:(snd_hwdep_dsp_image_t *, unsigned int)
snd_hwdep_dsp_image_set_length	alsa/hwdep.h	/^    extern void snd_hwdep_dsp_image_set_length(snd_hwdep_dsp_image_t *,$/;"	p	signature:(snd_hwdep_dsp_image_t *, size_t)
snd_hwdep_dsp_image_set_name	alsa/hwdep.h	/^    extern void snd_hwdep_dsp_image_set_name(snd_hwdep_dsp_image_t *,$/;"	p	signature:(snd_hwdep_dsp_image_t *, const char *)
snd_hwdep_dsp_image_sizeof	alsa/hwdep.h	/^    extern size_t snd_hwdep_dsp_image_sizeof(void);$/;"	p	signature:(void)
snd_hwdep_dsp_image_t	alsa/hwdep.h	/^    typedef struct sndrv_hwdep_dsp_image snd_hwdep_dsp_image_t;$/;"	t	typeref:struct:sndrv_hwdep_dsp_image
snd_hwdep_dsp_load	alsa/hwdep.h	/^    extern int snd_hwdep_dsp_load(snd_hwdep_t *, snd_hwdep_dsp_image_t *);$/;"	p	signature:(snd_hwdep_t *, snd_hwdep_dsp_image_t *)
snd_hwdep_dsp_status	alsa/hwdep.h	/^    extern int snd_hwdep_dsp_status(snd_hwdep_t *,$/;"	p	signature:(snd_hwdep_t *, snd_hwdep_dsp_status_t *)
snd_hwdep_dsp_status_copy	alsa/hwdep.h	/^    extern void snd_hwdep_dsp_status_copy(snd_hwdep_dsp_status_t *,$/;"	p	signature:(snd_hwdep_dsp_status_t *, const snd_hwdep_dsp_status_t *)
snd_hwdep_dsp_status_free	alsa/hwdep.h	/^    extern void snd_hwdep_dsp_status_free(snd_hwdep_dsp_status_t *);$/;"	p	signature:(snd_hwdep_dsp_status_t *)
snd_hwdep_dsp_status_get_chip_ready	alsa/hwdep.h	/^    extern unsigned int snd_hwdep_dsp_status_get_chip_ready(const$/;"	p	signature:(const snd_hwdep_dsp_status_t *)
snd_hwdep_dsp_status_get_dsp_loaded	alsa/hwdep.h	/^    extern unsigned int snd_hwdep_dsp_status_get_dsp_loaded(const$/;"	p	signature:(const snd_hwdep_dsp_status_t *)
snd_hwdep_dsp_status_get_id	alsa/hwdep.h	/^    extern const char *snd_hwdep_dsp_status_get_id(const$/;"	p	signature:(const snd_hwdep_dsp_status_t *)
snd_hwdep_dsp_status_get_num_dsps	alsa/hwdep.h	/^    extern unsigned int snd_hwdep_dsp_status_get_num_dsps(const$/;"	p	signature:(const snd_hwdep_dsp_status_t *)
snd_hwdep_dsp_status_get_version	alsa/hwdep.h	/^    extern unsigned int snd_hwdep_dsp_status_get_version(const$/;"	p	signature:(const snd_hwdep_dsp_status_t *)
snd_hwdep_dsp_status_malloc	alsa/hwdep.h	/^    extern int snd_hwdep_dsp_status_malloc(snd_hwdep_dsp_status_t * *);$/;"	p	signature:(snd_hwdep_dsp_status_t * *)
snd_hwdep_dsp_status_sizeof	alsa/hwdep.h	/^    extern size_t snd_hwdep_dsp_status_sizeof(void);$/;"	p	signature:(void)
snd_hwdep_dsp_status_t	alsa/hwdep.h	/^    typedef struct sndrv_hwdep_dsp_status snd_hwdep_dsp_status_t;$/;"	t	typeref:struct:sndrv_hwdep_dsp_status
snd_hwdep_iface_t	alsa/hwdep.h	/^    } snd_hwdep_iface_t;$/;"	t	typeref:enum:_snd_hwdep_iface
snd_hwdep_info	alsa/hwdep.h	/^    extern int snd_hwdep_info(snd_hwdep_t *, snd_hwdep_info_t *);$/;"	p	signature:(snd_hwdep_t *, snd_hwdep_info_t *)
snd_hwdep_info_copy	alsa/hwdep.h	/^    extern void snd_hwdep_info_copy(snd_hwdep_info_t *,$/;"	p	signature:(snd_hwdep_info_t *, const snd_hwdep_info_t *)
snd_hwdep_info_free	alsa/hwdep.h	/^    extern void snd_hwdep_info_free(snd_hwdep_info_t *);$/;"	p	signature:(snd_hwdep_info_t *)
snd_hwdep_info_get_card	alsa/hwdep.h	/^    extern int snd_hwdep_info_get_card(const snd_hwdep_info_t *);$/;"	p	signature:(const snd_hwdep_info_t *)
snd_hwdep_info_get_device	alsa/hwdep.h	/^    extern unsigned int snd_hwdep_info_get_device(const snd_hwdep_info_t$/;"	p	signature:(const snd_hwdep_info_t *)
snd_hwdep_info_get_id	alsa/hwdep.h	/^    extern const char *snd_hwdep_info_get_id(const snd_hwdep_info_t *);$/;"	p	signature:(const snd_hwdep_info_t *)
snd_hwdep_info_get_iface	alsa/hwdep.h	/^    extern snd_hwdep_iface_t snd_hwdep_info_get_iface(const$/;"	p	signature:(const snd_hwdep_info_t *)
snd_hwdep_info_get_name	alsa/hwdep.h	/^    extern const char *snd_hwdep_info_get_name(const snd_hwdep_info_t *);$/;"	p	signature:(const snd_hwdep_info_t *)
snd_hwdep_info_malloc	alsa/hwdep.h	/^    extern int snd_hwdep_info_malloc(snd_hwdep_info_t * *);$/;"	p	signature:(snd_hwdep_info_t * *)
snd_hwdep_info_set_device	alsa/hwdep.h	/^    extern void snd_hwdep_info_set_device(snd_hwdep_info_t *,$/;"	p	signature:(snd_hwdep_info_t *, unsigned int)
snd_hwdep_info_sizeof	alsa/hwdep.h	/^    extern size_t snd_hwdep_info_sizeof(void);$/;"	p	signature:(void)
snd_hwdep_info_t	alsa/hwdep.h	/^    typedef struct sndrv_hwdep_info snd_hwdep_info_t;$/;"	t	typeref:struct:sndrv_hwdep_info
snd_hwdep_ioctl	alsa/hwdep.h	/^    extern int snd_hwdep_ioctl(snd_hwdep_t *, unsigned int, void *);$/;"	p	signature:(snd_hwdep_t *, unsigned int, void *)
snd_hwdep_open	alsa/hwdep.h	/^    extern int snd_hwdep_open(snd_hwdep_t * *, const char *, int);$/;"	p	signature:(snd_hwdep_t * *, const char *, int)
snd_hwdep_poll_descriptors	alsa/hwdep.h	/^    extern int snd_hwdep_poll_descriptors(snd_hwdep_t *, struct pollfd *,$/;"	p	signature:(snd_hwdep_t *, struct pollfd *, unsigned int)
snd_hwdep_read	alsa/hwdep.h	/^    extern ssize_t snd_hwdep_read(snd_hwdep_t *, void *, size_t);$/;"	p	signature:(snd_hwdep_t *, void *, size_t)
snd_hwdep_t	alsa/hwdep.h	/^    typedef struct _snd_hwdep snd_hwdep_t;$/;"	t	typeref:struct:_snd_hwdep
snd_hwdep_type_t	alsa/hwdep.h	/^    } snd_hwdep_type_t;$/;"	t	typeref:enum:_snd_hwdep_type
snd_hwdep_write	alsa/hwdep.h	/^    extern ssize_t snd_hwdep_write(snd_hwdep_t *, const void *, size_t);$/;"	p	signature:(snd_hwdep_t *, const void *, size_t)
snd_input_buffer_open	alsa/input.h	/^    extern int snd_input_buffer_open(snd_input_t * *, const char *,$/;"	p	signature:(snd_input_t * *, const char *, ssize_t)
snd_input_close	alsa/input.h	/^    extern int snd_input_close(snd_input_t *);$/;"	p	signature:(snd_input_t *)
snd_input_stdio_attach	alsa/input.h	/^    extern int snd_input_stdio_attach(snd_input_t * *, FILE *, int);$/;"	p	signature:(snd_input_t * *, FILE *, int)
snd_input_stdio_open	alsa/input.h	/^    extern int snd_input_stdio_open(snd_input_t * *, const char *,$/;"	p	signature:(snd_input_t * *, const char *, const char *)
snd_input_t	alsa/input.h	/^    typedef struct _snd_input snd_input_t;$/;"	t	typeref:struct:_snd_input
snd_instr_fm_t	alsa/instr.h	/^    typedef void snd_instr_fm_t;$/;"	t
snd_instr_header_t	alsa/instr.h	/^    typedef struct sndrv_seq_instr_header snd_instr_header_t;$/;"	t	typeref:struct:sndrv_seq_instr_header
snd_instr_iwffff_t	alsa/instr.h	/^    typedef void snd_instr_iwffff_t;$/;"	t
snd_instr_simple_t	alsa/instr.h	/^    typedef void snd_instr_simple_t;$/;"	t
snd_iwffff_handle_t	alsa/instr.h	/^    typedef struct _snd_iwffff_handle snd_iwffff_handle_t;$/;"	t	typeref:struct:_snd_iwffff_handle
snd_lib_error_handler_t	alsa/error.h	/^    typedef void (*snd_lib_error_handler_t) (void);$/;"	t
snd_lib_error_set_handler	alsa/error.h	/^    extern int snd_lib_error_set_handler(snd_lib_error_handler_t);$/;"	p	signature:(snd_lib_error_handler_t)
snd_midi_event_decode	alsa/seq_midi_event.h	/^    extern long int snd_midi_event_decode(snd_midi_event_t *,$/;"	p	signature:(snd_midi_event_t *, unsigned char *, long int, const snd_seq_event_t *)
snd_midi_event_encode	alsa/seq_midi_event.h	/^    extern long int snd_midi_event_encode(snd_midi_event_t *,$/;"	p	signature:(snd_midi_event_t *, const unsigned char *, long int, snd_seq_event_t *)
snd_midi_event_encode_byte	alsa/seq_midi_event.h	/^    extern int snd_midi_event_encode_byte(snd_midi_event_t *, int,$/;"	p	signature:(snd_midi_event_t *, int, snd_seq_event_t *)
snd_midi_event_free	alsa/seq_midi_event.h	/^    extern void snd_midi_event_free(snd_midi_event_t *);$/;"	p	signature:(snd_midi_event_t *)
snd_midi_event_init	alsa/seq_midi_event.h	/^    extern void snd_midi_event_init(snd_midi_event_t *);$/;"	p	signature:(snd_midi_event_t *)
snd_midi_event_new	alsa/seq_midi_event.h	/^    extern int snd_midi_event_new(size_t, snd_midi_event_t * *);$/;"	p	signature:(size_t, snd_midi_event_t * *)
snd_midi_event_reset_decode	alsa/seq_midi_event.h	/^    extern void snd_midi_event_reset_decode(snd_midi_event_t *);$/;"	p	signature:(snd_midi_event_t *)
snd_midi_event_reset_encode	alsa/seq_midi_event.h	/^    extern void snd_midi_event_reset_encode(snd_midi_event_t *);$/;"	p	signature:(snd_midi_event_t *)
snd_midi_event_t	alsa/seq_midi_event.h	/^    typedef struct snd_midi_event snd_midi_event_t;$/;"	t	typeref:struct:snd_midi_event
snd_mixer_attach	alsa/mixer.h	/^    extern int snd_mixer_attach(snd_mixer_t *, const char *);$/;"	p	signature:(snd_mixer_t *, const char *)
snd_mixer_callback_t	alsa/mixer.h	/^    typedef int (*snd_mixer_callback_t) (void);$/;"	t
snd_mixer_class_t	alsa/mixer.h	/^    typedef struct _snd_mixer_class snd_mixer_class_t;$/;"	t	typeref:struct:_snd_mixer_class
snd_mixer_close	alsa/mixer.h	/^    extern int snd_mixer_close(snd_mixer_t *);$/;"	p	signature:(snd_mixer_t *)
snd_mixer_compare_t	alsa/mixer.h	/^    typedef int (*snd_mixer_compare_t) (void);$/;"	t
snd_mixer_detach	alsa/mixer.h	/^    extern int snd_mixer_detach(snd_mixer_t *, const char *);$/;"	p	signature:(snd_mixer_t *, const char *)
snd_mixer_elem_callback_t	alsa/mixer.h	/^    typedef int (*snd_mixer_elem_callback_t) (void);$/;"	t
snd_mixer_elem_get_callback_private	alsa/mixer.h	/^    extern void *snd_mixer_elem_get_callback_private(const snd_mixer_elem_t$/;"	p	signature:(const snd_mixer_elem_t *)
snd_mixer_elem_get_type	alsa/mixer.h	/^    extern snd_mixer_elem_type_t snd_mixer_elem_get_type(const$/;"	p	signature:(const snd_mixer_elem_t *)
snd_mixer_elem_next	alsa/mixer.h	/^    extern snd_mixer_elem_t *snd_mixer_elem_next(snd_mixer_elem_t *);$/;"	p	signature:(snd_mixer_elem_t *)
snd_mixer_elem_prev	alsa/mixer.h	/^    extern snd_mixer_elem_t *snd_mixer_elem_prev(snd_mixer_elem_t *);$/;"	p	signature:(snd_mixer_elem_t *)
snd_mixer_elem_set_callback	alsa/mixer.h	/^    extern void snd_mixer_elem_set_callback(snd_mixer_elem_t *,$/;"	p	signature:(snd_mixer_elem_t *, snd_mixer_elem_callback_t)
snd_mixer_elem_set_callback_private	alsa/mixer.h	/^    extern void snd_mixer_elem_set_callback_private(snd_mixer_elem_t *,$/;"	p	signature:(snd_mixer_elem_t *, void *)
snd_mixer_elem_t	alsa/mixer.h	/^    typedef struct _snd_mixer_elem snd_mixer_elem_t;$/;"	t	typeref:struct:_snd_mixer_elem
snd_mixer_elem_type_t	alsa/mixer.h	/^    } snd_mixer_elem_type_t;$/;"	t	typeref:enum:_snd_mixer_elem_type
snd_mixer_event_t	alsa/mixer.h	/^    typedef int (*snd_mixer_event_t) (void);$/;"	t
snd_mixer_find_selem	alsa/mixer.h	/^    extern snd_mixer_elem_t *snd_mixer_find_selem(snd_mixer_t *,$/;"	p	signature:(snd_mixer_t *, const snd_mixer_selem_id_t *)
snd_mixer_first_elem	alsa/mixer.h	/^    extern snd_mixer_elem_t *snd_mixer_first_elem(snd_mixer_t *);$/;"	p	signature:(snd_mixer_t *)
snd_mixer_free	alsa/mixer.h	/^    extern void snd_mixer_free(snd_mixer_t *);$/;"	p	signature:(snd_mixer_t *)
snd_mixer_get_callback_private	alsa/mixer.h	/^    extern void *snd_mixer_get_callback_private(const snd_mixer_t *);$/;"	p	signature:(const snd_mixer_t *)
snd_mixer_get_count	alsa/mixer.h	/^    extern unsigned int snd_mixer_get_count(const snd_mixer_t *);$/;"	p	signature:(const snd_mixer_t *)
snd_mixer_handle_events	alsa/mixer.h	/^    extern int snd_mixer_handle_events(snd_mixer_t *);$/;"	p	signature:(snd_mixer_t *)
snd_mixer_last_elem	alsa/mixer.h	/^    extern snd_mixer_elem_t *snd_mixer_last_elem(snd_mixer_t *);$/;"	p	signature:(snd_mixer_t *)
snd_mixer_load	alsa/mixer.h	/^    extern int snd_mixer_load(snd_mixer_t *);$/;"	p	signature:(snd_mixer_t *)
snd_mixer_open	alsa/mixer.h	/^    extern int snd_mixer_open(snd_mixer_t * *, int);$/;"	p	signature:(snd_mixer_t * *, int)
snd_mixer_poll_descriptors	alsa/mixer.h	/^    extern int snd_mixer_poll_descriptors(snd_mixer_t *, struct pollfd *,$/;"	p	signature:(snd_mixer_t *, struct pollfd *, unsigned int)
snd_mixer_poll_descriptors_count	alsa/mixer.h	/^    extern int snd_mixer_poll_descriptors_count(snd_mixer_t *);$/;"	p	signature:(snd_mixer_t *)
snd_mixer_poll_descriptors_revents	alsa/mixer.h	/^    extern int snd_mixer_poll_descriptors_revents(snd_mixer_t *,$/;"	p	signature:(snd_mixer_t *, struct pollfd *, unsigned int, short unsigned int *)
snd_mixer_selem_channel_id_t	alsa/mixer.h	/^    } snd_mixer_selem_channel_id_t;$/;"	t	typeref:enum:_snd_mixer_selem_channel_id
snd_mixer_selem_channel_name	alsa/mixer.h	/^	*snd_mixer_selem_channel_name(snd_mixer_selem_channel_id_t);$/;"	p	signature:(snd_mixer_selem_channel_id_t)
snd_mixer_selem_get_capture_group	alsa/mixer.h	/^    extern int snd_mixer_selem_get_capture_group(snd_mixer_elem_t *);$/;"	p	signature:(snd_mixer_elem_t *)
snd_mixer_selem_get_capture_switch	alsa/mixer.h	/^    extern int snd_mixer_selem_get_capture_switch(snd_mixer_elem_t *,$/;"	p	signature:(snd_mixer_elem_t *, snd_mixer_selem_channel_id_t, int *)
snd_mixer_selem_get_capture_volume	alsa/mixer.h	/^    extern int snd_mixer_selem_get_capture_volume(snd_mixer_elem_t *,$/;"	p	signature:(snd_mixer_elem_t *, snd_mixer_selem_channel_id_t, long int *)
snd_mixer_selem_get_capture_volume_range	alsa/mixer.h	/^    extern int snd_mixer_selem_get_capture_volume_range(snd_mixer_elem_t *,$/;"	p	signature:(snd_mixer_elem_t *, long int *, long int *)
snd_mixer_selem_get_enum_item	alsa/mixer.h	/^    extern int snd_mixer_selem_get_enum_item(snd_mixer_elem_t *,$/;"	p	signature:(snd_mixer_elem_t *, snd_mixer_selem_channel_id_t, unsigned int *)
snd_mixer_selem_get_enum_item_name	alsa/mixer.h	/^    extern int snd_mixer_selem_get_enum_item_name(snd_mixer_elem_t *,$/;"	p	signature:(snd_mixer_elem_t *, unsigned int, size_t, char *)
snd_mixer_selem_get_enum_items	alsa/mixer.h	/^    extern int snd_mixer_selem_get_enum_items(snd_mixer_elem_t *);$/;"	p	signature:(snd_mixer_elem_t *)
snd_mixer_selem_get_id	alsa/mixer.h	/^    extern void snd_mixer_selem_get_id(snd_mixer_elem_t *,$/;"	p	signature:(snd_mixer_elem_t *, snd_mixer_selem_id_t *)
snd_mixer_selem_get_index	alsa/mixer.h	/^    extern unsigned int snd_mixer_selem_get_index(snd_mixer_elem_t *);$/;"	p	signature:(snd_mixer_elem_t *)
snd_mixer_selem_get_name	alsa/mixer.h	/^    extern const char *snd_mixer_selem_get_name(snd_mixer_elem_t *);$/;"	p	signature:(snd_mixer_elem_t *)
snd_mixer_selem_get_playback_switch	alsa/mixer.h	/^    extern int snd_mixer_selem_get_playback_switch(snd_mixer_elem_t *,$/;"	p	signature:(snd_mixer_elem_t *, snd_mixer_selem_channel_id_t, int *)
snd_mixer_selem_get_playback_volume	alsa/mixer.h	/^    extern int snd_mixer_selem_get_playback_volume(snd_mixer_elem_t *,$/;"	p	signature:(snd_mixer_elem_t *, snd_mixer_selem_channel_id_t, long int *)
snd_mixer_selem_get_playback_volume_range	alsa/mixer.h	/^    extern int snd_mixer_selem_get_playback_volume_range(snd_mixer_elem_t$/;"	p	signature:(snd_mixer_elem_t *, long int *, long int *)
snd_mixer_selem_has_capture_channel	alsa/mixer.h	/^    extern int snd_mixer_selem_has_capture_channel(snd_mixer_elem_t *,$/;"	p	signature:(snd_mixer_elem_t *, snd_mixer_selem_channel_id_t)
snd_mixer_selem_has_capture_switch	alsa/mixer.h	/^    extern int snd_mixer_selem_has_capture_switch(snd_mixer_elem_t *);$/;"	p	signature:(snd_mixer_elem_t *)
snd_mixer_selem_has_capture_switch_exclusive	alsa/mixer.h	/^	snd_mixer_selem_has_capture_switch_exclusive(snd_mixer_elem_t *);$/;"	p	signature:(snd_mixer_elem_t *)
snd_mixer_selem_has_capture_switch_joined	alsa/mixer.h	/^    extern int snd_mixer_selem_has_capture_switch_joined(snd_mixer_elem_t$/;"	p	signature:(snd_mixer_elem_t *)
snd_mixer_selem_has_capture_volume	alsa/mixer.h	/^    extern int snd_mixer_selem_has_capture_volume(snd_mixer_elem_t *);$/;"	p	signature:(snd_mixer_elem_t *)
snd_mixer_selem_has_capture_volume_joined	alsa/mixer.h	/^    extern int snd_mixer_selem_has_capture_volume_joined(snd_mixer_elem_t$/;"	p	signature:(snd_mixer_elem_t *)
snd_mixer_selem_has_common_switch	alsa/mixer.h	/^    extern int snd_mixer_selem_has_common_switch(snd_mixer_elem_t *);$/;"	p	signature:(snd_mixer_elem_t *)
snd_mixer_selem_has_common_volume	alsa/mixer.h	/^    extern int snd_mixer_selem_has_common_volume(snd_mixer_elem_t *);$/;"	p	signature:(snd_mixer_elem_t *)
snd_mixer_selem_has_playback_channel	alsa/mixer.h	/^    extern int snd_mixer_selem_has_playback_channel(snd_mixer_elem_t *,$/;"	p	signature:(snd_mixer_elem_t *, snd_mixer_selem_channel_id_t)
snd_mixer_selem_has_playback_switch	alsa/mixer.h	/^    extern int snd_mixer_selem_has_playback_switch(snd_mixer_elem_t *);$/;"	p	signature:(snd_mixer_elem_t *)
snd_mixer_selem_has_playback_switch_joined	alsa/mixer.h	/^    extern int snd_mixer_selem_has_playback_switch_joined(snd_mixer_elem_t$/;"	p	signature:(snd_mixer_elem_t *)
snd_mixer_selem_has_playback_volume	alsa/mixer.h	/^    extern int snd_mixer_selem_has_playback_volume(snd_mixer_elem_t *);$/;"	p	signature:(snd_mixer_elem_t *)
snd_mixer_selem_has_playback_volume_joined	alsa/mixer.h	/^    extern int snd_mixer_selem_has_playback_volume_joined(snd_mixer_elem_t$/;"	p	signature:(snd_mixer_elem_t *)
snd_mixer_selem_id_copy	alsa/mixer.h	/^    extern void snd_mixer_selem_id_copy(snd_mixer_selem_id_t *,$/;"	p	signature:(snd_mixer_selem_id_t *, const snd_mixer_selem_id_t *)
snd_mixer_selem_id_free	alsa/mixer.h	/^    extern void snd_mixer_selem_id_free(snd_mixer_selem_id_t *);$/;"	p	signature:(snd_mixer_selem_id_t *)
snd_mixer_selem_id_get_index	alsa/mixer.h	/^    extern unsigned int snd_mixer_selem_id_get_index(const$/;"	p	signature:(const snd_mixer_selem_id_t *)
snd_mixer_selem_id_get_name	alsa/mixer.h	/^    extern const char *snd_mixer_selem_id_get_name(const$/;"	p	signature:(const snd_mixer_selem_id_t *)
snd_mixer_selem_id_malloc	alsa/mixer.h	/^    extern int snd_mixer_selem_id_malloc(snd_mixer_selem_id_t * *);$/;"	p	signature:(snd_mixer_selem_id_t * *)
snd_mixer_selem_id_set_index	alsa/mixer.h	/^    extern void snd_mixer_selem_id_set_index(snd_mixer_selem_id_t *,$/;"	p	signature:(snd_mixer_selem_id_t *, unsigned int)
snd_mixer_selem_id_set_name	alsa/mixer.h	/^    extern void snd_mixer_selem_id_set_name(snd_mixer_selem_id_t *,$/;"	p	signature:(snd_mixer_selem_id_t *, const char *)
snd_mixer_selem_id_sizeof	alsa/mixer.h	/^    extern size_t snd_mixer_selem_id_sizeof(void);$/;"	p	signature:(void)
snd_mixer_selem_id_t	alsa/mixer.h	/^    typedef struct _snd_mixer_selem_id snd_mixer_selem_id_t;$/;"	t	typeref:struct:_snd_mixer_selem_id
snd_mixer_selem_is_active	alsa/mixer.h	/^    extern int snd_mixer_selem_is_active(snd_mixer_elem_t *);$/;"	p	signature:(snd_mixer_elem_t *)
snd_mixer_selem_is_capture_mono	alsa/mixer.h	/^    extern int snd_mixer_selem_is_capture_mono(snd_mixer_elem_t *);$/;"	p	signature:(snd_mixer_elem_t *)
snd_mixer_selem_is_enum_capture	alsa/mixer.h	/^    extern int snd_mixer_selem_is_enum_capture(snd_mixer_elem_t *);$/;"	p	signature:(snd_mixer_elem_t *)
snd_mixer_selem_is_enum_playback	alsa/mixer.h	/^    extern int snd_mixer_selem_is_enum_playback(snd_mixer_elem_t *);$/;"	p	signature:(snd_mixer_elem_t *)
snd_mixer_selem_is_enumerated	alsa/mixer.h	/^    extern int snd_mixer_selem_is_enumerated(snd_mixer_elem_t *);$/;"	p	signature:(snd_mixer_elem_t *)
snd_mixer_selem_is_playback_mono	alsa/mixer.h	/^    extern int snd_mixer_selem_is_playback_mono(snd_mixer_elem_t *);$/;"	p	signature:(snd_mixer_elem_t *)
snd_mixer_selem_register	alsa/mixer.h	/^    extern int snd_mixer_selem_register(snd_mixer_t *,$/;"	p	signature:(snd_mixer_t *, struct snd_mixer_selem_regopt *, snd_mixer_class_t * *)
snd_mixer_selem_regopt	alsa/mixer.h	/^    struct snd_mixer_selem_regopt {$/;"	s
snd_mixer_selem_regopt::abstract	alsa/mixer.h	/^	enum snd_mixer_selem_regopt_abstract abstract;$/;"	m	struct:snd_mixer_selem_regopt	typeref:enum:snd_mixer_selem_regopt::snd_mixer_selem_regopt_abstract	access:public
snd_mixer_selem_regopt::capture_pcm	alsa/mixer.h	/^	snd_pcm_t *capture_pcm;$/;"	m	struct:snd_mixer_selem_regopt	access:public
snd_mixer_selem_regopt::device	alsa/mixer.h	/^	const char *device;$/;"	m	struct:snd_mixer_selem_regopt	access:public
snd_mixer_selem_regopt::playback_pcm	alsa/mixer.h	/^	snd_pcm_t *playback_pcm;$/;"	m	struct:snd_mixer_selem_regopt	access:public
snd_mixer_selem_regopt::ver	alsa/mixer.h	/^	int ver;$/;"	m	struct:snd_mixer_selem_regopt	access:public
snd_mixer_selem_regopt_abstract	alsa/mixer.h	/^    enum snd_mixer_selem_regopt_abstract {$/;"	g
snd_mixer_selem_set_capture_switch	alsa/mixer.h	/^    extern int snd_mixer_selem_set_capture_switch(snd_mixer_elem_t *,$/;"	p	signature:(snd_mixer_elem_t *, snd_mixer_selem_channel_id_t, int)
snd_mixer_selem_set_capture_switch_all	alsa/mixer.h	/^    extern int snd_mixer_selem_set_capture_switch_all(snd_mixer_elem_t *,$/;"	p	signature:(snd_mixer_elem_t *, int)
snd_mixer_selem_set_capture_volume	alsa/mixer.h	/^    extern int snd_mixer_selem_set_capture_volume(snd_mixer_elem_t *,$/;"	p	signature:(snd_mixer_elem_t *, snd_mixer_selem_channel_id_t, long int)
snd_mixer_selem_set_capture_volume_all	alsa/mixer.h	/^    extern int snd_mixer_selem_set_capture_volume_all(snd_mixer_elem_t *,$/;"	p	signature:(snd_mixer_elem_t *, long int)
snd_mixer_selem_set_capture_volume_range	alsa/mixer.h	/^    extern int snd_mixer_selem_set_capture_volume_range(snd_mixer_elem_t *,$/;"	p	signature:(snd_mixer_elem_t *, long int, long int)
snd_mixer_selem_set_enum_item	alsa/mixer.h	/^    extern int snd_mixer_selem_set_enum_item(snd_mixer_elem_t *,$/;"	p	signature:(snd_mixer_elem_t *, snd_mixer_selem_channel_id_t, unsigned int)
snd_mixer_selem_set_playback_switch	alsa/mixer.h	/^    extern int snd_mixer_selem_set_playback_switch(snd_mixer_elem_t *,$/;"	p	signature:(snd_mixer_elem_t *, snd_mixer_selem_channel_id_t, int)
snd_mixer_selem_set_playback_switch_all	alsa/mixer.h	/^    extern int snd_mixer_selem_set_playback_switch_all(snd_mixer_elem_t *,$/;"	p	signature:(snd_mixer_elem_t *, int)
snd_mixer_selem_set_playback_volume	alsa/mixer.h	/^    extern int snd_mixer_selem_set_playback_volume(snd_mixer_elem_t *,$/;"	p	signature:(snd_mixer_elem_t *, snd_mixer_selem_channel_id_t, long int)
snd_mixer_selem_set_playback_volume_all	alsa/mixer.h	/^    extern int snd_mixer_selem_set_playback_volume_all(snd_mixer_elem_t *,$/;"	p	signature:(snd_mixer_elem_t *, long int)
snd_mixer_selem_set_playback_volume_range	alsa/mixer.h	/^    extern int snd_mixer_selem_set_playback_volume_range(snd_mixer_elem_t$/;"	p	signature:(snd_mixer_elem_t *, long int, long int)
snd_mixer_set_callback	alsa/mixer.h	/^    extern void snd_mixer_set_callback(snd_mixer_t *,$/;"	p	signature:(snd_mixer_t *, snd_mixer_callback_t)
snd_mixer_set_callback_private	alsa/mixer.h	/^    extern void snd_mixer_set_callback_private(snd_mixer_t *, void *);$/;"	p	signature:(snd_mixer_t *, void *)
snd_mixer_t	alsa/mixer.h	/^    typedef struct _snd_mixer snd_mixer_t;$/;"	t	typeref:struct:_snd_mixer
snd_mixer_wait	alsa/mixer.h	/^    extern int snd_mixer_wait(snd_mixer_t *, int);$/;"	p	signature:(snd_mixer_t *, int)
snd_output_buffer_open	alsa/output.h	/^    extern int snd_output_buffer_open(snd_output_t * *);$/;"	p	signature:(snd_output_t * *)
snd_output_buffer_string	alsa/output.h	/^    extern size_t snd_output_buffer_string(snd_output_t *, char **);$/;"	p	signature:(snd_output_t *, char **)
snd_output_close	alsa/output.h	/^    extern int snd_output_close(snd_output_t *);$/;"	p	signature:(snd_output_t *)
snd_output_putc	alsa/output.h	/^    extern int snd_output_putc(snd_output_t *, int);$/;"	p	signature:(snd_output_t *, int)
snd_output_puts	alsa/output.h	/^    extern int snd_output_puts(snd_output_t *, const char *);$/;"	p	signature:(snd_output_t *, const char *)
snd_output_stdio_attach	alsa/output.h	/^    extern int snd_output_stdio_attach(snd_output_t * *, FILE *, int);$/;"	p	signature:(snd_output_t * *, FILE *, int)
snd_output_stdio_open	alsa/output.h	/^    extern int snd_output_stdio_open(snd_output_t * *, const char *,$/;"	p	signature:(snd_output_t * *, const char *, const char *)
snd_output_t	alsa/output.h	/^    typedef struct _snd_output snd_output_t;$/;"	t	typeref:struct:_snd_output
snd_pcm_access_mask_any	alsa/pcm.h	/^    extern void snd_pcm_access_mask_any(snd_pcm_access_mask_t *);$/;"	p	signature:(snd_pcm_access_mask_t *)
snd_pcm_access_mask_copy	alsa/pcm.h	/^    extern void snd_pcm_access_mask_copy(snd_pcm_access_mask_t *,$/;"	p	signature:(snd_pcm_access_mask_t *, const snd_pcm_access_mask_t *)
snd_pcm_access_mask_free	alsa/pcm.h	/^    extern void snd_pcm_access_mask_free(snd_pcm_access_mask_t *);$/;"	p	signature:(snd_pcm_access_mask_t *)
snd_pcm_access_mask_malloc	alsa/pcm.h	/^    extern int snd_pcm_access_mask_malloc(snd_pcm_access_mask_t * *);$/;"	p	signature:(snd_pcm_access_mask_t * *)
snd_pcm_access_mask_none	alsa/pcm.h	/^    extern void snd_pcm_access_mask_none(snd_pcm_access_mask_t *);$/;"	p	signature:(snd_pcm_access_mask_t *)
snd_pcm_access_mask_set	alsa/pcm.h	/^    extern void snd_pcm_access_mask_set(snd_pcm_access_mask_t *,$/;"	p	signature:(snd_pcm_access_mask_t *, snd_pcm_access_t)
snd_pcm_access_mask_sizeof	alsa/pcm.h	/^    extern size_t snd_pcm_access_mask_sizeof(void);$/;"	p	signature:(void)
snd_pcm_access_mask_t	alsa/pcm.h	/^    typedef struct sndrv_mask snd_pcm_access_mask_t;$/;"	t	typeref:struct:sndrv_mask
snd_pcm_access_mask_test	alsa/pcm.h	/^    extern int snd_pcm_access_mask_test(const snd_pcm_access_mask_t *,$/;"	p	signature:(const snd_pcm_access_mask_t *, snd_pcm_access_t)
snd_pcm_access_name	alsa/pcm.h	/^    extern const char *snd_pcm_access_name(snd_pcm_access_t);$/;"	p	signature:(snd_pcm_access_t)
snd_pcm_access_t	alsa/pcm.h	/^    } snd_pcm_access_t;$/;"	t	typeref:enum:_snd_pcm_access
snd_pcm_area_copy	alsa/pcm.h	/^    extern int snd_pcm_area_copy(const snd_pcm_channel_area_t *,$/;"	p	signature:(const snd_pcm_channel_area_t *, snd_pcm_uframes_t, const snd_pcm_channel_area_t *, snd_pcm_uframes_t, unsigned int, snd_pcm_format_t)
snd_pcm_area_silence	alsa/pcm.h	/^    extern int snd_pcm_area_silence(const snd_pcm_channel_area_t *,$/;"	p	signature:(const snd_pcm_channel_area_t *, snd_pcm_uframes_t, unsigned int, snd_pcm_format_t)
snd_pcm_areas_copy	alsa/pcm.h	/^    extern int snd_pcm_areas_copy(const snd_pcm_channel_area_t *,$/;"	p	signature:(const snd_pcm_channel_area_t *, snd_pcm_uframes_t, const snd_pcm_channel_area_t *, snd_pcm_uframes_t, unsigned int, snd_pcm_uframes_t, snd_pcm_format_t)
snd_pcm_areas_silence	alsa/pcm.h	/^    extern int snd_pcm_areas_silence(const snd_pcm_channel_area_t *,$/;"	p	signature:(const snd_pcm_channel_area_t *, snd_pcm_uframes_t, unsigned int, snd_pcm_uframes_t, snd_pcm_format_t)
snd_pcm_avail_update	alsa/pcm.h	/^    extern snd_pcm_sframes_t snd_pcm_avail_update(snd_pcm_t *);$/;"	p	signature:(snd_pcm_t *)
snd_pcm_build_linear_format	alsa/pcm.h	/^    extern snd_pcm_format_t snd_pcm_build_linear_format(int, int, int,$/;"	p	signature:(int, int, int, int)
snd_pcm_bytes_to_frames	alsa/pcm.h	/^    extern snd_pcm_sframes_t snd_pcm_bytes_to_frames(snd_pcm_t *, ssize_t);$/;"	p	signature:(snd_pcm_t *, ssize_t)
snd_pcm_bytes_to_samples	alsa/pcm.h	/^    extern long int snd_pcm_bytes_to_samples(snd_pcm_t *, ssize_t);$/;"	p	signature:(snd_pcm_t *, ssize_t)
snd_pcm_channel_area_t	alsa/pcm.h	/^    typedef struct _snd_pcm_channel_area snd_pcm_channel_area_t;$/;"	t	typeref:struct:_snd_pcm_channel_area
snd_pcm_class_t	alsa/pcm.h	/^    } snd_pcm_class_t;$/;"	t	typeref:enum:_snd_pcm_class
snd_pcm_close	alsa/pcm.h	/^    extern int snd_pcm_close(snd_pcm_t *);$/;"	p	signature:(snd_pcm_t *)
snd_pcm_delay	alsa/pcm.h	/^    extern int snd_pcm_delay(snd_pcm_t *, snd_pcm_sframes_t *);$/;"	p	signature:(snd_pcm_t *, snd_pcm_sframes_t *)
snd_pcm_drain	alsa/pcm.h	/^    extern int snd_pcm_drain(snd_pcm_t *);$/;"	p	signature:(snd_pcm_t *)
snd_pcm_drop	alsa/pcm.h	/^    extern int snd_pcm_drop(snd_pcm_t *);$/;"	p	signature:(snd_pcm_t *)
snd_pcm_dump	alsa/pcm.h	/^    extern int snd_pcm_dump(snd_pcm_t *, snd_output_t *);$/;"	p	signature:(snd_pcm_t *, snd_output_t *)
snd_pcm_extplug	alsa/pcm_extplug.h	/^    struct snd_pcm_extplug {$/;"	s
snd_pcm_extplug::callback	alsa/pcm_extplug.h	/^	const snd_pcm_extplug_callback_t *callback;$/;"	m	struct:snd_pcm_extplug	access:public
snd_pcm_extplug::channels	alsa/pcm_extplug.h	/^	unsigned int channels;$/;"	m	struct:snd_pcm_extplug	access:public
snd_pcm_extplug::format	alsa/pcm_extplug.h	/^	snd_pcm_format_t format;$/;"	m	struct:snd_pcm_extplug	access:public
snd_pcm_extplug::name	alsa/pcm_extplug.h	/^	const char *name;$/;"	m	struct:snd_pcm_extplug	access:public
snd_pcm_extplug::pcm	alsa/pcm_extplug.h	/^	snd_pcm_t *pcm;$/;"	m	struct:snd_pcm_extplug	access:public
snd_pcm_extplug::private_data	alsa/pcm_extplug.h	/^	void *private_data;$/;"	m	struct:snd_pcm_extplug	access:public
snd_pcm_extplug::rate	alsa/pcm_extplug.h	/^	unsigned int rate;$/;"	m	struct:snd_pcm_extplug	access:public
snd_pcm_extplug::slave_channels	alsa/pcm_extplug.h	/^	unsigned int slave_channels;$/;"	m	struct:snd_pcm_extplug	access:public
snd_pcm_extplug::slave_format	alsa/pcm_extplug.h	/^	snd_pcm_format_t slave_format;$/;"	m	struct:snd_pcm_extplug	access:public
snd_pcm_extplug::slave_subformat	alsa/pcm_extplug.h	/^	snd_pcm_subformat_t slave_subformat;$/;"	m	struct:snd_pcm_extplug	access:public
snd_pcm_extplug::stream	alsa/pcm_extplug.h	/^	snd_pcm_stream_t stream;$/;"	m	struct:snd_pcm_extplug	access:public
snd_pcm_extplug::subformat	alsa/pcm_extplug.h	/^	snd_pcm_subformat_t subformat;$/;"	m	struct:snd_pcm_extplug	access:public
snd_pcm_extplug::version	alsa/pcm_extplug.h	/^	unsigned int version;$/;"	m	struct:snd_pcm_extplug	access:public
snd_pcm_extplug_callback	alsa/pcm_extplug.h	/^    struct snd_pcm_extplug_callback {$/;"	s
snd_pcm_extplug_callback::close	alsa/pcm_extplug.h	/^	int (*close) (void);$/;"	m	struct:snd_pcm_extplug_callback	access:public
snd_pcm_extplug_callback::dump	alsa/pcm_extplug.h	/^	void (*dump) (void);$/;"	m	struct:snd_pcm_extplug_callback	access:public
snd_pcm_extplug_callback::hw_free	alsa/pcm_extplug.h	/^	int (*hw_free) (void);$/;"	m	struct:snd_pcm_extplug_callback	access:public
snd_pcm_extplug_callback::hw_params	alsa/pcm_extplug.h	/^	int (*hw_params) (void);$/;"	m	struct:snd_pcm_extplug_callback	access:public
snd_pcm_extplug_callback::init	alsa/pcm_extplug.h	/^	int (*init) (void);$/;"	m	struct:snd_pcm_extplug_callback	access:public
snd_pcm_extplug_callback::transfer	alsa/pcm_extplug.h	/^	snd_pcm_sframes_t(*transfer) (void);$/;"	m	struct:snd_pcm_extplug_callback	access:public
snd_pcm_extplug_callback_t	alsa/pcm_extplug.h	/^    typedef struct snd_pcm_extplug_callback snd_pcm_extplug_callback_t;$/;"	t	typeref:struct:snd_pcm_extplug_callback
snd_pcm_extplug_t	alsa/pcm_extplug.h	/^    typedef struct snd_pcm_extplug snd_pcm_extplug_t;$/;"	t	typeref:struct:snd_pcm_extplug
snd_pcm_format_big_endian	alsa/pcm.h	/^    extern int snd_pcm_format_big_endian(snd_pcm_format_t);$/;"	p	signature:(snd_pcm_format_t)
snd_pcm_format_cpu_endian	alsa/pcm.h	/^    extern int snd_pcm_format_cpu_endian(snd_pcm_format_t);$/;"	p	signature:(snd_pcm_format_t)
snd_pcm_format_description	alsa/pcm.h	/^    extern const char *snd_pcm_format_description(snd_pcm_format_t);$/;"	p	signature:(snd_pcm_format_t)
snd_pcm_format_float	alsa/pcm.h	/^    extern int snd_pcm_format_float(snd_pcm_format_t);$/;"	p	signature:(snd_pcm_format_t)
snd_pcm_format_linear	alsa/pcm.h	/^    extern int snd_pcm_format_linear(snd_pcm_format_t);$/;"	p	signature:(snd_pcm_format_t)
snd_pcm_format_little_endian	alsa/pcm.h	/^    extern int snd_pcm_format_little_endian(snd_pcm_format_t);$/;"	p	signature:(snd_pcm_format_t)
snd_pcm_format_mask_any	alsa/pcm.h	/^    extern void snd_pcm_format_mask_any(snd_pcm_format_mask_t *);$/;"	p	signature:(snd_pcm_format_mask_t *)
snd_pcm_format_mask_copy	alsa/pcm.h	/^    extern void snd_pcm_format_mask_copy(snd_pcm_format_mask_t *,$/;"	p	signature:(snd_pcm_format_mask_t *, const snd_pcm_format_mask_t *)
snd_pcm_format_mask_free	alsa/pcm.h	/^    extern void snd_pcm_format_mask_free(snd_pcm_format_mask_t *);$/;"	p	signature:(snd_pcm_format_mask_t *)
snd_pcm_format_mask_malloc	alsa/pcm.h	/^    extern int snd_pcm_format_mask_malloc(snd_pcm_format_mask_t * *);$/;"	p	signature:(snd_pcm_format_mask_t * *)
snd_pcm_format_mask_none	alsa/pcm.h	/^    extern void snd_pcm_format_mask_none(snd_pcm_format_mask_t *);$/;"	p	signature:(snd_pcm_format_mask_t *)
snd_pcm_format_mask_set	alsa/pcm.h	/^    extern void snd_pcm_format_mask_set(snd_pcm_format_mask_t *,$/;"	p	signature:(snd_pcm_format_mask_t *, snd_pcm_format_t)
snd_pcm_format_mask_sizeof	alsa/pcm.h	/^    extern size_t snd_pcm_format_mask_sizeof(void);$/;"	p	signature:(void)
snd_pcm_format_mask_t	alsa/pcm.h	/^    typedef struct sndrv_mask snd_pcm_format_mask_t;$/;"	t	typeref:struct:sndrv_mask
snd_pcm_format_mask_test	alsa/pcm.h	/^    extern int snd_pcm_format_mask_test(const snd_pcm_format_mask_t *,$/;"	p	signature:(const snd_pcm_format_mask_t *, snd_pcm_format_t)
snd_pcm_format_name	alsa/pcm.h	/^    extern const char *snd_pcm_format_name(snd_pcm_format_t);$/;"	p	signature:(snd_pcm_format_t)
snd_pcm_format_physical_width	alsa/pcm.h	/^    extern int snd_pcm_format_physical_width(snd_pcm_format_t);$/;"	p	signature:(snd_pcm_format_t)
snd_pcm_format_set_silence	alsa/pcm.h	/^    extern int snd_pcm_format_set_silence(snd_pcm_format_t, void *,$/;"	p	signature:(snd_pcm_format_t, void *, unsigned int)
snd_pcm_format_signed	alsa/pcm.h	/^    extern int snd_pcm_format_signed(snd_pcm_format_t);$/;"	p	signature:(snd_pcm_format_t)
snd_pcm_format_size	alsa/pcm.h	/^    extern ssize_t snd_pcm_format_size(snd_pcm_format_t, size_t);$/;"	p	signature:(snd_pcm_format_t, size_t)
snd_pcm_format_t	alsa/pcm.h	/^    } snd_pcm_format_t;$/;"	t	typeref:enum:_snd_pcm_format
snd_pcm_format_unsigned	alsa/pcm.h	/^    extern int snd_pcm_format_unsigned(snd_pcm_format_t);$/;"	p	signature:(snd_pcm_format_t)
snd_pcm_format_value	alsa/pcm.h	/^    extern snd_pcm_format_t snd_pcm_format_value(const char *);$/;"	p	signature:(const char *)
snd_pcm_format_width	alsa/pcm.h	/^    extern int snd_pcm_format_width(snd_pcm_format_t);$/;"	p	signature:(snd_pcm_format_t)
snd_pcm_forward	alsa/pcm.h	/^    extern snd_pcm_sframes_t snd_pcm_forward(snd_pcm_t *,$/;"	p	signature:(snd_pcm_t *, snd_pcm_uframes_t)
snd_pcm_frames_to_bytes	alsa/pcm.h	/^    extern ssize_t snd_pcm_frames_to_bytes(snd_pcm_t *, snd_pcm_sframes_t);$/;"	p	signature:(snd_pcm_t *, snd_pcm_sframes_t)
snd_pcm_hook_func_t	alsa/pcm.h	/^    typedef int (*snd_pcm_hook_func_t) (void);$/;"	t
snd_pcm_hook_t	alsa/pcm.h	/^    typedef struct _snd_pcm_hook snd_pcm_hook_t;$/;"	t	typeref:struct:_snd_pcm_hook
snd_pcm_hook_type_t	alsa/pcm.h	/^    } snd_pcm_hook_type_t;$/;"	t	typeref:enum:_snd_pcm_hook_type
snd_pcm_hw_free	alsa/pcm.h	/^    extern int snd_pcm_hw_free(snd_pcm_t *);$/;"	p	signature:(snd_pcm_t *)
snd_pcm_hw_params	alsa/pcm.h	/^    extern int snd_pcm_hw_params(snd_pcm_t *, snd_pcm_hw_params_t *);$/;"	p	signature:(snd_pcm_t *, snd_pcm_hw_params_t *)
snd_pcm_hw_params_any	alsa/pcm.h	/^    extern int snd_pcm_hw_params_any(snd_pcm_t *, snd_pcm_hw_params_t *);$/;"	p	signature:(snd_pcm_t *, snd_pcm_hw_params_t *)
snd_pcm_hw_params_can_mmap_sample_resolution	alsa/pcm.h	/^    extern int snd_pcm_hw_params_can_mmap_sample_resolution(const$/;"	p	signature:(const snd_pcm_hw_params_t *)
snd_pcm_hw_params_can_pause	alsa/pcm.h	/^    extern int snd_pcm_hw_params_can_pause(const snd_pcm_hw_params_t *);$/;"	p	signature:(const snd_pcm_hw_params_t *)
snd_pcm_hw_params_can_resume	alsa/pcm.h	/^    extern int snd_pcm_hw_params_can_resume(const snd_pcm_hw_params_t *);$/;"	p	signature:(const snd_pcm_hw_params_t *)
snd_pcm_hw_params_can_sync_start	alsa/pcm.h	/^    extern int snd_pcm_hw_params_can_sync_start(const snd_pcm_hw_params_t$/;"	p	signature:(const snd_pcm_hw_params_t *)
snd_pcm_hw_params_copy	alsa/pcm.h	/^    extern void snd_pcm_hw_params_copy(snd_pcm_hw_params_t *,$/;"	p	signature:(snd_pcm_hw_params_t *, const snd_pcm_hw_params_t *)
snd_pcm_hw_params_current	alsa/pcm.h	/^    extern int snd_pcm_hw_params_current(snd_pcm_t *,$/;"	p	signature:(snd_pcm_t *, snd_pcm_hw_params_t *)
snd_pcm_hw_params_dump	alsa/pcm.h	/^    extern int snd_pcm_hw_params_dump(snd_pcm_hw_params_t *,$/;"	p	signature:(snd_pcm_hw_params_t *, snd_output_t *)
snd_pcm_hw_params_free	alsa/pcm.h	/^    extern void snd_pcm_hw_params_free(snd_pcm_hw_params_t *);$/;"	p	signature:(snd_pcm_hw_params_t *)
snd_pcm_hw_params_get_access	alsa/pcm.h	/^    extern int snd_pcm_hw_params_get_access(const snd_pcm_hw_params_t *,$/;"	p	signature:(const snd_pcm_hw_params_t *, snd_pcm_access_t *)
snd_pcm_hw_params_get_access_mask	alsa/pcm.h	/^    extern int snd_pcm_hw_params_get_access_mask(snd_pcm_hw_params_t *,$/;"	p	signature:(snd_pcm_hw_params_t *, snd_pcm_access_mask_t *)
snd_pcm_hw_params_get_buffer_size	alsa/pcm.h	/^    extern int snd_pcm_hw_params_get_buffer_size(const snd_pcm_hw_params_t$/;"	p	signature:(const snd_pcm_hw_params_t *, snd_pcm_uframes_t *)
snd_pcm_hw_params_get_buffer_size_max	alsa/pcm.h	/^    extern int snd_pcm_hw_params_get_buffer_size_max(const$/;"	p	signature:(const snd_pcm_hw_params_t *, snd_pcm_uframes_t *)
snd_pcm_hw_params_get_buffer_size_min	alsa/pcm.h	/^    extern int snd_pcm_hw_params_get_buffer_size_min(const$/;"	p	signature:(const snd_pcm_hw_params_t *, snd_pcm_uframes_t *)
snd_pcm_hw_params_get_buffer_time	alsa/pcm.h	/^    extern int snd_pcm_hw_params_get_buffer_time(const snd_pcm_hw_params_t$/;"	p	signature:(const snd_pcm_hw_params_t *, unsigned int *, int *)
snd_pcm_hw_params_get_buffer_time_max	alsa/pcm.h	/^    extern int snd_pcm_hw_params_get_buffer_time_max(const$/;"	p	signature:(const snd_pcm_hw_params_t *, unsigned int *, int *)
snd_pcm_hw_params_get_buffer_time_min	alsa/pcm.h	/^    extern int snd_pcm_hw_params_get_buffer_time_min(const$/;"	p	signature:(const snd_pcm_hw_params_t *, unsigned int *, int *)
snd_pcm_hw_params_get_channels	alsa/pcm.h	/^    extern int snd_pcm_hw_params_get_channels(const snd_pcm_hw_params_t *,$/;"	p	signature:(const snd_pcm_hw_params_t *, unsigned int *)
snd_pcm_hw_params_get_channels_max	alsa/pcm.h	/^    extern int snd_pcm_hw_params_get_channels_max(const snd_pcm_hw_params_t$/;"	p	signature:(const snd_pcm_hw_params_t *, unsigned int *)
snd_pcm_hw_params_get_channels_min	alsa/pcm.h	/^    extern int snd_pcm_hw_params_get_channels_min(const snd_pcm_hw_params_t$/;"	p	signature:(const snd_pcm_hw_params_t *, unsigned int *)
snd_pcm_hw_params_get_format	alsa/pcm.h	/^    extern int snd_pcm_hw_params_get_format(const snd_pcm_hw_params_t *,$/;"	p	signature:(const snd_pcm_hw_params_t *, snd_pcm_format_t *)
snd_pcm_hw_params_get_format_mask	alsa/pcm.h	/^    extern void snd_pcm_hw_params_get_format_mask(snd_pcm_hw_params_t *,$/;"	p	signature:(snd_pcm_hw_params_t *, snd_pcm_format_mask_t *)
snd_pcm_hw_params_get_period_size	alsa/pcm.h	/^    extern int snd_pcm_hw_params_get_period_size(const snd_pcm_hw_params_t$/;"	p	signature:(const snd_pcm_hw_params_t *, snd_pcm_uframes_t *, int *)
snd_pcm_hw_params_get_period_size_max	alsa/pcm.h	/^    extern int snd_pcm_hw_params_get_period_size_max(const$/;"	p	signature:(const snd_pcm_hw_params_t *, snd_pcm_uframes_t *, int *)
snd_pcm_hw_params_get_period_size_min	alsa/pcm.h	/^    extern int snd_pcm_hw_params_get_period_size_min(const$/;"	p	signature:(const snd_pcm_hw_params_t *, snd_pcm_uframes_t *, int *)
snd_pcm_hw_params_get_period_time	alsa/pcm.h	/^    extern int snd_pcm_hw_params_get_period_time(const snd_pcm_hw_params_t$/;"	p	signature:(const snd_pcm_hw_params_t *, unsigned int *, int *)
snd_pcm_hw_params_get_period_time_max	alsa/pcm.h	/^    extern int snd_pcm_hw_params_get_period_time_max(const$/;"	p	signature:(const snd_pcm_hw_params_t *, unsigned int *, int *)
snd_pcm_hw_params_get_period_time_min	alsa/pcm.h	/^    extern int snd_pcm_hw_params_get_period_time_min(const$/;"	p	signature:(const snd_pcm_hw_params_t *, unsigned int *, int *)
snd_pcm_hw_params_get_periods	alsa/pcm.h	/^    extern int snd_pcm_hw_params_get_periods(const snd_pcm_hw_params_t *,$/;"	p	signature:(const snd_pcm_hw_params_t *, unsigned int *, int *)
snd_pcm_hw_params_get_periods_max	alsa/pcm.h	/^    extern int snd_pcm_hw_params_get_periods_max(const snd_pcm_hw_params_t$/;"	p	signature:(const snd_pcm_hw_params_t *, unsigned int *, int *)
snd_pcm_hw_params_get_periods_min	alsa/pcm.h	/^    extern int snd_pcm_hw_params_get_periods_min(const snd_pcm_hw_params_t$/;"	p	signature:(const snd_pcm_hw_params_t *, unsigned int *, int *)
snd_pcm_hw_params_get_rate	alsa/pcm.h	/^    extern int snd_pcm_hw_params_get_rate(const snd_pcm_hw_params_t *,$/;"	p	signature:(const snd_pcm_hw_params_t *, unsigned int *, int *)
snd_pcm_hw_params_get_rate_max	alsa/pcm.h	/^    extern int snd_pcm_hw_params_get_rate_max(const snd_pcm_hw_params_t *,$/;"	p	signature:(const snd_pcm_hw_params_t *, unsigned int *, int *)
snd_pcm_hw_params_get_rate_min	alsa/pcm.h	/^    extern int snd_pcm_hw_params_get_rate_min(const snd_pcm_hw_params_t *,$/;"	p	signature:(const snd_pcm_hw_params_t *, unsigned int *, int *)
snd_pcm_hw_params_get_rate_numden	alsa/pcm.h	/^    extern int snd_pcm_hw_params_get_rate_numden(const snd_pcm_hw_params_t$/;"	p	signature:(const snd_pcm_hw_params_t *, unsigned int *, unsigned int *)
snd_pcm_hw_params_get_rate_resample	alsa/pcm.h	/^    extern int snd_pcm_hw_params_get_rate_resample(snd_pcm_t *,$/;"	p	signature:(snd_pcm_t *, snd_pcm_hw_params_t *, unsigned int *)
snd_pcm_hw_params_get_sbits	alsa/pcm.h	/^    extern int snd_pcm_hw_params_get_sbits(const snd_pcm_hw_params_t *);$/;"	p	signature:(const snd_pcm_hw_params_t *)
snd_pcm_hw_params_is_double	alsa/pcm.h	/^    extern int snd_pcm_hw_params_is_double(const snd_pcm_hw_params_t *);$/;"	p	signature:(const snd_pcm_hw_params_t *)
snd_pcm_hw_params_is_half_duplex	alsa/pcm.h	/^    extern int snd_pcm_hw_params_is_half_duplex(const snd_pcm_hw_params_t$/;"	p	signature:(const snd_pcm_hw_params_t *)
snd_pcm_hw_params_is_joint_duplex	alsa/pcm.h	/^    extern int snd_pcm_hw_params_is_joint_duplex(const snd_pcm_hw_params_t$/;"	p	signature:(const snd_pcm_hw_params_t *)
snd_pcm_hw_params_malloc	alsa/pcm.h	/^    extern int snd_pcm_hw_params_malloc(snd_pcm_hw_params_t * *);$/;"	p	signature:(snd_pcm_hw_params_t * *)
snd_pcm_hw_params_set_access	alsa/pcm.h	/^    extern int snd_pcm_hw_params_set_access(snd_pcm_t *,$/;"	p	signature:(snd_pcm_t *, snd_pcm_hw_params_t *, snd_pcm_access_t)
snd_pcm_hw_params_set_access_mask	alsa/pcm.h	/^    extern int snd_pcm_hw_params_set_access_mask(snd_pcm_t *,$/;"	p	signature:(snd_pcm_t *, snd_pcm_hw_params_t *, snd_pcm_access_mask_t *)
snd_pcm_hw_params_set_buffer_size	alsa/pcm.h	/^    extern int snd_pcm_hw_params_set_buffer_size(snd_pcm_t *,$/;"	p	signature:(snd_pcm_t *, snd_pcm_hw_params_t *, snd_pcm_uframes_t)
snd_pcm_hw_params_set_buffer_size_near	alsa/pcm.h	/^    extern int snd_pcm_hw_params_set_buffer_size_near(snd_pcm_t *,$/;"	p	signature:(snd_pcm_t *, snd_pcm_hw_params_t *, snd_pcm_uframes_t *)
snd_pcm_hw_params_set_buffer_time	alsa/pcm.h	/^    extern int snd_pcm_hw_params_set_buffer_time(snd_pcm_t *,$/;"	p	signature:(snd_pcm_t *, snd_pcm_hw_params_t *, unsigned int, int)
snd_pcm_hw_params_set_buffer_time_near	alsa/pcm.h	/^    extern int snd_pcm_hw_params_set_buffer_time_near(snd_pcm_t *,$/;"	p	signature:(snd_pcm_t *, snd_pcm_hw_params_t *, unsigned int *, int *)
snd_pcm_hw_params_set_channels	alsa/pcm.h	/^    extern int snd_pcm_hw_params_set_channels(snd_pcm_t *,$/;"	p	signature:(snd_pcm_t *, snd_pcm_hw_params_t *, unsigned int)
snd_pcm_hw_params_set_channels_near	alsa/pcm.h	/^    extern int snd_pcm_hw_params_set_channels_near(snd_pcm_t *,$/;"	p	signature:(snd_pcm_t *, snd_pcm_hw_params_t *, unsigned int *)
snd_pcm_hw_params_set_format	alsa/pcm.h	/^    extern int snd_pcm_hw_params_set_format(snd_pcm_t *,$/;"	p	signature:(snd_pcm_t *, snd_pcm_hw_params_t *, snd_pcm_format_t)
snd_pcm_hw_params_set_format_mask	alsa/pcm.h	/^    extern int snd_pcm_hw_params_set_format_mask(snd_pcm_t *,$/;"	p	signature:(snd_pcm_t *, snd_pcm_hw_params_t *, snd_pcm_format_mask_t *)
snd_pcm_hw_params_set_period_size	alsa/pcm.h	/^    extern int snd_pcm_hw_params_set_period_size(snd_pcm_t *,$/;"	p	signature:(snd_pcm_t *, snd_pcm_hw_params_t *, snd_pcm_uframes_t, int)
snd_pcm_hw_params_set_period_size_near	alsa/pcm.h	/^    extern int snd_pcm_hw_params_set_period_size_near(snd_pcm_t *,$/;"	p	signature:(snd_pcm_t *, snd_pcm_hw_params_t *, snd_pcm_uframes_t *, int *)
snd_pcm_hw_params_set_period_time	alsa/pcm.h	/^    extern int snd_pcm_hw_params_set_period_time(snd_pcm_t *,$/;"	p	signature:(snd_pcm_t *, snd_pcm_hw_params_t *, unsigned int, int)
snd_pcm_hw_params_set_period_time_near	alsa/pcm.h	/^    extern int snd_pcm_hw_params_set_period_time_near(snd_pcm_t *,$/;"	p	signature:(snd_pcm_t *, snd_pcm_hw_params_t *, unsigned int *, int *)
snd_pcm_hw_params_set_periods	alsa/pcm.h	/^    extern int snd_pcm_hw_params_set_periods(snd_pcm_t *,$/;"	p	signature:(snd_pcm_t *, snd_pcm_hw_params_t *, unsigned int, int)
snd_pcm_hw_params_set_periods_integer	alsa/pcm.h	/^    extern int snd_pcm_hw_params_set_periods_integer(snd_pcm_t *,$/;"	p	signature:(snd_pcm_t *, snd_pcm_hw_params_t *)
snd_pcm_hw_params_set_periods_near	alsa/pcm.h	/^    extern int snd_pcm_hw_params_set_periods_near(snd_pcm_t *,$/;"	p	signature:(snd_pcm_t *, snd_pcm_hw_params_t *, unsigned int *, int *)
snd_pcm_hw_params_set_rate	alsa/pcm.h	/^    extern int snd_pcm_hw_params_set_rate(snd_pcm_t *,$/;"	p	signature:(snd_pcm_t *, snd_pcm_hw_params_t *, unsigned int, int)
snd_pcm_hw_params_set_rate_near	alsa/pcm.h	/^    extern int snd_pcm_hw_params_set_rate_near(snd_pcm_t *,$/;"	p	signature:(snd_pcm_t *, snd_pcm_hw_params_t *, unsigned int *, int *)
snd_pcm_hw_params_set_rate_resample	alsa/pcm.h	/^    extern int snd_pcm_hw_params_set_rate_resample(snd_pcm_t *,$/;"	p	signature:(snd_pcm_t *, snd_pcm_hw_params_t *, unsigned int)
snd_pcm_hw_params_sizeof	alsa/pcm.h	/^    extern size_t snd_pcm_hw_params_sizeof(void);$/;"	p	signature:(void)
snd_pcm_hw_params_t	alsa/pcm.h	/^    typedef struct sndrv_pcm_hw_params snd_pcm_hw_params_t;$/;"	t	typeref:struct:sndrv_pcm_hw_params
snd_pcm_hw_params_test_access	alsa/pcm.h	/^    extern int snd_pcm_hw_params_test_access(snd_pcm_t *,$/;"	p	signature:(snd_pcm_t *, snd_pcm_hw_params_t *, snd_pcm_access_t)
snd_pcm_hw_params_test_buffer_size	alsa/pcm.h	/^    extern int snd_pcm_hw_params_test_buffer_size(snd_pcm_t *,$/;"	p	signature:(snd_pcm_t *, snd_pcm_hw_params_t *, snd_pcm_uframes_t)
snd_pcm_hw_params_test_buffer_time	alsa/pcm.h	/^    extern int snd_pcm_hw_params_test_buffer_time(snd_pcm_t *,$/;"	p	signature:(snd_pcm_t *, snd_pcm_hw_params_t *, unsigned int, int)
snd_pcm_hw_params_test_channels	alsa/pcm.h	/^    extern int snd_pcm_hw_params_test_channels(snd_pcm_t *,$/;"	p	signature:(snd_pcm_t *, snd_pcm_hw_params_t *, unsigned int)
snd_pcm_hw_params_test_format	alsa/pcm.h	/^    extern int snd_pcm_hw_params_test_format(snd_pcm_t *,$/;"	p	signature:(snd_pcm_t *, snd_pcm_hw_params_t *, snd_pcm_format_t)
snd_pcm_hw_params_test_period_size	alsa/pcm.h	/^    extern int snd_pcm_hw_params_test_period_size(snd_pcm_t *,$/;"	p	signature:(snd_pcm_t *, snd_pcm_hw_params_t *, snd_pcm_uframes_t, int)
snd_pcm_hw_params_test_period_time	alsa/pcm.h	/^    extern int snd_pcm_hw_params_test_period_time(snd_pcm_t *,$/;"	p	signature:(snd_pcm_t *, snd_pcm_hw_params_t *, unsigned int, int)
snd_pcm_hw_params_test_periods	alsa/pcm.h	/^    extern int snd_pcm_hw_params_test_periods(snd_pcm_t *,$/;"	p	signature:(snd_pcm_t *, snd_pcm_hw_params_t *, unsigned int, int)
snd_pcm_hw_params_test_rate	alsa/pcm.h	/^    extern int snd_pcm_hw_params_test_rate(snd_pcm_t *,$/;"	p	signature:(snd_pcm_t *, snd_pcm_hw_params_t *, unsigned int, int)
snd_pcm_hwsync	alsa/pcm.h	/^    extern int snd_pcm_hwsync(snd_pcm_t *);$/;"	p	signature:(snd_pcm_t *)
snd_pcm_info	alsa/pcm.h	/^    extern int snd_pcm_info(snd_pcm_t *, snd_pcm_info_t *);$/;"	p	signature:(snd_pcm_t *, snd_pcm_info_t *)
snd_pcm_info_copy	alsa/pcm.h	/^    extern void snd_pcm_info_copy(snd_pcm_info_t *,$/;"	p	signature:(snd_pcm_info_t *, const snd_pcm_info_t *)
snd_pcm_info_free	alsa/pcm.h	/^    extern void snd_pcm_info_free(snd_pcm_info_t *);$/;"	p	signature:(snd_pcm_info_t *)
snd_pcm_info_get_card	alsa/pcm.h	/^    extern int snd_pcm_info_get_card(const snd_pcm_info_t *);$/;"	p	signature:(const snd_pcm_info_t *)
snd_pcm_info_get_class	alsa/pcm.h	/^    extern snd_pcm_class_t snd_pcm_info_get_class(const snd_pcm_info_t *);$/;"	p	signature:(const snd_pcm_info_t *)
snd_pcm_info_get_device	alsa/pcm.h	/^    extern unsigned int snd_pcm_info_get_device(const snd_pcm_info_t *);$/;"	p	signature:(const snd_pcm_info_t *)
snd_pcm_info_get_id	alsa/pcm.h	/^    extern const char *snd_pcm_info_get_id(const snd_pcm_info_t *);$/;"	p	signature:(const snd_pcm_info_t *)
snd_pcm_info_get_name	alsa/pcm.h	/^    extern const char *snd_pcm_info_get_name(const snd_pcm_info_t *);$/;"	p	signature:(const snd_pcm_info_t *)
snd_pcm_info_get_stream	alsa/pcm.h	/^    extern snd_pcm_stream_t snd_pcm_info_get_stream(const snd_pcm_info_t$/;"	p	signature:(const snd_pcm_info_t *)
snd_pcm_info_get_subdevice	alsa/pcm.h	/^    extern unsigned int snd_pcm_info_get_subdevice(const snd_pcm_info_t *);$/;"	p	signature:(const snd_pcm_info_t *)
snd_pcm_info_get_subdevice_name	alsa/pcm.h	/^    extern const char *snd_pcm_info_get_subdevice_name(const snd_pcm_info_t$/;"	p	signature:(const snd_pcm_info_t *)
snd_pcm_info_get_subdevices_avail	alsa/pcm.h	/^    extern unsigned int snd_pcm_info_get_subdevices_avail(const$/;"	p	signature:(const snd_pcm_info_t *)
snd_pcm_info_get_subdevices_count	alsa/pcm.h	/^    extern unsigned int snd_pcm_info_get_subdevices_count(const$/;"	p	signature:(const snd_pcm_info_t *)
snd_pcm_info_malloc	alsa/pcm.h	/^    extern int snd_pcm_info_malloc(snd_pcm_info_t * *);$/;"	p	signature:(snd_pcm_info_t * *)
snd_pcm_info_set_device	alsa/pcm.h	/^    extern void snd_pcm_info_set_device(snd_pcm_info_t *, unsigned int);$/;"	p	signature:(snd_pcm_info_t *, unsigned int)
snd_pcm_info_set_stream	alsa/pcm.h	/^    extern void snd_pcm_info_set_stream(snd_pcm_info_t *,$/;"	p	signature:(snd_pcm_info_t *, snd_pcm_stream_t)
snd_pcm_info_set_subdevice	alsa/pcm.h	/^    extern void snd_pcm_info_set_subdevice(snd_pcm_info_t *, unsigned int);$/;"	p	signature:(snd_pcm_info_t *, unsigned int)
snd_pcm_info_sizeof	alsa/pcm.h	/^    extern size_t snd_pcm_info_sizeof(void);$/;"	p	signature:(void)
snd_pcm_info_t	alsa/pcm.h	/^    typedef struct sndrv_pcm_info snd_pcm_info_t;$/;"	t	typeref:struct:sndrv_pcm_info
snd_pcm_link	alsa/pcm.h	/^    extern int snd_pcm_link(snd_pcm_t *, snd_pcm_t *);$/;"	p	signature:(snd_pcm_t *, snd_pcm_t *)
snd_pcm_mmap_begin	alsa/pcm.h	/^    extern int snd_pcm_mmap_begin(snd_pcm_t *,$/;"	p	signature:(snd_pcm_t *, const snd_pcm_channel_area_t * *, snd_pcm_uframes_t *, snd_pcm_uframes_t *)
snd_pcm_mmap_commit	alsa/pcm.h	/^    extern snd_pcm_sframes_t snd_pcm_mmap_commit(snd_pcm_t *,$/;"	p	signature:(snd_pcm_t *, snd_pcm_uframes_t, snd_pcm_uframes_t)
snd_pcm_mmap_readi	alsa/pcm.h	/^    extern snd_pcm_sframes_t snd_pcm_mmap_readi(snd_pcm_t *, void *,$/;"	p	signature:(snd_pcm_t *, void *, snd_pcm_uframes_t)
snd_pcm_mmap_readn	alsa/pcm.h	/^    extern snd_pcm_sframes_t snd_pcm_mmap_readn(snd_pcm_t *, void **,$/;"	p	signature:(snd_pcm_t *, void **, snd_pcm_uframes_t)
snd_pcm_mmap_writei	alsa/pcm.h	/^    extern snd_pcm_sframes_t snd_pcm_mmap_writei(snd_pcm_t *, const void *,$/;"	p	signature:(snd_pcm_t *, const void *, snd_pcm_uframes_t)
snd_pcm_mmap_writen	alsa/pcm.h	/^    extern snd_pcm_sframes_t snd_pcm_mmap_writen(snd_pcm_t *, void **,$/;"	p	signature:(snd_pcm_t *, void **, snd_pcm_uframes_t)
snd_pcm_name	alsa/pcm.h	/^    extern const char *snd_pcm_name(snd_pcm_t *);$/;"	p	signature:(snd_pcm_t *)
snd_pcm_nonblock	alsa/pcm.h	/^    extern int snd_pcm_nonblock(snd_pcm_t *, int);$/;"	p	signature:(snd_pcm_t *, int)
snd_pcm_open	alsa/pcm.h	/^    extern int snd_pcm_open(snd_pcm_t * *, const char *, snd_pcm_stream_t,$/;"	p	signature:(snd_pcm_t * *, const char *, snd_pcm_stream_t, int)
snd_pcm_open_lconf	alsa/pcm.h	/^    extern int snd_pcm_open_lconf(snd_pcm_t * *, const char *,$/;"	p	signature:(snd_pcm_t * *, const char *, snd_pcm_stream_t, int, snd_config_t *)
snd_pcm_pause	alsa/pcm.h	/^    extern int snd_pcm_pause(snd_pcm_t *, int);$/;"	p	signature:(snd_pcm_t *, int)
snd_pcm_poll_descriptors	alsa/pcm.h	/^    extern int snd_pcm_poll_descriptors(snd_pcm_t *, struct pollfd *,$/;"	p	signature:(snd_pcm_t *, struct pollfd *, unsigned int)
snd_pcm_poll_descriptors_count	alsa/pcm.h	/^    extern int snd_pcm_poll_descriptors_count(snd_pcm_t *);$/;"	p	signature:(snd_pcm_t *)
snd_pcm_poll_descriptors_revents	alsa/pcm.h	/^    extern int snd_pcm_poll_descriptors_revents(snd_pcm_t *,$/;"	p	signature:(snd_pcm_t *, struct pollfd *, unsigned int, short unsigned int *)
snd_pcm_prepare	alsa/pcm.h	/^    extern int snd_pcm_prepare(snd_pcm_t *);$/;"	p	signature:(snd_pcm_t *)
snd_pcm_readi	alsa/pcm.h	/^    extern snd_pcm_sframes_t snd_pcm_readi(snd_pcm_t *, void *,$/;"	p	signature:(snd_pcm_t *, void *, snd_pcm_uframes_t)
snd_pcm_readn	alsa/pcm.h	/^    extern snd_pcm_sframes_t snd_pcm_readn(snd_pcm_t *, void **,$/;"	p	signature:(snd_pcm_t *, void **, snd_pcm_uframes_t)
snd_pcm_recover	alsa/pcm.h	/^    extern int snd_pcm_recover(snd_pcm_t *, int, int);$/;"	p	signature:(snd_pcm_t *, int, int)
snd_pcm_reset	alsa/pcm.h	/^    extern int snd_pcm_reset(snd_pcm_t *);$/;"	p	signature:(snd_pcm_t *)
snd_pcm_resume	alsa/pcm.h	/^    extern int snd_pcm_resume(snd_pcm_t *);$/;"	p	signature:(snd_pcm_t *)
snd_pcm_rewind	alsa/pcm.h	/^    extern snd_pcm_sframes_t snd_pcm_rewind(snd_pcm_t *,$/;"	p	signature:(snd_pcm_t *, snd_pcm_uframes_t)
snd_pcm_route_ttable_entry_t	alsa/pcm_plugin.h	/^    typedef float snd_pcm_route_ttable_entry_t;$/;"	t
snd_pcm_samples_to_bytes	alsa/pcm.h	/^    extern ssize_t snd_pcm_samples_to_bytes(snd_pcm_t *, long int);$/;"	p	signature:(snd_pcm_t *, long int)
snd_pcm_scope_ops_t	alsa/pcm.h	/^    typedef struct _snd_pcm_scope_ops snd_pcm_scope_ops_t;$/;"	t	typeref:struct:_snd_pcm_scope_ops
snd_pcm_scope_t	alsa/pcm.h	/^    typedef struct _snd_pcm_scope snd_pcm_scope_t;$/;"	t	typeref:struct:_snd_pcm_scope
snd_pcm_sframes_t	alsa/pcm.h	/^    typedef long int snd_pcm_sframes_t;$/;"	t
snd_pcm_start	alsa/pcm.h	/^    extern int snd_pcm_start(snd_pcm_t *);$/;"	p	signature:(snd_pcm_t *)
snd_pcm_start_t	alsa/pcm.h	/^    } snd_pcm_start_t;$/;"	t	typeref:enum:_snd_pcm_start
snd_pcm_state	alsa/pcm.h	/^    extern snd_pcm_state_t snd_pcm_state(snd_pcm_t *);$/;"	p	signature:(snd_pcm_t *)
snd_pcm_state_name	alsa/pcm.h	/^    extern const char *snd_pcm_state_name(snd_pcm_state_t);$/;"	p	signature:(snd_pcm_state_t)
snd_pcm_state_t	alsa/pcm.h	/^    } snd_pcm_state_t;$/;"	t	typeref:enum:_snd_pcm_state
snd_pcm_status	alsa/pcm.h	/^    extern int snd_pcm_status(snd_pcm_t *, snd_pcm_status_t *);$/;"	p	signature:(snd_pcm_t *, snd_pcm_status_t *)
snd_pcm_status_copy	alsa/pcm.h	/^    extern void snd_pcm_status_copy(snd_pcm_status_t *,$/;"	p	signature:(snd_pcm_status_t *, const snd_pcm_status_t *)
snd_pcm_status_dump	alsa/pcm.h	/^    extern int snd_pcm_status_dump(snd_pcm_status_t *, snd_output_t *);$/;"	p	signature:(snd_pcm_status_t *, snd_output_t *)
snd_pcm_status_free	alsa/pcm.h	/^    extern void snd_pcm_status_free(snd_pcm_status_t *);$/;"	p	signature:(snd_pcm_status_t *)
snd_pcm_status_get_avail	alsa/pcm.h	/^    extern snd_pcm_uframes_t snd_pcm_status_get_avail(const$/;"	p	signature:(const snd_pcm_status_t *)
snd_pcm_status_get_avail_max	alsa/pcm.h	/^    extern snd_pcm_uframes_t snd_pcm_status_get_avail_max(const$/;"	p	signature:(const snd_pcm_status_t *)
snd_pcm_status_get_delay	alsa/pcm.h	/^    extern snd_pcm_sframes_t snd_pcm_status_get_delay(const$/;"	p	signature:(const snd_pcm_status_t *)
snd_pcm_status_get_state	alsa/pcm.h	/^    extern snd_pcm_state_t snd_pcm_status_get_state(const snd_pcm_status_t$/;"	p	signature:(const snd_pcm_status_t *)
snd_pcm_status_get_trigger_tstamp	alsa/pcm.h	/^    extern void snd_pcm_status_get_trigger_tstamp(const snd_pcm_status_t *,$/;"	p	signature:(const snd_pcm_status_t *, snd_timestamp_t *)
snd_pcm_status_get_tstamp	alsa/pcm.h	/^    extern void snd_pcm_status_get_tstamp(const snd_pcm_status_t *,$/;"	p	signature:(const snd_pcm_status_t *, snd_timestamp_t *)
snd_pcm_status_malloc	alsa/pcm.h	/^    extern int snd_pcm_status_malloc(snd_pcm_status_t * *);$/;"	p	signature:(snd_pcm_status_t * *)
snd_pcm_status_sizeof	alsa/pcm.h	/^    extern size_t snd_pcm_status_sizeof(void);$/;"	p	signature:(void)
snd_pcm_status_t	alsa/pcm.h	/^    typedef struct sndrv_pcm_status snd_pcm_status_t;$/;"	t	typeref:struct:sndrv_pcm_status
snd_pcm_stream	alsa/pcm.h	/^    extern snd_pcm_stream_t snd_pcm_stream(snd_pcm_t *);$/;"	p	signature:(snd_pcm_t *)
snd_pcm_stream_name	alsa/pcm.h	/^    extern const char *snd_pcm_stream_name(snd_pcm_stream_t);$/;"	p	signature:(snd_pcm_stream_t)
snd_pcm_stream_t	alsa/pcm.h	/^    } snd_pcm_stream_t;$/;"	t	typeref:enum:_snd_pcm_stream
snd_pcm_subclass_t	alsa/pcm.h	/^    } snd_pcm_subclass_t;$/;"	t	typeref:enum:_snd_pcm_subclass
snd_pcm_subformat_mask_t	alsa/pcm.h	/^    typedef struct sndrv_mask snd_pcm_subformat_mask_t;$/;"	t	typeref:struct:sndrv_mask
snd_pcm_subformat_t	alsa/pcm.h	/^    } snd_pcm_subformat_t;$/;"	t	typeref:enum:_snd_pcm_subformat
snd_pcm_sw_params	alsa/pcm.h	/^    extern int snd_pcm_sw_params(snd_pcm_t *, snd_pcm_sw_params_t *);$/;"	p	signature:(snd_pcm_t *, snd_pcm_sw_params_t *)
snd_pcm_sw_params_copy	alsa/pcm.h	/^    extern void snd_pcm_sw_params_copy(snd_pcm_sw_params_t *,$/;"	p	signature:(snd_pcm_sw_params_t *, const snd_pcm_sw_params_t *)
snd_pcm_sw_params_current	alsa/pcm.h	/^    extern int snd_pcm_sw_params_current(snd_pcm_t *,$/;"	p	signature:(snd_pcm_t *, snd_pcm_sw_params_t *)
snd_pcm_sw_params_dump	alsa/pcm.h	/^    extern int snd_pcm_sw_params_dump(snd_pcm_sw_params_t *,$/;"	p	signature:(snd_pcm_sw_params_t *, snd_output_t *)
snd_pcm_sw_params_free	alsa/pcm.h	/^    extern void snd_pcm_sw_params_free(snd_pcm_sw_params_t *);$/;"	p	signature:(snd_pcm_sw_params_t *)
snd_pcm_sw_params_get_avail_min	alsa/pcm.h	/^    extern int snd_pcm_sw_params_get_avail_min(const snd_pcm_sw_params_t *,$/;"	p	signature:(const snd_pcm_sw_params_t *, snd_pcm_uframes_t *)
snd_pcm_sw_params_get_boundary	alsa/pcm.h	/^    extern int snd_pcm_sw_params_get_boundary(const snd_pcm_sw_params_t *,$/;"	p	signature:(const snd_pcm_sw_params_t *, snd_pcm_uframes_t *)
snd_pcm_sw_params_get_silence_size	alsa/pcm.h	/^    extern int snd_pcm_sw_params_get_silence_size(const snd_pcm_sw_params_t$/;"	p	signature:(const snd_pcm_sw_params_t *, snd_pcm_uframes_t *)
snd_pcm_sw_params_get_silence_threshold	alsa/pcm.h	/^    extern int snd_pcm_sw_params_get_silence_threshold(const$/;"	p	signature:(const snd_pcm_sw_params_t *, snd_pcm_uframes_t *)
snd_pcm_sw_params_get_start_threshold	alsa/pcm.h	/^    extern int snd_pcm_sw_params_get_start_threshold(const$/;"	p	signature:(const snd_pcm_sw_params_t *, snd_pcm_uframes_t *)
snd_pcm_sw_params_get_stop_threshold	alsa/pcm.h	/^    extern int snd_pcm_sw_params_get_stop_threshold(const$/;"	p	signature:(const snd_pcm_sw_params_t *, snd_pcm_uframes_t *)
snd_pcm_sw_params_get_tstamp_mode	alsa/pcm.h	/^    extern int snd_pcm_sw_params_get_tstamp_mode(const snd_pcm_sw_params_t$/;"	p	signature:(const snd_pcm_sw_params_t *, snd_pcm_tstamp_t *)
snd_pcm_sw_params_malloc	alsa/pcm.h	/^    extern int snd_pcm_sw_params_malloc(snd_pcm_sw_params_t * *);$/;"	p	signature:(snd_pcm_sw_params_t * *)
snd_pcm_sw_params_set_avail_min	alsa/pcm.h	/^    extern int snd_pcm_sw_params_set_avail_min(snd_pcm_t *,$/;"	p	signature:(snd_pcm_t *, snd_pcm_sw_params_t *, snd_pcm_uframes_t)
snd_pcm_sw_params_set_silence_size	alsa/pcm.h	/^    extern int snd_pcm_sw_params_set_silence_size(snd_pcm_t *,$/;"	p	signature:(snd_pcm_t *, snd_pcm_sw_params_t *, snd_pcm_uframes_t)
snd_pcm_sw_params_set_silence_threshold	alsa/pcm.h	/^    extern int snd_pcm_sw_params_set_silence_threshold(snd_pcm_t *,$/;"	p	signature:(snd_pcm_t *, snd_pcm_sw_params_t *, snd_pcm_uframes_t)
snd_pcm_sw_params_set_start_threshold	alsa/pcm.h	/^    extern int snd_pcm_sw_params_set_start_threshold(snd_pcm_t *,$/;"	p	signature:(snd_pcm_t *, snd_pcm_sw_params_t *, snd_pcm_uframes_t)
snd_pcm_sw_params_set_stop_threshold	alsa/pcm.h	/^    extern int snd_pcm_sw_params_set_stop_threshold(snd_pcm_t *,$/;"	p	signature:(snd_pcm_t *, snd_pcm_sw_params_t *, snd_pcm_uframes_t)
snd_pcm_sw_params_set_tstamp_mode	alsa/pcm.h	/^    extern int snd_pcm_sw_params_set_tstamp_mode(snd_pcm_t *,$/;"	p	signature:(snd_pcm_t *, snd_pcm_sw_params_t *, snd_pcm_tstamp_t)
snd_pcm_sw_params_set_xfer_align	alsa/pcm.h	/^    extern int snd_pcm_sw_params_set_xfer_align(snd_pcm_t *,$/;"	p	signature:(snd_pcm_t *, snd_pcm_sw_params_t *, snd_pcm_uframes_t)
snd_pcm_sw_params_sizeof	alsa/pcm.h	/^    extern size_t snd_pcm_sw_params_sizeof(void);$/;"	p	signature:(void)
snd_pcm_sw_params_t	alsa/pcm.h	/^    typedef struct sndrv_pcm_sw_params snd_pcm_sw_params_t;$/;"	t	typeref:struct:sndrv_pcm_sw_params
snd_pcm_sync_id_t	alsa/pcm.h	/^    typedef union _snd_pcm_sync_id snd_pcm_sync_id_t;$/;"	t	typeref:union:_snd_pcm_sync_id
snd_pcm_t	alsa/pcm.h	/^    typedef struct _snd_pcm snd_pcm_t;$/;"	t	typeref:struct:_snd_pcm
snd_pcm_tstamp_t	alsa/pcm.h	/^    } snd_pcm_tstamp_t;$/;"	t	typeref:enum:_snd_pcm_tstamp
snd_pcm_type	alsa/pcm.h	/^    extern snd_pcm_type_t snd_pcm_type(snd_pcm_t *);$/;"	p	signature:(snd_pcm_t *)
snd_pcm_type_name	alsa/pcm.h	/^    extern const char *snd_pcm_type_name(snd_pcm_type_t);$/;"	p	signature:(snd_pcm_type_t)
snd_pcm_type_t	alsa/pcm.h	/^    } snd_pcm_type_t;$/;"	t	typeref:enum:_snd_pcm_type
snd_pcm_uframes_t	alsa/pcm.h	/^    typedef long unsigned int snd_pcm_uframes_t;$/;"	t
snd_pcm_unlink	alsa/pcm.h	/^    extern int snd_pcm_unlink(snd_pcm_t *);$/;"	p	signature:(snd_pcm_t *)
snd_pcm_wait	alsa/pcm.h	/^    extern int snd_pcm_wait(snd_pcm_t *, int);$/;"	p	signature:(snd_pcm_t *, int)
snd_pcm_writei	alsa/pcm.h	/^    extern snd_pcm_sframes_t snd_pcm_writei(snd_pcm_t *, const void *,$/;"	p	signature:(snd_pcm_t *, const void *, snd_pcm_uframes_t)
snd_pcm_writen	alsa/pcm.h	/^    extern snd_pcm_sframes_t snd_pcm_writen(snd_pcm_t *, void **,$/;"	p	signature:(snd_pcm_t *, void **, snd_pcm_uframes_t)
snd_pcm_xrun_t	alsa/pcm.h	/^    } snd_pcm_xrun_t;$/;"	t	typeref:enum:_snd_pcm_xrun
snd_rawmidi_close	alsa/rawmidi.h	/^    extern int snd_rawmidi_close(snd_rawmidi_t *);$/;"	p	signature:(snd_rawmidi_t *)
snd_rawmidi_drain	alsa/rawmidi.h	/^    extern int snd_rawmidi_drain(snd_rawmidi_t *);$/;"	p	signature:(snd_rawmidi_t *)
snd_rawmidi_drop	alsa/rawmidi.h	/^    extern int snd_rawmidi_drop(snd_rawmidi_t *);$/;"	p	signature:(snd_rawmidi_t *)
snd_rawmidi_info_free	alsa/rawmidi.h	/^    extern void snd_rawmidi_info_free(snd_rawmidi_info_t *);$/;"	p	signature:(snd_rawmidi_info_t *)
snd_rawmidi_info_get_id	alsa/rawmidi.h	/^    extern const char *snd_rawmidi_info_get_id(const snd_rawmidi_info_t *);$/;"	p	signature:(const snd_rawmidi_info_t *)
snd_rawmidi_info_get_name	alsa/rawmidi.h	/^    extern const char *snd_rawmidi_info_get_name(const snd_rawmidi_info_t$/;"	p	signature:(const snd_rawmidi_info_t *)
snd_rawmidi_info_get_subdevices_count	alsa/rawmidi.h	/^    extern unsigned int snd_rawmidi_info_get_subdevices_count(const$/;"	p	signature:(const snd_rawmidi_info_t *)
snd_rawmidi_info_malloc	alsa/rawmidi.h	/^    extern int snd_rawmidi_info_malloc(snd_rawmidi_info_t * *);$/;"	p	signature:(snd_rawmidi_info_t * *)
snd_rawmidi_info_set_device	alsa/rawmidi.h	/^    extern void snd_rawmidi_info_set_device(snd_rawmidi_info_t *,$/;"	p	signature:(snd_rawmidi_info_t *, unsigned int)
snd_rawmidi_info_set_stream	alsa/rawmidi.h	/^    extern void snd_rawmidi_info_set_stream(snd_rawmidi_info_t *,$/;"	p	signature:(snd_rawmidi_info_t *, snd_rawmidi_stream_t)
snd_rawmidi_info_set_subdevice	alsa/rawmidi.h	/^    extern void snd_rawmidi_info_set_subdevice(snd_rawmidi_info_t *,$/;"	p	signature:(snd_rawmidi_info_t *, unsigned int)
snd_rawmidi_info_t	alsa/rawmidi.h	/^    typedef struct sndrv_rawmidi_info snd_rawmidi_info_t;$/;"	t	typeref:struct:sndrv_rawmidi_info
snd_rawmidi_nonblock	alsa/rawmidi.h	/^    extern int snd_rawmidi_nonblock(snd_rawmidi_t *, int);$/;"	p	signature:(snd_rawmidi_t *, int)
snd_rawmidi_open	alsa/rawmidi.h	/^    extern int snd_rawmidi_open(snd_rawmidi_t * *, snd_rawmidi_t * *,$/;"	p	signature:(snd_rawmidi_t * *, snd_rawmidi_t * *, const char *, int)
snd_rawmidi_params_t	alsa/rawmidi.h	/^    typedef struct sndrv_rawmidi_params snd_rawmidi_params_t;$/;"	t	typeref:struct:sndrv_rawmidi_params
snd_rawmidi_poll_descriptors	alsa/rawmidi.h	/^    extern int snd_rawmidi_poll_descriptors(snd_rawmidi_t *,$/;"	p	signature:(snd_rawmidi_t *, struct pollfd *, unsigned int)
snd_rawmidi_poll_descriptors_count	alsa/rawmidi.h	/^    extern int snd_rawmidi_poll_descriptors_count(snd_rawmidi_t *);$/;"	p	signature:(snd_rawmidi_t *)
snd_rawmidi_poll_descriptors_revents	alsa/rawmidi.h	/^    extern int snd_rawmidi_poll_descriptors_revents(snd_rawmidi_t *,$/;"	p	signature:(snd_rawmidi_t *, struct pollfd *, unsigned int, short unsigned int *)
snd_rawmidi_read	alsa/rawmidi.h	/^    extern ssize_t snd_rawmidi_read(snd_rawmidi_t *, void *, size_t);$/;"	p	signature:(snd_rawmidi_t *, void *, size_t)
snd_rawmidi_status_t	alsa/rawmidi.h	/^    typedef struct sndrv_rawmidi_status snd_rawmidi_status_t;$/;"	t	typeref:struct:sndrv_rawmidi_status
snd_rawmidi_stream_t	alsa/rawmidi.h	/^    } snd_rawmidi_stream_t;$/;"	t	typeref:enum:_snd_rawmidi_stream
snd_rawmidi_t	alsa/rawmidi.h	/^    typedef struct _snd_rawmidi snd_rawmidi_t;$/;"	t	typeref:struct:_snd_rawmidi
snd_rawmidi_type_t	alsa/rawmidi.h	/^    } snd_rawmidi_type_t;$/;"	t	typeref:enum:_snd_rawmidi_type
snd_rawmidi_write	alsa/rawmidi.h	/^    extern ssize_t snd_rawmidi_write(snd_rawmidi_t *, const void *,$/;"	p	signature:(snd_rawmidi_t *, const void *, size_t)
snd_sctl_t	alsa/control.h	/^    typedef struct _snd_sctl snd_sctl_t;$/;"	t	typeref:struct:_snd_sctl
snd_seq_addr	alsa/seq_event.h	/^    struct snd_seq_addr {$/;"	s
snd_seq_addr::client	alsa/seq_event.h	/^	unsigned char client;$/;"	m	struct:snd_seq_addr	access:public
snd_seq_addr::port	alsa/seq_event.h	/^	unsigned char port;$/;"	m	struct:snd_seq_addr	access:public
snd_seq_addr_t	alsa/seq_event.h	/^    typedef struct snd_seq_addr snd_seq_addr_t;$/;"	t	typeref:struct:snd_seq_addr
snd_seq_alloc_named_queue	alsa/seq.h	/^    extern int snd_seq_alloc_named_queue(snd_seq_t *, const char *);$/;"	p	signature:(snd_seq_t *, const char *)
snd_seq_alloc_queue	alsa/seq.h	/^    extern int snd_seq_alloc_queue(snd_seq_t *);$/;"	p	signature:(snd_seq_t *)
snd_seq_client_id	alsa/seq.h	/^    extern int snd_seq_client_id(snd_seq_t *);$/;"	p	signature:(snd_seq_t *)
snd_seq_client_info_copy	alsa/seq.h	/^    extern void snd_seq_client_info_copy(snd_seq_client_info_t *,$/;"	p	signature:(snd_seq_client_info_t *, const snd_seq_client_info_t *)
snd_seq_client_info_free	alsa/seq.h	/^    extern void snd_seq_client_info_free(snd_seq_client_info_t *);$/;"	p	signature:(snd_seq_client_info_t *)
snd_seq_client_info_get_client	alsa/seq.h	/^    extern int snd_seq_client_info_get_client(const snd_seq_client_info_t$/;"	p	signature:(const snd_seq_client_info_t *)
snd_seq_client_info_get_name	alsa/seq.h	/^    extern const char *snd_seq_client_info_get_name(snd_seq_client_info_t$/;"	p	signature:(snd_seq_client_info_t *)
snd_seq_client_info_get_num_ports	alsa/seq.h	/^    extern int snd_seq_client_info_get_num_ports(const$/;"	p	signature:(const snd_seq_client_info_t *)
snd_seq_client_info_get_type	alsa/seq.h	/^    extern snd_seq_client_type_t snd_seq_client_info_get_type(const$/;"	p	signature:(const snd_seq_client_info_t *)
snd_seq_client_info_malloc	alsa/seq.h	/^    extern int snd_seq_client_info_malloc(snd_seq_client_info_t * *);$/;"	p	signature:(snd_seq_client_info_t * *)
snd_seq_client_info_set_client	alsa/seq.h	/^    extern void snd_seq_client_info_set_client(snd_seq_client_info_t *,$/;"	p	signature:(snd_seq_client_info_t *, int)
snd_seq_client_info_set_name	alsa/seq.h	/^    extern void snd_seq_client_info_set_name(snd_seq_client_info_t *,$/;"	p	signature:(snd_seq_client_info_t *, const char *)
snd_seq_client_info_sizeof	alsa/seq.h	/^    extern size_t snd_seq_client_info_sizeof(void);$/;"	p	signature:(void)
snd_seq_client_info_t	alsa/seq.h	/^    typedef struct sndrv_seq_client_info snd_seq_client_info_t;$/;"	t	typeref:struct:sndrv_seq_client_info
snd_seq_client_pool_t	alsa/seq.h	/^    typedef struct sndrv_seq_client_pool snd_seq_client_pool_t;$/;"	t	typeref:struct:sndrv_seq_client_pool
snd_seq_client_type	alsa/seq.h	/^    typedef enum snd_seq_client_type {$/;"	g
snd_seq_client_type_t	alsa/seq.h	/^    } snd_seq_client_type_t;$/;"	t	typeref:enum:snd_seq_client_type
snd_seq_close	alsa/seq.h	/^    extern int snd_seq_close(snd_seq_t *);$/;"	p	signature:(snd_seq_t *)
snd_seq_connect	alsa/seq_event.h	/^    struct snd_seq_connect {$/;"	s
snd_seq_connect::dest	alsa/seq_event.h	/^	snd_seq_addr_t dest;$/;"	m	struct:snd_seq_connect	access:public
snd_seq_connect::sender	alsa/seq_event.h	/^	snd_seq_addr_t sender;$/;"	m	struct:snd_seq_connect	access:public
snd_seq_connect_from	alsa/seqmid.h	/^    extern int snd_seq_connect_from(snd_seq_t *, int, int, int);$/;"	p	signature:(snd_seq_t *, int, int, int)
snd_seq_connect_t	alsa/seq_event.h	/^    typedef struct snd_seq_connect snd_seq_connect_t;$/;"	t	typeref:struct:snd_seq_connect
snd_seq_connect_to	alsa/seqmid.h	/^    extern int snd_seq_connect_to(snd_seq_t *, int, int, int);$/;"	p	signature:(snd_seq_t *, int, int, int)
snd_seq_control_queue	alsa/seqmid.h	/^    extern int snd_seq_control_queue(snd_seq_t *, int, int, int,$/;"	p	signature:(snd_seq_t *, int, int, int, snd_seq_event_t *)
snd_seq_create_port	alsa/seq.h	/^    extern int snd_seq_create_port(snd_seq_t *, snd_seq_port_info_t *);$/;"	p	signature:(snd_seq_t *, snd_seq_port_info_t *)
snd_seq_create_simple_port	alsa/seqmid.h	/^    extern int snd_seq_create_simple_port(snd_seq_t *, const char *,$/;"	p	signature:(snd_seq_t *, const char *, unsigned int, unsigned int)
snd_seq_delete_port	alsa/seq.h	/^    extern int snd_seq_delete_port(snd_seq_t *, int);$/;"	p	signature:(snd_seq_t *, int)
snd_seq_delete_simple_port	alsa/seqmid.h	/^    extern int snd_seq_delete_simple_port(snd_seq_t *, int);$/;"	p	signature:(snd_seq_t *, int)
snd_seq_disconnect_from	alsa/seqmid.h	/^    extern int snd_seq_disconnect_from(snd_seq_t *, int, int, int);$/;"	p	signature:(snd_seq_t *, int, int, int)
snd_seq_disconnect_to	alsa/seqmid.h	/^    extern int snd_seq_disconnect_to(snd_seq_t *, int, int, int);$/;"	p	signature:(snd_seq_t *, int, int, int)
snd_seq_drain_output	alsa/seq.h	/^    extern int snd_seq_drain_output(snd_seq_t *);$/;"	p	signature:(snd_seq_t *)
snd_seq_drop_output	alsa/seq.h	/^    extern int snd_seq_drop_output(snd_seq_t *);$/;"	p	signature:(snd_seq_t *)
snd_seq_drop_output_buffer	alsa/seq.h	/^    extern int snd_seq_drop_output_buffer(snd_seq_t *);$/;"	p	signature:(snd_seq_t *)
snd_seq_ev_clear	alsa/seqmid.h	44;"	d
snd_seq_ev_cluster	alsa/seq_event.h	/^    struct snd_seq_ev_cluster {$/;"	s
snd_seq_ev_cluster::cluster	alsa/seq_event.h	/^	snd_seq_instr_cluster_t cluster;$/;"	m	struct:snd_seq_ev_cluster	access:public
snd_seq_ev_cluster_t	alsa/seq_event.h	/^    typedef struct snd_seq_ev_cluster snd_seq_ev_cluster_t;$/;"	t	typeref:struct:snd_seq_ev_cluster
snd_seq_ev_ctrl	alsa/seq_event.h	/^    struct snd_seq_ev_ctrl {$/;"	s
snd_seq_ev_ctrl::channel	alsa/seq_event.h	/^	unsigned char channel;$/;"	m	struct:snd_seq_ev_ctrl	access:public
snd_seq_ev_ctrl::param	alsa/seq_event.h	/^	unsigned int param;$/;"	m	struct:snd_seq_ev_ctrl	access:public
snd_seq_ev_ctrl::unused	alsa/seq_event.h	/^	unsigned char unused[3];$/;"	m	struct:snd_seq_ev_ctrl	access:public
snd_seq_ev_ctrl::value	alsa/seq_event.h	/^	int value;$/;"	m	struct:snd_seq_ev_ctrl	access:public
snd_seq_ev_ctrl_t	alsa/seq_event.h	/^    typedef struct snd_seq_ev_ctrl snd_seq_ev_ctrl_t;$/;"	t	typeref:struct:snd_seq_ev_ctrl
snd_seq_ev_ext	alsa/seq_event.h	/^    struct snd_seq_ev_ext {$/;"	s
snd_seq_ev_ext::len	alsa/seq_event.h	/^	unsigned int len;$/;"	m	struct:snd_seq_ev_ext	access:public
snd_seq_ev_ext::ptr	alsa/seq_event.h	/^	void *ptr;$/;"	m	struct:snd_seq_ev_ext	access:public
snd_seq_ev_ext_t	alsa/seq_event.h	/^    typedef struct snd_seq_ev_ext snd_seq_ev_ext_t;$/;"	t	typeref:struct:snd_seq_ev_ext
snd_seq_ev_instr_begin	alsa/seq_event.h	/^    struct snd_seq_ev_instr_begin {$/;"	s
snd_seq_ev_instr_begin::timeout	alsa/seq_event.h	/^	int timeout;$/;"	m	struct:snd_seq_ev_instr_begin	access:public
snd_seq_ev_instr_begin_t	alsa/seq_event.h	/^    typedef struct snd_seq_ev_instr_begin snd_seq_ev_instr_begin_t;$/;"	t	typeref:struct:snd_seq_ev_instr_begin
snd_seq_ev_is_abstime	alsa/seq.h	36;"	d
snd_seq_ev_is_channel_type	alsa/seq.h	25;"	d
snd_seq_ev_is_control_type	alsa/seq.h	46;"	d
snd_seq_ev_is_direct	alsa/seq.h	69;"	d
snd_seq_ev_is_fixed	alsa/seq.h	30;"	d
snd_seq_ev_is_fixed_type	alsa/seq.h	48;"	d
snd_seq_ev_is_instr_type	alsa/seq.h	50;"	d
snd_seq_ev_is_message_type	alsa/seq.h	52;"	d
snd_seq_ev_is_note_type	alsa/seq.h	54;"	d
snd_seq_ev_is_prior	alsa/seq.h	17;"	d
snd_seq_ev_is_queue_type	alsa/seq.h	56;"	d
snd_seq_ev_is_real	alsa/seq.h	40;"	d
snd_seq_ev_is_reltime	alsa/seq.h	38;"	d
snd_seq_ev_is_reserved	alsa/seq.h	68;"	d
snd_seq_ev_is_result_type	alsa/seq.h	58;"	d
snd_seq_ev_is_sample_type	alsa/seq.h	60;"	d
snd_seq_ev_is_subscribe_type	alsa/seq.h	44;"	d
snd_seq_ev_is_tick	alsa/seq.h	42;"	d
snd_seq_ev_is_user_type	alsa/seq.h	62;"	d
snd_seq_ev_is_variable	alsa/seq.h	32;"	d
snd_seq_ev_is_variable_type	alsa/seq.h	64;"	d
snd_seq_ev_is_varusr	alsa/seq.h	34;"	d
snd_seq_ev_is_varusr_type	alsa/seq.h	66;"	d
snd_seq_ev_length_type	alsa/seq.h	19;"	d
snd_seq_ev_loop	alsa/seq_event.h	/^    struct snd_seq_ev_loop {$/;"	s
snd_seq_ev_loop::end	alsa/seq_event.h	/^	unsigned int end;$/;"	m	struct:snd_seq_ev_loop	access:public
snd_seq_ev_loop::start	alsa/seq_event.h	/^	unsigned int start;$/;"	m	struct:snd_seq_ev_loop	access:public
snd_seq_ev_loop_t	alsa/seq_event.h	/^    typedef struct snd_seq_ev_loop snd_seq_ev_loop_t;$/;"	t	typeref:struct:snd_seq_ev_loop
snd_seq_ev_note	alsa/seq_event.h	/^    struct snd_seq_ev_note {$/;"	s
snd_seq_ev_note::channel	alsa/seq_event.h	/^	unsigned char channel;$/;"	m	struct:snd_seq_ev_note	access:public
snd_seq_ev_note::duration	alsa/seq_event.h	/^	unsigned int duration;$/;"	m	struct:snd_seq_ev_note	access:public
snd_seq_ev_note::note	alsa/seq_event.h	/^	unsigned char note;$/;"	m	struct:snd_seq_ev_note	access:public
snd_seq_ev_note::off_velocity	alsa/seq_event.h	/^	unsigned char off_velocity;$/;"	m	struct:snd_seq_ev_note	access:public
snd_seq_ev_note::velocity	alsa/seq_event.h	/^	unsigned char velocity;$/;"	m	struct:snd_seq_ev_note	access:public
snd_seq_ev_note_t	alsa/seq_event.h	/^    typedef struct snd_seq_ev_note snd_seq_ev_note_t;$/;"	t	typeref:struct:snd_seq_ev_note
snd_seq_ev_queue_control	alsa/seq_event.h	/^    struct snd_seq_ev_queue_control {$/;"	s
snd_seq_ev_queue_control::__anon11::d32	alsa/seq_event.h	/^	    unsigned int d32[2];	\/* any data *\/$/;"	m	union:snd_seq_ev_queue_control::__anon11
snd_seq_ev_queue_control::__anon11::d8	alsa/seq_event.h	/^	    unsigned char d8[8];	\/* any data *\/$/;"	m	union:snd_seq_ev_queue_control::__anon11
snd_seq_ev_queue_control::__anon11::position	alsa/seq_event.h	/^	    unsigned int position;	\/* sync position *\/$/;"	m	union:snd_seq_ev_queue_control::__anon11
snd_seq_ev_queue_control::__anon11::skew	alsa/seq_event.h	/^	    snd_seq_queue_skew_t skew;	\/* queue skew *\/$/;"	m	union:snd_seq_ev_queue_control::__anon11
snd_seq_ev_queue_control::__anon11::time	alsa/seq_event.h	/^	    snd_seq_timestamp_t time;	\/* time *\/$/;"	m	union:snd_seq_ev_queue_control::__anon11
snd_seq_ev_queue_control::__anon11::value	alsa/seq_event.h	/^	    int value;		\/* affected value (e.g. tempo) *\/$/;"	m	union:snd_seq_ev_queue_control::__anon11
snd_seq_ev_queue_control::param	alsa/seq_event.h	/^	} param;$/;"	m	struct:snd_seq_ev_queue_control	typeref:union:snd_seq_ev_queue_control::__anon11	access:public
snd_seq_ev_queue_control::queue	alsa/seq_event.h	/^	unsigned char queue;$/;"	m	struct:snd_seq_ev_queue_control	access:public
snd_seq_ev_queue_control::unused	alsa/seq_event.h	/^	unsigned char unused[3];$/;"	m	struct:snd_seq_ev_queue_control	access:public
snd_seq_ev_queue_control_t	alsa/seq_event.h	/^    typedef struct snd_seq_ev_queue_control snd_seq_ev_queue_control_t;$/;"	t	typeref:struct:snd_seq_ev_queue_control
snd_seq_ev_raw32	alsa/seq_event.h	/^    struct snd_seq_ev_raw32 {$/;"	s
snd_seq_ev_raw32::d	alsa/seq_event.h	/^	unsigned int d[3];$/;"	m	struct:snd_seq_ev_raw32	access:public
snd_seq_ev_raw32_t	alsa/seq_event.h	/^    typedef struct snd_seq_ev_raw32 snd_seq_ev_raw32_t;$/;"	t	typeref:struct:snd_seq_ev_raw32
snd_seq_ev_raw8	alsa/seq_event.h	/^    struct snd_seq_ev_raw8 {$/;"	s
snd_seq_ev_raw8::d	alsa/seq_event.h	/^	unsigned char d[12];$/;"	m	struct:snd_seq_ev_raw8	access:public
snd_seq_ev_raw8_t	alsa/seq_event.h	/^    typedef struct snd_seq_ev_raw8 snd_seq_ev_raw8_t;$/;"	t	typeref:struct:snd_seq_ev_raw8
snd_seq_ev_sample	alsa/seq_event.h	/^    struct snd_seq_ev_sample {$/;"	s
snd_seq_ev_sample::bank	alsa/seq_event.h	/^	short unsigned int bank;$/;"	m	struct:snd_seq_ev_sample	access:public
snd_seq_ev_sample::prg	alsa/seq_event.h	/^	short unsigned int prg;$/;"	m	struct:snd_seq_ev_sample	access:public
snd_seq_ev_sample::std	alsa/seq_event.h	/^	unsigned int std;$/;"	m	struct:snd_seq_ev_sample	access:public
snd_seq_ev_sample_control	alsa/seq_event.h	/^    struct snd_seq_ev_sample_control {$/;"	s
snd_seq_ev_sample_control::__anon12::cluster	alsa/seq_event.h	/^	    snd_seq_ev_cluster_t cluster;	\/* cluster number *\/$/;"	m	union:snd_seq_ev_sample_control::__anon12
snd_seq_ev_sample_control::__anon12::frequency	alsa/seq_event.h	/^	    snd_seq_frequency_t frequency;	\/* frequency *\/$/;"	m	union:snd_seq_ev_sample_control::__anon12
snd_seq_ev_sample_control::__anon12::loop	alsa/seq_event.h	/^	    snd_seq_ev_loop_t loop;	\/* loop control *\/$/;"	m	union:snd_seq_ev_sample_control::__anon12
snd_seq_ev_sample_control::__anon12::position	alsa/seq_event.h	/^	    snd_seq_position_t position;	\/* position *\/$/;"	m	union:snd_seq_ev_sample_control::__anon12
snd_seq_ev_sample_control::__anon12::raw8	alsa/seq_event.h	/^	    unsigned char raw8[8];	\/* raw 8-bit *\/$/;"	m	union:snd_seq_ev_sample_control::__anon12
snd_seq_ev_sample_control::__anon12::sample	alsa/seq_event.h	/^	    snd_seq_ev_sample_t sample;	\/* sample number *\/$/;"	m	union:snd_seq_ev_sample_control::__anon12
snd_seq_ev_sample_control::__anon12::stop_mode	alsa/seq_event.h	/^	    snd_seq_stop_mode_t stop_mode;	\/* stop mode *\/$/;"	m	union:snd_seq_ev_sample_control::__anon12
snd_seq_ev_sample_control::__anon12::volume	alsa/seq_event.h	/^	    snd_seq_ev_volume_t volume;	\/* volume *\/$/;"	m	union:snd_seq_ev_sample_control::__anon12
snd_seq_ev_sample_control::channel	alsa/seq_event.h	/^	unsigned char channel;$/;"	m	struct:snd_seq_ev_sample_control	access:public
snd_seq_ev_sample_control::param	alsa/seq_event.h	/^	} param;$/;"	m	struct:snd_seq_ev_sample_control	typeref:union:snd_seq_ev_sample_control::__anon12	access:public
snd_seq_ev_sample_control::unused	alsa/seq_event.h	/^	unsigned char unused[3];$/;"	m	struct:snd_seq_ev_sample_control	access:public
snd_seq_ev_sample_control_t	alsa/seq_event.h	/^    typedef struct snd_seq_ev_sample_control snd_seq_ev_sample_control_t;$/;"	t	typeref:struct:snd_seq_ev_sample_control
snd_seq_ev_sample_t	alsa/seq_event.h	/^    typedef struct snd_seq_ev_sample snd_seq_ev_sample_t;$/;"	t	typeref:struct:snd_seq_ev_sample
snd_seq_ev_set_broadcast	alsa/seqmid.h	15;"	d
snd_seq_ev_set_chanpress	alsa/seqmid.h	24;"	d
snd_seq_ev_set_controller	alsa/seqmid.h	27;"	d
snd_seq_ev_set_dest	alsa/seqmid.h	13;"	d
snd_seq_ev_set_direct	alsa/seqmid.h	41;"	d
snd_seq_ev_set_fixed	alsa/seqmid.h	21;"	d
snd_seq_ev_set_keypress	alsa/seqmid.h	31;"	d
snd_seq_ev_set_pgmchange	alsa/seqmid.h	35;"	d
snd_seq_ev_set_pitchbend	alsa/seqmid.h	38;"	d
snd_seq_ev_set_source	alsa/seqmid.h	42;"	d
snd_seq_ev_set_subs	alsa/seqmid.h	18;"	d
snd_seq_ev_set_tag	alsa/seqmid.h	43;"	d
snd_seq_ev_timemode_type	alsa/seq.h	21;"	d
snd_seq_ev_timestamp_type	alsa/seq.h	23;"	d
snd_seq_ev_volume	alsa/seq_event.h	/^    struct snd_seq_ev_volume {$/;"	s
snd_seq_ev_volume::du	alsa/seq_event.h	/^	short int du;$/;"	m	struct:snd_seq_ev_volume	access:public
snd_seq_ev_volume::fr	alsa/seq_event.h	/^	short int fr;$/;"	m	struct:snd_seq_ev_volume	access:public
snd_seq_ev_volume::lr	alsa/seq_event.h	/^	short int lr;$/;"	m	struct:snd_seq_ev_volume	access:public
snd_seq_ev_volume::volume	alsa/seq_event.h	/^	short int volume;$/;"	m	struct:snd_seq_ev_volume	access:public
snd_seq_ev_volume_t	alsa/seq_event.h	/^    typedef struct snd_seq_ev_volume snd_seq_ev_volume_t;$/;"	t	typeref:struct:snd_seq_ev_volume
snd_seq_event	alsa/seq_event.h	/^    struct snd_seq_event {$/;"	s
snd_seq_event::__anon13::addr	alsa/seq_event.h	/^	    snd_seq_addr_t addr;	\/* address *\/$/;"	m	union:snd_seq_event::__anon13
snd_seq_event::__anon13::connect	alsa/seq_event.h	/^	    snd_seq_connect_t connect;	\/* connect information *\/$/;"	m	union:snd_seq_event::__anon13
snd_seq_event::__anon13::control	alsa/seq_event.h	/^	    snd_seq_ev_ctrl_t control;	\/* MIDI control information *\/$/;"	m	union:snd_seq_event::__anon13
snd_seq_event::__anon13::ext	alsa/seq_event.h	/^	    snd_seq_ev_ext_t ext;	\/* external data *\/$/;"	m	union:snd_seq_event::__anon13
snd_seq_event::__anon13::instr_begin	alsa/seq_event.h	/^	    snd_seq_ev_instr_begin_t instr_begin;	\/* instrument *\/$/;"	m	union:snd_seq_event::__anon13
snd_seq_event::__anon13::note	alsa/seq_event.h	/^	    snd_seq_ev_note_t note;	\/* note information *\/$/;"	m	union:snd_seq_event::__anon13
snd_seq_event::__anon13::queue	alsa/seq_event.h	/^	    snd_seq_ev_queue_control_t queue;	\/* queue control *\/$/;"	m	union:snd_seq_event::__anon13
snd_seq_event::__anon13::raw32	alsa/seq_event.h	/^	    snd_seq_ev_raw32_t raw32;	\/* raw32 data *\/$/;"	m	union:snd_seq_event::__anon13
snd_seq_event::__anon13::raw8	alsa/seq_event.h	/^	    snd_seq_ev_raw8_t raw8;	\/* raw8 data *\/$/;"	m	union:snd_seq_event::__anon13
snd_seq_event::__anon13::result	alsa/seq_event.h	/^	    snd_seq_result_t result;	\/* operation result code *\/$/;"	m	union:snd_seq_event::__anon13
snd_seq_event::__anon13::sample	alsa/seq_event.h	/^	    snd_seq_ev_sample_control_t sample;$/;"	m	union:snd_seq_event::__anon13
snd_seq_event::__anon13::time	alsa/seq_event.h	/^	    snd_seq_timestamp_t time;	\/* timestamp *\/$/;"	m	union:snd_seq_event::__anon13
snd_seq_event::data	alsa/seq_event.h	/^	} data;$/;"	m	struct:snd_seq_event	typeref:union:snd_seq_event::__anon13	access:public
snd_seq_event::dest	alsa/seq_event.h	/^	snd_seq_addr_t dest;$/;"	m	struct:snd_seq_event	access:public
snd_seq_event::flags	alsa/seq_event.h	/^	unsigned char flags;$/;"	m	struct:snd_seq_event	access:public
snd_seq_event::queue	alsa/seq_event.h	/^	unsigned char queue;$/;"	m	struct:snd_seq_event	access:public
snd_seq_event::source	alsa/seq_event.h	/^	snd_seq_addr_t source;$/;"	m	struct:snd_seq_event	access:public
snd_seq_event::tag	alsa/seq_event.h	/^	unsigned char tag;$/;"	m	struct:snd_seq_event	access:public
snd_seq_event::time	alsa/seq_event.h	/^	snd_seq_timestamp_t time;$/;"	m	struct:snd_seq_event	access:public
snd_seq_event::type	alsa/seq_event.h	/^	snd_seq_event_type_t type;$/;"	m	struct:snd_seq_event	access:public
snd_seq_event_input	alsa/seq.h	/^    extern int snd_seq_event_input(snd_seq_t *, snd_seq_event_t * *);$/;"	p	signature:(snd_seq_t *, snd_seq_event_t * *)
snd_seq_event_input_pending	alsa/seq.h	/^    extern int snd_seq_event_input_pending(snd_seq_t *, int);$/;"	p	signature:(snd_seq_t *, int)
snd_seq_event_length	alsa/seq.h	/^    extern ssize_t snd_seq_event_length(snd_seq_event_t *);$/;"	p	signature:(snd_seq_event_t *)
snd_seq_event_output	alsa/seq.h	/^    extern int snd_seq_event_output(snd_seq_t *, snd_seq_event_t *);$/;"	p	signature:(snd_seq_t *, snd_seq_event_t *)
snd_seq_event_output_direct	alsa/seq.h	/^    extern int snd_seq_event_output_direct(snd_seq_t *, snd_seq_event_t *);$/;"	p	signature:(snd_seq_t *, snd_seq_event_t *)
snd_seq_event_t	alsa/seq_event.h	/^    typedef struct snd_seq_event snd_seq_event_t;$/;"	t	typeref:struct:snd_seq_event
snd_seq_event_type_t	alsa/seq_event.h	/^    typedef unsigned char snd_seq_event_type_t;$/;"	t
snd_seq_free_event	alsa/seq.h	/^    extern int snd_seq_free_event(snd_seq_event_t *);$/;"	p	signature:(snd_seq_event_t *)
snd_seq_free_queue	alsa/seq.h	/^    extern int snd_seq_free_queue(snd_seq_t *, int);$/;"	p	signature:(snd_seq_t *, int)
snd_seq_frequency_t	alsa/seq_event.h	/^    typedef int snd_seq_frequency_t;$/;"	t
snd_seq_get_any_client_info	alsa/seq.h	/^    extern int snd_seq_get_any_client_info(snd_seq_t *, int,$/;"	p	signature:(snd_seq_t *, int, snd_seq_client_info_t *)
snd_seq_get_any_port_info	alsa/seq.h	/^    extern int snd_seq_get_any_port_info(snd_seq_t *, int, int,$/;"	p	signature:(snd_seq_t *, int, int, snd_seq_port_info_t *)
snd_seq_get_client_info	alsa/seq.h	/^    extern int snd_seq_get_client_info(snd_seq_t *,$/;"	p	signature:(snd_seq_t *, snd_seq_client_info_t *)
snd_seq_get_input_buffer_size	alsa/seq.h	/^    extern size_t snd_seq_get_input_buffer_size(snd_seq_t *);$/;"	p	signature:(snd_seq_t *)
snd_seq_get_output_buffer_size	alsa/seq.h	/^    extern size_t snd_seq_get_output_buffer_size(snd_seq_t *);$/;"	p	signature:(snd_seq_t *)
snd_seq_get_port_info	alsa/seq.h	/^    extern int snd_seq_get_port_info(snd_seq_t *, int,$/;"	p	signature:(snd_seq_t *, int, snd_seq_port_info_t *)
snd_seq_get_port_subscription	alsa/seq.h	/^    extern int snd_seq_get_port_subscription(snd_seq_t *,$/;"	p	signature:(snd_seq_t *, snd_seq_port_subscribe_t *)
snd_seq_get_queue_status	alsa/seq.h	/^    extern int snd_seq_get_queue_status(snd_seq_t *, int,$/;"	p	signature:(snd_seq_t *, int, snd_seq_queue_status_t *)
snd_seq_get_queue_tempo	alsa/seq.h	/^    extern int snd_seq_get_queue_tempo(snd_seq_t *, int,$/;"	p	signature:(snd_seq_t *, int, snd_seq_queue_tempo_t *)
snd_seq_instr	alsa/seq_event.h	/^    struct snd_seq_instr {$/;"	s
snd_seq_instr::bank	alsa/seq_event.h	/^	short unsigned int bank;$/;"	m	struct:snd_seq_instr	access:public
snd_seq_instr::cluster	alsa/seq_event.h	/^	snd_seq_instr_cluster_t cluster;$/;"	m	struct:snd_seq_instr	access:public
snd_seq_instr::prg	alsa/seq_event.h	/^	short unsigned int prg;$/;"	m	struct:snd_seq_instr	access:public
snd_seq_instr::std	alsa/seq_event.h	/^	unsigned int std;$/;"	m	struct:snd_seq_instr	access:public
snd_seq_instr_cluster_t	alsa/seq_event.h	/^    typedef unsigned int snd_seq_instr_cluster_t;$/;"	t
snd_seq_instr_t	alsa/seq_event.h	/^    typedef struct snd_seq_instr snd_seq_instr_t;$/;"	t	typeref:struct:snd_seq_instr
snd_seq_nonblock	alsa/seq.h	/^    extern int snd_seq_nonblock(snd_seq_t *, int);$/;"	p	signature:(snd_seq_t *, int)
snd_seq_open	alsa/seq.h	/^    extern int snd_seq_open(snd_seq_t * *, const char *, int, int);$/;"	p	signature:(snd_seq_t * *, const char *, int, int)
snd_seq_parse_address	alsa/seqmid.h	/^    extern int snd_seq_parse_address(snd_seq_t *, snd_seq_addr_t *,$/;"	p	signature:(snd_seq_t *, snd_seq_addr_t *, const char *)
snd_seq_poll_descriptors	alsa/seq.h	/^    extern int snd_seq_poll_descriptors(snd_seq_t *, struct pollfd *,$/;"	p	signature:(snd_seq_t *, struct pollfd *, unsigned int, short int)
snd_seq_poll_descriptors_count	alsa/seq.h	/^    extern int snd_seq_poll_descriptors_count(snd_seq_t *, short int);$/;"	p	signature:(snd_seq_t *, short int)
snd_seq_poll_descriptors_revents	alsa/seq.h	/^    extern int snd_seq_poll_descriptors_revents(snd_seq_t *,$/;"	p	signature:(snd_seq_t *, struct pollfd *, unsigned int, short unsigned int *)
snd_seq_port_info_copy	alsa/seq.h	/^    extern void snd_seq_port_info_copy(snd_seq_port_info_t *,$/;"	p	signature:(snd_seq_port_info_t *, const snd_seq_port_info_t *)
snd_seq_port_info_free	alsa/seq.h	/^    extern void snd_seq_port_info_free(snd_seq_port_info_t *);$/;"	p	signature:(snd_seq_port_info_t *)
snd_seq_port_info_get_addr	alsa/seq.h	/^    extern const snd_seq_addr_t *snd_seq_port_info_get_addr(const$/;"	p	signature:(const snd_seq_port_info_t *)
snd_seq_port_info_get_capability	alsa/seq.h	/^    extern unsigned int snd_seq_port_info_get_capability(const$/;"	p	signature:(const snd_seq_port_info_t *)
snd_seq_port_info_get_client	alsa/seq.h	/^    extern int snd_seq_port_info_get_client(const snd_seq_port_info_t *);$/;"	p	signature:(const snd_seq_port_info_t *)
snd_seq_port_info_get_name	alsa/seq.h	/^    extern const char *snd_seq_port_info_get_name(const snd_seq_port_info_t$/;"	p	signature:(const snd_seq_port_info_t *)
snd_seq_port_info_get_port	alsa/seq.h	/^    extern int snd_seq_port_info_get_port(const snd_seq_port_info_t *);$/;"	p	signature:(const snd_seq_port_info_t *)
snd_seq_port_info_get_type	alsa/seq.h	/^    extern unsigned int snd_seq_port_info_get_type(const$/;"	p	signature:(const snd_seq_port_info_t *)
snd_seq_port_info_malloc	alsa/seq.h	/^    extern int snd_seq_port_info_malloc(snd_seq_port_info_t * *);$/;"	p	signature:(snd_seq_port_info_t * *)
snd_seq_port_info_set_capability	alsa/seq.h	/^    extern void snd_seq_port_info_set_capability(snd_seq_port_info_t *,$/;"	p	signature:(snd_seq_port_info_t *, unsigned int)
snd_seq_port_info_set_client	alsa/seq.h	/^    extern void snd_seq_port_info_set_client(snd_seq_port_info_t *, int);$/;"	p	signature:(snd_seq_port_info_t *, int)
snd_seq_port_info_set_midi_channels	alsa/seq.h	/^    extern void snd_seq_port_info_set_midi_channels(snd_seq_port_info_t *,$/;"	p	signature:(snd_seq_port_info_t *, int)
snd_seq_port_info_set_name	alsa/seq.h	/^    extern void snd_seq_port_info_set_name(snd_seq_port_info_t *,$/;"	p	signature:(snd_seq_port_info_t *, const char *)
snd_seq_port_info_set_port	alsa/seq.h	/^    extern void snd_seq_port_info_set_port(snd_seq_port_info_t *, int);$/;"	p	signature:(snd_seq_port_info_t *, int)
snd_seq_port_info_set_port_specified	alsa/seq.h	/^    extern void snd_seq_port_info_set_port_specified(snd_seq_port_info_t *,$/;"	p	signature:(snd_seq_port_info_t *, int)
snd_seq_port_info_set_timestamp_queue	alsa/seq.h	/^    extern void snd_seq_port_info_set_timestamp_queue(snd_seq_port_info_t$/;"	p	signature:(snd_seq_port_info_t *, int)
snd_seq_port_info_set_timestamp_real	alsa/seq.h	/^    extern void snd_seq_port_info_set_timestamp_real(snd_seq_port_info_t *,$/;"	p	signature:(snd_seq_port_info_t *, int)
snd_seq_port_info_set_timestamping	alsa/seq.h	/^    extern void snd_seq_port_info_set_timestamping(snd_seq_port_info_t *,$/;"	p	signature:(snd_seq_port_info_t *, int)
snd_seq_port_info_set_type	alsa/seq.h	/^    extern void snd_seq_port_info_set_type(snd_seq_port_info_t *,$/;"	p	signature:(snd_seq_port_info_t *, unsigned int)
snd_seq_port_info_sizeof	alsa/seq.h	/^    extern size_t snd_seq_port_info_sizeof(void);$/;"	p	signature:(void)
snd_seq_port_info_t	alsa/seq.h	/^    typedef struct sndrv_seq_port_info snd_seq_port_info_t;$/;"	t	typeref:struct:sndrv_seq_port_info
snd_seq_port_subscribe_copy	alsa/seq.h	/^    extern void snd_seq_port_subscribe_copy(snd_seq_port_subscribe_t *,$/;"	p	signature:(snd_seq_port_subscribe_t *, const snd_seq_port_subscribe_t *)
snd_seq_port_subscribe_free	alsa/seq.h	/^    extern void snd_seq_port_subscribe_free(snd_seq_port_subscribe_t *);$/;"	p	signature:(snd_seq_port_subscribe_t *)
snd_seq_port_subscribe_get_dest	alsa/seq.h	/^    extern const snd_seq_addr_t *snd_seq_port_subscribe_get_dest(const$/;"	p	signature:(const snd_seq_port_subscribe_t *)
snd_seq_port_subscribe_get_exclusive	alsa/seq.h	/^    extern int snd_seq_port_subscribe_get_exclusive(const$/;"	p	signature:(const snd_seq_port_subscribe_t *)
snd_seq_port_subscribe_get_queue	alsa/seq.h	/^    extern int snd_seq_port_subscribe_get_queue(const$/;"	p	signature:(const snd_seq_port_subscribe_t *)
snd_seq_port_subscribe_get_sender	alsa/seq.h	/^    extern const snd_seq_addr_t *snd_seq_port_subscribe_get_sender(const$/;"	p	signature:(const snd_seq_port_subscribe_t *)
snd_seq_port_subscribe_get_time_real	alsa/seq.h	/^    extern int snd_seq_port_subscribe_get_time_real(const$/;"	p	signature:(const snd_seq_port_subscribe_t *)
snd_seq_port_subscribe_get_time_update	alsa/seq.h	/^    extern int snd_seq_port_subscribe_get_time_update(const$/;"	p	signature:(const snd_seq_port_subscribe_t *)
snd_seq_port_subscribe_malloc	alsa/seq.h	/^    extern int snd_seq_port_subscribe_malloc(snd_seq_port_subscribe_t * *);$/;"	p	signature:(snd_seq_port_subscribe_t * *)
snd_seq_port_subscribe_set_dest	alsa/seq.h	/^    extern void snd_seq_port_subscribe_set_dest(snd_seq_port_subscribe_t *,$/;"	p	signature:(snd_seq_port_subscribe_t *, const snd_seq_addr_t *)
snd_seq_port_subscribe_set_exclusive	alsa/seq.h	/^	snd_seq_port_subscribe_set_exclusive(snd_seq_port_subscribe_t *,$/;"	p	signature:(snd_seq_port_subscribe_t *, int)
snd_seq_port_subscribe_set_queue	alsa/seq.h	/^    extern void snd_seq_port_subscribe_set_queue(snd_seq_port_subscribe_t$/;"	p	signature:(snd_seq_port_subscribe_t *, int)
snd_seq_port_subscribe_set_sender	alsa/seq.h	/^    extern void snd_seq_port_subscribe_set_sender(snd_seq_port_subscribe_t$/;"	p	signature:(snd_seq_port_subscribe_t *, const snd_seq_addr_t *)
snd_seq_port_subscribe_set_time_real	alsa/seq.h	/^	snd_seq_port_subscribe_set_time_real(snd_seq_port_subscribe_t *,$/;"	p	signature:(snd_seq_port_subscribe_t *, int)
snd_seq_port_subscribe_set_time_update	alsa/seq.h	/^	snd_seq_port_subscribe_set_time_update(snd_seq_port_subscribe_t *,$/;"	p	signature:(snd_seq_port_subscribe_t *, int)
snd_seq_port_subscribe_sizeof	alsa/seq.h	/^    extern size_t snd_seq_port_subscribe_sizeof(void);$/;"	p	signature:(void)
snd_seq_port_subscribe_t	alsa/seq.h	/^    typedef struct sndrv_seq_port_subscribe snd_seq_port_subscribe_t;$/;"	t	typeref:struct:sndrv_seq_port_subscribe
snd_seq_position_t	alsa/seq_event.h	/^    typedef unsigned int snd_seq_position_t;$/;"	t
snd_seq_query_next_client	alsa/seq.h	/^    extern int snd_seq_query_next_client(snd_seq_t *,$/;"	p	signature:(snd_seq_t *, snd_seq_client_info_t *)
snd_seq_query_next_port	alsa/seq.h	/^    extern int snd_seq_query_next_port(snd_seq_t *, snd_seq_port_info_t *);$/;"	p	signature:(snd_seq_t *, snd_seq_port_info_t *)
snd_seq_query_port_subscribers	alsa/seq.h	/^    extern int snd_seq_query_port_subscribers(snd_seq_t *,$/;"	p	signature:(snd_seq_t *, snd_seq_query_subscribe_t *)
snd_seq_query_subs_type_t	alsa/seq.h	/^    } snd_seq_query_subs_type_t;$/;"	t	typeref:enum:__anon9
snd_seq_query_subscribe_copy	alsa/seq.h	/^    extern void snd_seq_query_subscribe_copy(snd_seq_query_subscribe_t *,$/;"	p	signature:(snd_seq_query_subscribe_t *, const snd_seq_query_subscribe_t *)
snd_seq_query_subscribe_free	alsa/seq.h	/^    extern void snd_seq_query_subscribe_free(snd_seq_query_subscribe_t *);$/;"	p	signature:(snd_seq_query_subscribe_t *)
snd_seq_query_subscribe_get_addr	alsa/seq.h	/^    extern const snd_seq_addr_t *snd_seq_query_subscribe_get_addr(const$/;"	p	signature:(const snd_seq_query_subscribe_t *)
snd_seq_query_subscribe_get_exclusive	alsa/seq.h	/^    extern int snd_seq_query_subscribe_get_exclusive(const$/;"	p	signature:(const snd_seq_query_subscribe_t *)
snd_seq_query_subscribe_get_index	alsa/seq.h	/^    extern int snd_seq_query_subscribe_get_index(const$/;"	p	signature:(const snd_seq_query_subscribe_t *)
snd_seq_query_subscribe_get_queue	alsa/seq.h	/^    extern int snd_seq_query_subscribe_get_queue(const$/;"	p	signature:(const snd_seq_query_subscribe_t *)
snd_seq_query_subscribe_get_root	alsa/seq.h	/^    extern const snd_seq_addr_t *snd_seq_query_subscribe_get_root(const$/;"	p	signature:(const snd_seq_query_subscribe_t *)
snd_seq_query_subscribe_get_time_real	alsa/seq.h	/^    extern int snd_seq_query_subscribe_get_time_real(const$/;"	p	signature:(const snd_seq_query_subscribe_t *)
snd_seq_query_subscribe_get_time_update	alsa/seq.h	/^    extern int snd_seq_query_subscribe_get_time_update(const$/;"	p	signature:(const snd_seq_query_subscribe_t *)
snd_seq_query_subscribe_malloc	alsa/seq.h	/^    extern int snd_seq_query_subscribe_malloc(snd_seq_query_subscribe_t *$/;"	p	signature:(snd_seq_query_subscribe_t * *)
snd_seq_query_subscribe_set_index	alsa/seq.h	/^    extern void snd_seq_query_subscribe_set_index(snd_seq_query_subscribe_t$/;"	p	signature:(snd_seq_query_subscribe_t *, int)
snd_seq_query_subscribe_set_root	alsa/seq.h	/^    extern void snd_seq_query_subscribe_set_root(snd_seq_query_subscribe_t$/;"	p	signature:(snd_seq_query_subscribe_t *, const snd_seq_addr_t *)
snd_seq_query_subscribe_set_type	alsa/seq.h	/^    extern void snd_seq_query_subscribe_set_type(snd_seq_query_subscribe_t$/;"	p	signature:(snd_seq_query_subscribe_t *, snd_seq_query_subs_type_t)
snd_seq_query_subscribe_sizeof	alsa/seq.h	/^    extern size_t snd_seq_query_subscribe_sizeof(void);$/;"	p	signature:(void)
snd_seq_query_subscribe_t	alsa/seq.h	/^    typedef struct sndrv_seq_query_subs snd_seq_query_subscribe_t;$/;"	t	typeref:struct:sndrv_seq_query_subs
snd_seq_queue_info_t	alsa/seq.h	/^    typedef struct sndrv_seq_queue_info snd_seq_queue_info_t;$/;"	t	typeref:struct:sndrv_seq_queue_info
snd_seq_queue_skew	alsa/seq_event.h	/^    struct snd_seq_queue_skew {$/;"	s
snd_seq_queue_skew::base	alsa/seq_event.h	/^	unsigned int base;$/;"	m	struct:snd_seq_queue_skew	access:public
snd_seq_queue_skew::value	alsa/seq_event.h	/^	unsigned int value;$/;"	m	struct:snd_seq_queue_skew	access:public
snd_seq_queue_skew_t	alsa/seq_event.h	/^    typedef struct snd_seq_queue_skew snd_seq_queue_skew_t;$/;"	t	typeref:struct:snd_seq_queue_skew
snd_seq_queue_status_copy	alsa/seq.h	/^    extern void snd_seq_queue_status_copy(snd_seq_queue_status_t *,$/;"	p	signature:(snd_seq_queue_status_t *, const snd_seq_queue_status_t *)
snd_seq_queue_status_free	alsa/seq.h	/^    extern void snd_seq_queue_status_free(snd_seq_queue_status_t *);$/;"	p	signature:(snd_seq_queue_status_t *)
snd_seq_queue_status_get_real_time	alsa/seq.h	/^	*snd_seq_queue_status_get_real_time(const snd_seq_queue_status_t$/;"	p	signature:(const snd_seq_queue_status_t *)
snd_seq_queue_status_get_tick_time	alsa/seq.h	/^    extern snd_seq_tick_time_t snd_seq_queue_status_get_tick_time(const$/;"	p	signature:(const snd_seq_queue_status_t *)
snd_seq_queue_status_malloc	alsa/seq.h	/^    extern int snd_seq_queue_status_malloc(snd_seq_queue_status_t * *);$/;"	p	signature:(snd_seq_queue_status_t * *)
snd_seq_queue_status_sizeof	alsa/seq.h	/^    extern size_t snd_seq_queue_status_sizeof(void);$/;"	p	signature:(void)
snd_seq_queue_status_t	alsa/seq.h	/^    typedef struct sndrv_seq_queue_status snd_seq_queue_status_t;$/;"	t	typeref:struct:sndrv_seq_queue_status
snd_seq_queue_tempo_copy	alsa/seq.h	/^    extern void snd_seq_queue_tempo_copy(snd_seq_queue_tempo_t *,$/;"	p	signature:(snd_seq_queue_tempo_t *, const snd_seq_queue_tempo_t *)
snd_seq_queue_tempo_free	alsa/seq.h	/^    extern void snd_seq_queue_tempo_free(snd_seq_queue_tempo_t *);$/;"	p	signature:(snd_seq_queue_tempo_t *)
snd_seq_queue_tempo_get_ppq	alsa/seq.h	/^    extern int snd_seq_queue_tempo_get_ppq(const snd_seq_queue_tempo_t *);$/;"	p	signature:(const snd_seq_queue_tempo_t *)
snd_seq_queue_tempo_get_tempo	alsa/seq.h	/^    extern unsigned int snd_seq_queue_tempo_get_tempo(const$/;"	p	signature:(const snd_seq_queue_tempo_t *)
snd_seq_queue_tempo_malloc	alsa/seq.h	/^    extern int snd_seq_queue_tempo_malloc(snd_seq_queue_tempo_t * *);$/;"	p	signature:(snd_seq_queue_tempo_t * *)
snd_seq_queue_tempo_set_ppq	alsa/seq.h	/^    extern void snd_seq_queue_tempo_set_ppq(snd_seq_queue_tempo_t *, int);$/;"	p	signature:(snd_seq_queue_tempo_t *, int)
snd_seq_queue_tempo_set_tempo	alsa/seq.h	/^    extern void snd_seq_queue_tempo_set_tempo(snd_seq_queue_tempo_t *,$/;"	p	signature:(snd_seq_queue_tempo_t *, unsigned int)
snd_seq_queue_tempo_sizeof	alsa/seq.h	/^    extern size_t snd_seq_queue_tempo_sizeof(void);$/;"	p	signature:(void)
snd_seq_queue_tempo_t	alsa/seq.h	/^    typedef struct sndrv_seq_queue_tempo snd_seq_queue_tempo_t;$/;"	t	typeref:struct:sndrv_seq_queue_tempo
snd_seq_queue_timer_t	alsa/seq.h	/^    typedef struct sndrv_seq_queue_timer snd_seq_queue_timer_t;$/;"	t	typeref:struct:sndrv_seq_queue_timer
snd_seq_queue_timer_type_t	alsa/seq.h	/^    } snd_seq_queue_timer_type_t;$/;"	t	typeref:enum:__anon10
snd_seq_real_time	alsa/seq_event.h	/^    struct snd_seq_real_time {$/;"	s
snd_seq_real_time::tv_nsec	alsa/seq_event.h	/^	unsigned int tv_nsec;$/;"	m	struct:snd_seq_real_time	access:public
snd_seq_real_time::tv_sec	alsa/seq_event.h	/^	unsigned int tv_sec;$/;"	m	struct:snd_seq_real_time	access:public
snd_seq_real_time_t	alsa/seq_event.h	/^    typedef struct snd_seq_real_time snd_seq_real_time_t;$/;"	t	typeref:struct:snd_seq_real_time
snd_seq_remove_events_t	alsa/seq.h	/^    typedef struct sndrv_seq_remove_events snd_seq_remove_events_t;$/;"	t	typeref:struct:sndrv_seq_remove_events
snd_seq_result	alsa/seq_event.h	/^    struct snd_seq_result {$/;"	s
snd_seq_result::event	alsa/seq_event.h	/^	int event;$/;"	m	struct:snd_seq_result	access:public
snd_seq_result::result	alsa/seq_event.h	/^	int result;$/;"	m	struct:snd_seq_result	access:public
snd_seq_result_t	alsa/seq_event.h	/^    typedef struct snd_seq_result snd_seq_result_t;$/;"	t	typeref:struct:snd_seq_result
snd_seq_set_client_info	alsa/seq.h	/^    extern int snd_seq_set_client_info(snd_seq_t *,$/;"	p	signature:(snd_seq_t *, snd_seq_client_info_t *)
snd_seq_set_client_name	alsa/seqmid.h	/^    extern int snd_seq_set_client_name(snd_seq_t *, const char *);$/;"	p	signature:(snd_seq_t *, const char *)
snd_seq_set_input_buffer_size	alsa/seq.h	/^    extern int snd_seq_set_input_buffer_size(snd_seq_t *, size_t);$/;"	p	signature:(snd_seq_t *, size_t)
snd_seq_set_output_buffer_size	alsa/seq.h	/^    extern int snd_seq_set_output_buffer_size(snd_seq_t *, size_t);$/;"	p	signature:(snd_seq_t *, size_t)
snd_seq_set_port_info	alsa/seq.h	/^    extern int snd_seq_set_port_info(snd_seq_t *, int,$/;"	p	signature:(snd_seq_t *, int, snd_seq_port_info_t *)
snd_seq_set_queue_tempo	alsa/seq.h	/^    extern int snd_seq_set_queue_tempo(snd_seq_t *, int,$/;"	p	signature:(snd_seq_t *, int, snd_seq_queue_tempo_t *)
snd_seq_stop_mode	alsa/seq_event.h	/^    typedef enum snd_seq_stop_mode {$/;"	g
snd_seq_stop_mode_t	alsa/seq_event.h	/^    } snd_seq_stop_mode_t;$/;"	t	typeref:enum:snd_seq_stop_mode
snd_seq_subscribe_port	alsa/seq.h	/^    extern int snd_seq_subscribe_port(snd_seq_t *,$/;"	p	signature:(snd_seq_t *, snd_seq_port_subscribe_t *)
snd_seq_sync_output_queue	alsa/seqmid.h	/^    extern int snd_seq_sync_output_queue(snd_seq_t *);$/;"	p	signature:(snd_seq_t *)
snd_seq_system_info	alsa/seq.h	/^    extern int snd_seq_system_info(snd_seq_t *, snd_seq_system_info_t *);$/;"	p	signature:(snd_seq_t *, snd_seq_system_info_t *)
snd_seq_system_info_copy	alsa/seq.h	/^    extern void snd_seq_system_info_copy(snd_seq_system_info_t *,$/;"	p	signature:(snd_seq_system_info_t *, const snd_seq_system_info_t *)
snd_seq_system_info_free	alsa/seq.h	/^    extern void snd_seq_system_info_free(snd_seq_system_info_t *);$/;"	p	signature:(snd_seq_system_info_t *)
snd_seq_system_info_get_clients	alsa/seq.h	/^    extern int snd_seq_system_info_get_clients(const snd_seq_system_info_t$/;"	p	signature:(const snd_seq_system_info_t *)
snd_seq_system_info_get_ports	alsa/seq.h	/^    extern int snd_seq_system_info_get_ports(const snd_seq_system_info_t$/;"	p	signature:(const snd_seq_system_info_t *)
snd_seq_system_info_get_queues	alsa/seq.h	/^    extern int snd_seq_system_info_get_queues(const snd_seq_system_info_t$/;"	p	signature:(const snd_seq_system_info_t *)
snd_seq_system_info_malloc	alsa/seq.h	/^    extern int snd_seq_system_info_malloc(snd_seq_system_info_t * *);$/;"	p	signature:(snd_seq_system_info_t * *)
snd_seq_system_info_sizeof	alsa/seq.h	/^    extern size_t snd_seq_system_info_sizeof(void);$/;"	p	signature:(void)
snd_seq_system_info_t	alsa/seq.h	/^    typedef struct sndrv_seq_system_info snd_seq_system_info_t;$/;"	t	typeref:struct:sndrv_seq_system_info
snd_seq_t	alsa/seq.h	/^    typedef struct _snd_seq snd_seq_t;$/;"	t	typeref:struct:_snd_seq
snd_seq_tick_time_t	alsa/seq_event.h	/^    typedef unsigned int snd_seq_tick_time_t;$/;"	t
snd_seq_timestamp	alsa/seq_event.h	/^    union snd_seq_timestamp {$/;"	u
snd_seq_timestamp::tick	alsa/seq_event.h	/^	snd_seq_tick_time_t tick;$/;"	m	union:snd_seq_timestamp
snd_seq_timestamp::time	alsa/seq_event.h	/^	struct snd_seq_real_time time;$/;"	m	union:snd_seq_timestamp	typeref:struct:snd_seq_timestamp::snd_seq_real_time
snd_seq_timestamp_t	alsa/seq_event.h	/^    typedef union snd_seq_timestamp snd_seq_timestamp_t;$/;"	t	typeref:union:snd_seq_timestamp
snd_seq_type_check	alsa/seq.h	28;"	d
snd_seq_type_t	alsa/seq.h	/^    } snd_seq_type_t;$/;"	t	typeref:enum:_snd_seq_type
snd_seq_unsubscribe_port	alsa/seq.h	/^    extern int snd_seq_unsubscribe_port(snd_seq_t *,$/;"	p	signature:(snd_seq_t *, snd_seq_port_subscribe_t *)
snd_spcm_duplex_type_t	alsa/pcm.h	/^    } snd_spcm_duplex_type_t;$/;"	t	typeref:enum:_snd_spcm_duplex_type
snd_spcm_latency_t	alsa/pcm.h	/^    } snd_spcm_latency_t;$/;"	t	typeref:enum:_snd_spcm_latency
snd_spcm_xrun_type_t	alsa/pcm.h	/^    } snd_spcm_xrun_type_t;$/;"	t	typeref:enum:_snd_spcm_xrun_type
snd_strerror	alsa/error.h	/^    extern const char *snd_strerror(int);$/;"	p	signature:(int)
snd_timer_close	alsa/timer.h	/^    extern int snd_timer_close(snd_timer_t *);$/;"	p	signature:(snd_timer_t *)
snd_timer_continue	alsa/timer.h	/^    extern int snd_timer_continue(snd_timer_t *);$/;"	p	signature:(snd_timer_t *)
snd_timer_ginfo_t	alsa/timer.h	/^    typedef struct sndrv_timer_ginfo snd_timer_ginfo_t;$/;"	t	typeref:struct:sndrv_timer_ginfo
snd_timer_gparams_t	alsa/timer.h	/^    typedef struct sndrv_timer_gparams snd_timer_gparams_t;$/;"	t	typeref:struct:sndrv_timer_gparams
snd_timer_gstatus_t	alsa/timer.h	/^    typedef struct sndrv_timer_gstatus snd_timer_gstatus_t;$/;"	t	typeref:struct:sndrv_timer_gstatus
snd_timer_id_copy	alsa/timer.h	/^    extern void snd_timer_id_copy(snd_timer_id_t *,$/;"	p	signature:(snd_timer_id_t *, const snd_timer_id_t *)
snd_timer_id_free	alsa/timer.h	/^    extern void snd_timer_id_free(snd_timer_id_t *);$/;"	p	signature:(snd_timer_id_t *)
snd_timer_id_get_card	alsa/timer.h	/^    extern int snd_timer_id_get_card(snd_timer_id_t *);$/;"	p	signature:(snd_timer_id_t *)
snd_timer_id_get_class	alsa/timer.h	/^    extern int snd_timer_id_get_class(snd_timer_id_t *);$/;"	p	signature:(snd_timer_id_t *)
snd_timer_id_get_device	alsa/timer.h	/^    extern int snd_timer_id_get_device(snd_timer_id_t *);$/;"	p	signature:(snd_timer_id_t *)
snd_timer_id_get_sclass	alsa/timer.h	/^    extern int snd_timer_id_get_sclass(snd_timer_id_t *);$/;"	p	signature:(snd_timer_id_t *)
snd_timer_id_get_subdevice	alsa/timer.h	/^    extern int snd_timer_id_get_subdevice(snd_timer_id_t *);$/;"	p	signature:(snd_timer_id_t *)
snd_timer_id_malloc	alsa/timer.h	/^    extern int snd_timer_id_malloc(snd_timer_id_t * *);$/;"	p	signature:(snd_timer_id_t * *)
snd_timer_id_set_card	alsa/timer.h	/^    extern void snd_timer_id_set_card(snd_timer_id_t *, int);$/;"	p	signature:(snd_timer_id_t *, int)
snd_timer_id_set_class	alsa/timer.h	/^    extern void snd_timer_id_set_class(snd_timer_id_t *, int);$/;"	p	signature:(snd_timer_id_t *, int)
snd_timer_id_set_device	alsa/timer.h	/^    extern void snd_timer_id_set_device(snd_timer_id_t *, int);$/;"	p	signature:(snd_timer_id_t *, int)
snd_timer_id_set_sclass	alsa/timer.h	/^    extern void snd_timer_id_set_sclass(snd_timer_id_t *, int);$/;"	p	signature:(snd_timer_id_t *, int)
snd_timer_id_set_subdevice	alsa/timer.h	/^    extern void snd_timer_id_set_subdevice(snd_timer_id_t *, int);$/;"	p	signature:(snd_timer_id_t *, int)
snd_timer_id_sizeof	alsa/timer.h	/^    extern size_t snd_timer_id_sizeof(void);$/;"	p	signature:(void)
snd_timer_id_t	alsa/timer.h	/^    typedef struct sndrv_timer_id snd_timer_id_t;$/;"	t	typeref:struct:sndrv_timer_id
snd_timer_info	alsa/timer.h	/^    extern int snd_timer_info(snd_timer_t *, snd_timer_info_t *);$/;"	p	signature:(snd_timer_t *, snd_timer_info_t *)
snd_timer_info_copy	alsa/timer.h	/^    extern void snd_timer_info_copy(snd_timer_info_t *,$/;"	p	signature:(snd_timer_info_t *, const snd_timer_info_t *)
snd_timer_info_free	alsa/timer.h	/^    extern void snd_timer_info_free(snd_timer_info_t *);$/;"	p	signature:(snd_timer_info_t *)
snd_timer_info_get_card	alsa/timer.h	/^    extern int snd_timer_info_get_card(snd_timer_info_t *);$/;"	p	signature:(snd_timer_info_t *)
snd_timer_info_get_id	alsa/timer.h	/^    extern const char *snd_timer_info_get_id(snd_timer_info_t *);$/;"	p	signature:(snd_timer_info_t *)
snd_timer_info_get_name	alsa/timer.h	/^    extern const char *snd_timer_info_get_name(snd_timer_info_t *);$/;"	p	signature:(snd_timer_info_t *)
snd_timer_info_get_resolution	alsa/timer.h	/^    extern long int snd_timer_info_get_resolution(snd_timer_info_t *);$/;"	p	signature:(snd_timer_info_t *)
snd_timer_info_malloc	alsa/timer.h	/^    extern int snd_timer_info_malloc(snd_timer_info_t * *);$/;"	p	signature:(snd_timer_info_t * *)
snd_timer_info_sizeof	alsa/timer.h	/^    extern size_t snd_timer_info_sizeof(void);$/;"	p	signature:(void)
snd_timer_info_t	alsa/timer.h	/^    typedef struct sndrv_timer_info snd_timer_info_t;$/;"	t	typeref:struct:sndrv_timer_info
snd_timer_open	alsa/timer.h	/^    extern int snd_timer_open(snd_timer_t * *, const char *, int);$/;"	p	signature:(snd_timer_t * *, const char *, int)
snd_timer_params	alsa/timer.h	/^    extern int snd_timer_params(snd_timer_t *, snd_timer_params_t *);$/;"	p	signature:(snd_timer_t *, snd_timer_params_t *)
snd_timer_params_get_ticks	alsa/timer.h	/^    extern long int snd_timer_params_get_ticks(snd_timer_params_t *);$/;"	p	signature:(snd_timer_params_t *)
snd_timer_params_malloc	alsa/timer.h	/^    extern int snd_timer_params_malloc(snd_timer_params_t * *);$/;"	p	signature:(snd_timer_params_t * *)
snd_timer_params_set_auto_start	alsa/timer.h	/^    extern int snd_timer_params_set_auto_start(snd_timer_params_t *, int);$/;"	p	signature:(snd_timer_params_t *, int)
snd_timer_params_set_ticks	alsa/timer.h	/^    extern void snd_timer_params_set_ticks(snd_timer_params_t *, long int);$/;"	p	signature:(snd_timer_params_t *, long int)
snd_timer_params_t	alsa/timer.h	/^    typedef struct sndrv_timer_params snd_timer_params_t;$/;"	t	typeref:struct:sndrv_timer_params
snd_timer_poll_descriptors	alsa/timer.h	/^    extern int snd_timer_poll_descriptors(snd_timer_t *, struct pollfd *,$/;"	p	signature:(snd_timer_t *, struct pollfd *, unsigned int)
snd_timer_poll_descriptors_count	alsa/timer.h	/^    extern int snd_timer_poll_descriptors_count(snd_timer_t *);$/;"	p	signature:(snd_timer_t *)
snd_timer_query_t	alsa/timer.h	/^    typedef struct _snd_timer_query snd_timer_query_t;$/;"	t	typeref:struct:_snd_timer_query
snd_timer_read	alsa/timer.h	/^    extern ssize_t snd_timer_read(snd_timer_t *, void *, size_t);$/;"	p	signature:(snd_timer_t *, void *, size_t)
snd_timer_start	alsa/timer.h	/^    extern int snd_timer_start(snd_timer_t *);$/;"	p	signature:(snd_timer_t *)
snd_timer_status	alsa/timer.h	/^    extern int snd_timer_status(snd_timer_t *, snd_timer_status_t *);$/;"	p	signature:(snd_timer_t *, snd_timer_status_t *)
snd_timer_status_t	alsa/timer.h	/^    typedef struct sndrv_timer_status snd_timer_status_t;$/;"	t	typeref:struct:sndrv_timer_status
snd_timer_stop	alsa/timer.h	/^    extern int snd_timer_stop(snd_timer_t *);$/;"	p	signature:(snd_timer_t *)
snd_timer_t	alsa/timer.h	/^    typedef struct _snd_timer snd_timer_t;$/;"	t	typeref:struct:_snd_timer
snd_timer_type_t	alsa/timer.h	/^    } snd_timer_type_t;$/;"	t	typeref:enum:_snd_timer_type
snd_timestamp_t	alsa/global.h	/^    typedef struct timeval snd_timestamp_t;$/;"	t	typeref:struct:timeval
snprintf	stdio.h	/^    extern int snprintf(char *, size_t, const char *, ...);$/;"	p	signature:(char *, size_t, const char *, ...)
sockaddr	sys/socket.h	/^    struct sockaddr {$/;"	s
sockaddr::sa_data	sys/socket.h	/^	char sa_data[14];$/;"	m	struct:sockaddr	access:public
sockaddr::sa_family	sys/socket.h	/^	sa_family_t sa_family;$/;"	m	struct:sockaddr	access:public
sockaddr_in	netinet/in.h	/^    struct sockaddr_in {$/;"	s
sockaddr_in6	netinet/in.h	/^    struct sockaddr_in6 {$/;"	s
sockaddr_in6::sin6_addr	netinet/in.h	/^	struct in6_addr sin6_addr;	\/* IPv6 address *\/$/;"	m	struct:sockaddr_in6	typeref:struct:sockaddr_in6::in6_addr	access:public
sockaddr_in6::sin6_family	netinet/in.h	/^	unsigned short sin6_family;	\/* AF_INET6 *\/$/;"	m	struct:sockaddr_in6	access:public
sockaddr_in6::sin6_flowinfo	netinet/in.h	/^	uint32_t sin6_flowinfo;	\/* IPv6 flow information *\/$/;"	m	struct:sockaddr_in6	access:public
sockaddr_in6::sin6_port	netinet/in.h	/^	uint16_t sin6_port;	\/* Transport layer port # *\/$/;"	m	struct:sockaddr_in6	access:public
sockaddr_in6::sin6_scope_id	netinet/in.h	/^	uint32_t sin6_scope_id;	\/* scope id (new in RFC2553) *\/$/;"	m	struct:sockaddr_in6	access:public
sockaddr_in::sin_addr	netinet/in.h	/^	struct in_addr sin_addr;$/;"	m	struct:sockaddr_in	typeref:struct:sockaddr_in::in_addr	access:public
sockaddr_in::sin_family	netinet/in.h	/^	sa_family_t sin_family;$/;"	m	struct:sockaddr_in	access:public
sockaddr_in::sin_port	netinet/in.h	/^	unsigned short sin_port;$/;"	m	struct:sockaddr_in	access:public
sockaddr_in::sin_zero	netinet/in.h	/^	unsigned char sin_zero[8];$/;"	m	struct:sockaddr_in	access:public
sockaddr_storage	sys/socket.h	/^    struct sockaddr_storage {$/;"	s
sockaddr_storage::__ss_align	sys/socket.h	/^	__ss_aligntype __ss_align;$/;"	m	struct:sockaddr_storage	access:public
sockaddr_storage::__ss_padding	sys/socket.h	/^	char __ss_padding[(128 - (2 * sizeof(__ss_aligntype)))];$/;"	m	struct:sockaddr_storage	access:public
sockaddr_storage::ss_family	sys/socket.h	/^	sa_family_t ss_family;$/;"	m	struct:sockaddr_storage	access:public
sockaddr_un	sys/un.h	/^    struct sockaddr_un {$/;"	s
sockaddr_un::sun_family	sys/un.h	/^	sa_family_t sun_family;	\/* AF_UNIX *\/$/;"	m	struct:sockaddr_un	access:public
sockaddr_un::sun_path	sys/un.h	/^	char sun_path[UNIX_PATH_MAX];$/;"	m	struct:sockaddr_un	access:public
sockatmark	sys/socket.h	/^    extern int sockatmark(int);$/;"	p	signature:(int)
socket	sys/socket.h	/^    extern int socket(int, int, int);$/;"	p	signature:(int, int, int)
socketpair	sys/socket.h	/^    extern int socketpair(int, int, int, int[2]);$/;"	p	signature:(int, int, int, int[2])
socklen_t	sys/socket.h	/^    typedef unsigned int socklen_t;$/;"	t
softe	signal.h	/^	unsigned long int softe;$/;"	m	struct:pt_regs	access:public
source	alsa/seq_event.h	/^	snd_seq_addr_t source;$/;"	m	struct:snd_seq_event	access:public
spec	cups/ppd.h	/^	char spec[41];$/;"	m	struct:__anon110	access:public
speed_t	termios.h	/^    typedef unsigned int speed_t;$/;"	t
sprintf	stdio.h	/^    extern int sprintf(char *, const char *, ...);$/;"	p	signature:(char *, const char *, ...)
sqrt	math.h	/^    extern double sqrt(double);$/;"	p	signature:(double)
sqrtf	math.h	/^    extern float sqrtf(float);$/;"	p	signature:(float)
sqrtl	math.h	/^    extern long double sqrtl(long double);$/;"	p	signature:(long double)
srand	stdlib.h	/^    extern void srand(unsigned int);$/;"	p	signature:(unsigned int)
srand48	stdlib.h	/^    extern void srand48(long int);$/;"	p	signature:(long int)
srandom	stdlib.h	/^    extern void srandom(unsigned int);$/;"	p	signature:(unsigned int)
sregs	signal.h	/^	_sigregs *sregs;$/;"	m	struct:sigcontext	access:public
ss	signal.h	/^	unsigned short ss;$/;"	m	struct:sigcontext	access:public
ss_family	sys/socket.h	/^	sa_family_t ss_family;$/;"	m	struct:sockaddr_storage	access:public
ss_flags	signal.h	/^	int ss_flags;$/;"	m	struct:sigaltstack	access:public
ss_size	signal.h	/^	size_t ss_size;$/;"	m	struct:sigaltstack	access:public
ss_sp	signal.h	/^	void *ss_sp;$/;"	m	struct:sigaltstack	access:public
sscanf	stdio.h	/^    extern int sscanf(const char *, const char *, ...);$/;"	p	signature:(const char *, const char *, ...)
ssize_t	sys/types.h	/^    typedef int32_t ssize_t;$/;"	t
ssize_t	sys/types.h	/^    typedef int64_t ssize_t;$/;"	t
st_atim	sys/stat.h	/^	struct timespec st_atim;	\/* Time of last access. *\/$/;"	m	struct:stat	typeref:struct:stat::timespec	access:public
st_atim	sys/stat.h	/^	struct timespec st_atim;	\/* Time of last access. *\/$/;"	m	struct:stat64	typeref:struct:stat64::timespec	access:public
st_atim	sys/stat.h	/^	struct timespec st_atim;$/;"	m	struct:stat	typeref:struct:stat::timespec	access:public
st_atim	sys/stat.h	/^	struct timespec st_atim;$/;"	m	struct:stat64	typeref:struct:stat64::timespec	access:public
st_atime	sys/stat.h	68;"	d
st_blksize	sys/stat.h	/^	blksize_t st_blksize;	\/* Optimal block size for I\/O. *\/$/;"	m	struct:stat	access:public
st_blksize	sys/stat.h	/^	blksize_t st_blksize;	\/* Optimal block size for I\/O. *\/$/;"	m	struct:stat64	access:public
st_blksize	sys/stat.h	/^	blksize_t st_blksize;$/;"	m	struct:stat	access:public
st_blksize	sys/stat.h	/^	blksize_t st_blksize;$/;"	m	struct:stat64	access:public
st_blocks	sys/stat.h	/^	blkcnt64_t st_blocks;	\/* Number 512-byte blocks allocated. *\/$/;"	m	struct:stat64	access:public
st_blocks	sys/stat.h	/^	blkcnt64_t st_blocks;$/;"	m	struct:stat64	access:public
st_blocks	sys/stat.h	/^	blkcnt_t st_blocks;	\/* Number 512-byte blocks allocated. *\/$/;"	m	struct:stat	access:public
st_blocks	sys/stat.h	/^	blkcnt_t st_blocks;$/;"	m	struct:stat	access:public
st_ctim	sys/stat.h	/^	struct timespec st_ctim;	\/* Time of last status change. *\/$/;"	m	struct:stat	typeref:struct:stat::timespec	access:public
st_ctim	sys/stat.h	/^	struct timespec st_ctim;	\/* Time of last status change. *\/$/;"	m	struct:stat64	typeref:struct:stat64::timespec	access:public
st_ctim	sys/stat.h	/^	struct timespec st_ctim;$/;"	m	struct:stat	typeref:struct:stat::timespec	access:public
st_ctim	sys/stat.h	/^	struct timespec st_ctim;$/;"	m	struct:stat64	typeref:struct:stat64::timespec	access:public
st_ctime	sys/stat.h	69;"	d
st_dev	sys/stat.h	/^	dev_t st_dev;		\/* Device. *\/$/;"	m	struct:stat	access:public
st_dev	sys/stat.h	/^	dev_t st_dev;		\/* Device. *\/$/;"	m	struct:stat64	access:public
st_dev	sys/stat.h	/^	dev_t st_dev;$/;"	m	struct:stat	access:public
st_dev	sys/stat.h	/^	dev_t st_dev;$/;"	m	struct:stat64	access:public
st_gid	sys/stat.h	/^	gid_t st_gid;		\/* Group ID of the file's group. *\/$/;"	m	struct:stat	access:public
st_gid	sys/stat.h	/^	gid_t st_gid;		\/* Group ID of the file's group. *\/$/;"	m	struct:stat64	access:public
st_gid	sys/stat.h	/^	gid_t st_gid;$/;"	m	struct:stat	access:public
st_gid	sys/stat.h	/^	gid_t st_gid;$/;"	m	struct:stat64	access:public
st_ino	sys/stat.h	/^	ino64_t st_ino;		\/* File serial number. *\/$/;"	m	struct:stat64	access:public
st_ino	sys/stat.h	/^	ino64_t st_ino;$/;"	m	struct:stat64	access:public
st_ino	sys/stat.h	/^	ino_t st_ino;		\/* File serial number. *\/$/;"	m	struct:stat	access:public
st_ino	sys/stat.h	/^	ino_t st_ino;$/;"	m	struct:stat	access:public
st_ino	sys/stat.h	/^	unsigned long int st_ino;$/;"	m	struct:stat	access:public
st_mode	sys/stat.h	/^	mode_t st_mode;		\/* File mode. *\/$/;"	m	struct:stat	access:public
st_mode	sys/stat.h	/^	mode_t st_mode;		\/* File mode. *\/$/;"	m	struct:stat64	access:public
st_mode	sys/stat.h	/^	mode_t st_mode;$/;"	m	struct:stat	access:public
st_mode	sys/stat.h	/^	mode_t st_mode;$/;"	m	struct:stat64	access:public
st_mtim	sys/stat.h	/^	struct timespec st_mtim;	\/* Time of last modification. *\/$/;"	m	struct:stat	typeref:struct:stat::timespec	access:public
st_mtim	sys/stat.h	/^	struct timespec st_mtim;	\/* Time of last modification. *\/$/;"	m	struct:stat64	typeref:struct:stat64::timespec	access:public
st_mtim	sys/stat.h	/^	struct timespec st_mtim;$/;"	m	struct:stat	typeref:struct:stat::timespec	access:public
st_mtim	sys/stat.h	/^	struct timespec st_mtim;$/;"	m	struct:stat64	typeref:struct:stat64::timespec	access:public
st_mtime	sys/stat.h	70;"	d
st_nlink	sys/stat.h	/^	nlink_t st_nlink;	\/* Link count. *\/$/;"	m	struct:stat	access:public
st_nlink	sys/stat.h	/^	nlink_t st_nlink;	\/* Link count. *\/$/;"	m	struct:stat64	access:public
st_nlink	sys/stat.h	/^	nlink_t st_nlink;$/;"	m	struct:stat	access:public
st_nlink	sys/stat.h	/^	nlink_t st_nlink;$/;"	m	struct:stat64	access:public
st_rdev	sys/stat.h	/^	dev_t st_rdev;		\/* Device number, if device. *\/$/;"	m	struct:stat	access:public
st_rdev	sys/stat.h	/^	dev_t st_rdev;		\/* Device number, if device. *\/$/;"	m	struct:stat64	access:public
st_rdev	sys/stat.h	/^	dev_t st_rdev;$/;"	m	struct:stat	access:public
st_rdev	sys/stat.h	/^	dev_t st_rdev;$/;"	m	struct:stat64	access:public
st_size	sys/stat.h	/^	off64_t st_size;	\/* Size of file, in bytes. *\/$/;"	m	struct:stat64	access:public
st_size	sys/stat.h	/^	off64_t st_size;$/;"	m	struct:stat64	access:public
st_size	sys/stat.h	/^	off_t st_size;		\/* Size of file, in bytes. *\/$/;"	m	struct:stat	access:public
st_size	sys/stat.h	/^	off_t st_size;$/;"	m	struct:stat	access:public
st_size	sys/stat.h	/^	off_t st_size;$/;"	m	struct:stat64	access:public
st_uid	sys/stat.h	/^	uid_t st_uid;		\/* User ID of the file's owner. *\/$/;"	m	struct:stat	access:public
st_uid	sys/stat.h	/^	uid_t st_uid;		\/* User ID of the file's owner. *\/$/;"	m	struct:stat64	access:public
st_uid	sys/stat.h	/^	uid_t st_uid;$/;"	m	struct:stat	access:public
st_uid	sys/stat.h	/^	uid_t st_uid;$/;"	m	struct:stat64	access:public
stack_t	signal.h	/^    typedef struct sigaltstack stack_t;$/;"	t	typeref:struct:sigaltstack
standend	curses.h	/^    extern int standend(void);$/;"	p	signature:(void)
standend	ncurses.h	/^    extern int standend(void);$/;"	p	signature:(void)
standout	curses.h	/^    extern int standout(void);$/;"	p	signature:(void)
standout	ncurses.h	/^    extern int standout(void);$/;"	p	signature:(void)
start	alsa/pcm.h	/^	void (*start) (void);$/;"	m	struct:_snd_pcm_scope_ops	access:public
start	alsa/seq_event.h	/^	unsigned int start;$/;"	m	struct:snd_seq_ev_loop	access:public
start	cups/ppd.h	/^	char *start;$/;"	m	struct:__anon102	access:public
start_color	curses.h	/^    extern int start_color(void);$/;"	p	signature:(void)
start_color	ncurses.h	/^    extern int start_color(void);$/;"	p	signature:(void)
stat	sys/stat.h	/^    extern int stat(const char *, struct stat *);$/;"	p	signature:(const char *, struct stat *)
stat	sys/stat.h	/^    struct stat {$/;"	s
stat64	sys/stat.h	/^    extern int stat64(const char *, struct stat64 *);$/;"	p	signature:(const char *, struct stat64 *)
stat64	sys/stat.h	/^    struct stat64 {$/;"	s
stat64::__pad1	sys/stat.h	/^	int __pad1;$/;"	m	struct:stat64	access:public
stat64::__pad1	sys/stat.h	/^	unsigned int __pad1;$/;"	m	struct:stat64	access:public
stat64::__pad2	sys/stat.h	/^	int __pad2;$/;"	m	struct:stat64	access:public
stat64::__pad2	sys/stat.h	/^	unsigned int __pad2;$/;"	m	struct:stat64	access:public
stat64::__pad2	sys/stat.h	/^	unsigned short __pad2;$/;"	m	struct:stat64	access:public
stat64::__st_ino	sys/stat.h	/^	ino_t __st_ino;$/;"	m	struct:stat64	access:public
stat64::__unused	sys/stat.h	/^	long int __unused[3];$/;"	m	struct:stat64	access:public
stat64::__unused	sys/stat.h	/^	unsigned long int __unused[3];$/;"	m	struct:stat64	access:public
stat64::__unused4	sys/stat.h	/^	unsigned long int __unused4;$/;"	m	struct:stat64	access:public
stat64::__unused5	sys/stat.h	/^	unsigned long int __unused5;$/;"	m	struct:stat64	access:public
stat64::__unused6	sys/stat.h	/^	unsigned long int __unused6;$/;"	m	struct:stat64	access:public
stat64::pad0	sys/stat.h	/^	int pad0;$/;"	m	struct:stat64	access:public
stat64::pad0	sys/stat.h	/^	unsigned int pad0;$/;"	m	struct:stat64	access:public
stat64::st_atim	sys/stat.h	/^	struct timespec st_atim;	\/* Time of last access. *\/$/;"	m	struct:stat64	typeref:struct:stat64::timespec	access:public
stat64::st_atim	sys/stat.h	/^	struct timespec st_atim;$/;"	m	struct:stat64	typeref:struct:stat64::timespec	access:public
stat64::st_blksize	sys/stat.h	/^	blksize_t st_blksize;	\/* Optimal block size for I\/O. *\/$/;"	m	struct:stat64	access:public
stat64::st_blksize	sys/stat.h	/^	blksize_t st_blksize;$/;"	m	struct:stat64	access:public
stat64::st_blocks	sys/stat.h	/^	blkcnt64_t st_blocks;	\/* Number 512-byte blocks allocated. *\/$/;"	m	struct:stat64	access:public
stat64::st_blocks	sys/stat.h	/^	blkcnt64_t st_blocks;$/;"	m	struct:stat64	access:public
stat64::st_ctim	sys/stat.h	/^	struct timespec st_ctim;	\/* Time of last status change. *\/$/;"	m	struct:stat64	typeref:struct:stat64::timespec	access:public
stat64::st_ctim	sys/stat.h	/^	struct timespec st_ctim;$/;"	m	struct:stat64	typeref:struct:stat64::timespec	access:public
stat64::st_dev	sys/stat.h	/^	dev_t st_dev;		\/* Device. *\/$/;"	m	struct:stat64	access:public
stat64::st_dev	sys/stat.h	/^	dev_t st_dev;$/;"	m	struct:stat64	access:public
stat64::st_gid	sys/stat.h	/^	gid_t st_gid;		\/* Group ID of the file's group. *\/$/;"	m	struct:stat64	access:public
stat64::st_gid	sys/stat.h	/^	gid_t st_gid;$/;"	m	struct:stat64	access:public
stat64::st_ino	sys/stat.h	/^	ino64_t st_ino;		\/* File serial number. *\/$/;"	m	struct:stat64	access:public
stat64::st_ino	sys/stat.h	/^	ino64_t st_ino;$/;"	m	struct:stat64	access:public
stat64::st_mode	sys/stat.h	/^	mode_t st_mode;		\/* File mode. *\/$/;"	m	struct:stat64	access:public
stat64::st_mode	sys/stat.h	/^	mode_t st_mode;$/;"	m	struct:stat64	access:public
stat64::st_mtim	sys/stat.h	/^	struct timespec st_mtim;	\/* Time of last modification. *\/$/;"	m	struct:stat64	typeref:struct:stat64::timespec	access:public
stat64::st_mtim	sys/stat.h	/^	struct timespec st_mtim;$/;"	m	struct:stat64	typeref:struct:stat64::timespec	access:public
stat64::st_nlink	sys/stat.h	/^	nlink_t st_nlink;	\/* Link count. *\/$/;"	m	struct:stat64	access:public
stat64::st_nlink	sys/stat.h	/^	nlink_t st_nlink;$/;"	m	struct:stat64	access:public
stat64::st_rdev	sys/stat.h	/^	dev_t st_rdev;		\/* Device number, if device. *\/$/;"	m	struct:stat64	access:public
stat64::st_rdev	sys/stat.h	/^	dev_t st_rdev;$/;"	m	struct:stat64	access:public
stat64::st_size	sys/stat.h	/^	off64_t st_size;	\/* Size of file, in bytes. *\/$/;"	m	struct:stat64	access:public
stat64::st_size	sys/stat.h	/^	off64_t st_size;$/;"	m	struct:stat64	access:public
stat64::st_size	sys/stat.h	/^	off_t st_size;$/;"	m	struct:stat64	access:public
stat64::st_uid	sys/stat.h	/^	uid_t st_uid;		\/* User ID of the file's owner. *\/$/;"	m	struct:stat64	access:public
stat64::st_uid	sys/stat.h	/^	uid_t st_uid;$/;"	m	struct:stat64	access:public
stat::__pad1	sys/stat.h	/^	unsigned int __pad1;$/;"	m	struct:stat	access:public
stat::__pad1	sys/stat.h	/^	unsigned short __pad1;$/;"	m	struct:stat	access:public
stat::__pad2	sys/stat.h	/^	int __pad2;$/;"	m	struct:stat	access:public
stat::__pad2	sys/stat.h	/^	unsigned int __pad2;$/;"	m	struct:stat	access:public
stat::__pad2	sys/stat.h	/^	unsigned short __pad2;$/;"	m	struct:stat	access:public
stat::__unused	sys/stat.h	/^	long int __unused[3];$/;"	m	struct:stat	access:public
stat::__unused	sys/stat.h	/^	unsigned long int __unused[3];$/;"	m	struct:stat	access:public
stat::__unused4	sys/stat.h	/^	unsigned long int __unused4;$/;"	m	struct:stat	access:public
stat::__unused5	sys/stat.h	/^	unsigned long int __unused5;$/;"	m	struct:stat	access:public
stat::__unused6	sys/stat.h	/^	unsigned long int __unused6;$/;"	m	struct:stat	access:public
stat::pad0	sys/stat.h	/^	int pad0;$/;"	m	struct:stat	access:public
stat::pad0	sys/stat.h	/^	unsigned int pad0;$/;"	m	struct:stat	access:public
stat::st_atim	sys/stat.h	/^	struct timespec st_atim;	\/* Time of last access. *\/$/;"	m	struct:stat	typeref:struct:stat::timespec	access:public
stat::st_atim	sys/stat.h	/^	struct timespec st_atim;$/;"	m	struct:stat	typeref:struct:stat::timespec	access:public
stat::st_blksize	sys/stat.h	/^	blksize_t st_blksize;	\/* Optimal block size for I\/O. *\/$/;"	m	struct:stat	access:public
stat::st_blksize	sys/stat.h	/^	blksize_t st_blksize;$/;"	m	struct:stat	access:public
stat::st_blocks	sys/stat.h	/^	blkcnt_t st_blocks;	\/* Number 512-byte blocks allocated. *\/$/;"	m	struct:stat	access:public
stat::st_blocks	sys/stat.h	/^	blkcnt_t st_blocks;$/;"	m	struct:stat	access:public
stat::st_ctim	sys/stat.h	/^	struct timespec st_ctim;	\/* Time of last status change. *\/$/;"	m	struct:stat	typeref:struct:stat::timespec	access:public
stat::st_ctim	sys/stat.h	/^	struct timespec st_ctim;$/;"	m	struct:stat	typeref:struct:stat::timespec	access:public
stat::st_dev	sys/stat.h	/^	dev_t st_dev;		\/* Device. *\/$/;"	m	struct:stat	access:public
stat::st_dev	sys/stat.h	/^	dev_t st_dev;$/;"	m	struct:stat	access:public
stat::st_gid	sys/stat.h	/^	gid_t st_gid;		\/* Group ID of the file's group. *\/$/;"	m	struct:stat	access:public
stat::st_gid	sys/stat.h	/^	gid_t st_gid;$/;"	m	struct:stat	access:public
stat::st_ino	sys/stat.h	/^	ino_t st_ino;		\/* File serial number. *\/$/;"	m	struct:stat	access:public
stat::st_ino	sys/stat.h	/^	ino_t st_ino;$/;"	m	struct:stat	access:public
stat::st_ino	sys/stat.h	/^	unsigned long int st_ino;$/;"	m	struct:stat	access:public
stat::st_mode	sys/stat.h	/^	mode_t st_mode;		\/* File mode. *\/$/;"	m	struct:stat	access:public
stat::st_mode	sys/stat.h	/^	mode_t st_mode;$/;"	m	struct:stat	access:public
stat::st_mtim	sys/stat.h	/^	struct timespec st_mtim;	\/* Time of last modification. *\/$/;"	m	struct:stat	typeref:struct:stat::timespec	access:public
stat::st_mtim	sys/stat.h	/^	struct timespec st_mtim;$/;"	m	struct:stat	typeref:struct:stat::timespec	access:public
stat::st_nlink	sys/stat.h	/^	nlink_t st_nlink;	\/* Link count. *\/$/;"	m	struct:stat	access:public
stat::st_nlink	sys/stat.h	/^	nlink_t st_nlink;$/;"	m	struct:stat	access:public
stat::st_rdev	sys/stat.h	/^	dev_t st_rdev;		\/* Device number, if device. *\/$/;"	m	struct:stat	access:public
stat::st_rdev	sys/stat.h	/^	dev_t st_rdev;$/;"	m	struct:stat	access:public
stat::st_size	sys/stat.h	/^	off_t st_size;		\/* Size of file, in bytes. *\/$/;"	m	struct:stat	access:public
stat::st_size	sys/stat.h	/^	off_t st_size;$/;"	m	struct:stat	access:public
stat::st_uid	sys/stat.h	/^	uid_t st_uid;		\/* User ID of the file's owner. *\/$/;"	m	struct:stat	access:public
stat::st_uid	sys/stat.h	/^	uid_t st_uid;$/;"	m	struct:stat	access:public
state	cups/cups.h	/^	http_state_t state;$/;"	m	struct:__anon100	access:public
state	cups/cups.h	/^	ipp_jstate_t state;$/;"	m	struct:__anon98	access:public
state	stdlib.h	/^	int32_t *state;		\/* Array of state values. *\/$/;"	m	struct:random_data	access:public
state	zlib.h	/^	struct internal_state *state;	\/* not visible by applications *\/$/;"	m	struct:z_stream_s	typeref:struct:z_stream_s::internal_state	access:public
statfs	sys/statfs.h	/^    extern int statfs(const char *, struct statfs *);$/;"	p	signature:(const char *, struct statfs *)
statfs	sys/statfs.h	/^    struct statfs {$/;"	s
statfs64	sys/statfs.h	/^    extern int statfs64(const char *, struct statfs64 *);$/;"	p	signature:(const char *, struct statfs64 *)
statfs64	sys/statfs.h	/^    struct statfs64 {$/;"	s
statfs64::f_bavail	sys/statfs.h	/^	fsblkcnt64_t f_bavail;	\/* free blocks avail to non-superuser *\/$/;"	m	struct:statfs64	access:public
statfs64::f_bfree	sys/statfs.h	/^	fsblkcnt64_t f_bfree;	\/* free blocks in fs *\/$/;"	m	struct:statfs64	access:public
statfs64::f_blocks	sys/statfs.h	/^	fsblkcnt64_t f_blocks;	\/* total data blocks in file system *\/$/;"	m	struct:statfs64	access:public
statfs64::f_bsize	sys/statfs.h	/^	int f_bsize;		\/* optimal transfer block size *\/$/;"	m	struct:statfs64	access:public
statfs64::f_bsize	sys/statfs.h	/^	long int f_bsize;	\/* optimal transfer block size *\/$/;"	m	struct:statfs64	access:public
statfs64::f_ffree	sys/statfs.h	/^	fsfilcnt64_t f_ffree;	\/* free file nodes in file system *\/$/;"	m	struct:statfs64	access:public
statfs64::f_files	sys/statfs.h	/^	fsfilcnt64_t f_files;	\/* total file nodes in file system *\/$/;"	m	struct:statfs64	access:public
statfs64::f_frsize	sys/statfs.h	/^	int f_frsize;		\/* fragment size *\/$/;"	m	struct:statfs64	access:public
statfs64::f_frsize	sys/statfs.h	/^	long int f_frsize;	\/* fragment size *\/$/;"	m	struct:statfs64	access:public
statfs64::f_fsid	sys/statfs.h	/^	fsid_t f_fsid;		\/* file system id *\/$/;"	m	struct:statfs64	access:public
statfs64::f_namelen	sys/statfs.h	/^	int f_namelen;		\/* maximum length of filenames *\/$/;"	m	struct:statfs64	access:public
statfs64::f_namelen	sys/statfs.h	/^	long int f_namelen;	\/* maximum length of filenames *\/$/;"	m	struct:statfs64	access:public
statfs64::f_spare	sys/statfs.h	/^	int f_spare[5];		\/* spare for later *\/$/;"	m	struct:statfs64	access:public
statfs64::f_spare	sys/statfs.h	/^	long int f_spare[5];	\/* spare for later *\/$/;"	m	struct:statfs64	access:public
statfs64::f_type	sys/statfs.h	/^	int f_type;		\/* type of filesystem *\/$/;"	m	struct:statfs64	access:public
statfs64::f_type	sys/statfs.h	/^	long int f_type;	\/* type of filesystem *\/$/;"	m	struct:statfs64	access:public
statfs::f_bavail	sys/statfs.h	/^	fsblkcnt_t f_bavail;	\/* free blocks avail to non-superuser *\/$/;"	m	struct:statfs	access:public
statfs::f_bfree	sys/statfs.h	/^	fsblkcnt_t f_bfree;	\/* free blocks in fs *\/$/;"	m	struct:statfs	access:public
statfs::f_blocks	sys/statfs.h	/^	fsblkcnt_t f_blocks;	\/* total data blocks in file system *\/$/;"	m	struct:statfs	access:public
statfs::f_bsize	sys/statfs.h	/^	int f_bsize;		\/* optimal transfer block size *\/$/;"	m	struct:statfs	access:public
statfs::f_bsize	sys/statfs.h	/^	long int f_bsize;	\/* optimal transfer block size *\/$/;"	m	struct:statfs	access:public
statfs::f_ffree	sys/statfs.h	/^	fsfilcnt_t f_ffree;	\/* free file nodes in file system *\/$/;"	m	struct:statfs	access:public
statfs::f_files	sys/statfs.h	/^	fsfilcnt_t f_files;	\/* total file nodes in file system *\/$/;"	m	struct:statfs	access:public
statfs::f_frsize	sys/statfs.h	/^	int f_frsize;		\/* fragment size *\/$/;"	m	struct:statfs	access:public
statfs::f_frsize	sys/statfs.h	/^	long int f_frsize;	\/* fragment size *\/$/;"	m	struct:statfs	access:public
statfs::f_fsid	sys/statfs.h	/^	fsid_t f_fsid;		\/* file system id *\/$/;"	m	struct:statfs	access:public
statfs::f_namelen	sys/statfs.h	/^	int f_namelen;		\/* maximum length of filenames *\/$/;"	m	struct:statfs	access:public
statfs::f_namelen	sys/statfs.h	/^	long int f_namelen;	\/* maximum length of filenames *\/$/;"	m	struct:statfs	access:public
statfs::f_spare	sys/statfs.h	/^	int f_spare[5];		\/* spare for later *\/$/;"	m	struct:statfs	access:public
statfs::f_spare	sys/statfs.h	/^	long int f_spare[5];	\/* spare for later *\/$/;"	m	struct:statfs	access:public
statfs::f_type	sys/statfs.h	/^	int f_type;		\/* type of filesystem *\/$/;"	m	struct:statfs	access:public
statfs::f_type	sys/statfs.h	/^	long int f_type;	\/* type of filesystem *\/$/;"	m	struct:statfs	access:public
status	alsa/control.h	/^	unsigned char status[24];$/;"	m	struct:snd_aes_iec958	access:public
status	cups/cups.h	/^	http_status_t status;$/;"	m	struct:__anon100	access:public
status	signal.h	/^	unsigned short status;$/;"	m	struct:_fpstate	access:public
status	ucontext.h	/^	unsigned long int status;$/;"	m	struct:_libc_fpstate	access:public
statvfs	sys/statvfs.h	/^    extern int statvfs(const char *, struct statvfs *);$/;"	p	signature:(const char *, struct statvfs *)
statvfs	sys/statvfs.h	/^    struct statvfs {$/;"	s
statvfs64	sys/statvfs.h	/^    extern int statvfs64(const char *, struct statvfs64 *);$/;"	p	signature:(const char *, struct statvfs64 *)
statvfs64	sys/statvfs.h	/^    struct statvfs64 {$/;"	s
statvfs64::__f_spare	sys/statvfs.h	/^	int __f_spare[6];$/;"	m	struct:statvfs64	access:public
statvfs64::__f_spare	sys/statvfs.h	/^	unsigned int __f_spare[6];$/;"	m	struct:statvfs64	access:public
statvfs64::__f_unused	sys/statvfs.h	/^	int __f_unused;$/;"	m	struct:statvfs64	access:public
statvfs64::f_bavail	sys/statvfs.h	/^	fsblkcnt64_t f_bavail;$/;"	m	struct:statvfs64	access:public
statvfs64::f_bfree	sys/statvfs.h	/^	fsblkcnt64_t f_bfree;$/;"	m	struct:statvfs64	access:public
statvfs64::f_blocks	sys/statvfs.h	/^	fsblkcnt64_t f_blocks;$/;"	m	struct:statvfs64	access:public
statvfs64::f_bsize	sys/statvfs.h	/^	unsigned long int f_bsize;$/;"	m	struct:statvfs64	access:public
statvfs64::f_favail	sys/statvfs.h	/^	fsfilcnt64_t f_favail;$/;"	m	struct:statvfs64	access:public
statvfs64::f_ffree	sys/statvfs.h	/^	fsfilcnt64_t f_ffree;$/;"	m	struct:statvfs64	access:public
statvfs64::f_files	sys/statvfs.h	/^	fsfilcnt64_t f_files;$/;"	m	struct:statvfs64	access:public
statvfs64::f_flag	sys/statvfs.h	/^	unsigned long int f_flag;$/;"	m	struct:statvfs64	access:public
statvfs64::f_frsize	sys/statvfs.h	/^	unsigned long int f_frsize;$/;"	m	struct:statvfs64	access:public
statvfs64::f_fsid	sys/statvfs.h	/^	unsigned long int f_fsid;$/;"	m	struct:statvfs64	access:public
statvfs64::f_namemax	sys/statvfs.h	/^	unsigned long int f_namemax;$/;"	m	struct:statvfs64	access:public
statvfs::__f_spare	sys/statvfs.h	/^	int __f_spare[6];$/;"	m	struct:statvfs	access:public
statvfs::__f_spare	sys/statvfs.h	/^	unsigned int __f_spare[6];$/;"	m	struct:statvfs	access:public
statvfs::__f_unused	sys/statvfs.h	/^	int __f_unused;$/;"	m	struct:statvfs	access:public
statvfs::f_bavail	sys/statvfs.h	/^	fsblkcnt64_t f_bavail;$/;"	m	struct:statvfs	access:public
statvfs::f_bavail	sys/statvfs.h	/^	fsblkcnt_t f_bavail;$/;"	m	struct:statvfs	access:public
statvfs::f_bfree	sys/statvfs.h	/^	fsblkcnt64_t f_bfree;$/;"	m	struct:statvfs	access:public
statvfs::f_bfree	sys/statvfs.h	/^	fsblkcnt_t f_bfree;$/;"	m	struct:statvfs	access:public
statvfs::f_blocks	sys/statvfs.h	/^	fsblkcnt64_t f_blocks;$/;"	m	struct:statvfs	access:public
statvfs::f_blocks	sys/statvfs.h	/^	fsblkcnt_t f_blocks;$/;"	m	struct:statvfs	access:public
statvfs::f_bsize	sys/statvfs.h	/^	unsigned long int f_bsize;$/;"	m	struct:statvfs	access:public
statvfs::f_favail	sys/statvfs.h	/^	fsfilcnt64_t f_favail;$/;"	m	struct:statvfs	access:public
statvfs::f_favail	sys/statvfs.h	/^	fsfilcnt_t f_favail;$/;"	m	struct:statvfs	access:public
statvfs::f_ffree	sys/statvfs.h	/^	fsfilcnt64_t f_ffree;$/;"	m	struct:statvfs	access:public
statvfs::f_ffree	sys/statvfs.h	/^	fsfilcnt_t f_ffree;$/;"	m	struct:statvfs	access:public
statvfs::f_files	sys/statvfs.h	/^	fsfilcnt64_t f_files;$/;"	m	struct:statvfs	access:public
statvfs::f_files	sys/statvfs.h	/^	fsfilcnt_t f_files;$/;"	m	struct:statvfs	access:public
statvfs::f_flag	sys/statvfs.h	/^	unsigned long int f_flag;$/;"	m	struct:statvfs	access:public
statvfs::f_frsize	sys/statvfs.h	/^	unsigned long int f_frsize;$/;"	m	struct:statvfs	access:public
statvfs::f_fsid	sys/statvfs.h	/^	unsigned long int f_fsid;$/;"	m	struct:statvfs	access:public
statvfs::f_namemax	sys/statvfs.h	/^	unsigned long int f_namemax;$/;"	m	struct:statvfs	access:public
std	alsa/seq_event.h	/^	unsigned int std;$/;"	m	struct:snd_seq_ev_sample	access:public
std	alsa/seq_event.h	/^	unsigned int std;$/;"	m	struct:snd_seq_instr	access:public
step	alsa/pcm.h	/^	unsigned int step;$/;"	m	struct:_snd_pcm_channel_area	access:public
stime	time.h	/^    extern int stime(const time_t *);$/;"	p	signature:(const time_t *)
stop	alsa/pcm.h	/^	void (*stop) (void);$/;"	m	struct:_snd_pcm_scope_ops	access:public
stop	cups/ppd.h	/^	char *stop;$/;"	m	struct:__anon102	access:public
stop_mode	alsa/seq_event.h	/^	    snd_seq_stop_mode_t stop_mode;	\/* stop mode *\/$/;"	m	union:snd_seq_ev_sample_control::__anon12
stpcpy	string.h	/^    extern char *stpcpy(char *, const char *);$/;"	p	signature:(char *, const char *)
stpncpy	string.h	/^    extern char *stpncpy(char *, const char *, size_t);$/;"	p	signature:(char *, const char *, size_t)
strcasecmp	strings.h	/^    extern int strcasecmp(const char *, const char *);$/;"	p	signature:(const char *, const char *)
strcasestr	string.h	/^    extern char *strcasestr(const char *, const char *);$/;"	p	signature:(const char *, const char *)
strcat	string.h	/^    extern char *strcat(char *, const char *);$/;"	p	signature:(char *, const char *)
strchr	string.h	/^    extern char *strchr(const char *, int);$/;"	p	signature:(const char *, int)
strcmp	string.h	/^    extern int strcmp(const char *, const char *);$/;"	p	signature:(const char *, const char *)
strcoll	string.h	/^    extern int strcoll(const char *, const char *);$/;"	p	signature:(const char *, const char *)
strcpy	string.h	/^    extern char *strcpy(char *, const char *);$/;"	p	signature:(char *, const char *)
strcspn	string.h	/^    extern size_t strcspn(const char *, const char *);$/;"	p	signature:(const char *, const char *)
strdup	string.h	/^    extern char *strdup(const char *);$/;"	p	signature:(const char *)
stream	alsa/pcm_extplug.h	/^	snd_pcm_stream_t stream;$/;"	m	struct:snd_pcm_extplug	access:public
strerror	string.h	/^    extern char *strerror(int);$/;"	p	signature:(int)
strerror_r	string.h	11;"	d
strfmon	monetary.h	/^    extern ssize_t strfmon(char *, size_t, const char *, ...);$/;"	p	signature:(char *, size_t, const char *, ...)
strftime	time.h	/^    extern size_t strftime(char *, size_t, const char *,$/;"	p	signature:(char *, size_t, const char *, const struct tm *)
strlen	string.h	/^    extern size_t strlen(const char *);$/;"	p	signature:(const char *)
strncasecmp	strings.h	/^    extern int strncasecmp(const char *, const char *, size_t);$/;"	p	signature:(const char *, const char *, size_t)
strncat	string.h	/^    extern char *strncat(char *, const char *, size_t);$/;"	p	signature:(char *, const char *, size_t)
strncmp	string.h	/^    extern int strncmp(const char *, const char *, size_t);$/;"	p	signature:(const char *, const char *, size_t)
strncpy	string.h	/^    extern char *strncpy(char *, const char *, size_t);$/;"	p	signature:(char *, const char *, size_t)
strndup	string.h	/^    extern char *strndup(const char *, size_t);$/;"	p	signature:(const char *, size_t)
strnlen	string.h	/^    extern size_t strnlen(const char *, size_t);$/;"	p	signature:(const char *, size_t)
strpbrk	string.h	/^    extern char *strpbrk(const char *, const char *);$/;"	p	signature:(const char *, const char *)
strptime	time.h	/^    extern char *strptime(const char *, const char *, struct tm *);$/;"	p	signature:(const char *, const char *, struct tm *)
strrchr	string.h	/^    extern char *strrchr(const char *, int);$/;"	p	signature:(const char *, int)
strsep	string.h	/^    extern char *strsep(char **, const char *);$/;"	p	signature:(char **, const char *)
strsignal	string.h	/^    extern char *strsignal(int);$/;"	p	signature:(int)
strspn	string.h	/^    extern size_t strspn(const char *, const char *);$/;"	p	signature:(const char *, const char *)
strstr	string.h	/^    extern char *strstr(const char *, const char *);$/;"	p	signature:(const char *, const char *)
strtod	stdlib.h	/^    extern double strtod(const char *, char **);$/;"	p	signature:(const char *, char **)
strtof	stdlib.h	/^    extern float strtof(const char *, char **);$/;"	p	signature:(const char *, char **)
strtoimax	inttypes.h	/^    extern intmax_t strtoimax(const char *, char **, int);$/;"	p	signature:(const char *, char **, int)
strtok	string.h	/^    extern char *strtok(char *, const char *);$/;"	p	signature:(char *, const char *)
strtok_r	string.h	/^    extern char *strtok_r(char *, const char *, char **);$/;"	p	signature:(char *, const char *, char **)
strtol	stdlib.h	/^    extern long int strtol(const char *, char **, int);$/;"	p	signature:(const char *, char **, int)
strtold	stdlib.h	/^    extern long double strtold(const char *, char **);$/;"	p	signature:(const char *, char **)
strtoll	stdlib.h	/^    extern long long int strtoll(const char *, char **, int);$/;"	p	signature:(const char *, char **, int)
strtoq	stdlib.h	/^    extern long long int strtoq(const char *, char **, int);$/;"	p	signature:(const char *, char **, int)
strtoul	stdlib.h	/^    extern unsigned long int strtoul(const char *, char **, int);$/;"	p	signature:(const char *, char **, int)
strtoull	stdlib.h	/^    extern unsigned long long int strtoull(const char *, char **, int);$/;"	p	signature:(const char *, char **, int)
strtoumax	inttypes.h	/^    extern uintmax_t strtoumax(const char *, char **, int);$/;"	p	signature:(const char *, char **, int)
strtouq	stdlib.h	/^    extern unsigned long long int strtouq(const char *, char **, int);$/;"	p	signature:(const char *, char **, int)
strxfrm	string.h	/^    extern size_t strxfrm(char *, const char *, size_t);$/;"	p	signature:(char *, const char *, size_t)
subcode	alsa/control.h	/^	unsigned char subcode[147];$/;"	m	struct:snd_aes_iec958	access:public
subformat	alsa/pcm_extplug.h	/^	snd_pcm_subformat_t subformat;$/;"	m	struct:snd_pcm_extplug	access:public
subgroups	cups/ppd.h	/^	struct ppd_group_str *subgroups;$/;"	m	struct:ppd_group_str	typeref:struct:ppd_group_str::ppd_group_str	access:public
subpad	curses.h	/^    extern WINDOW *subpad(WINDOW *, int, int, int, int);$/;"	p	signature:(WINDOW *, int, int, int, int)
subpad	ncurses.h	/^    extern WINDOW *subpad(WINDOW *, int, int, int, int);$/;"	p	signature:(WINDOW *, int, int, int, int)
subscribe_events	alsa/control_external.h	/^	void (*subscribe_events) (void);$/;"	m	struct:snd_ctl_ext_callback	access:public
subscribed	alsa/control_external.h	/^	int subscribed;$/;"	m	struct:snd_ctl_ext	access:public
subwin	curses.h	/^    extern WINDOW *subwin(WINDOW *, int, int, int, int);$/;"	p	signature:(WINDOW *, int, int, int, int)
subwin	ncurses.h	/^    extern WINDOW *subwin(WINDOW *, int, int, int, int);$/;"	p	signature:(WINDOW *, int, int, int, int)
sun_family	sys/un.h	/^	sa_family_t sun_family;	\/* AF_UNIX *\/$/;"	m	struct:sockaddr_un	access:public
sun_path	sys/un.h	/^	char sun_path[UNIX_PATH_MAX];$/;"	m	struct:sockaddr_un	access:public
suseconds_t	sys/types.h	/^    typedef long int suseconds_t;$/;"	t
svc_destroy	rpc/svc.h	19;"	d
svc_freeargs	rpc/svc.h	24;"	d
svc_getargs	rpc/svc.h	26;"	d
svc_getcaller	rpc/svc.h	18;"	d
svc_getreqset	rpc/svc.h	/^    extern void svc_getreqset(fd_set *);$/;"	p	signature:(fd_set *)
svc_recv	rpc/svc.h	20;"	d
svc_register	rpc/svc.h	/^    extern bool_t svc_register(SVCXPRT *, rpcprog_t, rpcvers_t,$/;"	p	signature:(SVCXPRT *, rpcprog_t, rpcvers_t, __dispatch_fn_t, rpcprot_t)
svc_reply	rpc/svc.h	21;"	d
svc_req	rpc/svc.h	/^    struct svc_req {$/;"	s
svc_req::rq_clntcred	rpc/svc.h	/^	caddr_t rq_clntcred;$/;"	m	struct:svc_req	access:public
svc_req::rq_cred	rpc/svc.h	/^	struct opaque_auth rq_cred;$/;"	m	struct:svc_req	typeref:struct:svc_req::opaque_auth	access:public
svc_req::rq_proc	rpc/svc.h	/^	rpcproc_t rq_proc;$/;"	m	struct:svc_req	access:public
svc_req::rq_prog	rpc/svc.h	/^	rpcprog_t rq_prog;$/;"	m	struct:svc_req	access:public
svc_req::rq_vers	rpc/svc.h	/^	rpcvers_t rq_vers;$/;"	m	struct:svc_req	access:public
svc_req::rq_xprt	rpc/svc.h	/^	SVCXPRT *rq_xprt;$/;"	m	struct:svc_req	access:public
svc_run	rpc/svc.h	/^    extern void svc_run(void);$/;"	p	signature:(void)
svc_sendreply	rpc/svc.h	/^    extern bool_t svc_sendreply(SVCXPRT *, xdrproc_t, caddr_t);$/;"	p	signature:(SVCXPRT *, xdrproc_t, caddr_t)
svc_stat	rpc/svc.h	22;"	d
svcerr_auth	rpc/svc.h	/^    extern void svcerr_auth(SVCXPRT *, enum auth_stat);$/;"	p	signature:(SVCXPRT *, enum auth_stat)
svcerr_decode	rpc/svc.h	/^    extern void svcerr_decode(SVCXPRT *);$/;"	p	signature:(SVCXPRT *)
svcerr_noproc	rpc/svc.h	/^    extern void svcerr_noproc(SVCXPRT *);$/;"	p	signature:(SVCXPRT *)
svcerr_noprog	rpc/svc.h	/^    extern void svcerr_noprog(SVCXPRT *);$/;"	p	signature:(SVCXPRT *)
svcerr_progvers	rpc/svc.h	/^    extern void svcerr_progvers(SVCXPRT *, rpcvers_t, rpcvers_t);$/;"	p	signature:(SVCXPRT *, rpcvers_t, rpcvers_t)
svcerr_systemerr	rpc/svc.h	/^    extern void svcerr_systemerr(SVCXPRT *);$/;"	p	signature:(SVCXPRT *)
svcerr_weakauth	rpc/svc.h	/^    extern void svcerr_weakauth(SVCXPRT *);$/;"	p	signature:(SVCXPRT *)
svctcp_create	rpc/svc.h	/^    extern SVCXPRT *svctcp_create(int, u_int, u_int);$/;"	p	signature:(int, u_int, u_int)
svcudp_create	rpc/svc.h	/^    extern SVCXPRT *svcudp_create(int);$/;"	p	signature:(int)
sw	signal.h	/^	unsigned long int sw;$/;"	m	struct:_fpstate	access:public
sw	ucontext.h	/^	unsigned long int sw;$/;"	m	struct:_libc_fpstate	access:public
swab	unistd.h	/^    extern void swab(const void *, void *, ssize_t);$/;"	p	signature:(const void *, void *, ssize_t)
swapcontext	ucontext.h	/^    extern int swapcontext(ucontext_t *, const struct ucontext *);$/;"	p	signature:(ucontext_t *, const struct ucontext *)
swd	signal.h	/^	uint16_t swd;$/;"	m	struct:_fpstate	access:public
swd	ucontext.h	/^	uint16_t swd;$/;"	m	struct:_libc_fpstate	access:public
swprintf	wchar.h	/^    extern int swprintf(wchar_t *, size_t, const wchar_t *, ...);$/;"	p	signature:(wchar_t *, size_t, const wchar_t *, ...)
swscanf	wchar.h	/^    extern int swscanf(const wchar_t *, const wchar_t *, ...);$/;"	p	signature:(const wchar_t *, const wchar_t *, ...)
symlink	unistd.h	/^    extern int symlink(const char *, const char *);$/;"	p	signature:(const char *, const char *)
sync	cups/raster.h	/^	unsigned int sync;$/;"	m	struct:__anon78	access:public
sync	unistd.h	/^    extern void sync(void);$/;"	p	signature:(void)
syncok	curses.h	/^    extern int syncok(WINDOW *, bool);$/;"	p	signature:(WINDOW *, bool)
syncok	ncurses.h	/^    extern int syncok(WINDOW *, bool);$/;"	p	signature:(WINDOW *, bool)
syntax	regex.h	/^	reg_syntax_t syntax;$/;"	m	struct:re_pattern_buffer	access:public
sysconf	unistd.h	/^    extern long int sysconf(int);$/;"	p	signature:(int)
syslog	syslog.h	/^    extern void syslog(int, const char *, ...);$/;"	p	signature:(int, const char *, ...)
sysname	sys/utsname.h	/^	char sysname[65];$/;"	m	struct:utsname	access:public
system	stdlib.h	/^    extern int system(const char *);$/;"	p	signature:(const char *)
tag	alsa/seq_event.h	/^	unsigned char tag;$/;"	m	struct:snd_seq_event	access:public
tag	signal.h	/^	unsigned long int tag;$/;"	m	struct:_fpstate	access:public
tag	ucontext.h	/^	unsigned long int tag;$/;"	m	struct:_libc_fpstate	access:public
tan	math.h	/^    extern double tan(double);$/;"	p	signature:(double)
tanf	math.h	/^    extern float tanf(float);$/;"	p	signature:(float)
tanh	math.h	/^    extern double tanh(double);$/;"	p	signature:(double)
tanhf	math.h	/^    extern float tanhf(float);$/;"	p	signature:(float)
tanhl	math.h	/^    extern long double tanhl(long double);$/;"	p	signature:(long double)
tanl	math.h	/^    extern long double tanl(long double);$/;"	p	signature:(long double)
tcdrain	termios.h	/^    extern int tcdrain(int);$/;"	p	signature:(int)
tcflag_t	termios.h	/^    typedef unsigned int tcflag_t;$/;"	t
tcflow	termios.h	/^    extern int tcflow(int, int);$/;"	p	signature:(int, int)
tcflush	termios.h	/^    extern int tcflush(int, int);$/;"	p	signature:(int, int)
tcgetattr	termios.h	/^    extern int tcgetattr(int, struct termios *);$/;"	p	signature:(int, struct termios *)
tcgetpgrp	unistd.h	/^    extern pid_t tcgetpgrp(int);$/;"	p	signature:(int)
tcgetsid	termios.h	/^    extern pid_t tcgetsid(int);$/;"	p	signature:(int)
tcsendbreak	termios.h	/^    extern int tcsendbreak(int, int);$/;"	p	signature:(int, int)
tcsetattr	termios.h	/^    extern int tcsetattr(int, int, const struct termios *);$/;"	p	signature:(int, int, const struct termios *)
tcsetpgrp	unistd.h	/^    extern int tcsetpgrp(int, pid_t);$/;"	p	signature:(int, pid_t)
tdelete	search.h	/^    extern void *tdelete(const void *, void **, __compar_fn_t);$/;"	p	signature:(const void *, void **, __compar_fn_t)
telldir	dirent.h	/^    extern long int telldir(DIR *);$/;"	p	signature:(DIR *)
tempnam	stdio.h	/^    extern char *tempnam(const char *, const char *);$/;"	p	signature:(const char *, const char *)
termattrs	curses.h	/^    extern chtype termattrs(void);$/;"	p	signature:(void)
termattrs	ncurses.h	/^    extern chtype termattrs(void);$/;"	p	signature:(void)
termios	termios.h	/^    struct termios {$/;"	s
termios::c_cc	termios.h	/^	cc_t c_cc[NCCS];	\/* control characters *\/$/;"	m	struct:termios	access:public
termios::c_cflag	termios.h	/^	tcflag_t c_cflag;	\/* control mode flags *\/$/;"	m	struct:termios	access:public
termios::c_iflag	termios.h	/^	tcflag_t c_iflag;	\/* input mode flags *\/$/;"	m	struct:termios	access:public
termios::c_ispeed	termios.h	/^	speed_t c_ispeed;	\/* input speed *\/$/;"	m	struct:termios	access:public
termios::c_lflag	termios.h	/^	tcflag_t c_lflag;	\/* local mode flags *\/$/;"	m	struct:termios	access:public
termios::c_line	termios.h	/^	cc_t c_line;		\/* line discipline *\/$/;"	m	struct:termios	access:public
termios::c_oflag	termios.h	/^	tcflag_t c_oflag;	\/* output mode flags *\/$/;"	m	struct:termios	access:public
termios::c_ospeed	termios.h	/^	speed_t c_ospeed;	\/* output speed *\/$/;"	m	struct:termios	access:public
termname	curses.h	/^    extern char *termname(void);$/;"	p	signature:(void)
termname	ncurses.h	/^    extern char *termname(void);$/;"	p	signature:(void)
text	cups/ppd.h	/^	char text[40];$/;"	m	struct:ppd_group_str	access:public
text	cups/ppd.h	/^	char text[81];$/;"	m	struct:__anon105	access:public
text	cups/ppd.h	/^	char text[81];$/;"	m	struct:__anon106	access:public
text	cups/ppd.h	/^	char text[81];$/;"	m	struct:__anon110	access:public
textdomain	libintl.h	/^    extern char *textdomain(const char *);$/;"	p	signature:(const char *)
tfind	search.h	/^    extern void *tfind(const void *, void *const *, __compar_fn_t);$/;"	p	signature:(const void *, void *const *, __compar_fn_t)
tgamma	math.h	/^    extern double tgamma(double);$/;"	p	signature:(double)
tgammaf	math.h	/^    extern float tgammaf(float);$/;"	p	signature:(float)
tgammal	math.h	/^    extern long double tgammal(long double);$/;"	p	signature:(long double)
tgetent	term.h	/^    extern int tgetent(char *, const char *);$/;"	p	signature:(char *, const char *)
tgetflag	term.h	/^    extern int tgetflag(char *);$/;"	p	signature:(char *)
tgetnum	term.h	/^    extern int tgetnum(char *);$/;"	p	signature:(char *)
tgetstr	term.h	/^    extern char *tgetstr(char *, char **);$/;"	p	signature:(char *, char **)
tgoto	term.h	/^    extern char *tgoto(const char *, int, int);$/;"	p	signature:(const char *, int, int)
thousands_sep	locale.h	/^	char *thousands_sep;$/;"	m	struct:lconv	access:public
throughput	cups/ppd.h	/^	int throughput;$/;"	m	struct:__anon111	access:public
tick	alsa/seq_event.h	/^	snd_seq_tick_time_t tick;$/;"	m	union:snd_seq_timestamp
tigetflag	term.h	/^    extern int tigetflag(const char *);$/;"	p	signature:(const char *)
tigetnum	term.h	/^    extern int tigetnum(const char *);$/;"	p	signature:(const char *)
tigetstr	term.h	/^    extern char *tigetstr(const char *);$/;"	p	signature:(const char *)
time	alsa/seq_event.h	/^	    snd_seq_timestamp_t time;	\/* time *\/$/;"	m	union:snd_seq_ev_queue_control::__anon11
time	alsa/seq_event.h	/^	    snd_seq_timestamp_t time;	\/* timestamp *\/$/;"	m	union:snd_seq_event::__anon13
time	alsa/seq_event.h	/^	snd_seq_timestamp_t time;$/;"	m	struct:snd_seq_event	access:public
time	alsa/seq_event.h	/^	struct snd_seq_real_time time;$/;"	m	union:snd_seq_timestamp	typeref:struct:snd_seq_timestamp::snd_seq_real_time
time	sys/timeb.h	/^	time_t time;		\/* Seconds since epoch, as from `time'. *\/$/;"	m	struct:timeb	access:public
time	time.h	/^    extern time_t time(time_t *);$/;"	p	signature:(time_t *)
time_t	sys/types.h	/^    typedef long int time_t;$/;"	t
timeb	sys/timeb.h	/^    struct timeb {$/;"	s
timeb::dstflag	sys/timeb.h	/^	short dstflag;		\/* Nonzero if Daylight Savings Time used. *\/$/;"	m	struct:timeb	access:public
timeb::millitm	sys/timeb.h	/^	unsigned short millitm;	\/* Additional milliseconds. *\/$/;"	m	struct:timeb	access:public
timeb::time	sys/timeb.h	/^	time_t time;		\/* Seconds since epoch, as from `time'. *\/$/;"	m	struct:timeb	access:public
timeb::timezone	sys/timeb.h	/^	short timezone;		\/* Minutes west of GMT. *\/$/;"	m	struct:timeb	access:public
timeout	alsa/seq_event.h	/^	int timeout;$/;"	m	struct:snd_seq_ev_instr_begin	access:public
timeout	curses.h	/^    extern void timeout(int);$/;"	p	signature:(int)
timeout	ncurses.h	/^    extern void timeout(int);$/;"	p	signature:(int)
timer_create	time.h	/^    extern int timer_create(clockid_t, struct sigevent *, timer_t *);$/;"	p	signature:(clockid_t, struct sigevent *, timer_t *)
timer_delete	time.h	/^    extern int timer_delete(timer_t);$/;"	p	signature:(timer_t)
timer_getoverrun	time.h	/^    extern int timer_getoverrun(timer_t);$/;"	p	signature:(timer_t)
timer_gettime	time.h	/^    extern int timer_gettime(timer_t, struct itimerspec *);$/;"	p	signature:(timer_t, struct itimerspec *)
timer_settime	time.h	/^    extern int timer_settime(timer_t, int, const struct itimerspec *,$/;"	p	signature:(timer_t, int, const struct itimerspec *, struct itimerspec *)
timer_t	sys/types.h	/^    typedef void *timer_t;$/;"	t
times	sys/times.h	/^    extern clock_t times(struct tms *);$/;"	p	signature:(struct tms *)
timespec	sys/time.h	/^    struct timespec {$/;"	s
timespec::tv_nsec	sys/time.h	/^	long int tv_nsec;$/;"	m	struct:timespec	access:public
timespec::tv_sec	sys/time.h	/^	time_t tv_sec;$/;"	m	struct:timespec	access:public
timeval	sys/time.h	/^    struct timeval {$/;"	s
timeval::tv_sec	sys/time.h	/^	time_t tv_sec;$/;"	m	struct:timeval	access:public
timeval::tv_usec	sys/time.h	/^	suseconds_t tv_usec;$/;"	m	struct:timeval	access:public
timezone	sys/time.h	/^    struct timezone {$/;"	s
timezone	sys/timeb.h	/^	short timezone;		\/* Minutes west of GMT. *\/$/;"	m	struct:timeb	access:public
timezone::tz_dsttime	sys/time.h	/^	int tz_dsttime;$/;"	m	struct:timezone	access:public
timezone::tz_minuteswest	sys/time.h	/^	int tz_minuteswest;$/;"	m	struct:timezone	access:public
title	cups/cups.h	/^	char *title;$/;"	m	struct:__anon98	access:public
tls	cups/cups.h	/^	void *tls;$/;"	m	struct:__anon100	access:public
tm	time.h	/^    struct tm {$/;"	s
tm::tm_gmtoff	time.h	/^	long int tm_gmtoff;$/;"	m	struct:tm	access:public
tm::tm_hour	time.h	/^	int tm_hour;$/;"	m	struct:tm	access:public
tm::tm_isdst	time.h	/^	int tm_isdst;$/;"	m	struct:tm	access:public
tm::tm_mday	time.h	/^	int tm_mday;$/;"	m	struct:tm	access:public
tm::tm_min	time.h	/^	int tm_min;$/;"	m	struct:tm	access:public
tm::tm_mon	time.h	/^	int tm_mon;$/;"	m	struct:tm	access:public
tm::tm_sec	time.h	/^	int tm_sec;$/;"	m	struct:tm	access:public
tm::tm_wday	time.h	/^	int tm_wday;$/;"	m	struct:tm	access:public
tm::tm_yday	time.h	/^	int tm_yday;$/;"	m	struct:tm	access:public
tm::tm_year	time.h	/^	int tm_year;$/;"	m	struct:tm	access:public
tm::tm_zone	time.h	/^	char *tm_zone;$/;"	m	struct:tm	access:public
tm_gmtoff	time.h	/^	long int tm_gmtoff;$/;"	m	struct:tm	access:public
tm_hour	time.h	/^	int tm_hour;$/;"	m	struct:tm	access:public
tm_isdst	time.h	/^	int tm_isdst;$/;"	m	struct:tm	access:public
tm_mday	time.h	/^	int tm_mday;$/;"	m	struct:tm	access:public
tm_min	time.h	/^	int tm_min;$/;"	m	struct:tm	access:public
tm_mon	time.h	/^	int tm_mon;$/;"	m	struct:tm	access:public
tm_sec	time.h	/^	int tm_sec;$/;"	m	struct:tm	access:public
tm_wday	time.h	/^	int tm_wday;$/;"	m	struct:tm	access:public
tm_yday	time.h	/^	int tm_yday;$/;"	m	struct:tm	access:public
tm_year	time.h	/^	int tm_year;$/;"	m	struct:tm	access:public
tm_zone	time.h	/^	char *tm_zone;$/;"	m	struct:tm	access:public
tmpfile	stdio.h	/^    extern FILE *tmpfile(void);$/;"	p	signature:(void)
tmpfile64	stdio.h	/^    extern FILE *tmpfile64(void);$/;"	p	signature:(void)
tmpnam	stdio.h	/^    extern char *tmpnam(char *);$/;"	p	signature:(char *)
tms	sys/times.h	/^    struct tms {$/;"	s
tms::tms_cstime	sys/times.h	/^	clock_t tms_cstime;$/;"	m	struct:tms	access:public
tms::tms_cutime	sys/times.h	/^	clock_t tms_cutime;$/;"	m	struct:tms	access:public
tms::tms_stime	sys/times.h	/^	clock_t tms_stime;$/;"	m	struct:tms	access:public
tms::tms_utime	sys/times.h	/^	clock_t tms_utime;$/;"	m	struct:tms	access:public
tms_cstime	sys/times.h	/^	clock_t tms_cstime;$/;"	m	struct:tms	access:public
tms_cutime	sys/times.h	/^	clock_t tms_cutime;$/;"	m	struct:tms	access:public
tms_stime	sys/times.h	/^	clock_t tms_stime;$/;"	m	struct:tms	access:public
tms_utime	sys/times.h	/^	clock_t tms_utime;$/;"	m	struct:tms	access:public
toascii	ctype.h	/^    extern int toascii(int);$/;"	p	signature:(int)
tolower	ctype.h	/^    extern int tolower(int);$/;"	p	signature:(int)
top	cups/ppd.h	/^	float top;$/;"	m	struct:__anon107	access:public
total_in	zlib.h	/^	uLong total_in;		\/* total nb of input bytes read so far *\/$/;"	m	struct:z_stream_s	access:public
total_out	zlib.h	/^	uLong total_out;	\/* total nb of bytes output so far *\/$/;"	m	struct:z_stream_s	access:public
touchline	curses.h	/^    extern int touchline(WINDOW *, int, int);$/;"	p	signature:(WINDOW *, int, int)
touchline	ncurses.h	/^    extern int touchline(WINDOW *, int, int);$/;"	p	signature:(WINDOW *, int, int)
touchwin	curses.h	/^    extern int touchwin(WINDOW *);$/;"	p	signature:(WINDOW *)
touchwin	ncurses.h	/^    extern int touchwin(WINDOW *);$/;"	p	signature:(WINDOW *)
toupper	ctype.h	/^    extern int toupper(int);$/;"	p	signature:(int)
towctrans	wctype.h	/^    extern wint_t towctrans(wint_t, wctrans_t);$/;"	p	signature:(wint_t, wctrans_t)
towlower	wctype.h	/^    extern wint_t towlower(wint_t);$/;"	p	signature:(wint_t)
towupper	wctype.h	/^    extern wint_t towupper(wint_t);$/;"	p	signature:(wint_t)
tparm	term.h	/^    extern char *tparm(const char *, ...);$/;"	p	signature:(const char *, ...)
tputs	term.h	/^    extern int tputs(const char *, int, int (*)(int)$/;"	p	signature:(const char *, int, int (*)(int) )
transfer	alsa/pcm_extplug.h	/^	snd_pcm_sframes_t(*transfer) (void);$/;"	m	struct:snd_pcm_extplug_callback	access:public
translate	regex.h	/^	char *translate;$/;"	m	struct:re_pattern_buffer	access:public
trap	signal.h	/^	unsigned long int trap;	\/* Reason for being here *\/$/;"	m	struct:pt_regs	access:public
trap	signal.h	/^	unsigned long int trap;$/;"	m	struct:pt_regs	access:public
trapno	signal.h	/^	unsigned long int trapno;$/;"	m	struct:sigcontext	access:public
trunc	math.h	/^    extern double trunc(double);$/;"	p	signature:(double)
truncate	unistd.h	/^    extern int truncate(const char *, off_t);$/;"	p	signature:(const char *, off_t)
truncate64	unistd.h	/^    extern int truncate64(const char *, off64_t);$/;"	p	signature:(const char *, off64_t)
truncf	math.h	/^    extern float truncf(float);$/;"	p	signature:(float)
truncl	math.h	/^    extern long double truncl(long double);$/;"	p	signature:(long double)
tsearch	search.h	/^    extern void *tsearch(const void *, void **, __compar_fn_t);$/;"	p	signature:(const void *, void **, __compar_fn_t)
ttrasterizer	cups/ppd.h	/^	char *ttrasterizer;$/;"	m	struct:__anon111	access:public
ttyname	unistd.h	/^    extern char *ttyname(int);$/;"	p	signature:(int)
ttyname_r	unistd.h	/^    extern int ttyname_r(int, char *, size_t);$/;"	p	signature:(int, char *, size_t)
tv_nsec	alsa/seq_event.h	/^	unsigned int tv_nsec;$/;"	m	struct:snd_seq_real_time	access:public
tv_nsec	sys/time.h	/^	long int tv_nsec;$/;"	m	struct:timespec	access:public
tv_sec	alsa/seq_event.h	/^	unsigned int tv_sec;$/;"	m	struct:snd_seq_real_time	access:public
tv_sec	sys/time.h	/^	time_t tv_sec;$/;"	m	struct:timespec	access:public
tv_sec	sys/time.h	/^	time_t tv_sec;$/;"	m	struct:timeval	access:public
tv_sec	utmp.h	/^	    int32_t tv_sec;$/;"	m	struct:utmp::__anon5	access:public
tv_sec	utmp.h	/^	    int32_t tv_sec;$/;"	m	struct:utmp::__anon6	access:public
tv_sec	utmpx.h	/^	    int32_t tv_sec;	\/* Seconds. *\/$/;"	m	struct:utmpx::__anon74	access:public
tv_sec	utmpx.h	/^	    int32_t tv_sec;	\/* Seconds. *\/$/;"	m	struct:utmpx::__anon75	access:public
tv_usec	sys/time.h	/^	suseconds_t tv_usec;$/;"	m	struct:timeval	access:public
tv_usec	utmp.h	/^	    int32_t tv_usec;$/;"	m	struct:utmp::__anon5	access:public
tv_usec	utmp.h	/^	    int32_t tv_usec;$/;"	m	struct:utmp::__anon6	access:public
tv_usec	utmpx.h	/^	    int32_t tv_usec;	\/* Microseconds. *\/$/;"	m	struct:utmpx::__anon74	access:public
tv_usec	utmpx.h	/^	    int32_t tv_usec;	\/* Microseconds. *\/$/;"	m	struct:utmpx::__anon75	access:public
twalk	search.h	/^    extern void twalk(const void *, __action_fn_t);$/;"	p	signature:(const void *, __action_fn_t)
type	alsa/seq_event.h	/^	snd_seq_event_type_t type;$/;"	m	struct:snd_seq_event	access:public
type	math.h	/^	int type;$/;"	m	struct:exception	access:public
typeahead	curses.h	/^    extern int typeahead(int);$/;"	p	signature:(int)
typeahead	ncurses.h	/^    extern int typeahead(int);$/;"	p	signature:(int)
tz_dsttime	sys/time.h	/^	int tz_dsttime;$/;"	m	struct:timezone	access:public
tz_minuteswest	sys/time.h	/^	int tz_minuteswest;$/;"	m	struct:timezone	access:public
tzset	time.h	/^    extern void tzset(void);$/;"	p	signature:(void)
u	signal.h	/^	} u;$/;"	m	struct:ia64_fpreg	typeref:union:ia64_fpreg::__anon41	access:public
u6_addr16	netinet/in.h	/^	    uint16_t u6_addr16[8];$/;"	m	union:in6_addr::__anon50
u6_addr32	netinet/in.h	/^	    uint32_t u6_addr32[4];$/;"	m	union:in6_addr::__anon50
u6_addr8	netinet/in.h	/^	    uint8_t u6_addr8[16];$/;"	m	union:in6_addr::__anon50
uInt	zlib.h	/^    typedef unsigned int uInt;$/;"	t
uIntf	zlib.h	/^    typedef uInt uIntf;$/;"	t
uLong	zlib.h	/^    typedef unsigned long int uLong;$/;"	t
uLongf	zlib.h	/^    typedef uLong uLongf;$/;"	t
u_char	sys/types.h	/^    typedef unsigned char u_char;$/;"	t
u_int	sys/types.h	/^    typedef unsigned int u_int;$/;"	t
u_int16_t	sys/types.h	/^    typedef unsigned short u_int16_t;$/;"	t
u_int32_t	sys/types.h	/^    typedef unsigned int u_int32_t;$/;"	t
u_int64_t	sys/types.h	/^    typedef unsigned long long int u_int64_t;$/;"	t
u_int8_t	sys/types.h	/^    typedef unsigned char u_int8_t;$/;"	t
u_long	sys/types.h	/^    typedef unsigned long int u_long;$/;"	t
u_short	sys/types.h	/^    typedef unsigned short u_short;$/;"	t
ualarm	unistd.h	/^    extern unsigned int ualarm(useconds_t, useconds_t);$/;"	p	signature:(useconds_t, useconds_t)
uc_flags	ucontext.h	/^	unsigned long int uc_flags;$/;"	m	struct:ucontext	access:public
uc_link	ucontext.h	/^	struct ucontext *uc_link;$/;"	m	struct:ucontext	typeref:struct:ucontext::ucontext	access:public
uc_mcontext	ucontext.h	/^	mcontext_t uc_mcontext;$/;"	m	struct:ucontext	access:public
uc_mcontext	ucontext.h	/^	union uc_regs_ptr uc_mcontext;$/;"	m	struct:ucontext	typeref:union:ucontext::uc_regs_ptr	access:public
uc_pad	ucontext.h	/^	int uc_pad[7];$/;"	m	struct:ucontext	access:public
uc_reg_space	ucontext.h	/^	char uc_reg_space[sizeof(mcontext_t) + 12];$/;"	m	struct:ucontext	access:public
uc_regs	ucontext.h	/^	mcontext_t *uc_regs;$/;"	m	union:uc_regs_ptr
uc_regs_ptr	ucontext.h	/^    union uc_regs_ptr {$/;"	u
uc_regs_ptr::regs	ucontext.h	/^	struct pt_regs *regs;$/;"	m	union:uc_regs_ptr	typeref:struct:uc_regs_ptr::pt_regs
uc_regs_ptr::uc_regs	ucontext.h	/^	mcontext_t *uc_regs;$/;"	m	union:uc_regs_ptr
uc_sigmask	ucontext.h	/^	sigset_t uc_sigmask;$/;"	m	struct:ucontext	access:public
uc_stack	ucontext.h	/^	stack_t uc_stack;$/;"	m	struct:ucontext	access:public
ucontext	ucontext.h	/^    struct ucontext {$/;"	s
ucontext::__anon132::__anon133::_link	ucontext.h	/^		struct ucontext *_link;$/;"	m	struct:ucontext::__anon132::__anon133	typeref:struct:ucontext::__anon132::__anon133::ucontext	access:public
ucontext::__anon132::__anon133::_pad	ucontext.h	/^		unsigned long int _pad[_SC_GR0_OFFSET \/ 8];$/;"	m	struct:ucontext::__anon132::__anon133	access:public
ucontext::__anon132::_mc	ucontext.h	/^	    mcontext_t _mc;$/;"	m	union:ucontext::__anon132
ucontext::__anon132::_uc	ucontext.h	/^	    } _uc;$/;"	m	union:ucontext::__anon132	typeref:struct:ucontext::__anon132::__anon133
ucontext::__fpregs_mem	ucontext.h	/^	struct _libc_fpstate __fpregs_mem;$/;"	m	struct:ucontext	typeref:struct:ucontext::_libc_fpstate	access:public
ucontext::_u	ucontext.h	/^	} _u;$/;"	m	struct:ucontext	typeref:union:ucontext::__anon132	access:public
ucontext::uc_flags	ucontext.h	/^	unsigned long int uc_flags;$/;"	m	struct:ucontext	access:public
ucontext::uc_link	ucontext.h	/^	struct ucontext *uc_link;$/;"	m	struct:ucontext	typeref:struct:ucontext::ucontext	access:public
ucontext::uc_mcontext	ucontext.h	/^	mcontext_t uc_mcontext;$/;"	m	struct:ucontext	access:public
ucontext::uc_mcontext	ucontext.h	/^	union uc_regs_ptr uc_mcontext;$/;"	m	struct:ucontext	typeref:union:ucontext::uc_regs_ptr	access:public
ucontext::uc_pad	ucontext.h	/^	int uc_pad[7];$/;"	m	struct:ucontext	access:public
ucontext::uc_reg_space	ucontext.h	/^	char uc_reg_space[sizeof(mcontext_t) + 12];$/;"	m	struct:ucontext	access:public
ucontext::uc_sigmask	ucontext.h	/^	sigset_t uc_sigmask;$/;"	m	struct:ucontext	access:public
ucontext::uc_stack	ucontext.h	/^	stack_t uc_stack;$/;"	m	struct:ucontext	access:public
ucontext_t	ucontext.h	/^    typedef struct ucontext ucontext_t;$/;"	t	typeref:struct:ucontext
ui	cups/ppd.h	/^	ppd_ui_t ui;$/;"	m	struct:__anon106	access:public
uid	sys/ipc.h	/^	uid_t uid;		\/* Owner's user ID. *\/$/;"	m	struct:ipc_perm	access:public
uid	sys/ipc.h	/^	uid_t uid;$/;"	m	struct:ipc_perm	access:public
uid_t	sys/types.h	/^    typedef unsigned int uid_t;$/;"	t
uint16_t	stdint.h	/^    typedef unsigned short uint16_t;$/;"	t
uint32_t	stdint.h	/^    typedef unsigned int uint32_t;$/;"	t
uint64_t	stdint.h	/^    typedef unsigned long int uint64_t;$/;"	t
uint64_t	stdint.h	/^    typedef unsigned long long int uint64_t;$/;"	t
uint8_t	stdint.h	/^    typedef unsigned char uint8_t;$/;"	t
uint_fast16_t	stdint.h	/^    typedef unsigned int uint_fast16_t;$/;"	t
uint_fast16_t	stdint.h	/^    typedef unsigned long int uint_fast16_t;$/;"	t
uint_fast32_t	stdint.h	/^    typedef unsigned int uint_fast32_t;$/;"	t
uint_fast32_t	stdint.h	/^    typedef unsigned long int uint_fast32_t;$/;"	t
uint_fast64_t	stdint.h	/^    typedef unsigned long int uint_fast64_t;$/;"	t
uint_fast64_t	stdint.h	/^    typedef unsigned long long int uint_fast64_t;$/;"	t
uint_fast8_t	stdint.h	/^    typedef unsigned char uint_fast8_t;$/;"	t
uint_least16_t	stdint.h	/^    typedef unsigned short uint_least16_t;$/;"	t
uint_least32_t	stdint.h	/^    typedef unsigned int uint_least32_t;$/;"	t
uint_least64_t	stdint.h	/^    typedef unsigned long int uint_least64_t;$/;"	t
uint_least64_t	stdint.h	/^    typedef unsigned long long int uint_least64_t;$/;"	t
uint_least8_t	stdint.h	/^    typedef unsigned char uint_least8_t;$/;"	t
uintmax_t	stdint.h	/^    typedef unsigned long int uintmax_t;$/;"	t
uintmax_t	stdint.h	/^    typedef unsigned long long int uintmax_t;$/;"	t
uintptr_t	stdint.h	/^    typedef unsigned int uintptr_t;$/;"	t
uintptr_t	stdint.h	/^    typedef unsigned long int uintptr_t;$/;"	t
ulimit	ulimit.h	/^    extern long int ulimit(int, ...);$/;"	p	signature:(int, ...)
umask	sys/stat.h	/^    extern mode_t umask(mode_t);$/;"	p	signature:(mode_t)
uname	sys/utsname.h	/^    extern int uname(struct utsname *);$/;"	p	signature:(struct utsname *)
uncompress	zlib.h	/^    extern int uncompress(Bytef *, uLongf *, const Bytef *, uLong);$/;"	p	signature:(Bytef *, uLongf *, const Bytef *, uLong)
unctrl	curses.h	/^    extern char *unctrl(chtype);$/;"	p	signature:(chtype)
unctrl	ncurses.h	/^    extern char *unctrl(chtype);$/;"	p	signature:(chtype)
ungetc	stdio.h	/^    extern int ungetc(int, FILE *);$/;"	p	signature:(int, FILE *)
ungetch	curses.h	/^    extern int ungetch(int);$/;"	p	signature:(int)
ungetch	ncurses.h	/^    extern int ungetch(int);$/;"	p	signature:(int)
ungetwc	wchar.h	/^    extern wint_t ungetwc(wint_t, FILE *);$/;"	p	signature:(wint_t, FILE *)
unlink	unistd.h	/^    extern int unlink(const char *);$/;"	p	signature:(const char *)
unlockpt	stdlib.h	/^    extern int unlockpt(int);$/;"	p	signature:(int)
unsetenv	stdlib.h	/^    extern int unsetenv(const char *);$/;"	p	signature:(const char *)
untouchwin	curses.h	/^    extern int untouchwin(WINDOW *);$/;"	p	signature:(WINDOW *)
untouchwin	ncurses.h	/^    extern int untouchwin(WINDOW *);$/;"	p	signature:(WINDOW *)
unused	alsa/seq_event.h	/^	unsigned char unused[3];$/;"	m	struct:snd_seq_ev_ctrl	access:public
unused	alsa/seq_event.h	/^	unsigned char unused[3];$/;"	m	struct:snd_seq_ev_queue_control	access:public
unused	alsa/seq_event.h	/^	unsigned char unused[3];$/;"	m	struct:snd_seq_ev_sample_control	access:public
update	alsa/pcm.h	/^	void (*update) (void);$/;"	m	struct:_snd_pcm_scope_ops	access:public
use_env	curses.h	/^    extern void use_env(bool);$/;"	p	signature:(bool)
use_env	ncurses.h	/^    extern void use_env(bool);$/;"	p	signature:(bool)
useconds_t	sys/types.h	/^    typedef unsigned int useconds_t;$/;"	t
used	cups/cups.h	/^	int used;$/;"	m	struct:__anon100	access:public
used	cups/cups.h	/^	int used;$/;"	m	struct:cups_lang_str	access:public
used	regex.h	/^	unsigned long int used;$/;"	m	struct:re_pattern_buffer	access:public
uselocale	locale.h	/^    extern locale_t uselocale(locale_t);$/;"	p	signature:(locale_t)
user	cups/cups.h	/^	char *user;$/;"	m	struct:__anon98	access:public
userpass	cups/cups.h	/^	char userpass[256];$/;"	m	struct:__anon100	access:public
usleep	unistd.h	/^    extern int usleep(useconds_t);$/;"	p	signature:(useconds_t)
ut_addr	utmp.h	17;"	d
ut_addr_v6	utmp.h	/^	int32_t ut_addr_v6[4];	\/* Internet address of remote host. *\/$/;"	m	struct:utmp	access:public
ut_addr_v6	utmpx.h	/^	int32_t ut_addr_v6[4];	\/* Internet address of remote host. *\/$/;"	m	struct:utmpx	access:public
ut_exit	utmp.h	/^	struct exit_status ut_exit;	\/* Exit status of a process marked as DEAD_PROCESS. *\/$/;"	m	struct:utmp	typeref:struct:utmp::exit_status	access:public
ut_exit	utmpx.h	/^	struct exit_status ut_exit;	\/* Exit status of a process marked as DEAD_PROCESS. *\/$/;"	m	struct:utmpx	typeref:struct:utmpx::exit_status	access:public
ut_host	utmp.h	/^	char ut_host[UT_HOSTSIZE];	\/* Hostname for remote login. *\/$/;"	m	struct:utmp	access:public
ut_host	utmpx.h	/^	char ut_host[UT_HOSTSIZE];	\/* Hostname for remote login. *\/$/;"	m	struct:utmpx	access:public
ut_id	utmp.h	/^	char ut_id[4];		\/* Inittab ID. *\/$/;"	m	struct:utmp	access:public
ut_id	utmpx.h	/^	char ut_id[4];		\/* Inittab ID. *\/$/;"	m	struct:utmpx	access:public
ut_line	utmp.h	/^	char ut_line[UT_LINESIZE];	\/* Devicename. *\/$/;"	m	struct:utmp	access:public
ut_line	utmpx.h	/^	char ut_line[UT_LINESIZE];	\/* Devicename. *\/$/;"	m	struct:utmpx	access:public
ut_name	utmp.h	19;"	d
ut_pid	utmp.h	/^	pid_t ut_pid;		\/* Process ID of login process. *\/$/;"	m	struct:utmp	access:public
ut_pid	utmpx.h	/^	pid_t ut_pid;		\/* Process ID of login process. *\/$/;"	m	struct:utmpx	access:public
ut_session	utmp.h	/^	int ut_session;		\/* Session ID, used for windowing. *\/$/;"	m	struct:utmp	access:public
ut_session	utmp.h	/^	int32_t ut_session;	\/* Session ID, used for windowing. *\/$/;"	m	struct:utmp	access:public
ut_session	utmp.h	/^	long int ut_session;	\/* Session ID, used for windowing. *\/$/;"	m	struct:utmp	access:public
ut_session	utmpx.h	/^	int32_t ut_session;	\/* Session ID, used for windowing. *\/$/;"	m	struct:utmpx	access:public
ut_session	utmpx.h	/^	long int ut_session;	\/* Session ID, used for windowing. *\/$/;"	m	struct:utmpx	access:public
ut_time	utmp.h	18;"	d
ut_tv	utmp.h	/^	struct timeval ut_tv;	\/* Time entry was made. *\/$/;"	m	struct:utmp	typeref:struct:utmp::timeval	access:public
ut_tv	utmp.h	/^	} ut_tv;		\/* Time entry was made. *\/$/;"	m	struct:utmp	typeref:struct:utmp::__anon5	access:public
ut_tv	utmp.h	/^	} ut_tv;		\/* Time entry was made. *\/$/;"	m	struct:utmp	typeref:struct:utmp::__anon6	access:public
ut_tv	utmpx.h	/^	struct timeval ut_tv;	\/* Time entry was made. *\/$/;"	m	struct:utmpx	typeref:struct:utmpx::timeval	access:public
ut_tv	utmpx.h	/^	} ut_tv;		\/* Time entry was made. *\/$/;"	m	struct:utmpx	typeref:struct:utmpx::__anon74	access:public
ut_tv	utmpx.h	/^	} ut_tv;		\/* Time entry was made. *\/$/;"	m	struct:utmpx	typeref:struct:utmpx::__anon75	access:public
ut_type	utmp.h	/^	short ut_type;		\/* Type of login. *\/$/;"	m	struct:utmp	access:public
ut_type	utmpx.h	/^	short ut_type;		\/* Type of login. *\/$/;"	m	struct:utmpx	access:public
ut_user	utmp.h	/^	char ut_user[UT_NAMESIZE];	\/* Username. *\/$/;"	m	struct:utmp	access:public
ut_user	utmpx.h	/^	char ut_user[UT_NAMESIZE];	\/* Username. *\/$/;"	m	struct:utmpx	access:public
utimbuf	utime.h	/^    struct utimbuf {$/;"	s
utimbuf::actime	utime.h	/^	time_t actime;$/;"	m	struct:utimbuf	access:public
utimbuf::modtime	utime.h	/^	time_t modtime;$/;"	m	struct:utimbuf	access:public
utime	utime.h	/^    extern int utime(const char *, const struct utimbuf *);$/;"	p	signature:(const char *, const struct utimbuf *)
utimes	sys/time.h	/^    extern int utimes(const char *, const struct timeval *);$/;"	p	signature:(const char *, const struct timeval *)
utmp	utmp.h	/^    struct utmp {$/;"	s
utmp::__anon5::tv_sec	utmp.h	/^	    int32_t tv_sec;$/;"	m	struct:utmp::__anon5	access:public
utmp::__anon5::tv_usec	utmp.h	/^	    int32_t tv_usec;$/;"	m	struct:utmp::__anon5	access:public
utmp::__anon6::tv_sec	utmp.h	/^	    int32_t tv_sec;$/;"	m	struct:utmp::__anon6	access:public
utmp::__anon6::tv_usec	utmp.h	/^	    int32_t tv_usec;$/;"	m	struct:utmp::__anon6	access:public
utmp::__unused	utmp.h	/^	char __unused[20];	\/* Reserved for future use. *\/$/;"	m	struct:utmp	access:public
utmp::ut_addr_v6	utmp.h	/^	int32_t ut_addr_v6[4];	\/* Internet address of remote host. *\/$/;"	m	struct:utmp	access:public
utmp::ut_exit	utmp.h	/^	struct exit_status ut_exit;	\/* Exit status of a process marked as DEAD_PROCESS. *\/$/;"	m	struct:utmp	typeref:struct:utmp::exit_status	access:public
utmp::ut_host	utmp.h	/^	char ut_host[UT_HOSTSIZE];	\/* Hostname for remote login. *\/$/;"	m	struct:utmp	access:public
utmp::ut_id	utmp.h	/^	char ut_id[4];		\/* Inittab ID. *\/$/;"	m	struct:utmp	access:public
utmp::ut_line	utmp.h	/^	char ut_line[UT_LINESIZE];	\/* Devicename. *\/$/;"	m	struct:utmp	access:public
utmp::ut_pid	utmp.h	/^	pid_t ut_pid;		\/* Process ID of login process. *\/$/;"	m	struct:utmp	access:public
utmp::ut_session	utmp.h	/^	int ut_session;		\/* Session ID, used for windowing. *\/$/;"	m	struct:utmp	access:public
utmp::ut_session	utmp.h	/^	int32_t ut_session;	\/* Session ID, used for windowing. *\/$/;"	m	struct:utmp	access:public
utmp::ut_session	utmp.h	/^	long int ut_session;	\/* Session ID, used for windowing. *\/$/;"	m	struct:utmp	access:public
utmp::ut_tv	utmp.h	/^	struct timeval ut_tv;	\/* Time entry was made. *\/$/;"	m	struct:utmp	typeref:struct:utmp::timeval	access:public
utmp::ut_tv	utmp.h	/^	} ut_tv;		\/* Time entry was made. *\/$/;"	m	struct:utmp	typeref:struct:utmp::__anon5	access:public
utmp::ut_tv	utmp.h	/^	} ut_tv;		\/* Time entry was made. *\/$/;"	m	struct:utmp	typeref:struct:utmp::__anon6	access:public
utmp::ut_type	utmp.h	/^	short ut_type;		\/* Type of login. *\/$/;"	m	struct:utmp	access:public
utmp::ut_user	utmp.h	/^	char ut_user[UT_NAMESIZE];	\/* Username. *\/$/;"	m	struct:utmp	access:public
utmpname	utmp.h	/^    extern int utmpname(const char *);$/;"	p	signature:(const char *)
utmpx	utmpx.h	/^    struct utmpx {$/;"	s
utmpx::__anon74::tv_sec	utmpx.h	/^	    int32_t tv_sec;	\/* Seconds. *\/$/;"	m	struct:utmpx::__anon74	access:public
utmpx::__anon74::tv_usec	utmpx.h	/^	    int32_t tv_usec;	\/* Microseconds. *\/$/;"	m	struct:utmpx::__anon74	access:public
utmpx::__anon75::tv_sec	utmpx.h	/^	    int32_t tv_sec;	\/* Seconds. *\/$/;"	m	struct:utmpx::__anon75	access:public
utmpx::__anon75::tv_usec	utmpx.h	/^	    int32_t tv_usec;	\/* Microseconds. *\/$/;"	m	struct:utmpx::__anon75	access:public
utmpx::__unused	utmpx.h	/^	char __unused[20];	\/* Reserved for future use. *\/$/;"	m	struct:utmpx	access:public
utmpx::ut_addr_v6	utmpx.h	/^	int32_t ut_addr_v6[4];	\/* Internet address of remote host. *\/$/;"	m	struct:utmpx	access:public
utmpx::ut_exit	utmpx.h	/^	struct exit_status ut_exit;	\/* Exit status of a process marked as DEAD_PROCESS. *\/$/;"	m	struct:utmpx	typeref:struct:utmpx::exit_status	access:public
utmpx::ut_host	utmpx.h	/^	char ut_host[UT_HOSTSIZE];	\/* Hostname for remote login. *\/$/;"	m	struct:utmpx	access:public
utmpx::ut_id	utmpx.h	/^	char ut_id[4];		\/* Inittab ID. *\/$/;"	m	struct:utmpx	access:public
utmpx::ut_line	utmpx.h	/^	char ut_line[UT_LINESIZE];	\/* Devicename. *\/$/;"	m	struct:utmpx	access:public
utmpx::ut_pid	utmpx.h	/^	pid_t ut_pid;		\/* Process ID of login process. *\/$/;"	m	struct:utmpx	access:public
utmpx::ut_session	utmpx.h	/^	int32_t ut_session;	\/* Session ID, used for windowing. *\/$/;"	m	struct:utmpx	access:public
utmpx::ut_session	utmpx.h	/^	long int ut_session;	\/* Session ID, used for windowing. *\/$/;"	m	struct:utmpx	access:public
utmpx::ut_tv	utmpx.h	/^	struct timeval ut_tv;	\/* Time entry was made. *\/$/;"	m	struct:utmpx	typeref:struct:utmpx::timeval	access:public
utmpx::ut_tv	utmpx.h	/^	} ut_tv;		\/* Time entry was made. *\/$/;"	m	struct:utmpx	typeref:struct:utmpx::__anon74	access:public
utmpx::ut_tv	utmpx.h	/^	} ut_tv;		\/* Time entry was made. *\/$/;"	m	struct:utmpx	typeref:struct:utmpx::__anon75	access:public
utmpx::ut_type	utmpx.h	/^	short ut_type;		\/* Type of login. *\/$/;"	m	struct:utmpx	access:public
utmpx::ut_user	utmpx.h	/^	char ut_user[UT_NAMESIZE];	\/* Username. *\/$/;"	m	struct:utmpx	access:public
utsname	sys/utsname.h	/^    struct utsname {$/;"	s
utsname::domainname	sys/utsname.h	/^	char domainname[65];$/;"	m	struct:utsname	access:public
utsname::machine	sys/utsname.h	/^	char machine[65];$/;"	m	struct:utsname	access:public
utsname::nodename	sys/utsname.h	/^	char nodename[65];$/;"	m	struct:utsname	access:public
utsname::release	sys/utsname.h	/^	char release[65];$/;"	m	struct:utsname	access:public
utsname::sysname	sys/utsname.h	/^	char sysname[65];$/;"	m	struct:utsname	access:public
utsname::version	sys/utsname.h	/^	char version[65];$/;"	m	struct:utsname	access:public
v_regs	ucontext.h	/^	vrregset_t *v_regs;$/;"	m	struct:__anon131	access:public
val	getopt.h	/^	int val;$/;"	m	struct:option	access:public
value	alsa/seq_event.h	/^	    int value;		\/* affected value (e.g. tempo) *\/$/;"	m	union:snd_seq_ev_queue_control::__anon11
value	alsa/seq_event.h	/^	int value;$/;"	m	struct:snd_seq_ev_ctrl	access:public
value	alsa/seq_event.h	/^	unsigned int value;$/;"	m	struct:snd_seq_queue_skew	access:public
value	cups/cups.h	/^	char *value;$/;"	m	struct:__anon90	access:public
value	cups/ppd.h	/^	char *value;$/;"	m	struct:__anon110	access:public
value	rpc/xdr.h	/^	int value;$/;"	m	struct:xdr_discrim	access:public
value	wctype.h	/^	wint_t value;$/;"	m	struct:__anon52	access:public
variable_sizes	cups/ppd.h	/^	int variable_sizes;$/;"	m	struct:__anon111	access:public
vasprintf	stdio.h	/^    extern int vasprintf(char **, const char *, va_list);$/;"	p	signature:(char **, const char *, va_list)
vdprintf	stdio.h	/^    extern int vdprintf(int, const char *, va_list);$/;"	p	signature:(int, const char *, va_list)
velocity	alsa/seq_event.h	/^	unsigned char velocity;$/;"	m	struct:snd_seq_ev_note	access:public
ver	alsa/mixer.h	/^	int ver;$/;"	m	struct:snd_mixer_selem_regopt	access:public
version	alsa/control_external.h	/^	unsigned int version;$/;"	m	struct:snd_ctl_ext	access:public
version	alsa/pcm_extplug.h	/^	unsigned int version;$/;"	m	struct:snd_pcm_extplug	access:public
version	cups/cups.h	/^	http_version_t version;$/;"	m	struct:__anon100	access:public
version	sys/utsname.h	/^	char version[65];$/;"	m	struct:utsname	access:public
vfork	unistd.h	/^    extern pid_t vfork(void);$/;"	p	signature:(void)
vfprintf	stdio.h	/^    extern int vfprintf(FILE *, const char *, va_list);$/;"	p	signature:(FILE *, const char *, va_list)
vfscanf	stdio.h	/^    extern int vfscanf(FILE *, const char *, va_list);$/;"	p	signature:(FILE *, const char *, va_list)
vfwprintf	wchar.h	/^    extern int vfwprintf(FILE *, const wchar_t *, va_list);$/;"	p	signature:(FILE *, const wchar_t *, va_list)
vfwscanf	wchar.h	/^    extern int vfwscanf(FILE *, const wchar_t *, va_list);$/;"	p	signature:(FILE *, const wchar_t *, va_list)
vidattr	curses.h	/^    extern int vidattr(chtype);$/;"	p	signature:(chtype)
vidattr	ncurses.h	/^    extern int vidattr(chtype);$/;"	p	signature:(chtype)
vidputs	curses.h	/^    extern int vidputs(chtype, int (*)(int)$/;"	p	signature:(chtype, int (*)(int) )
vidputs	ncurses.h	/^    extern int vidputs(chtype, int (*)(int)$/;"	p	signature:(chtype, int (*)(int) )
vline	curses.h	/^    extern int vline(chtype, int);$/;"	p	signature:(chtype, int)
vline	ncurses.h	/^    extern int vline(chtype, int);$/;"	p	signature:(chtype, int)
vmx_reserve	ucontext.h	/^	long int vmx_reserve[69];$/;"	m	struct:__anon131	access:public
voidp	zlib.h	/^    typedef void *voidp;$/;"	t
voidpc	zlib.h	/^    typedef void *const voidpc;$/;"	t
voidpf	zlib.h	/^    typedef void *voidpf;$/;"	t
volume	alsa/seq_event.h	/^	    snd_seq_ev_volume_t volume;	\/* volume *\/$/;"	m	union:snd_seq_ev_sample_control::__anon12
volume	alsa/seq_event.h	/^	short int volume;$/;"	m	struct:snd_seq_ev_volume	access:public
vprintf	stdio.h	/^    extern int vprintf(const char *, va_list);$/;"	p	signature:(const char *, va_list)
vrregs	ucontext.h	/^	unsigned int vrregs[128];$/;"	m	struct:_libc_vrstate	access:public
vrregs	ucontext.h	/^	vrregset_t vrregs;$/;"	m	struct:__anon130	access:public
vrregset_t	ucontext.h	/^    typedef struct _libc_vrstate vrregset_t$/;"	t	typeref:struct:_libc_vrstate
vrsave	ucontext.h	/^	unsigned int vrsave;$/;"	m	struct:_libc_vrstate	access:public
vscanf	stdio.h	/^    extern int vscanf(const char *, va_list);$/;"	p	signature:(const char *, va_list)
vscr	ucontext.h	/^	unsigned int vscr;$/;"	m	struct:_libc_vrstate	access:public
vscr	ucontext.h	/^	vscr_t vscr;$/;"	m	struct:_libc_vrstate	access:public
vscr_t	ucontext.h	/^    typedef struct _libc_vscr vscr_t;$/;"	t	typeref:struct:_libc_vscr
vscr_word	ucontext.h	/^	int vscr_word;$/;"	m	struct:_libc_vscr	access:public
vsnprintf	stdio.h	/^    extern int vsnprintf(char *, size_t, const char *, va_list);$/;"	p	signature:(char *, size_t, const char *, va_list)
vsprintf	stdio.h	/^    extern int vsprintf(char *, const char *, va_list);$/;"	p	signature:(char *, const char *, va_list)
vsscanf	stdio.h	/^    extern int vsscanf(const char *, const char *, va_list);$/;"	p	signature:(const char *, const char *, va_list)
vswprintf	wchar.h	/^    extern int vswprintf(wchar_t *, size_t, const wchar_t *, va_list);$/;"	p	signature:(wchar_t *, size_t, const wchar_t *, va_list)
vswscanf	wchar.h	/^    extern int vswscanf(const wchar_t *, const wchar_t *, va_list);$/;"	p	signature:(const wchar_t *, const wchar_t *, va_list)
vsyslog	syslog.h	/^    extern void vsyslog(int, const char *, va_list);$/;"	p	signature:(int, const char *, va_list)
vw_printw	curses.h	/^    extern int vw_printw(WINDOW *, const char *, va_list);$/;"	p	signature:(WINDOW *, const char *, va_list)
vw_printw	ncurses.h	/^    extern int vw_printw(WINDOW *, const char *, va_list);$/;"	p	signature:(WINDOW *, const char *, va_list)
vw_scanw	curses.h	/^    extern int vw_scanw(WINDOW *, const char *, va_list);$/;"	p	signature:(WINDOW *, const char *, va_list)
vw_scanw	ncurses.h	/^    extern int vw_scanw(WINDOW *, const char *, va_list);$/;"	p	signature:(WINDOW *, const char *, va_list)
vwprintf	wchar.h	/^    extern int vwprintf(const wchar_t *, va_list);$/;"	p	signature:(const wchar_t *, va_list)
vwprintw	curses.h	/^    extern int vwprintw(WINDOW *, char *, va_list);$/;"	p	signature:(WINDOW *, char *, va_list)
vwprintw	ncurses.h	/^    extern int vwprintw(WINDOW *, char *, va_list);$/;"	p	signature:(WINDOW *, char *, va_list)
vwscanf	wchar.h	/^    extern int vwscanf(const wchar_t *, va_list);$/;"	p	signature:(const wchar_t *, va_list)
vwscanw	curses.h	/^    extern int vwscanw(WINDOW *, const char *, va_list);$/;"	p	signature:(WINDOW *, const char *, va_list)
vwscanw	ncurses.h	/^    extern int vwscanw(WINDOW *, const char *, va_list);$/;"	p	signature:(WINDOW *, const char *, va_list)
waddch	curses.h	/^    extern int waddch(WINDOW *, const chtype);$/;"	p	signature:(WINDOW *, const chtype)
waddch	ncurses.h	/^    extern int waddch(WINDOW *, const chtype);$/;"	p	signature:(WINDOW *, const chtype)
waddchnstr	curses.h	/^    extern int waddchnstr(WINDOW *, const chtype *, int);$/;"	p	signature:(WINDOW *, const chtype *, int)
waddchnstr	ncurses.h	/^    extern int waddchnstr(WINDOW *, const chtype *, int);$/;"	p	signature:(WINDOW *, const chtype *, int)
waddchstr	curses.h	/^    extern int waddchstr(WINDOW *, const chtype *);$/;"	p	signature:(WINDOW *, const chtype *)
waddchstr	ncurses.h	/^    extern int waddchstr(WINDOW *, const chtype *);$/;"	p	signature:(WINDOW *, const chtype *)
waddnstr	curses.h	/^    extern int waddnstr(WINDOW *, const char *, int);$/;"	p	signature:(WINDOW *, const char *, int)
waddnstr	ncurses.h	/^    extern int waddnstr(WINDOW *, const char *, int);$/;"	p	signature:(WINDOW *, const char *, int)
waddstr	curses.h	/^    extern int waddstr(WINDOW *, const char *);$/;"	p	signature:(WINDOW *, const char *)
waddstr	ncurses.h	/^    extern int waddstr(WINDOW *, const char *);$/;"	p	signature:(WINDOW *, const char *)
wait	sys/wait.h	/^    extern pid_t wait(int *);$/;"	p	signature:(int *)
wait4	sys/wait.h	/^    extern pid_t wait4(pid_t, int *, int, struct rusage *);$/;"	p	signature:(pid_t, int *, int, struct rusage *)
waitid	sys/wait.h	/^    extern int waitid(idtype_t, id_t, siginfo_t *, int);$/;"	p	signature:(idtype_t, id_t, siginfo_t *, int)
waitpid	sys/wait.h	/^    extern pid_t waitpid(pid_t, int *, int);$/;"	p	signature:(pid_t, int *, int)
wattr_get	curses.h	/^    extern int wattr_get(WINDOW *, attr_t *, short *, void *);$/;"	p	signature:(WINDOW *, attr_t *, short *, void *)
wattr_get	ncurses.h	/^    extern int wattr_get(WINDOW *, attr_t *, short *, void *);$/;"	p	signature:(WINDOW *, attr_t *, short *, void *)
wattr_off	curses.h	/^    extern int wattr_off(WINDOW *, attr_t, void *);$/;"	p	signature:(WINDOW *, attr_t, void *)
wattr_off	ncurses.h	/^    extern int wattr_off(WINDOW *, attr_t, void *);$/;"	p	signature:(WINDOW *, attr_t, void *)
wattr_on	curses.h	/^    extern int wattr_on(WINDOW *, attr_t, void *);$/;"	p	signature:(WINDOW *, attr_t, void *)
wattr_on	ncurses.h	/^    extern int wattr_on(WINDOW *, attr_t, void *);$/;"	p	signature:(WINDOW *, attr_t, void *)
wattr_set	curses.h	/^    extern int wattr_set(WINDOW *, attr_t, short, void *);$/;"	p	signature:(WINDOW *, attr_t, short, void *)
wattr_set	ncurses.h	/^    extern int wattr_set(WINDOW *, attr_t, short, void *);$/;"	p	signature:(WINDOW *, attr_t, short, void *)
wattroff	curses.h	/^    extern int wattroff(WINDOW *, int);$/;"	p	signature:(WINDOW *, int)
wattroff	ncurses.h	/^    extern int wattroff(WINDOW *, int);$/;"	p	signature:(WINDOW *, int)
wattron	curses.h	/^    extern int wattron(WINDOW *, int);$/;"	p	signature:(WINDOW *, int)
wattron	ncurses.h	/^    extern int wattron(WINDOW *, int);$/;"	p	signature:(WINDOW *, int)
wattrset	curses.h	/^    extern int wattrset(WINDOW *, int);$/;"	p	signature:(WINDOW *, int)
wattrset	ncurses.h	/^    extern int wattrset(WINDOW *, int);$/;"	p	signature:(WINDOW *, int)
wbkgd	curses.h	/^    extern int wbkgd(WINDOW *, chtype);$/;"	p	signature:(WINDOW *, chtype)
wbkgd	ncurses.h	/^    extern int wbkgd(WINDOW *, chtype);$/;"	p	signature:(WINDOW *, chtype)
wbkgdset	curses.h	/^    extern void wbkgdset(WINDOW *, chtype);$/;"	p	signature:(WINDOW *, chtype)
wbkgdset	ncurses.h	/^    extern void wbkgdset(WINDOW *, chtype);$/;"	p	signature:(WINDOW *, chtype)
wborder	curses.h	/^    extern int wborder(WINDOW *, chtype, chtype, chtype, chtype, chtype,$/;"	p	signature:(WINDOW *, chtype, chtype, chtype, chtype, chtype, chtype, chtype, chtype)
wborder	ncurses.h	/^    extern int wborder(WINDOW *, chtype, chtype, chtype, chtype, chtype,$/;"	p	signature:(WINDOW *, chtype, chtype, chtype, chtype, chtype, chtype, chtype, chtype)
wchgat	curses.h	/^    extern int wchgat(WINDOW *, int, attr_t, short, const void *);$/;"	p	signature:(WINDOW *, int, attr_t, short, const void *)
wchgat	ncurses.h	/^    extern int wchgat(WINDOW *, int, attr_t, short, const void *);$/;"	p	signature:(WINDOW *, int, attr_t, short, const void *)
wclear	curses.h	/^    extern int wclear(WINDOW *);$/;"	p	signature:(WINDOW *)
wclear	ncurses.h	/^    extern int wclear(WINDOW *);$/;"	p	signature:(WINDOW *)
wclrtobot	curses.h	/^    extern int wclrtobot(WINDOW *);$/;"	p	signature:(WINDOW *)
wclrtobot	ncurses.h	/^    extern int wclrtobot(WINDOW *);$/;"	p	signature:(WINDOW *)
wclrtoeol	curses.h	/^    extern int wclrtoeol(WINDOW *);$/;"	p	signature:(WINDOW *)
wclrtoeol	ncurses.h	/^    extern int wclrtoeol(WINDOW *);$/;"	p	signature:(WINDOW *)
wcolor_set	curses.h	/^    extern int wcolor_set(WINDOW *, short, void *);$/;"	p	signature:(WINDOW *, short, void *)
wcolor_set	ncurses.h	/^    extern int wcolor_set(WINDOW *, short, void *);$/;"	p	signature:(WINDOW *, short, void *)
wcpcpy	wchar.h	/^    extern wchar_t *wcpcpy(wchar_t *, const wchar_t *);$/;"	p	signature:(wchar_t *, const wchar_t *)
wcpncpy	wchar.h	/^    extern wchar_t *wcpncpy(wchar_t *, const wchar_t *, size_t);$/;"	p	signature:(wchar_t *, const wchar_t *, size_t)
wcrtomb	wchar.h	/^    extern size_t wcrtomb(char *, wchar_t, mbstate_t *);$/;"	p	signature:(char *, wchar_t, mbstate_t *)
wcscasecmp	wchar.h	/^    extern int wcscasecmp(const wchar_t *, const wchar_t *);$/;"	p	signature:(const wchar_t *, const wchar_t *)
wcscat	wchar.h	/^    extern wchar_t *wcscat(wchar_t *, const wchar_t *);$/;"	p	signature:(wchar_t *, const wchar_t *)
wcschr	wchar.h	/^    extern wchar_t *wcschr(const wchar_t *, wchar_t);$/;"	p	signature:(const wchar_t *, wchar_t)
wcscmp	wchar.h	/^    extern int wcscmp(const wchar_t *, const wchar_t *);$/;"	p	signature:(const wchar_t *, const wchar_t *)
wcscoll	wchar.h	/^    extern int wcscoll(const wchar_t *, const wchar_t *);$/;"	p	signature:(const wchar_t *, const wchar_t *)
wcscpy	wchar.h	/^    extern wchar_t *wcscpy(wchar_t *, const wchar_t *);$/;"	p	signature:(wchar_t *, const wchar_t *)
wcscspn	wchar.h	/^    extern size_t wcscspn(const wchar_t *, const wchar_t *);$/;"	p	signature:(const wchar_t *, const wchar_t *)
wcsdup	wchar.h	/^    extern wchar_t *wcsdup(const wchar_t *);$/;"	p	signature:(const wchar_t *)
wcsftime	wchar.h	/^    extern size_t wcsftime(wchar_t *, size_t, const wchar_t *,$/;"	p	signature:(wchar_t *, size_t, const wchar_t *, const struct tm *)
wcslen	wchar.h	/^    extern size_t wcslen(const wchar_t *);$/;"	p	signature:(const wchar_t *)
wcsncasecmp	wchar.h	/^    extern int wcsncasecmp(const wchar_t *, const wchar_t *, size_t);$/;"	p	signature:(const wchar_t *, const wchar_t *, size_t)
wcsncat	wchar.h	/^    extern wchar_t *wcsncat(wchar_t *, const wchar_t *, size_t);$/;"	p	signature:(wchar_t *, const wchar_t *, size_t)
wcsncmp	wchar.h	/^    extern int wcsncmp(const wchar_t *, const wchar_t *, size_t);$/;"	p	signature:(const wchar_t *, const wchar_t *, size_t)
wcsncpy	wchar.h	/^    extern wchar_t *wcsncpy(wchar_t *, const wchar_t *, size_t);$/;"	p	signature:(wchar_t *, const wchar_t *, size_t)
wcsnlen	wchar.h	/^    extern size_t wcsnlen(const wchar_t *, size_t);$/;"	p	signature:(const wchar_t *, size_t)
wcsnrtombs	wchar.h	/^    extern size_t wcsnrtombs(char *, const wchar_t * *, size_t, size_t,$/;"	p	signature:(char *, const wchar_t * *, size_t, size_t, mbstate_t *)
wcspbrk	wchar.h	/^    extern wchar_t *wcspbrk(const wchar_t *, const wchar_t *);$/;"	p	signature:(const wchar_t *, const wchar_t *)
wcsrchr	wchar.h	/^    extern wchar_t *wcsrchr(const wchar_t *, wchar_t);$/;"	p	signature:(const wchar_t *, wchar_t)
wcsrtombs	wchar.h	/^    extern size_t wcsrtombs(char *, const wchar_t * *, size_t,$/;"	p	signature:(char *, const wchar_t * *, size_t, mbstate_t *)
wcsspn	wchar.h	/^    extern size_t wcsspn(const wchar_t *, const wchar_t *);$/;"	p	signature:(const wchar_t *, const wchar_t *)
wcsstr	wchar.h	/^    extern wchar_t *wcsstr(const wchar_t *, const wchar_t *);$/;"	p	signature:(const wchar_t *, const wchar_t *)
wcstod	wchar.h	/^    extern double wcstod(const wchar_t *, wchar_t * *);$/;"	p	signature:(const wchar_t *, wchar_t * *)
wcstof	wchar.h	/^    extern float wcstof(const wchar_t *, wchar_t * *);$/;"	p	signature:(const wchar_t *, wchar_t * *)
wcstoimax	inttypes.h	/^    extern intmax_t wcstoimax(const wchar_t *, wchar_t * *, int);$/;"	p	signature:(const wchar_t *, wchar_t * *, int)
wcstok	wchar.h	/^    extern wchar_t *wcstok(wchar_t *, const wchar_t *, wchar_t * *);$/;"	p	signature:(wchar_t *, const wchar_t *, wchar_t * *)
wcstol	wchar.h	/^    extern long int wcstol(const wchar_t *, wchar_t * *, int);$/;"	p	signature:(const wchar_t *, wchar_t * *, int)
wcstold	wchar.h	/^    extern long double wcstold(const wchar_t *, wchar_t * *);$/;"	p	signature:(const wchar_t *, wchar_t * *)
wcstoll	wchar.h	/^    extern long long int wcstoll(const wchar_t *, wchar_t * *, int);$/;"	p	signature:(const wchar_t *, wchar_t * *, int)
wcstombs	stdlib.h	/^    extern size_t wcstombs(char *, const wchar_t *, size_t);$/;"	p	signature:(char *, const wchar_t *, size_t)
wcstoq	wchar.h	/^    extern long long int wcstoq(const wchar_t *, wchar_t * *, int);$/;"	p	signature:(const wchar_t *, wchar_t * *, int)
wcstoul	wchar.h	/^    extern unsigned long int wcstoul(const wchar_t *, wchar_t * *, int);$/;"	p	signature:(const wchar_t *, wchar_t * *, int)
wcstoull	wchar.h	/^    extern unsigned long long int wcstoull(const wchar_t *, wchar_t * *,$/;"	p	signature:(const wchar_t *, wchar_t * *, int)
wcstoumax	inttypes.h	/^    extern uintmax_t wcstoumax(const wchar_t *, wchar_t * *, int);$/;"	p	signature:(const wchar_t *, wchar_t * *, int)
wcstouq	wchar.h	/^    extern unsigned long long int wcstouq(const wchar_t *, wchar_t * *,$/;"	p	signature:(const wchar_t *, wchar_t * *, int)
wcswcs	wchar.h	/^    extern wchar_t *wcswcs(const wchar_t *, const wchar_t *);$/;"	p	signature:(const wchar_t *, const wchar_t *)
wcswidth	wchar.h	/^    extern int wcswidth(const wchar_t *, size_t);$/;"	p	signature:(const wchar_t *, size_t)
wcsxfrm	wchar.h	/^    extern size_t wcsxfrm(wchar_t *, const wchar_t *, size_t);$/;"	p	signature:(wchar_t *, const wchar_t *, size_t)
wctob	wchar.h	/^    extern int wctob(wint_t);$/;"	p	signature:(wint_t)
wctomb	stdlib.h	/^    extern int wctomb(char *, wchar_t);$/;"	p	signature:(char *, wchar_t)
wctrans	wctype.h	/^    extern wctrans_t wctrans(const char *);$/;"	p	signature:(const char *)
wctrans_t	wctype.h	/^    typedef const int32_t *wctrans_t;$/;"	t
wctype	wctype.h	/^    extern wctype_t wctype(const char *);$/;"	p	signature:(const char *)
wctype_t	wctype.h	/^    typedef unsigned long int wctype_t;$/;"	t
wcursyncup	curses.h	/^    extern void wcursyncup(WINDOW *);$/;"	p	signature:(WINDOW *)
wcursyncup	ncurses.h	/^    extern void wcursyncup(WINDOW *);$/;"	p	signature:(WINDOW *)
wcwidth	wchar.h	/^    extern int wcwidth(wchar_t);$/;"	p	signature:(wchar_t)
wdelch	curses.h	/^    extern int wdelch(WINDOW *);$/;"	p	signature:(WINDOW *)
wdelch	ncurses.h	/^    extern int wdelch(WINDOW *);$/;"	p	signature:(WINDOW *)
wdeleteln	curses.h	/^    extern int wdeleteln(WINDOW *);$/;"	p	signature:(WINDOW *)
wdeleteln	ncurses.h	/^    extern int wdeleteln(WINDOW *);$/;"	p	signature:(WINDOW *)
we_offs	wordexp.h	/^	size_t we_offs;$/;"	m	struct:__anon43	access:public
we_wordc	wordexp.h	/^	size_t we_wordc;$/;"	m	struct:__anon43	access:public
we_wordv	wordexp.h	/^	char **we_wordv;$/;"	m	struct:__anon43	access:public
wechochar	curses.h	/^    extern int wechochar(WINDOW *, const chtype);$/;"	p	signature:(WINDOW *, const chtype)
wechochar	ncurses.h	/^    extern int wechochar(WINDOW *, const chtype);$/;"	p	signature:(WINDOW *, const chtype)
werase	curses.h	/^    extern int werase(WINDOW *);$/;"	p	signature:(WINDOW *)
werase	ncurses.h	/^    extern int werase(WINDOW *);$/;"	p	signature:(WINDOW *)
wgetch	curses.h	/^    extern int wgetch(WINDOW *);$/;"	p	signature:(WINDOW *)
wgetch	ncurses.h	/^    extern int wgetch(WINDOW *);$/;"	p	signature:(WINDOW *)
wgetnstr	curses.h	/^    extern int wgetnstr(WINDOW *, char *, int);$/;"	p	signature:(WINDOW *, char *, int)
wgetnstr	ncurses.h	/^    extern int wgetnstr(WINDOW *, char *, int);$/;"	p	signature:(WINDOW *, char *, int)
wgetstr	curses.h	/^    extern int wgetstr(WINDOW *, char *);$/;"	p	signature:(WINDOW *, char *)
wgetstr	ncurses.h	/^    extern int wgetstr(WINDOW *, char *);$/;"	p	signature:(WINDOW *, char *)
where	rpc/rpc_msg.h	/^		caddr_t where;$/;"	m	struct:accepted_reply::__anon134::__anon136	access:public
whline	curses.h	/^    extern int whline(WINDOW *, chtype, int);$/;"	p	signature:(WINDOW *, chtype, int)
whline	ncurses.h	/^    extern int whline(WINDOW *, chtype, int);$/;"	p	signature:(WINDOW *, chtype, int)
width	cups/ppd.h	/^	float width;$/;"	m	struct:__anon107	access:public
winch	curses.h	/^    extern chtype winch(WINDOW *);$/;"	p	signature:(WINDOW *)
winch	ncurses.h	/^    extern chtype winch(WINDOW *);$/;"	p	signature:(WINDOW *)
winchnstr	curses.h	/^    extern int winchnstr(WINDOW *, chtype *, int);$/;"	p	signature:(WINDOW *, chtype *, int)
winchnstr	ncurses.h	/^    extern int winchnstr(WINDOW *, chtype *, int);$/;"	p	signature:(WINDOW *, chtype *, int)
winchstr	curses.h	/^    extern int winchstr(WINDOW *, chtype *);$/;"	p	signature:(WINDOW *, chtype *)
winchstr	ncurses.h	/^    extern int winchstr(WINDOW *, chtype *);$/;"	p	signature:(WINDOW *, chtype *)
winnstr	curses.h	/^    extern int winnstr(WINDOW *, char *, int);$/;"	p	signature:(WINDOW *, char *, int)
winnstr	ncurses.h	/^    extern int winnstr(WINDOW *, char *, int);$/;"	p	signature:(WINDOW *, char *, int)
winsch	curses.h	/^    extern int winsch(WINDOW *, chtype);$/;"	p	signature:(WINDOW *, chtype)
winsch	ncurses.h	/^    extern int winsch(WINDOW *, chtype);$/;"	p	signature:(WINDOW *, chtype)
winsdelln	curses.h	/^    extern int winsdelln(WINDOW *, int);$/;"	p	signature:(WINDOW *, int)
winsdelln	ncurses.h	/^    extern int winsdelln(WINDOW *, int);$/;"	p	signature:(WINDOW *, int)
winsertln	curses.h	/^    extern int winsertln(WINDOW *);$/;"	p	signature:(WINDOW *)
winsertln	ncurses.h	/^    extern int winsertln(WINDOW *);$/;"	p	signature:(WINDOW *)
winsize	sys/ioctl.h	/^    struct winsize {$/;"	s
winsize::ws_col	sys/ioctl.h	/^	unsigned short ws_col;	\/* Columns, in characters. *\/$/;"	m	struct:winsize	access:public
winsize::ws_row	sys/ioctl.h	/^	unsigned short ws_row;	\/* Rows, in characters. *\/$/;"	m	struct:winsize	access:public
winsize::ws_xpixel	sys/ioctl.h	/^	unsigned short ws_xpixel;	\/* Horizontal pixels. *\/$/;"	m	struct:winsize	access:public
winsize::ws_ypixel	sys/ioctl.h	/^	unsigned short ws_ypixel;	\/* Vertical pixels. *\/$/;"	m	struct:winsize	access:public
winsnstr	curses.h	/^    extern int winsnstr(WINDOW *, const char *, int);$/;"	p	signature:(WINDOW *, const char *, int)
winsnstr	ncurses.h	/^    extern int winsnstr(WINDOW *, const char *, int);$/;"	p	signature:(WINDOW *, const char *, int)
winsstr	curses.h	/^    extern int winsstr(WINDOW *, const char *);$/;"	p	signature:(WINDOW *, const char *)
winsstr	ncurses.h	/^    extern int winsstr(WINDOW *, const char *);$/;"	p	signature:(WINDOW *, const char *)
winstr	curses.h	/^    extern int winstr(WINDOW *, char *);$/;"	p	signature:(WINDOW *, char *)
winstr	ncurses.h	/^    extern int winstr(WINDOW *, char *);$/;"	p	signature:(WINDOW *, char *)
wint_t	wctype.h	/^    typedef unsigned int wint_t;$/;"	t
wmemchr	wchar.h	/^    extern wchar_t *wmemchr(const wchar_t *, wchar_t, size_t);$/;"	p	signature:(const wchar_t *, wchar_t, size_t)
wmemcmp	wchar.h	/^    extern int wmemcmp(const wchar_t *, const wchar_t *, size_t);$/;"	p	signature:(const wchar_t *, const wchar_t *, size_t)
wmemcpy	wchar.h	/^    extern wchar_t *wmemcpy(wchar_t *, const wchar_t *, size_t);$/;"	p	signature:(wchar_t *, const wchar_t *, size_t)
wmemmove	wchar.h	/^    extern wchar_t *wmemmove(wchar_t *, const wchar_t *, size_t);$/;"	p	signature:(wchar_t *, const wchar_t *, size_t)
wmemset	wchar.h	/^    extern wchar_t *wmemset(wchar_t *, wchar_t, size_t);$/;"	p	signature:(wchar_t *, wchar_t, size_t)
wmove	curses.h	/^    extern int wmove(WINDOW *, int, int);$/;"	p	signature:(WINDOW *, int, int)
wmove	ncurses.h	/^    extern int wmove(WINDOW *, int, int);$/;"	p	signature:(WINDOW *, int, int)
wnoutrefresh	curses.h	/^    extern int wnoutrefresh(WINDOW *);$/;"	p	signature:(WINDOW *)
wnoutrefresh	ncurses.h	/^    extern int wnoutrefresh(WINDOW *);$/;"	p	signature:(WINDOW *)
wordexp	wordexp.h	/^    extern int wordexp(const char *, wordexp_t *, int);$/;"	p	signature:(const char *, wordexp_t *, int)
wordexp_t	wordexp.h	/^    } wordexp_t;$/;"	t	typeref:struct:__anon43
wordfree	wordexp.h	/^    extern void wordfree(wordexp_t *);$/;"	p	signature:(wordexp_t *)
wprintf	wchar.h	/^    extern int wprintf(const wchar_t *, ...);$/;"	p	signature:(const wchar_t *, ...)
wprintw	curses.h	/^    extern int wprintw(WINDOW *, char *, ...);$/;"	p	signature:(WINDOW *, char *, ...)
wprintw	ncurses.h	/^    extern int wprintw(WINDOW *, char *, ...);$/;"	p	signature:(WINDOW *, char *, ...)
wredrawln	curses.h	/^    extern int wredrawln(WINDOW *, int, int);$/;"	p	signature:(WINDOW *, int, int)
wredrawln	ncurses.h	/^    extern int wredrawln(WINDOW *, int, int);$/;"	p	signature:(WINDOW *, int, int)
wrefresh	curses.h	/^    extern int wrefresh(WINDOW *);$/;"	p	signature:(WINDOW *)
wrefresh	ncurses.h	/^    extern int wrefresh(WINDOW *);$/;"	p	signature:(WINDOW *)
write	alsa/iatomic.h	/^	const volatile snd_atomic_write_t *write;$/;"	m	struct:__anon15	access:public
write	unistd.h	/^    extern ssize_t write(int, const void *, size_t);$/;"	p	signature:(int, const void *, size_t)
write_bytes	alsa/control_external.h	/^	int (*write_bytes) (void);$/;"	m	struct:snd_ctl_ext_callback	access:public
write_enumerated	alsa/control_external.h	/^	int (*write_enumerated) (void);$/;"	m	struct:snd_ctl_ext_callback	access:public
write_iec958	alsa/control_external.h	/^	int (*write_iec958) (void);$/;"	m	struct:snd_ctl_ext_callback	access:public
write_integer	alsa/control_external.h	/^	int (*write_integer) (void);$/;"	m	struct:snd_ctl_ext_callback	access:public
write_integer64	alsa/control_external.h	/^	int (*write_integer64) (void);$/;"	m	struct:snd_ctl_ext_callback	access:public
writev	sys/uio.h	/^    extern ssize_t writev(int, const struct iovec *, int);$/;"	p	signature:(int, const struct iovec *, int)
ws_col	sys/ioctl.h	/^	unsigned short ws_col;	\/* Columns, in characters. *\/$/;"	m	struct:winsize	access:public
ws_row	sys/ioctl.h	/^	unsigned short ws_row;	\/* Rows, in characters. *\/$/;"	m	struct:winsize	access:public
ws_xpixel	sys/ioctl.h	/^	unsigned short ws_xpixel;	\/* Horizontal pixels. *\/$/;"	m	struct:winsize	access:public
ws_ypixel	sys/ioctl.h	/^	unsigned short ws_ypixel;	\/* Vertical pixels. *\/$/;"	m	struct:winsize	access:public
wscanf	wchar.h	/^    extern int wscanf(const wchar_t *, ...);$/;"	p	signature:(const wchar_t *, ...)
wscanw	curses.h	/^    extern int wscanw(WINDOW *, const char *, ...);$/;"	p	signature:(WINDOW *, const char *, ...)
wscanw	ncurses.h	/^    extern int wscanw(WINDOW *, const char *, ...);$/;"	p	signature:(WINDOW *, const char *, ...)
wscrl	curses.h	/^    extern int wscrl(WINDOW *, int);$/;"	p	signature:(WINDOW *, int)
wscrl	ncurses.h	/^    extern int wscrl(WINDOW *, int);$/;"	p	signature:(WINDOW *, int)
wsetscrreg	curses.h	/^    extern int wsetscrreg(WINDOW *, int, int);$/;"	p	signature:(WINDOW *, int, int)
wsetscrreg	ncurses.h	/^    extern int wsetscrreg(WINDOW *, int, int);$/;"	p	signature:(WINDOW *, int, int)
wstandend	curses.h	/^    extern int wstandend(WINDOW *);$/;"	p	signature:(WINDOW *)
wstandend	ncurses.h	/^    extern int wstandend(WINDOW *);$/;"	p	signature:(WINDOW *)
wstandout	curses.h	/^    extern int wstandout(WINDOW *);$/;"	p	signature:(WINDOW *)
wstandout	ncurses.h	/^    extern int wstandout(WINDOW *);$/;"	p	signature:(WINDOW *)
wsyncdown	curses.h	/^    extern void wsyncdown(WINDOW *);$/;"	p	signature:(WINDOW *)
wsyncdown	ncurses.h	/^    extern void wsyncdown(WINDOW *);$/;"	p	signature:(WINDOW *)
wsyncup	curses.h	/^    extern void wsyncup(WINDOW *);$/;"	p	signature:(WINDOW *)
wsyncup	ncurses.h	/^    extern void wsyncup(WINDOW *);$/;"	p	signature:(WINDOW *)
wtimeout	curses.h	/^    extern void wtimeout(WINDOW *, int);$/;"	p	signature:(WINDOW *, int)
wtimeout	ncurses.h	/^    extern void wtimeout(WINDOW *, int);$/;"	p	signature:(WINDOW *, int)
wtouchln	curses.h	/^    extern int wtouchln(WINDOW *, int, int, int);$/;"	p	signature:(WINDOW *, int, int, int)
wtouchln	ncurses.h	/^    extern int wtouchln(WINDOW *, int, int, int);$/;"	p	signature:(WINDOW *, int, int, int)
wvline	curses.h	/^    extern int wvline(WINDOW *, chtype, int);$/;"	p	signature:(WINDOW *, chtype, int)
wvline	ncurses.h	/^    extern int wvline(WINDOW *, chtype, int);$/;"	p	signature:(WINDOW *, chtype, int)
x_base	rpc/xdr.h	/^	caddr_t x_base;$/;"	m	struct:XDR	access:public
x_destroy	rpc/xdr.h	/^	void (*x_destroy) (XDR * __xdrs);$/;"	m	struct:xdr_ops	access:public
x_getbytes	rpc/xdr.h	/^	bool_t(*x_getbytes) (XDR * __xdrs, caddr_t __addr, u_int __len);$/;"	m	struct:xdr_ops	access:public
x_getint32	rpc/xdr.h	/^	 bool_t(*x_getint32) (XDR * __xdrs, int32_t * __ip);$/;"	m	struct:xdr_ops	access:public
x_getlong	rpc/xdr.h	/^	bool_t(*x_getlong) (XDR * __xdrs, long int *__lp);$/;"	m	struct:xdr_ops	access:public
x_getpostn	rpc/xdr.h	/^	u_int(*x_getpostn) (XDR * __xdrs);$/;"	m	struct:xdr_ops	access:public
x_handy	rpc/xdr.h	/^	int x_handy;$/;"	m	struct:XDR	access:public
x_inline	rpc/xdr.h	/^	int32_t *(*x_inline) (XDR * __xdrs, int __len);$/;"	m	struct:xdr_ops	access:public
x_op	rpc/xdr.h	/^	enum xdr_op x_op;$/;"	m	struct:XDR	typeref:enum:XDR::xdr_op	access:public
x_ops	rpc/xdr.h	/^	struct xdr_ops *x_ops;$/;"	m	struct:XDR	typeref:struct:XDR::xdr_ops	access:public
x_private	rpc/xdr.h	/^	caddr_t x_private;$/;"	m	struct:XDR	access:public
x_public	rpc/xdr.h	/^	caddr_t x_public;$/;"	m	struct:XDR	access:public
x_putbytes	rpc/xdr.h	/^	bool_t(*x_putbytes) (XDR * __xdrs, char *__addr, u_int __len);$/;"	m	struct:xdr_ops	access:public
x_putint32	rpc/xdr.h	/^	 bool_t(*x_putint32) (XDR * __xdrs, int32_t * __ip);$/;"	m	struct:xdr_ops	access:public
x_putlong	rpc/xdr.h	/^	bool_t(*x_putlong) (XDR * __xdrs, long int *__lp);$/;"	m	struct:xdr_ops	access:public
x_setpostn	rpc/xdr.h	/^	bool_t(*x_setpostn) (XDR * __xdrs, u_int __pos);$/;"	m	struct:xdr_ops	access:public
xdr_accepted_reply	rpc/rpc_msg.h	/^    extern bool_t xdr_accepted_reply(XDR *, struct accepted_reply *);$/;"	p	signature:(XDR *, struct accepted_reply *)
xdr_array	rpc/xdr.h	/^    extern bool_t xdr_array(XDR *, caddr_t *, u_int *, u_int, u_int,$/;"	p	signature:(XDR *, caddr_t *, u_int *, u_int, u_int, xdrproc_t)
xdr_bool	rpc/xdr.h	/^    extern bool_t xdr_bool(XDR *, bool_t *);$/;"	p	signature:(XDR *, bool_t *)
xdr_bytes	rpc/xdr.h	/^    extern bool_t xdr_bytes(XDR *, char **, u_int *, u_int);$/;"	p	signature:(XDR *, char **, u_int *, u_int)
xdr_callhdr	rpc/rpc_msg.h	/^    extern bool_t xdr_callhdr(XDR *, struct rpc_msg *);$/;"	p	signature:(XDR *, struct rpc_msg *)
xdr_callmsg	rpc/rpc_msg.h	/^    extern bool_t xdr_callmsg(XDR *, struct rpc_msg *);$/;"	p	signature:(XDR *, struct rpc_msg *)
xdr_char	rpc/xdr.h	/^    extern bool_t xdr_char(XDR *, char *);$/;"	p	signature:(XDR *, char *)
xdr_discrim	rpc/xdr.h	/^    struct xdr_discrim {$/;"	s
xdr_discrim::proc	rpc/xdr.h	/^	xdrproc_t proc;$/;"	m	struct:xdr_discrim	access:public
xdr_discrim::value	rpc/xdr.h	/^	int value;$/;"	m	struct:xdr_discrim	access:public
xdr_double	rpc/xdr.h	/^    extern bool_t xdr_double(XDR *, double *);$/;"	p	signature:(XDR *, double *)
xdr_enum	rpc/xdr.h	/^    extern bool_t xdr_enum(XDR *, enum_t *);$/;"	p	signature:(XDR *, enum_t *)
xdr_float	rpc/xdr.h	/^    extern bool_t xdr_float(XDR *, float *);$/;"	p	signature:(XDR *, float *)
xdr_free	rpc/xdr.h	/^    extern void xdr_free(xdrproc_t, char *);$/;"	p	signature:(xdrproc_t, char *)
xdr_int	rpc/xdr.h	/^    extern bool_t xdr_int(XDR *, int *);$/;"	p	signature:(XDR *, int *)
xdr_long	rpc/xdr.h	/^    extern bool_t xdr_long(XDR *, long int *);$/;"	p	signature:(XDR *, long int *)
xdr_op	rpc/xdr.h	/^    enum xdr_op {$/;"	g
xdr_opaque	rpc/xdr.h	/^    extern bool_t xdr_opaque(XDR *, caddr_t, u_int);$/;"	p	signature:(XDR *, caddr_t, u_int)
xdr_opaque_auth	rpc/auth.h	/^    extern bool_t xdr_opaque_auth(XDR *, struct opaque_auth *);$/;"	p	signature:(XDR *, struct opaque_auth *)
xdr_ops	rpc/xdr.h	/^    struct xdr_ops {$/;"	s
xdr_ops::x_destroy	rpc/xdr.h	/^	void (*x_destroy) (XDR * __xdrs);$/;"	m	struct:xdr_ops	access:public
xdr_ops::x_getbytes	rpc/xdr.h	/^	bool_t(*x_getbytes) (XDR * __xdrs, caddr_t __addr, u_int __len);$/;"	m	struct:xdr_ops	access:public
xdr_ops::x_getint32	rpc/xdr.h	/^	 bool_t(*x_getint32) (XDR * __xdrs, int32_t * __ip);$/;"	m	struct:xdr_ops	access:public
xdr_ops::x_getlong	rpc/xdr.h	/^	bool_t(*x_getlong) (XDR * __xdrs, long int *__lp);$/;"	m	struct:xdr_ops	access:public
xdr_ops::x_getpostn	rpc/xdr.h	/^	u_int(*x_getpostn) (XDR * __xdrs);$/;"	m	struct:xdr_ops	access:public
xdr_ops::x_inline	rpc/xdr.h	/^	int32_t *(*x_inline) (XDR * __xdrs, int __len);$/;"	m	struct:xdr_ops	access:public
xdr_ops::x_putbytes	rpc/xdr.h	/^	bool_t(*x_putbytes) (XDR * __xdrs, char *__addr, u_int __len);$/;"	m	struct:xdr_ops	access:public
xdr_ops::x_putint32	rpc/xdr.h	/^	 bool_t(*x_putint32) (XDR * __xdrs, int32_t * __ip);$/;"	m	struct:xdr_ops	access:public
xdr_ops::x_putlong	rpc/xdr.h	/^	bool_t(*x_putlong) (XDR * __xdrs, long int *__lp);$/;"	m	struct:xdr_ops	access:public
xdr_ops::x_setpostn	rpc/xdr.h	/^	bool_t(*x_setpostn) (XDR * __xdrs, u_int __pos);$/;"	m	struct:xdr_ops	access:public
xdr_pointer	rpc/xdr.h	/^    extern bool_t xdr_pointer(XDR *, char **, u_int, xdrproc_t);$/;"	p	signature:(XDR *, char **, u_int, xdrproc_t)
xdr_reference	rpc/xdr.h	/^    extern bool_t xdr_reference(XDR *, caddr_t *, u_int, xdrproc_t);$/;"	p	signature:(XDR *, caddr_t *, u_int, xdrproc_t)
xdr_rejected_reply	rpc/rpc_msg.h	/^    extern bool_t xdr_rejected_reply(XDR *, struct rejected_reply *);$/;"	p	signature:(XDR *, struct rejected_reply *)
xdr_replymsg	rpc/rpc_msg.h	/^    extern bool_t xdr_replymsg(XDR *, struct rpc_msg *);$/;"	p	signature:(XDR *, struct rpc_msg *)
xdr_short	rpc/xdr.h	/^    extern bool_t xdr_short(XDR *, short *);$/;"	p	signature:(XDR *, short *)
xdr_string	rpc/xdr.h	/^    extern bool_t xdr_string(XDR *, char **, u_int);$/;"	p	signature:(XDR *, char **, u_int)
xdr_u_char	rpc/xdr.h	/^    extern bool_t xdr_u_char(XDR *, u_char *);$/;"	p	signature:(XDR *, u_char *)
xdr_u_int	rpc/xdr.h	/^    extern bool_t xdr_u_int(XDR *, u_int *);$/;"	p	signature:(XDR *, u_int *)
xdr_u_long	rpc/xdr.h	/^    extern bool_t xdr_u_long(XDR *, u_long *);$/;"	p	signature:(XDR *, u_long *)
xdr_u_short	rpc/xdr.h	/^    extern bool_t xdr_u_short(XDR *, u_short *);$/;"	p	signature:(XDR *, u_short *)
xdr_union	rpc/xdr.h	/^    extern bool_t xdr_union(XDR *, enum_t *, char *,$/;"	p	signature:(XDR *, enum_t *, char *, const struct xdr_discrim *, xdrproc_t)
xdr_vector	rpc/xdr.h	/^    extern bool_t xdr_vector(XDR *, char *, u_int, u_int, xdrproc_t);$/;"	p	signature:(XDR *, char *, u_int, u_int, xdrproc_t)
xdr_void	rpc/xdr.h	/^    extern bool_t xdr_void(void);$/;"	p	signature:(void)
xdr_wrapstring	rpc/xdr.h	/^    extern bool_t xdr_wrapstring(XDR *, char **);$/;"	p	signature:(XDR *, char **)
xdrmem_create	rpc/xdr.h	/^    extern void xdrmem_create(XDR *, caddr_t, u_int, enum xdr_op);$/;"	p	signature:(XDR *, caddr_t, u_int, enum xdr_op)
xdrproc_t	rpc/xdr.h	/^    typedef bool_t(*xdrproc_t) (XDR *, void *, ...);$/;"	t
xdrrec_create	rpc/xdr.h	/^    extern void xdrrec_create(XDR *, u_int, u_int, caddr_t,$/;"	p	signature:(XDR *, u_int, u_int, caddr_t, int (*)(char *, char *, int) , int (*)(char *, char *, int) )
xdrrec_eof	rpc/xdr.h	/^    extern bool_t xdrrec_eof(XDR *);$/;"	p	signature:(XDR *)
xdrstdio_create	rpc/xdr.h	/^    extern void xdrstdio_create(XDR *, FILE *, enum xdr_op);$/;"	p	signature:(XDR *, FILE *, enum xdr_op)
xer	signal.h	/^	unsigned long int xer;$/;"	m	struct:pt_regs	access:public
xp_addrlen	rpc/svc.h	/^	int xp_addrlen;$/;"	m	struct:SVCXPRT	access:public
xp_destroy	rpc/svc.h	/^	void (*xp_destroy) (SVCXPRT * __xprt);$/;"	m	struct:xp_ops	access:public
xp_freeargs	rpc/svc.h	/^	 bool_t(*xp_freeargs) (SVCXPRT * __xprt, xdrproc_t __xdr_args,$/;"	m	struct:xp_ops	access:public
xp_getargs	rpc/svc.h	/^	 bool_t(*xp_getargs) (SVCXPRT * __xprt, xdrproc_t __xdr_args,$/;"	m	struct:xp_ops	access:public
xp_ops	rpc/svc.h	/^	struct xp_ops *xp_ops;$/;"	m	struct:SVCXPRT	typeref:struct:SVCXPRT::xp_ops	access:public
xp_ops	rpc/svc.h	/^    struct xp_ops {$/;"	s
xp_ops::xp_destroy	rpc/svc.h	/^	void (*xp_destroy) (SVCXPRT * __xprt);$/;"	m	struct:xp_ops	access:public
xp_ops::xp_freeargs	rpc/svc.h	/^	 bool_t(*xp_freeargs) (SVCXPRT * __xprt, xdrproc_t __xdr_args,$/;"	m	struct:xp_ops	access:public
xp_ops::xp_getargs	rpc/svc.h	/^	 bool_t(*xp_getargs) (SVCXPRT * __xprt, xdrproc_t __xdr_args,$/;"	m	struct:xp_ops	access:public
xp_ops::xp_recv	rpc/svc.h	/^	bool_t(*xp_recv) (SVCXPRT * __xprt, struct rpc_msg * __msg);$/;"	m	struct:xp_ops	access:public
xp_ops::xp_reply	rpc/svc.h	/^	 bool_t(*xp_reply) (SVCXPRT * __xprt, struct rpc_msg * __msg);$/;"	m	struct:xp_ops	access:public
xp_ops::xp_stat	rpc/svc.h	/^	enum xprt_stat (*xp_stat) (SVCXPRT * __xprt);$/;"	m	struct:xp_ops	typeref:enum:xp_ops::xp_stat	access:public
xp_p1	rpc/svc.h	/^	caddr_t xp_p1;$/;"	m	struct:SVCXPRT	access:public
xp_p2	rpc/svc.h	/^	caddr_t xp_p2;$/;"	m	struct:SVCXPRT	access:public
xp_pad	rpc/svc.h	/^	char xp_pad[256];$/;"	m	struct:SVCXPRT	access:public
xp_port	rpc/svc.h	/^	u_short xp_port;$/;"	m	struct:SVCXPRT	access:public
xp_raddr	rpc/svc.h	/^	struct sockaddr_in xp_raddr;$/;"	m	struct:SVCXPRT	typeref:struct:SVCXPRT::sockaddr_in	access:public
xp_recv	rpc/svc.h	/^	bool_t(*xp_recv) (SVCXPRT * __xprt, struct rpc_msg * __msg);$/;"	m	struct:xp_ops	access:public
xp_reply	rpc/svc.h	/^	 bool_t(*xp_reply) (SVCXPRT * __xprt, struct rpc_msg * __msg);$/;"	m	struct:xp_ops	access:public
xp_sock	rpc/svc.h	/^	int xp_sock;$/;"	m	struct:SVCXPRT	access:public
xp_stat	rpc/svc.h	/^	enum xprt_stat (*xp_stat) (SVCXPRT * __xprt);$/;"	m	struct:xp_ops	typeref:enum:xp_ops::xp_stat	access:public
xp_verf	rpc/svc.h	/^	struct opaque_auth xp_verf;$/;"	m	struct:SVCXPRT	typeref:struct:SVCXPRT::opaque_auth	access:public
xprt_stat	rpc/svc.h	/^    enum xprt_stat {$/;"	g
y0	math.h	/^    extern double y0(double);$/;"	p	signature:(double)
y0f	math.h	/^    extern float y0f(float);$/;"	p	signature:(float)
y0l	math.h	/^    extern long double y0l(long double);$/;"	p	signature:(long double)
y1	math.h	/^    extern double y1(double);$/;"	p	signature:(double)
y1f	math.h	/^    extern float y1f(float);$/;"	p	signature:(float)
y1l	math.h	/^    extern long double y1l(long double);$/;"	p	signature:(long double)
yn	math.h	/^    extern double yn(int, double);$/;"	p	signature:(int, double)
ynf	math.h	/^    extern float ynf(int, float);$/;"	p	signature:(int, float)
ynl	math.h	/^    extern long double ynl(int, long double);$/;"	p	signature:(int, long double)
zError	zlib.h	/^    extern const char *zError(int);$/;"	p	signature:(int)
z_off_t	zlib.h	/^    typedef off_t z_off_t;$/;"	t
z_stream	zlib.h	/^    typedef struct z_stream_s z_stream;$/;"	t	typeref:struct:z_stream_s
z_stream_s	zlib.h	/^    struct z_stream_s {$/;"	s
z_stream_s::adler	zlib.h	/^	uLong adler;		\/* adler32 value of the uncompressed data *\/$/;"	m	struct:z_stream_s	access:public
z_stream_s::avail_in	zlib.h	/^	uInt avail_in;		\/* number of bytes available at next_in *\/$/;"	m	struct:z_stream_s	access:public
z_stream_s::avail_out	zlib.h	/^	uInt avail_out;		\/* remaining free space at next_out *\/$/;"	m	struct:z_stream_s	access:public
z_stream_s::data_type	zlib.h	/^	int data_type;		\/* best guess about the data type: ascii or binary *\/$/;"	m	struct:z_stream_s	access:public
z_stream_s::msg	zlib.h	/^	char *msg;		\/* last error message, NULL if no error *\/$/;"	m	struct:z_stream_s	access:public
z_stream_s::next_in	zlib.h	/^	Bytef *next_in;		\/* next input byte *\/$/;"	m	struct:z_stream_s	access:public
z_stream_s::next_out	zlib.h	/^	Bytef *next_out;	\/* next output byte should be put there *\/$/;"	m	struct:z_stream_s	access:public
z_stream_s::opaque	zlib.h	/^	voidpf opaque;		\/* private data object passed to zalloc and zfree *\/$/;"	m	struct:z_stream_s	access:public
z_stream_s::reserved	zlib.h	/^	uLong reserved;		\/* reserved for future use *\/$/;"	m	struct:z_stream_s	access:public
z_stream_s::state	zlib.h	/^	struct internal_state *state;	\/* not visible by applications *\/$/;"	m	struct:z_stream_s	typeref:struct:z_stream_s::internal_state	access:public
z_stream_s::total_in	zlib.h	/^	uLong total_in;		\/* total nb of input bytes read so far *\/$/;"	m	struct:z_stream_s	access:public
z_stream_s::total_out	zlib.h	/^	uLong total_out;	\/* total nb of bytes output so far *\/$/;"	m	struct:z_stream_s	access:public
z_stream_s::zalloc	zlib.h	/^	alloc_func zalloc;	\/* used to allocate the internal state *\/$/;"	m	struct:z_stream_s	access:public
z_stream_s::zfree	zlib.h	/^	free_func zfree;	\/* used to free the internal state *\/$/;"	m	struct:z_stream_s	access:public
z_streamp	zlib.h	/^    typedef z_stream *z_streamp;$/;"	t
zalloc	zlib.h	/^	alloc_func zalloc;	\/* used to allocate the internal state *\/$/;"	m	struct:z_stream_s	access:public
zfree	zlib.h	/^	free_func zfree;	\/* used to free the internal state *\/$/;"	m	struct:z_stream_s	access:public
zlibVersion	zlib.h	/^    extern const char *zlibVersion(void);$/;"	p	signature:(void)
